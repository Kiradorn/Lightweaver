/* Generated by Cython 0.29.32 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "/private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/core/include/numpy/arrayobject.h",
            "/private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/core/include/numpy/arrayscalars.h",
            "/private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/core/include/numpy/ndarrayobject.h",
            "/private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/core/include/numpy/ndarraytypes.h",
            "/private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/core/include/numpy/ufuncobject.h",
            "Source/Atmosphere.cpp",
            "Source/Background.cpp",
            "Source/Background.hpp",
            "Source/Bezier.hpp",
            "Source/CmoArray.hpp",
            "Source/Constants.hpp",
            "Source/EscapeProbability.cpp",
            "Source/Faddeeva.cc",
            "Source/Faddeeva.hh",
            "Source/FastBackground.cpp",
            "Source/FastBackground.hpp",
            "Source/FormalInterface.cpp",
            "Source/FormalScalar.cpp",
            "Source/FormalScalar2d.cpp",
            "Source/FormalStokes.cpp",
            "Source/Lightweaver.hpp",
            "Source/LuSolve.cpp",
            "Source/LuSolve.hpp",
            "Source/LwAtmosphere.hpp",
            "Source/LwAtom.hpp",
            "Source/LwContext.hpp",
            "Source/LwExtraParams.hpp",
            "Source/LwFormalInterface.hpp",
            "Source/LwFormalInterfacePosix.hpp",
            "Source/LwFormalInterfaceWin.hpp",
            "Source/LwInternal.hpp",
            "Source/LwIterationResult.hpp",
            "Source/LwMisc.hpp",
            "Source/LwTransition.hpp",
            "Source/Ng.hpp",
            "Source/Prd.cpp",
            "Source/Simd.hpp",
            "Source/SimdFullIterationTemplates.hpp",
            "Source/TaskScheduler.h",
            "Source/TaskStorage.cpp",
            "Source/TaskStorage.hpp",
            "Source/UpdatePopulations.cpp",
            "Source/Utils.hpp"
        ],
        "extra_compile_args": [
            "-std=c++17",
            "-Wno-sign-compare",
            "-march=native",
            "-mtune=native",
            "-DLW_CORE_LIB"
        ],
        "extra_link_args": [
            "-Wl,-rpath,@loader_path",
            "-Wl,-rpath,@loader_path/.."
        ],
        "include_dirs": [
            "Source",
            "/private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/core/include"
        ],
        "language": "c++",
        "libraries": [
            "dl",
            "enkiTS"
        ],
        "library_dirs": [
            "LwBuild/lightweaver"
        ],
        "name": "lightweaver.LwCompiled",
        "sources": [
            "Source/LwMiddleLayer.pyx",
            "Source/LightweaverAmalgamated.cpp"
        ]
    },
    "module_name": "lightweaver.LwCompiled"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02060000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.6+ or Python 3.3+.
#else
#define CYTHON_ABI "0_29_32"
#define CYTHON_HEX_VERSION 0x001D20F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #if PY_VERSION_HEX >= 0x02070000
    #define HAVE_LONG_LONG
  #endif
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC (PYPY_VERSION_HEX >= 0x07030900)
  #endif
#elif defined(PYSTON_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PY_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_PYSTON 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 0
  #elif !defined(CYTHON_USE_PYTYPE_LOOKUP)
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #if PY_VERSION_HEX < 0x02070000
    #undef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #elif !defined(CYTHON_USE_PYLONG_INTERNALS)
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #if PY_VERSION_HEX >= 0x030B00A4
    #undef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 0
  #elif !defined(CYTHON_FAST_THREAD_STATE)
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL (PY_VERSION_HEX < 0x030A0000)
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT (PY_VERSION_HEX >= 0x03050000)
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1)
  #endif
  #ifndef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS (PY_VERSION_HEX >= 0x030600B1)
  #endif
  #if PY_VERSION_HEX >= 0x030B00A4
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK (PY_VERSION_HEX >= 0x030700A3)
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_MAYBE_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_MAYBE_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
           typedef unsigned char     uint8_t;
           typedef unsigned int      uint32_t;
        #else
           typedef unsigned __int8   uint8_t;
           typedef unsigned __int32  uint32_t;
        #endif
    #endif
#else
   #include <stdint.h>
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
  #define __Pyx_DefaultClassType PyClass_Type
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030B00A1
    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;
        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *call_result=NULL, *empty=NULL;
        const char *fn_cstr=NULL;
        const char *name_cstr=NULL;
        PyCodeObject* co=NULL;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        if (!(kwds=PyDict_New())) goto end;
        if (!(argcount=PyLong_FromLong(a))) goto end;
        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;
        if (!(posonlyargcount=PyLong_FromLong(0))) goto end;
        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;
        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;
        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;
        if (!(nlocals=PyLong_FromLong(l))) goto end;
        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;
        if (!(stacksize=PyLong_FromLong(s))) goto end;
        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;
        if (!(flags=PyLong_FromLong(f))) goto end;
        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;
        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;
        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;
        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;
        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto cleanup_code_too;
        if (!(empty = PyTuple_New(0))) goto cleanup_code_too; // unfortunately __pyx_empty_tuple isn't available here
        if (!(call_result = PyObject_Call(replace, empty, kwds))) goto cleanup_code_too;
        Py_XDECREF((PyObject*)co);
        co = (PyCodeObject*)call_result;
        call_result = NULL;
        if (0) {
            cleanup_code_too:
            Py_XDECREF((PyObject*)co);
            co = NULL;
        }
        end:
        Py_XDECREF(kwds);
        Py_XDECREF(argcount);
        Py_XDECREF(posonlyargcount);
        Py_XDECREF(kwonlyargcount);
        Py_XDECREF(nlocals);
        Py_XDECREF(stacksize);
        Py_XDECREF(replace);
        Py_XDECREF(call_result);
        Py_XDECREF(empty);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return co;
    }
#else
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
  #define __Pyx_DefaultClassType PyType_Type
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_FAST_PYCCALL
#define __Pyx_PyFastCFunction_Check(func)\
    ((PyCFunction_Check(func) && (METH_FASTCALL == (PyCFunction_GET_FLAGS(func) & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)))))
#else
#define __Pyx_PyFastCFunction_Check(func) 0
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030400A1
  #define PyMem_RawMalloc(n)           PyMem_Malloc(n)
  #define PyMem_RawRealloc(p, n)       PyMem_Realloc(p, n)
  #define PyMem_RawFree(p)             PyMem_Free(p)
#endif
#if CYTHON_COMPILING_IN_PYSTON
  #define __Pyx_PyCode_HasFreeVars(co)  PyCode_HasFreeVars(co)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if !CYTHON_FAST_THREAD_STATE || PY_VERSION_HEX < 0x02070000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStr(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
#else
#define __Pyx_PyDict_GetItemStr(dict, name)  PyDict_GetItem(dict, name)
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if defined(PyUnicode_IS_READY)
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #else
  #define __Pyx_PyUnicode_READY(op)       (0)
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         PyUnicode_KIND(u)
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if defined(PyUnicode_IS_READY) && defined(PyUnicode_GET_SIZE)
  #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
  #endif
  #else
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         (sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_Contains)
  #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyByteArray_Check)
  #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Format)
  #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyMethod_New(func, self, klass) ((self) ? ((void)(klass), PyMethod_New(func, self)) : __Pyx_NewRef(func))
#else
  #define __Pyx_PyMethod_New(func, self, klass) PyMethod_New(func, self, klass)
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__lightweaver__LwCompiled
#define __PYX_HAVE_API__lightweaver__LwCompiled
/* Early includes */
#include <string.h>
#include <stdio.h>
#include "numpy/arrayobject.h"
#include "numpy/ndarrayobject.h"
#include "numpy/ndarraytypes.h"
#include "numpy/arrayscalars.h"
#include "numpy/ufuncobject.h"

    /* NumPy API declarations from "numpy/__init__.pxd" */
    
#include "CmoArray.hpp"
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <string>
#include <math.h>
#include <stdint.h>
#include "LwFormalInterface.hpp"
#include "LwIterationResult.hpp"
#include "LwExtraParams.hpp"
#include "Lightweaver.hpp"
#include "Background.hpp"
#include "FastBackground.hpp"
#include "Ng.hpp"
#include "pythread.h"
#include <stdlib.h>
#include "pystate.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u) {
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#define __Pyx_PyNumber_Float(x) (PyFloat_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Float(x))
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "Source/LwMiddleLayer.pyx",
  "Source/CmoArrayHelper.pyx",
  "stringsource",
  "__init__.pxd",
  "type.pxd",
};
/* MemviewSliceStruct.proto */
struct __pyx_memoryview_obj;
typedef struct {
  struct __pyx_memoryview_obj *memview;
  char *data;
  Py_ssize_t shape[8];
  Py_ssize_t strides[8];
  Py_ssize_t suboffsets[8];
} __Pyx_memviewslice;
#define __Pyx_MemoryView_Len(m)  (m.shape[0])

/* Atomics.proto */
#include <pythread.h>
#ifndef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 1
#endif
#define __PYX_CYTHON_ATOMICS_ENABLED() CYTHON_ATOMICS
#define __pyx_atomic_int_type int
#if CYTHON_ATOMICS && (__GNUC__ >= 5 || (__GNUC__ == 4 &&\
                    (__GNUC_MINOR__ > 1 ||\
                    (__GNUC_MINOR__ == 1 && __GNUC_PATCHLEVEL__ >= 2))))
    #define __pyx_atomic_incr_aligned(value) __sync_fetch_and_add(value, 1)
    #define __pyx_atomic_decr_aligned(value) __sync_fetch_and_sub(value, 1)
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Using GNU atomics"
    #endif
#elif CYTHON_ATOMICS && defined(_MSC_VER) && CYTHON_COMPILING_IN_NOGIL
    #include <intrin.h>
    #undef __pyx_atomic_int_type
    #define __pyx_atomic_int_type long
    #pragma intrinsic (_InterlockedExchangeAdd)
    #define __pyx_atomic_incr_aligned(value) _InterlockedExchangeAdd(value, 1)
    #define __pyx_atomic_decr_aligned(value) _InterlockedExchangeAdd(value, -1)
    #ifdef __PYX_DEBUG_ATOMICS
        #pragma message ("Using MSVC atomics")
    #endif
#else
    #undef CYTHON_ATOMICS
    #define CYTHON_ATOMICS 0
    #ifdef __PYX_DEBUG_ATOMICS
        #warning "Not using atomics"
    #endif
#endif
typedef volatile __pyx_atomic_int_type __pyx_atomic_int;
#if CYTHON_ATOMICS
    #define __pyx_add_acquisition_count(memview)\
             __pyx_atomic_incr_aligned(__pyx_get_slice_count_pointer(memview))
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_atomic_decr_aligned(__pyx_get_slice_count_pointer(memview))
#else
    #define __pyx_add_acquisition_count(memview)\
            __pyx_add_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
    #define __pyx_sub_acquisition_count(memview)\
            __pyx_sub_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)
#endif

/* BufferFormatStructs.proto */
#define IS_UNSIGNED(type) (((type) -1) > 0)
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;

/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

/* NoFastGil.proto */
#define __Pyx_PyGILState_Ensure PyGILState_Ensure
#define __Pyx_PyGILState_Release PyGILState_Release
#define __Pyx_FastGIL_Remember()
#define __Pyx_FastGIL_Forget()
#define __Pyx_FastGilFuncInit()


/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":689
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":690
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":691
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":692
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":696
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":697
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":698
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":699
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":703
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":704
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":713
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":714
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":715
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":717
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":718
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":719
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":721
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":722
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":724
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":725
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":726
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;

/* "CmoArray.pxd":225
 * ctypedef Array4Own[double] F64Arr4D
 * ctypedef Array5Own[double] F64Arr5D
 * ctypedef double f64             # <<<<<<<<<<<<<<
 */
typedef double __pyx_t_8CmoArray_f64;

/* "Source/LwMiddleLayer.pyx":29
 * np.import_array()
 * 
 * ctypedef np.int8_t i8             # <<<<<<<<<<<<<<
 * ctypedef int64_t i64
 * ctypedef Array1NonOwn[np.int32_t] I32View
 */
typedef __pyx_t_5numpy_int8_t __pyx_t_11lightweaver_10LwCompiled_i8;

/* "Source/LwMiddleLayer.pyx":30
 * 
 * ctypedef np.int8_t i8
 * ctypedef int64_t i64             # <<<<<<<<<<<<<<
 * ctypedef Array1NonOwn[np.int32_t] I32View
 * ctypedef Array1NonOwn[bool_t] BoolView
 */
typedef int64_t __pyx_t_11lightweaver_10LwCompiled_i64;
/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);


/*--- Type declarations ---*/
struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData;
struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere;
struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider;
struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground;
struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground;
struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground;
struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer;
struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition;
struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents;
struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom;
struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum;
struct __pyx_obj_11lightweaver_10LwCompiled_LwContext;
struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager;
struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager;
struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager;
struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi;
struct __pyx_array_obj;
struct __pyx_MemviewEnum_obj;
struct __pyx_memoryview_obj;
struct __pyx_memoryviewslice_obj;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":728
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":729
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":730
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":732
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "CmoArray.pxd":213
 *         Array4NonOwn[T] reshape(int, int, int, int)
 * 
 * ctypedef Array1NonOwn[double] F64View             # <<<<<<<<<<<<<<
 * ctypedef Array1NonOwn[double] F64View1D
 * ctypedef Array2NonOwn[double] F64View2D
 */
typedef Jasnah::Array1NonOwn<double>  __pyx_t_8CmoArray_F64View;

/* "CmoArray.pxd":214
 * 
 * ctypedef Array1NonOwn[double] F64View
 * ctypedef Array1NonOwn[double] F64View1D             # <<<<<<<<<<<<<<
 * ctypedef Array2NonOwn[double] F64View2D
 * ctypedef Array3NonOwn[double] F64View3D
 */
typedef Jasnah::Array1NonOwn<double>  __pyx_t_8CmoArray_F64View1D;

/* "CmoArray.pxd":215
 * ctypedef Array1NonOwn[double] F64View
 * ctypedef Array1NonOwn[double] F64View1D
 * ctypedef Array2NonOwn[double] F64View2D             # <<<<<<<<<<<<<<
 * ctypedef Array3NonOwn[double] F64View3D
 * ctypedef Array4NonOwn[double] F64View4D
 */
typedef Jasnah::Array2NonOwn<double>  __pyx_t_8CmoArray_F64View2D;

/* "CmoArray.pxd":216
 * ctypedef Array1NonOwn[double] F64View1D
 * ctypedef Array2NonOwn[double] F64View2D
 * ctypedef Array3NonOwn[double] F64View3D             # <<<<<<<<<<<<<<
 * ctypedef Array4NonOwn[double] F64View4D
 * ctypedef Array5NonOwn[double] F64View5D
 */
typedef Jasnah::Array3NonOwn<double>  __pyx_t_8CmoArray_F64View3D;

/* "CmoArray.pxd":217
 * ctypedef Array2NonOwn[double] F64View2D
 * ctypedef Array3NonOwn[double] F64View3D
 * ctypedef Array4NonOwn[double] F64View4D             # <<<<<<<<<<<<<<
 * ctypedef Array5NonOwn[double] F64View5D
 * ctypedef Array1Own[double] F64Arr
 */
typedef Jasnah::Array4NonOwn<double>  __pyx_t_8CmoArray_F64View4D;

/* "CmoArray.pxd":218
 * ctypedef Array3NonOwn[double] F64View3D
 * ctypedef Array4NonOwn[double] F64View4D
 * ctypedef Array5NonOwn[double] F64View5D             # <<<<<<<<<<<<<<
 * ctypedef Array1Own[double] F64Arr
 * ctypedef Array1Own[double] F64Arr1D
 */
typedef Jasnah::Array5NonOwn<double>  __pyx_t_8CmoArray_F64View5D;

/* "CmoArray.pxd":219
 * ctypedef Array4NonOwn[double] F64View4D
 * ctypedef Array5NonOwn[double] F64View5D
 * ctypedef Array1Own[double] F64Arr             # <<<<<<<<<<<<<<
 * ctypedef Array1Own[double] F64Arr1D
 * ctypedef Array2Own[double] F64Arr2D
 */
typedef Jasnah::Array1Own<double>  __pyx_t_8CmoArray_F64Arr;

/* "CmoArray.pxd":220
 * ctypedef Array5NonOwn[double] F64View5D
 * ctypedef Array1Own[double] F64Arr
 * ctypedef Array1Own[double] F64Arr1D             # <<<<<<<<<<<<<<
 * ctypedef Array2Own[double] F64Arr2D
 * ctypedef Array3Own[double] F64Arr3D
 */
typedef Jasnah::Array1Own<double>  __pyx_t_8CmoArray_F64Arr1D;

/* "CmoArray.pxd":221
 * ctypedef Array1Own[double] F64Arr
 * ctypedef Array1Own[double] F64Arr1D
 * ctypedef Array2Own[double] F64Arr2D             # <<<<<<<<<<<<<<
 * ctypedef Array3Own[double] F64Arr3D
 * ctypedef Array4Own[double] F64Arr4D
 */
typedef Jasnah::Array2Own<double>  __pyx_t_8CmoArray_F64Arr2D;

/* "CmoArray.pxd":222
 * ctypedef Array1Own[double] F64Arr1D
 * ctypedef Array2Own[double] F64Arr2D
 * ctypedef Array3Own[double] F64Arr3D             # <<<<<<<<<<<<<<
 * ctypedef Array4Own[double] F64Arr4D
 * ctypedef Array5Own[double] F64Arr5D
 */
typedef Jasnah::Array3Own<double>  __pyx_t_8CmoArray_F64Arr3D;

/* "CmoArray.pxd":223
 * ctypedef Array2Own[double] F64Arr2D
 * ctypedef Array3Own[double] F64Arr3D
 * ctypedef Array4Own[double] F64Arr4D             # <<<<<<<<<<<<<<
 * ctypedef Array5Own[double] F64Arr5D
 * ctypedef double f64
 */
typedef Jasnah::Array4Own<double>  __pyx_t_8CmoArray_F64Arr4D;

/* "CmoArray.pxd":224
 * ctypedef Array3Own[double] F64Arr3D
 * ctypedef Array4Own[double] F64Arr4D
 * ctypedef Array5Own[double] F64Arr5D             # <<<<<<<<<<<<<<
 * ctypedef double f64
 */
typedef Jasnah::Array5Own<double>  __pyx_t_8CmoArray_F64Arr5D;
struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_compute_profiles;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_update_deps;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_time_dep_update;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_stat_equil;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_setup_stokes;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs;
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_prd_redistribute;

/* "Source/LwMiddleLayer.pyx":31
 * ctypedef np.int8_t i8
 * ctypedef int64_t i64
 * ctypedef Array1NonOwn[np.int32_t] I32View             # <<<<<<<<<<<<<<
 * ctypedef Array1NonOwn[bool_t] BoolView
 * ctypedef Array2NonOwn[np.int32_t] BcIdxs
 */
typedef Jasnah::Array1NonOwn<__pyx_t_5numpy_int32_t>  __pyx_t_11lightweaver_10LwCompiled_I32View;

/* "Source/LwMiddleLayer.pyx":32
 * ctypedef int64_t i64
 * ctypedef Array1NonOwn[np.int32_t] I32View
 * ctypedef Array1NonOwn[bool_t] BoolView             # <<<<<<<<<<<<<<
 * ctypedef Array2NonOwn[np.int32_t] BcIdxs
 * 
 */
typedef Jasnah::Array1NonOwn<bool>  __pyx_t_11lightweaver_10LwCompiled_BoolView;

/* "Source/LwMiddleLayer.pyx":33
 * ctypedef Array1NonOwn[np.int32_t] I32View
 * ctypedef Array1NonOwn[bool_t] BoolView
 * ctypedef Array2NonOwn[np.int32_t] BcIdxs             # <<<<<<<<<<<<<<
 * 
 * # NOTE(cmo): Define everything we need from the C++ code.
 */
typedef Jasnah::Array2NonOwn<__pyx_t_5numpy_int32_t>  __pyx_t_11lightweaver_10LwCompiled_BcIdxs;

/* "Source/LwMiddleLayer.pyx":2542
 * 
 * 
 *     cpdef set_pops_escape_probability(self, LwAtmosphere a, LwBackground bg, conserveCharge=False, int Niter=100):             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=3] Gamma
 *         cdef np.ndarray[np.double_t, ndim=3] C
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability {
  int __pyx_n;
  PyObject *conserveCharge;
  int Niter;
};

/* "Source/LwMiddleLayer.pyx":3127
 *         self.ctx.update_threads()
 * 
 *     cpdef compute_profiles(self, polarised=False):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the line profiles for the spectral lines on all active and
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_compute_profiles {
  int __pyx_n;
  PyObject *polarised;
};

/* "Source/LwMiddleLayer.pyx":3143
 *             atom.compute_profiles(polarised=polarised)
 * 
 *     cpdef formal_sol_gamma_matrices(self, fixCollisionalRates=False, lambdaIterate=False,             # <<<<<<<<<<<<<<
 *                                     printUpdate=None, extraParams=None):
 *         '''
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices {
  int __pyx_n;
  PyObject *fixCollisionalRates;
  PyObject *lambdaIterate;
  PyObject *printUpdate;
  PyObject *extraParams;
};

/* "Source/LwMiddleLayer.pyx":3203
 *         return update
 * 
 *     cpdef formal_sol(self, upOnly=True, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the formal solution across all wavelengths (used by
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol {
  int __pyx_n;
  PyObject *upOnly;
  PyObject *extraParams;
};

/* "Source/LwMiddleLayer.pyx":3235
 * 
 * 
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,             # <<<<<<<<<<<<<<
 *                       vlos=True, B=True, background=True, hprd=True,
 *                       quiet=True):
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_update_deps {
  int __pyx_n;
  PyObject *temperature;
  PyObject *ne;
  PyObject *vturb;
  PyObject *vlos;
  PyObject *B;
  PyObject *background;
  PyObject *hprd;
  PyObject *quiet;
};

/* "Source/LwMiddleLayer.pyx":3281
 *             self.update_hprd_coeffs()
 * 
 *     cpdef rel_diff_pops(self, printUpdate=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops {
  int __pyx_n;
  PyObject *printUpdate;
};

/* "Source/LwMiddleLayer.pyx":3309
 *         return update
 * 
 *     cpdef rel_diff_ng_accelerate(self, printUpdate=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate {
  int __pyx_n;
  PyObject *printUpdate;
};

/* "Source/LwMiddleLayer.pyx":3339
 *         return update
 * 
 *     cpdef time_dep_update(self, f64 dt, prevTimePops=None, ngUpdate=None,             # <<<<<<<<<<<<<<
 *                           printUpdate=None, int chunkSize=20, extraParams=None):
 *         '''
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_time_dep_update {
  int __pyx_n;
  PyObject *prevTimePops;
  PyObject *ngUpdate;
  PyObject *printUpdate;
  int chunkSize;
  PyObject *extraParams;
};

/* "Source/LwMiddleLayer.pyx":3452
 *             atom.atom.ng.clear()
 * 
 *     cpdef stat_equil(self, printUpdate=None, int chunkSize=20, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Update the populations of active atoms using the current values of
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_stat_equil {
  int __pyx_n;
  PyObject *printUpdate;
  int chunkSize;
  PyObject *extraParams;
};

/* "Source/LwMiddleLayer.pyx":3563
 *         self.atmos.update_projections()
 * 
 *     cpdef setup_stokes(self, recompute=False):             # <<<<<<<<<<<<<<
 *         '''
 *         Configure the Context for Full Stokes radiative transfer.
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_setup_stokes {
  int __pyx_n;
  PyObject *recompute;
};

/* "Source/LwMiddleLayer.pyx":3596
 *         self.spect.setup_stokes()
 * 
 *     cpdef single_stokes_fs(self, recompute=False, updateJ=False, upOnly=True,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs {
  int __pyx_n;
  PyObject *recompute;
  PyObject *updateJ;
  PyObject *upOnly;
  PyObject *extraParams;
};

/* "Source/LwMiddleLayer.pyx":3638
 *         return update
 * 
 *     cpdef prd_redistribute(self, int maxIter=3, f64 tol=1e-2, printUpdate=None,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */
struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_prd_redistribute {
  int __pyx_n;
  int maxIter;
  __pyx_t_8CmoArray_f64 tol;
  PyObject *printUpdate;
  PyObject *extraParams;
};

/* "Source/LwMiddleLayer.pyx":469
 *     return result
 * 
 * cdef class LwDepthData:             # <<<<<<<<<<<<<<
 *     '''
 *     Simple object to lazily hold data that isn't usually stored during the
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData {
  PyObject_HEAD
  PyObject *shape;
  DepthData depthData;
  __Pyx_memviewslice chi;
  __Pyx_memviewslice eta;
  __Pyx_memviewslice I;
};


/* "Source/LwMiddleLayer.pyx":580
 *         raise ValueError('BC returned from python does not match expected shape for %s (%d, %d, %d), got %s' % (location, dim0, dim1, dim2, repr(pyArr.shape)))
 * 
 * cdef class LwAtmosphere:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage for the C++ class, ensuring all of the arrays remained pinned
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere {
  PyObject_HEAD
  Atmosphere atmos;
  __Pyx_memviewslice x;
  __Pyx_memviewslice y;
  __Pyx_memviewslice z;
  __Pyx_memviewslice temperature;
  __Pyx_memviewslice ne;
  __Pyx_memviewslice vx;
  __Pyx_memviewslice vy;
  __Pyx_memviewslice vz;
  __Pyx_memviewslice vlosMu;
  __Pyx_memviewslice B;
  __Pyx_memviewslice gammaB;
  __Pyx_memviewslice chiB;
  __Pyx_memviewslice cosGamma;
  __Pyx_memviewslice cos2chi;
  __Pyx_memviewslice sin2chi;
  __Pyx_memviewslice vturb;
  __Pyx_memviewslice nHTot;
  __Pyx_memviewslice muz;
  __Pyx_memviewslice muy;
  __Pyx_memviewslice mux;
  __Pyx_memviewslice wmu;
  bool quadSymm;
  int Nwave;
  PyObject *pyAtmos;
};


/* "Source/LwMiddleLayer.pyx":1154
 * 
 * 
 * cdef class BackgroundProvider:             # <<<<<<<<<<<<<<
 *     '''
 *     Base class for implementing background packages. Inherit from this to
 */
struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider {
  PyObject_HEAD
  struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_vtab;
};


/* "Source/LwMiddleLayer.pyx":1192
 *         raise NotImplementedError
 * 
 * cdef class BasicBackground(BackgroundProvider):             # <<<<<<<<<<<<<<
 *     '''
 *     Basic background implementation used by default in Lightweaver;
 */
struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground {
  struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider __pyx_base;
  BackgroundData bd;
  PyObject *eqPops;
  PyObject *radSet;
  __Pyx_memviewslice chPops;
  __Pyx_memviewslice ohPops;
  __Pyx_memviewslice h2Pops;
  __Pyx_memviewslice hMinusPops;
  __Pyx_memviewslice hPops;
  __Pyx_memviewslice wavelength;
};


/* "Source/LwMiddleLayer.pyx":1382
 *         return self._reconstruct, (self.__getstate__(),)
 * 
 * cdef class FastBackground(BackgroundProvider):             # <<<<<<<<<<<<<<
 *     '''
 *     A faster implementation (due to C++ implementations) of BasicBackground
 */
struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground {
  struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider __pyx_base;
  BackgroundData bd;
  PyObject *eqPops;
  PyObject *radSet;
  __Pyx_memviewslice chPops;
  __Pyx_memviewslice ohPops;
  __Pyx_memviewslice h2Pops;
  __Pyx_memviewslice hMinusPops;
  __Pyx_memviewslice hPops;
  __Pyx_memviewslice wavelength;
  FastBackgroundContext ctx;
  int Nthreads;
};


/* "Source/LwMiddleLayer.pyx":1558
 * 
 * 
 * cdef class LwBackground:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and driver for the background computations in Lightweaver. The
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground {
  PyObject_HEAD
  struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwBackground *__pyx_vtab;
  Background background;
  PyObject *eqPops;
  PyObject *radSet;
  struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *provider;
  __Pyx_memviewslice wavelength;
  __Pyx_memviewslice chi;
  __Pyx_memviewslice eta;
  __Pyx_memviewslice sca;
};


/* "Source/LwMiddleLayer.pyx":1667
 * 
 * 
 * cdef class RayleighScatterer:             # <<<<<<<<<<<<<<
 *     '''
 *     For computing Rayleigh scattering, used by BasicBackground.
 */
struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer {
  PyObject_HEAD
  struct __pyx_vtabstruct_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_vtab;
  __pyx_t_8CmoArray_f64 lambdaLimit;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *atmos;
  __pyx_t_8CmoArray_f64 C;
  __pyx_t_8CmoArray_f64 sigmaE;
  __Pyx_memviewslice pops;
  PyObject *atom;
  bool lines;
  PyObject *lambdaRed;
};


/* "Source/LwMiddleLayer.pyx":1733
 *         return True
 * 
 * cdef class LwTransition:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and access to transition data used by backend. Instantiated by
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition {
  PyObject_HEAD
  struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwTransition *__pyx_vtab;
  Transition trans;
  __Pyx_memviewslice phi;
  __Pyx_memviewslice phiQ;
  __Pyx_memviewslice phiU;
  __Pyx_memviewslice phiV;
  __Pyx_memviewslice psiQ;
  __Pyx_memviewslice psiU;
  __Pyx_memviewslice psiV;
  __Pyx_memviewslice wphi;
  __Pyx_memviewslice alpha;
  __Pyx_memviewslice wavelength;
  __Pyx_memviewslice active;
  __Pyx_memviewslice Qelast;
  __Pyx_memviewslice aDamp;
  __Pyx_memviewslice rhoPrd;
  __Pyx_memviewslice Rij;
  __Pyx_memviewslice Rji;
  PyObject *transModel;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *atmos;
  PyObject *spect;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *atom;
};


/* "Source/LwMiddleLayer.pyx":2272
 *             return 'Continuum'
 * 
 * cdef class LwZeemanComponents:             # <<<<<<<<<<<<<<
 *     '''
 *     Stores the Zeeman components to be passed to the backend, only exists
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents {
  PyObject_HEAD
  ZeemanComponents zc;
  __Pyx_memviewslice alpha;
  __Pyx_memviewslice shift;
  __Pyx_memviewslice strength;
};


/* "Source/LwMiddleLayer.pyx":2291
 *         self.zc.strength = f64_view(self.strength)
 * 
 * cdef class LwAtom:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and access to computational atomic data used by backend. Sets up
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom {
  PyObject_HEAD
  struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwAtom *__pyx_vtab;
  Atom atom;
  __Pyx_memviewslice vBroad;
  __Pyx_memviewslice Gamma;
  __Pyx_memviewslice C;
  __Pyx_memviewslice nTotal;
  __Pyx_memviewslice nStar;
  __Pyx_memviewslice n;
  __Pyx_memviewslice stages;
  PyObject *atomicModel;
  PyObject *modelPops;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *atmos;
  PyObject *eqPops;
  PyObject *trans;
  bool detailed;
  PyObject *fsIterSchemeProperties;
};


/* "Source/LwMiddleLayer.pyx":2705
 *     spect.JRest = F64Arr2D(f64_view_2(JRest))
 * 
 * cdef class LwSpectrum:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and access to spectrum data used by backend. Instantiated by
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum {
  PyObject_HEAD
  Spectrum spect;
  __Pyx_memviewslice wavelength;
  __Pyx_memviewslice I;
  __Pyx_memviewslice J;
  __Pyx_memviewslice Quv;
};


/* "Source/LwMiddleLayer.pyx":2811
 * 
 * 
 * cdef class LwContext:             # <<<<<<<<<<<<<<
 *     '''
 *     Context that configures and drives the backend. Whilst the class is named
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwContext {
  PyObject_HEAD
  struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *__pyx_vtab;
  Context ctx;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *atmos;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *spect;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *background;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *depthData;
  PyObject *kwargs;
  PyObject *eqPops;
  PyObject *activeAtoms;
  PyObject *detailedAtoms;
  bool conserveCharge;
  bool nrHOnly;
  bool hprd;
  PyObject *crswCallback;
  PyObject *crswDone;
  PyObject *__dict__;
};


/* "Source/LwMiddleLayer.pyx":3980
 * 
 * 
 * cdef class LwFormalSolverManager:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and enumeration of the different formal solvers loaded for use in
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager {
  PyObject_HEAD
  FormalSolverManager manager;
  PyObject *paths;
  PyObject *names;
};


/* "Source/LwMiddleLayer.pyx":4054
 *             raise ValueError()
 * 
 * cdef class LwInterpFnManager:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and enumeration of the different interpolation functions for
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager {
  PyObject_HEAD
  InterpFnManager manager;
  PyObject *paths;
  PyObject *names;
};


/* "Source/LwMiddleLayer.pyx":4127
 *             raise ValueError("Unexpected Ndim")
 * 
 * cdef class LwFsIterationManager:             # <<<<<<<<<<<<<<
 *     cdef FsIterationFnsManager manager
 *     cdef public list paths
 */
struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager {
  PyObject_HEAD
  FsIterationFnsManager manager;
  PyObject *paths;
  PyObject *names;
};


/* "Source/LwMiddleLayer.pyx":1971
 * 
 * 
 *     def compute_phi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Computes the line profile phi (phi_num in the technical report), by
 */
struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi {
  PyObject_HEAD
  Atmosphere *__pyx_v_atmos;
  int __pyx_v_callbackUsed;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self;
};


/* "View.MemoryView":106
 * 
 * @cname("__pyx_array")
 * cdef class array:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */
struct __pyx_array_obj {
  PyObject_HEAD
  struct __pyx_vtabstruct_array *__pyx_vtab;
  char *data;
  Py_ssize_t len;
  char *format;
  int ndim;
  Py_ssize_t *_shape;
  Py_ssize_t *_strides;
  Py_ssize_t itemsize;
  PyObject *mode;
  PyObject *_format;
  void (*callback_free_data)(void *);
  int free_data;
  int dtype_is_object;
};


/* "View.MemoryView":280
 * 
 * @cname('__pyx_MemviewEnum')
 * cdef class Enum(object):             # <<<<<<<<<<<<<<
 *     cdef object name
 *     def __init__(self, name):
 */
struct __pyx_MemviewEnum_obj {
  PyObject_HEAD
  PyObject *name;
};


/* "View.MemoryView":331
 * 
 * @cname('__pyx_memoryview')
 * cdef class memoryview(object):             # <<<<<<<<<<<<<<
 * 
 *     cdef object obj
 */
struct __pyx_memoryview_obj {
  PyObject_HEAD
  struct __pyx_vtabstruct_memoryview *__pyx_vtab;
  PyObject *obj;
  PyObject *_size;
  PyObject *_array_interface;
  PyThread_type_lock lock;
  __pyx_atomic_int acquisition_count[2];
  __pyx_atomic_int *acquisition_count_aligned_p;
  Py_buffer view;
  int flags;
  int dtype_is_object;
  __Pyx_TypeInfo *typeinfo;
};


/* "View.MemoryView":967
 * 
 * @cname('__pyx_memoryviewslice')
 * cdef class _memoryviewslice(memoryview):             # <<<<<<<<<<<<<<
 *     "Internal class for passing memoryview slices to Python"
 * 
 */
struct __pyx_memoryviewslice_obj {
  struct __pyx_memoryview_obj __pyx_base;
  __Pyx_memviewslice from_slice;
  PyObject *from_object;
  PyObject *(*to_object_func)(char *);
  int (*to_dtype_func)(char *, PyObject *);
};



/* "Source/LwMiddleLayer.pyx":1154
 * 
 * 
 * cdef class BackgroundProvider:             # <<<<<<<<<<<<<<
 *     '''
 *     Base class for implementing background packages. Inherit from this to
 */

struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider {
  PyObject *(*compute_background)(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_vtabptr_11lightweaver_10LwCompiled_BackgroundProvider;


/* "Source/LwMiddleLayer.pyx":1192
 *         raise NotImplementedError
 * 
 * cdef class BasicBackground(BackgroundProvider):             # <<<<<<<<<<<<<<
 *     '''
 *     Basic background implementation used by default in Lightweaver;
 */

struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BasicBackground {
  struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider __pyx_base;
  PyObject *(*rayleigh_scattering)(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, __Pyx_memviewslice, int __pyx_skip_dispatch);
  PyObject *(*bf_opacities)(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, __Pyx_memviewslice, __Pyx_memviewslice, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BasicBackground *__pyx_vtabptr_11lightweaver_10LwCompiled_BasicBackground;


/* "Source/LwMiddleLayer.pyx":1382
 *         return self._reconstruct, (self.__getstate__(),)
 * 
 * cdef class FastBackground(BackgroundProvider):             # <<<<<<<<<<<<<<
 *     '''
 *     A faster implementation (due to C++ implementations) of BasicBackground
 */

struct __pyx_vtabstruct_11lightweaver_10LwCompiled_FastBackground {
  struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider __pyx_base;
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_FastBackground *__pyx_vtabptr_11lightweaver_10LwCompiled_FastBackground;


/* "Source/LwMiddleLayer.pyx":1558
 * 
 * 
 * cdef class LwBackground:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and driver for the background computations in Lightweaver. The
 */

struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwBackground {
  PyObject *(*update_background)(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwBackground *__pyx_vtabptr_11lightweaver_10LwCompiled_LwBackground;


/* "Source/LwMiddleLayer.pyx":1667
 * 
 * 
 * cdef class RayleighScatterer:             # <<<<<<<<<<<<<<
 *     '''
 *     For computing Rayleigh scattering, used by BasicBackground.
 */

struct __pyx_vtabstruct_11lightweaver_10LwCompiled_RayleighScatterer {
  PyObject *(*scatter)(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *, __pyx_t_8CmoArray_f64, __Pyx_memviewslice, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_vtabptr_11lightweaver_10LwCompiled_RayleighScatterer;


/* "Source/LwMiddleLayer.pyx":1733
 *         return True
 * 
 * cdef class LwTransition:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and access to transition data used by backend. Instantiated by
 */

struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwTransition {
  PyObject *(*compute_polarised_profiles)(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *, int __pyx_skip_dispatch);
  PyObject *(*recompute_gII)(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwTransition *__pyx_vtabptr_11lightweaver_10LwCompiled_LwTransition;


/* "Source/LwMiddleLayer.pyx":2291
 *         self.zc.strength = f64_view(self.strength)
 * 
 * cdef class LwAtom:             # <<<<<<<<<<<<<<
 *     '''
 *     Storage and access to computational atomic data used by backend. Sets up
 */

struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwAtom {
  PyObject *(*set_pops_escape_probability)(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability *__pyx_optional_args);
  PyObject *(*setup_wavelength)(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *, int, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwAtom *__pyx_vtabptr_11lightweaver_10LwCompiled_LwAtom;


/* "Source/LwMiddleLayer.pyx":2811
 * 
 * 
 * cdef class LwContext:             # <<<<<<<<<<<<<<
 *     '''
 *     Context that configures and drives the backend. Whilst the class is named
 */

struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext {
  PyObject *(*setup_threads)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int);
  PyObject *(*update_threads)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch);
  PyObject *(*compute_profiles)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_compute_profiles *__pyx_optional_args);
  PyObject *(*formal_sol_gamma_matrices)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices *__pyx_optional_args);
  PyObject *(*formal_sol)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol *__pyx_optional_args);
  PyObject *(*update_deps)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_update_deps *__pyx_optional_args);
  PyObject *(*rel_diff_pops)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops *__pyx_optional_args);
  PyObject *(*rel_diff_ng_accelerate)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate *__pyx_optional_args);
  PyObject *(*time_dep_update)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, __pyx_t_8CmoArray_f64, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_time_dep_update *__pyx_optional_args);
  PyObject *(*time_dep_restore_prev_pops)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*clear_ng)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch);
  PyObject *(*stat_equil)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_stat_equil *__pyx_optional_args);
  PyObject *(*update_projections)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch);
  PyObject *(*setup_stokes)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_setup_stokes *__pyx_optional_args);
  PyObject *(*single_stokes_fs)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs *__pyx_optional_args);
  PyObject *(*prd_redistribute)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_prd_redistribute *__pyx_optional_args);
  PyObject *(*configure_hprd_coeffs)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *);
  PyObject *(*update_hprd_coeffs)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *__pyx_vtabptr_11lightweaver_10LwCompiled_LwContext;


/* "View.MemoryView":106
 * 
 * @cname("__pyx_array")
 * cdef class array:             # <<<<<<<<<<<<<<
 * 
 *     cdef:
 */

struct __pyx_vtabstruct_array {
  PyObject *(*get_memview)(struct __pyx_array_obj *);
};
static struct __pyx_vtabstruct_array *__pyx_vtabptr_array;


/* "View.MemoryView":331
 * 
 * @cname('__pyx_memoryview')
 * cdef class memoryview(object):             # <<<<<<<<<<<<<<
 * 
 *     cdef object obj
 */

struct __pyx_vtabstruct_memoryview {
  char *(*get_item_pointer)(struct __pyx_memoryview_obj *, PyObject *);
  PyObject *(*is_slice)(struct __pyx_memoryview_obj *, PyObject *);
  PyObject *(*setitem_slice_assignment)(struct __pyx_memoryview_obj *, PyObject *, PyObject *);
  PyObject *(*setitem_slice_assign_scalar)(struct __pyx_memoryview_obj *, struct __pyx_memoryview_obj *, PyObject *);
  PyObject *(*setitem_indexed)(struct __pyx_memoryview_obj *, PyObject *, PyObject *);
  PyObject *(*convert_item_to_object)(struct __pyx_memoryview_obj *, char *);
  PyObject *(*assign_item_from_object)(struct __pyx_memoryview_obj *, char *, PyObject *);
};
static struct __pyx_vtabstruct_memoryview *__pyx_vtabptr_memoryview;


/* "View.MemoryView":967
 * 
 * @cname('__pyx_memoryviewslice')
 * cdef class _memoryviewslice(memoryview):             # <<<<<<<<<<<<<<
 *     "Internal class for passing memoryview slices to Python"
 * 
 */

struct __pyx_vtabstruct__memoryviewslice {
  struct __pyx_vtabstruct_memoryview __pyx_base;
};
static struct __pyx_vtabstruct__memoryviewslice *__pyx_vtabptr__memoryviewslice;

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* BufferIndexError.proto */
static void __Pyx_RaiseBufferIndexError(int axis);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#else
#define __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs) _PyFunction_FastCallDict(func, args, nargs, kwargs)
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if CYTHON_FAST_PYCALL
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif // CYTHON_FAST_PYCALL
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectCallNoArg.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);
#else
#define __Pyx_PyObject_CallNoArg(func) __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL)
#endif

/* PyCFunctionFastCall.proto */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject *__Pyx_PyCFunction_FastCall(PyObject *func, PyObject **args, Py_ssize_t nargs);
#else
#define __Pyx_PyCFunction_FastCall(func, args, nargs)  (assert(0), NULL)
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* PyObjectFormatSimple.proto */
#if CYTHON_COMPILING_IN_PYPY
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#elif PY_MAJOR_VERSION < 3
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\
        PyObject_Format(s, f))
#elif CYTHON_USE_TYPE_SLOTS
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_str(s) :\
        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_str(s) :\
        PyObject_Format(s, f))
#else
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#endif

/* IncludeStringH.proto */
#include <string.h>

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* PyObjectCall2Args.proto */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
#define __Pyx_GetModuleGlobalNameUncached(var, name)  {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
}
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* MemviewSliceInit.proto */
#define __Pyx_BUF_MAX_NDIMS %(BUF_MAX_NDIMS)d
#define __Pyx_MEMVIEW_DIRECT   1
#define __Pyx_MEMVIEW_PTR      2
#define __Pyx_MEMVIEW_FULL     4
#define __Pyx_MEMVIEW_CONTIG   8
#define __Pyx_MEMVIEW_STRIDED  16
#define __Pyx_MEMVIEW_FOLLOW   32
#define __Pyx_IS_C_CONTIG 1
#define __Pyx_IS_F_CONTIG 2
static int __Pyx_init_memviewslice(
                struct __pyx_memoryview_obj *memview,
                int ndim,
                __Pyx_memviewslice *memviewslice,
                int memview_is_new_reference);
static CYTHON_INLINE int __pyx_add_acquisition_count_locked(
    __pyx_atomic_int *acquisition_count, PyThread_type_lock lock);
static CYTHON_INLINE int __pyx_sub_acquisition_count_locked(
    __pyx_atomic_int *acquisition_count, PyThread_type_lock lock);
#define __pyx_get_slice_count_pointer(memview) (memview->acquisition_count_aligned_p)
#define __pyx_get_slice_count(memview) (*__pyx_get_slice_count_pointer(memview))
#define __PYX_INC_MEMVIEW(slice, have_gil) __Pyx_INC_MEMVIEW(slice, have_gil, __LINE__)
#define __PYX_XDEC_MEMVIEW(slice, have_gil) __Pyx_XDEC_MEMVIEW(slice, have_gil, __LINE__)
static CYTHON_INLINE void __Pyx_INC_MEMVIEW(__Pyx_memviewslice *, int, int);
static CYTHON_INLINE void __Pyx_XDEC_MEMVIEW(__Pyx_memviewslice *, int, int);

/* WriteUnraisableException.proto */
static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename,
                                  int full_traceback, int nogil);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],\
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,\
    const char* function_name);

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* PyUnicode_Unicode.proto */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj);

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* BuildPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_BuildFromAscii(Py_ssize_t ulength, char* chars, int clength,
                                                int prepend_sign, char padding_char);

/* CIntToPyUnicode.proto */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_From_int(int value, Py_ssize_t width, char padding_char, char format_char);

/* PyObjectFormatAndDecref.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatSimpleAndDecref(PyObject* s, PyObject* f);
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatAndDecref(PyObject* s, PyObject* f);

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely((Py_TYPE(obj) == type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* tp_new.proto */
#define __Pyx_tp_new(type_obj, args) __Pyx_tp_new_kwargs(type_obj, args, NULL)
static CYTHON_INLINE PyObject* __Pyx_tp_new_kwargs(PyObject* type_obj, PyObject* args, PyObject* kwargs) {
    return (PyObject*) (((PyTypeObject*)type_obj)->tp_new((PyTypeObject*)type_obj, args, kwargs));
}

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideObjC(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyFloat_TrueDivideObjC(op1, op2, floatval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceTrueDivide(op1, op2) : PyNumber_TrueDivide(op1, op2))
#endif

/* PyIntCompare.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideCObj(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyFloat_TrueDivideCObj(op1, op2, floatval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceTrueDivide(op1, op2) : PyNumber_TrueDivide(op1, op2))
#endif

/* PyFloatBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_SubtractObjC(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyFloat_SubtractObjC(op1, op2, floatval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* SliceObject.proto */
#define __Pyx_PyObject_DelSlice(obj, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)\
    __Pyx_PyObject_SetSlice(obj, (PyObject*)NULL, cstart, cstop, py_start, py_stop, py_slice, has_cstart, has_cstop, wraparound)
static CYTHON_INLINE int __Pyx_PyObject_SetSlice(
        PyObject* obj, PyObject* value, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* None.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* FetchCommonType.proto */
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED 1
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#define __Pyx_CyFunction_GetClassObj(f)\
    (((__pyx_CyFunctionObject *) (f))->func_classobj)
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
    PyCFunctionObject func;
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
    PyObject *func_classobj;
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;  // used by FusedFunction for copying defaults
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
} __pyx_CyFunctionObject;
static PyTypeObject *__pyx_CyFunctionType = 0;
#define __Pyx_CyFunction_Check(obj)  (__Pyx_TypeCheck(obj, __pyx_CyFunctionType))
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *self,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(void);

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* IsLittleEndian.proto */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void);

/* BufferFormatCheck.proto */
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts);
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type);

/* BufferGetAndValidate.proto */
#define __Pyx_GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack)\
    ((obj == Py_None || obj == NULL) ?\
    (__Pyx_ZeroBuffer(buf), 0) :\
    __Pyx__GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack))
static int  __Pyx__GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static void __Pyx_ZeroBuffer(Py_buffer* buf);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static Py_ssize_t __Pyx_minusones[] = { -1, -1, -1, -1, -1, -1, -1, -1 };
static Py_ssize_t __Pyx_zeros[] = { 0, 0, 0, 0, 0, 0, 0, 0 };

#define __Pyx_BufPtrStrided3d(type, buf, i0, s0, i1, s1, i2, s2) (type)((char*)buf + i0 * s0 + i1 * s1 + i2 * s2)
/* BufferFallbackError.proto */
static void __Pyx_RaiseBufferFallbackError(void);

#define __Pyx_BufPtrStrided1d(type, buf, i0, s0) (type)((char*)buf + i0 * s0)
/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* ListExtend.proto */
static CYTHON_INLINE int __Pyx_PyList_Extend(PyObject* L, PyObject* v) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject* none = _PyList_Extend((PyListObject*)L, v);
    if (unlikely(!none))
        return -1;
    Py_DECREF(none);
    return 0;
#else
    return PyList_SetSlice(L, PY_SSIZE_T_MAX, PY_SSIZE_T_MAX, v);
#endif
}

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kwdict, const char* function_name, int kw_allowed);

/* decode_c_string_utf16.proto */
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 0;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16LE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = -1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_DecodeUTF16BE(const char *s, Py_ssize_t size, const char *errors) {
    int byteorder = 1;
    return PyUnicode_DecodeUTF16(s, size, errors, &byteorder);
}

/* decode_c_string.proto */
static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors));

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* StrEquals.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

/* DivInt[Py_ssize_t].proto */
static CYTHON_INLINE Py_ssize_t __Pyx_div_Py_ssize_t(Py_ssize_t, Py_ssize_t);

/* UnaryNegOverflows.proto */
#define UNARY_NEG_WOULD_OVERFLOW(x)\
        (((x) < 0) & ((unsigned long)(x) == 0-(unsigned long)(x)))

static CYTHON_UNUSED int __pyx_array_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static PyObject *__pyx_array_get_memview(struct __pyx_array_obj *); /*proto*/
/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

static CYTHON_UNUSED int __pyx_memoryview_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
/* DivInt[long].proto */
static CYTHON_INLINE long __Pyx_div_long(long, long);

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_dealloc);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* SetupReduce.proto */
static int __Pyx_setup_reduce(PyObject* type_obj);

/* SetVTable.proto */
static int __Pyx_SetVtable(PyObject *dict, void *vtable);

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto
#define __PYX_HAVE_RT_ImportType_proto
enum __Pyx_ImportType_CheckSize {
   __Pyx_ImportType_CheckSize_Error = 0,
   __Pyx_ImportType_CheckSize_Warn = 1,
   __Pyx_ImportType_CheckSize_Ignore = 2
};
static PyTypeObject *__Pyx_ImportType(PyObject* module, const char *module_name, const char *class_name, size_t size, enum __Pyx_ImportType_CheckSize check_size);
#endif

/* ClassMethod.proto */
#include "descrobject.h"
static CYTHON_UNUSED PyObject* __Pyx_Method_ClassMethod(PyObject *method);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


/* BufferStructDeclare.proto */
typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

/* MemviewSliceIsContig.proto */
static int __pyx_memviewslice_is_contig(const __Pyx_memviewslice mvs, char order, int ndim);

/* OverlappingSlices.proto */
static int __pyx_slices_overlap(__Pyx_memviewslice *slice1,
                                __Pyx_memviewslice *slice2,
                                int ndim, size_t itemsize);

/* Capsule.proto */
static CYTHON_INLINE PyObject *__pyx_capsule_create(void *p, const char *sig);

/* None.proto */
#include <new>

/* MemviewDtypeToObject.proto */
static CYTHON_INLINE PyObject *__pyx_memview_get_nn___pyx_t_8CmoArray_f64(const char *itemp);
static CYTHON_INLINE int __pyx_memview_set_nn___pyx_t_8CmoArray_f64(const char *itemp, PyObject *obj);

/* TypeInfoCompare.proto */
static int __pyx_typeinfo_cmp(__Pyx_TypeInfo *a, __Pyx_TypeInfo *b);

/* MemviewSliceValidateAndInit.proto */
static int __Pyx_ValidateAndInit_memviewslice(
                int *axes_specs,
                int c_or_f_flag,
                int buf_flags,
                int ndim,
                __Pyx_TypeInfo *dtype,
                __Pyx_BufFmt_StackElem stack[],
                __Pyx_memviewslice *memviewslice,
                PyObject *original_obj);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(PyObject *, int writable_flag);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(PyObject *, int writable_flag);

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(PyObject *, int writable_flag);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(PyObject *, int writable_flag);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(PyObject *, int writable_flag);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(PyObject *, int writable_flag);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(PyObject *, int writable_flag);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(PyObject *, int writable_flag);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_5numpy_int32_t(PyObject *, int writable_flag);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_11lightweaver_10LwCompiled_i8(PyObject *, int writable_flag);

/* MemviewDtypeToObject.proto */
static CYTHON_INLINE PyObject *__pyx_memview_get_nn___pyx_t_11lightweaver_10LwCompiled_i8(const char *itemp);
static CYTHON_INLINE int __pyx_memview_set_nn___pyx_t_11lightweaver_10LwCompiled_i8(const char *itemp, PyObject *obj);

/* ObjectToMemviewSlice.proto */
static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_5numpy_int32_t(PyObject *, int writable_flag);

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* MemviewSliceCopyTemplate.proto */
static __Pyx_memviewslice
__pyx_memoryview_copy_new_contig(const __Pyx_memviewslice *from_mvs,
                                 const char *mode, int ndim,
                                 size_t sizeof_dtype, int contig_flag,
                                 int dtype_is_object);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int64_t __Pyx_PyInt_As_int64_t(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__RadiationBc(enum RadiationBc value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE enum RadiationBc __Pyx_PyInt_As_enum__RadiationBc(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_npy_int8(npy_int8 value);

/* CIntFromPy.proto */
static CYTHON_INLINE npy_int8 __Pyx_PyInt_As_npy_int8(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int64_t(int64_t value);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

static PyObject *__pyx_f_11lightweaver_10LwCompiled_18BackgroundProvider_compute_background(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, CYTHON_UNUSED PyObject *__pyx_v_chi, CYTHON_UNUSED PyObject *__pyx_v_eta, CYTHON_UNUSED PyObject *__pyx_v_sca, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chiIn, PyObject *__pyx_v_etaIn, PyObject *__pyx_v_scaIn, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_rayleigh_scattering(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, __Pyx_memviewslice __pyx_v_sca, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_bf_opacities(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, __Pyx_memviewslice __pyx_v_chi, __Pyx_memviewslice __pyx_v_eta, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_14FastBackground_compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chiIn, PyObject *__pyx_v_etaIn, PyObject *__pyx_v_scaIn, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_12LwBackground_update_background(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_17RayleighScatterer_scatter(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self, __pyx_t_8CmoArray_f64 __pyx_v_wavelength, __Pyx_memviewslice __pyx_v_sca, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_12LwTransition_compute_polarised_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_12LwTransition_recompute_gII(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a, struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_bg, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_6LwAtom_setup_wavelength(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, int __pyx_v_la, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_setup_threads(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_v_Nthreads); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_threads(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_compute_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_compute_profiles *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_formal_sol(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_deps(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_update_deps *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_time_dep_update(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, __pyx_t_8CmoArray_f64 __pyx_v_dt, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_time_dep_update *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_time_dep_restore_prev_pops(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_prevTimePops, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_clear_ng(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_stat_equil(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_stat_equil *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_projections(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_setup_stokes(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_setup_stokes *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_prd_redistribute(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_prd_redistribute *__pyx_optional_args); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_configure_hprd_coeffs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_hprd_coeffs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch); /* proto*/
static PyObject *__pyx_array_get_memview(struct __pyx_array_obj *__pyx_v_self); /* proto*/
static char *__pyx_memoryview_get_item_pointer(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index); /* proto*/
static PyObject *__pyx_memoryview_is_slice(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_obj); /* proto*/
static PyObject *__pyx_memoryview_setitem_slice_assignment(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_dst, PyObject *__pyx_v_src); /* proto*/
static PyObject *__pyx_memoryview_setitem_slice_assign_scalar(struct __pyx_memoryview_obj *__pyx_v_self, struct __pyx_memoryview_obj *__pyx_v_dst, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_memoryview_setitem_indexed(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_memoryview_convert_item_to_object(struct __pyx_memoryview_obj *__pyx_v_self, char *__pyx_v_itemp); /* proto*/
static PyObject *__pyx_memoryview_assign_item_from_object(struct __pyx_memoryview_obj *__pyx_v_self, char *__pyx_v_itemp, PyObject *__pyx_v_value); /* proto*/
static PyObject *__pyx_memoryviewslice_convert_item_to_object(struct __pyx_memoryviewslice_obj *__pyx_v_self, char *__pyx_v_itemp); /* proto*/
static PyObject *__pyx_memoryviewslice_assign_item_from_object(struct __pyx_memoryviewslice_obj *__pyx_v_self, char *__pyx_v_itemp, PyObject *__pyx_v_value); /* proto*/

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'libc.string' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'cpython' */

/* Module declarations from 'cpython.object' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'cpython.mem' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_generic = 0;
static PyTypeObject *__pyx_ptype_5numpy_number = 0;
static PyTypeObject *__pyx_ptype_5numpy_integer = 0;
static PyTypeObject *__pyx_ptype_5numpy_signedinteger = 0;
static PyTypeObject *__pyx_ptype_5numpy_unsignedinteger = 0;
static PyTypeObject *__pyx_ptype_5numpy_inexact = 0;
static PyTypeObject *__pyx_ptype_5numpy_floating = 0;
static PyTypeObject *__pyx_ptype_5numpy_complexfloating = 0;
static PyTypeObject *__pyx_ptype_5numpy_flexible = 0;
static PyTypeObject *__pyx_ptype_5numpy_character = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE int __pyx_f_5numpy_import_array(void); /*proto*/

/* Module declarations from 'CmoArray' */

/* Module declarations from 'libcpp' */

/* Module declarations from 'libcpp.vector' */

/* Module declarations from 'libcpp.string' */

/* Module declarations from 'libc.math' */

/* Module declarations from 'libc.stdint' */

/* Module declarations from 'CmoArrayHelper' */

/* Module declarations from 'lightweaver.LwCompiled' */
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwDepthData = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_BasicBackground = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_FastBackground = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwBackground = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_RayleighScatterer = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwTransition = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwZeemanComponents = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwAtom = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwSpectrum = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwContext = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwFormalSolverManager = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwInterpFnManager = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled_LwFsIterationManager = 0;
static PyTypeObject *__pyx_ptype_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi = 0;
static PyTypeObject *__pyx_array_type = 0;
static PyTypeObject *__pyx_MemviewEnum_type = 0;
static PyTypeObject *__pyx_memoryview_type = 0;
static PyTypeObject *__pyx_memoryviewslice_type = 0;
static PyObject *generic = 0;
static PyObject *strided = 0;
static PyObject *indirect = 0;
static PyObject *contiguous = 0;
static PyObject *indirect_contiguous = 0;
static int __pyx_memoryview_thread_locks_used;
static PyThread_type_lock __pyx_memoryview_thread_locks[8];
static __pyx_t_8CmoArray_F64View __pyx_f_11lightweaver_10LwCompiled_f64_view(__Pyx_memviewslice); /*proto*/
static __pyx_t_8CmoArray_F64View2D __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__Pyx_memviewslice); /*proto*/
static __pyx_t_8CmoArray_F64View3D __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__Pyx_memviewslice); /*proto*/
static __pyx_t_8CmoArray_F64View4D __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__Pyx_memviewslice); /*proto*/
static ExtraParams __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(PyObject *); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_verify_bc_array_sizes(AtmosphericBoundaryCondition *, __Pyx_memviewslice, PyObject *); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_JRest_to_numpy(__pyx_t_8CmoArray_F64Arr2D); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_JRest_from_numpy(Spectrum, __Pyx_memviewslice); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_fvec2list(std::vector<__pyx_t_8CmoArray_f64>  const &); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_ivec2list(std::vector<int>  const &); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_IterationUpdate_from_IterationResult(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, IterationResult); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled___pyx_unpickle_BackgroundProvider__set_state(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *, PyObject *); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled___pyx_unpickle_RayleighScatterer__set_state(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__Pyx_carray_to_py_Py_ssize_t(Py_ssize_t *, Py_ssize_t); /*proto*/
static CYTHON_INLINE PyObject *__Pyx_carray_to_tuple_Py_ssize_t(Py_ssize_t *, Py_ssize_t); /*proto*/
static struct __pyx_array_obj *__pyx_array_new(PyObject *, Py_ssize_t, char *, char *, char *); /*proto*/
static void *__pyx_align_pointer(void *, size_t); /*proto*/
static PyObject *__pyx_memoryview_new(PyObject *, int, int, __Pyx_TypeInfo *); /*proto*/
static CYTHON_INLINE int __pyx_memoryview_check(PyObject *); /*proto*/
static PyObject *_unellipsify(PyObject *, int); /*proto*/
static PyObject *assert_direct_dimensions(Py_ssize_t *, int); /*proto*/
static struct __pyx_memoryview_obj *__pyx_memview_slice(struct __pyx_memoryview_obj *, PyObject *); /*proto*/
static int __pyx_memoryview_slice_memviewslice(__Pyx_memviewslice *, Py_ssize_t, Py_ssize_t, Py_ssize_t, int, int, int *, Py_ssize_t, Py_ssize_t, Py_ssize_t, int, int, int, int); /*proto*/
static char *__pyx_pybuffer_index(Py_buffer *, char *, Py_ssize_t, Py_ssize_t); /*proto*/
static int __pyx_memslice_transpose(__Pyx_memviewslice *); /*proto*/
static PyObject *__pyx_memoryview_fromslice(__Pyx_memviewslice, int, PyObject *(*)(char *), int (*)(char *, PyObject *), int); /*proto*/
static __Pyx_memviewslice *__pyx_memoryview_get_slice_from_memoryview(struct __pyx_memoryview_obj *, __Pyx_memviewslice *); /*proto*/
static void __pyx_memoryview_slice_copy(struct __pyx_memoryview_obj *, __Pyx_memviewslice *); /*proto*/
static PyObject *__pyx_memoryview_copy_object(struct __pyx_memoryview_obj *); /*proto*/
static PyObject *__pyx_memoryview_copy_object_from_slice(struct __pyx_memoryview_obj *, __Pyx_memviewslice *); /*proto*/
static Py_ssize_t abs_py_ssize_t(Py_ssize_t); /*proto*/
static char __pyx_get_best_slice_order(__Pyx_memviewslice *, int); /*proto*/
static void _copy_strided_to_strided(char *, Py_ssize_t *, char *, Py_ssize_t *, Py_ssize_t *, Py_ssize_t *, int, size_t); /*proto*/
static void copy_strided_to_strided(__Pyx_memviewslice *, __Pyx_memviewslice *, int, size_t); /*proto*/
static Py_ssize_t __pyx_memoryview_slice_get_size(__Pyx_memviewslice *, int); /*proto*/
static Py_ssize_t __pyx_fill_contig_strides_array(Py_ssize_t *, Py_ssize_t *, Py_ssize_t, int, char); /*proto*/
static void *__pyx_memoryview_copy_data_to_temp(__Pyx_memviewslice *, __Pyx_memviewslice *, char, int); /*proto*/
static int __pyx_memoryview_err_extents(int, Py_ssize_t, Py_ssize_t); /*proto*/
static int __pyx_memoryview_err_dim(PyObject *, char *, int); /*proto*/
static int __pyx_memoryview_err(PyObject *, char *); /*proto*/
static int __pyx_memoryview_copy_contents(__Pyx_memviewslice, __Pyx_memviewslice, int, int, int); /*proto*/
static void __pyx_memoryview_broadcast_leading(__Pyx_memviewslice *, int, int); /*proto*/
static void __pyx_memoryview_refcount_copying(__Pyx_memviewslice *, int, int, int); /*proto*/
static void __pyx_memoryview_refcount_objects_in_slice_with_gil(char *, Py_ssize_t *, Py_ssize_t *, int, int); /*proto*/
static void __pyx_memoryview_refcount_objects_in_slice(char *, Py_ssize_t *, Py_ssize_t *, int, int); /*proto*/
static void __pyx_memoryview_slice_assign_scalar(__Pyx_memviewslice *, int, size_t, void *, int); /*proto*/
static void __pyx_memoryview__slice_assign_scalar(char *, Py_ssize_t *, Py_ssize_t *, int, size_t, void *); /*proto*/
static PyObject *__pyx_unpickle_Enum__set_state(struct __pyx_MemviewEnum_obj *, PyObject *); /*proto*/
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_double_t = { "double_t", NULL, sizeof(__pyx_t_5numpy_double_t), { 0 }, 0, 'R', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_8CmoArray_f64 = { "f64", NULL, sizeof(__pyx_t_8CmoArray_f64), { 0 }, 0, 'R', 0, 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_11lightweaver_10LwCompiled_i64 = { "i64", NULL, sizeof(__pyx_t_11lightweaver_10LwCompiled_i64), { 0 }, 0, IS_UNSIGNED(__pyx_t_11lightweaver_10LwCompiled_i64) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_11lightweaver_10LwCompiled_i64), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t = { "int32_t", NULL, sizeof(__pyx_t_5numpy_int32_t), { 0 }, 0, IS_UNSIGNED(__pyx_t_5numpy_int32_t) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_5numpy_int32_t), 0 };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_11lightweaver_10LwCompiled_i8 = { "i8", NULL, sizeof(__pyx_t_11lightweaver_10LwCompiled_i8), { 0 }, 0, IS_UNSIGNED(__pyx_t_11lightweaver_10LwCompiled_i8) ? 'U' : 'I', IS_UNSIGNED(__pyx_t_11lightweaver_10LwCompiled_i8), 0 };
#define __Pyx_MODULE_NAME "lightweaver.LwCompiled"
extern int __pyx_module_is_main_lightweaver__LwCompiled;
int __pyx_module_is_main_lightweaver__LwCompiled = 0;

/* Implementation of 'lightweaver.LwCompiled' */
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_AttributeError;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_super;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_print;
static PyObject *__pyx_builtin_DeprecationWarning;
static PyObject *__pyx_builtin_any;
static PyObject *__pyx_builtin_ImportError;
static PyObject *__pyx_builtin_MemoryError;
static PyObject *__pyx_builtin_Ellipsis;
static PyObject *__pyx_builtin_id;
static PyObject *__pyx_builtin_IndexError;
static const char __pyx_k_[] = ", ";
static const char __pyx_k_B[] = "B";
static const char __pyx_k_C[] = "C";
static const char __pyx_k_H[] = "H-";
static const char __pyx_k_I[] = "I";
static const char __pyx_k_J[] = "J";
static const char __pyx_k_O[] = "O";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_g[] = "g";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_j[] = "j";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_s[] = "s";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_z[] = "z";
static const char __pyx_k_CH[] = "CH";
static const char __pyx_k_H2[] = "H2";
static const char __pyx_k_HC[] = "HC";
static const char __pyx_k_He[] = "He";
static const char __pyx_k_Ng[] = "Ng";
static const char __pyx_k_Nx[] = "Nx";
static const char __pyx_k_Ny[] = "Ny";
static const char __pyx_k_Nz[] = "Nz";
static const char __pyx_k_OH[] = "OH";
static const char __pyx_k__5[] = " (";
static const char __pyx_k__6[] = ".";
static const char __pyx_k_bc[] = "bc";
static const char __pyx_k_bg[] = "bg";
static const char __pyx_k_dC[] = "dC";
static const char __pyx_k_dt[] = "dt";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_la[] = "la";
static const char __pyx_k_mu[] = "mu";
static const char __pyx_k_ne[] = "ne";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_os[] = "os";
static const char __pyx_k_pi[] = "pi";
static const char __pyx_k_sd[] = "sd";
static const char __pyx_k_vx[] = "vx";
static const char __pyx_k_vy[] = "vy";
static const char __pyx_k_vz[] = "vz";
static const char __pyx_k_Aji[] = "Aji";
static const char __pyx_k_Bij[] = "Bij";
static const char __pyx_k_Bji[] = "Bji";
static const char __pyx_k_H_2[] = "H";
static const char __pyx_k_Lte[] = "Lte";
static const char __pyx_k_Nmu[] = "Nmu";
static const char __pyx_k_PRD[] = "PRD";
static const char __pyx_k_Quv[] = "Quv";
static const char __pyx_k_Rij[] = "Rij";
static const char __pyx_k_Rji[] = "Rji";
static const char __pyx_k_Uji[] = "Uji";
static const char __pyx_k_Vij[] = "Vij";
static const char __pyx_k_Vji[] = "Vji";
static const char __pyx_k__67[] = "*";
static const char __pyx_k_all[] = "all";
static const char __pyx_k_any[] = "any";
static const char __pyx_k_chi[] = "chi";
static const char __pyx_k_ctx[] = "ctx";
static const char __pyx_k_eta[] = "eta";
static const char __pyx_k_got[] = "), got ";
static const char __pyx_k_mus[] = "mus";
static const char __pyx_k_mux[] = "mux";
static const char __pyx_k_muy[] = "muy";
static const char __pyx_k_muz[] = "muz";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_obj[] = "obj";
static const char __pyx_k_phi[] = "phi";
static const char __pyx_k_sca[] = "sca";
static const char __pyx_k_sum[] = "sum";
static const char __pyx_k_tol[] = "tol";
static const char __pyx_k_val[] = "val";
static const char __pyx_k_wmu[] = "wmu";
static const char __pyx_k_Enum[] = "Enum";
static const char __pyx_k_Line[] = "Line";
static const char __pyx_k_Ndim[] = "Ndim";
static const char __pyx_k_NoBc[] = "NoBc";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_Nred[] = "Nred";
static const char __pyx_k_Zero[] = "Zero";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_atom[] = "atom";
static const char __pyx_k_auto[] = "auto";
static const char __pyx_k_axis[] = "axis";
static const char __pyx_k_base[] = "base";
static const char __pyx_k_bool[] = "bool";
static const char __pyx_k_chiB[] = "chiB";
static const char __pyx_k_copy[] = "copy";
static const char __pyx_k_crsw[] = "crsw";
static const char __pyx_k_dRho[] = "dRho";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_enum[] = "enum";
static const char __pyx_k_fill[] = "fill";
static const char __pyx_k_hprd[] = "hprd";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_int8[] = "int8";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mode[] = "mode";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_ndim[] = "ndim";
static const char __pyx_k_ones[] = "ones";
static const char __pyx_k_pack[] = "pack";
static const char __pyx_k_phiQ[] = "phiQ";
static const char __pyx_k_phiU[] = "phiU";
static const char __pyx_k_phiV[] = "phiV";
static const char __pyx_k_pops[] = "pops";
static const char __pyx_k_psiQ[] = "psiQ";
static const char __pyx_k_psiU[] = "psiU";
static const char __pyx_k_psiV[] = "psiV";
static const char __pyx_k_rays[] = "rays";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_sqrt[] = "sqrt";
static const char __pyx_k_step[] = "step";
static const char __pyx_k_stop[] = "stop";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_time[] = "time";
static const char __pyx_k_type[] = "type";
static const char __pyx_k_vlos[] = "vlos";
static const char __pyx_k_warn[] = "warn";
static const char __pyx_k_wphi[] = "wphi";
static const char __pyx_k_ASCII[] = "ASCII";
static const char __pyx_k_Const[] = "Const";
static const char __pyx_k_Gamma[] = "Gamma";
static const char __pyx_k_JRest[] = "JRest";
static const char __pyx_k_Nblue[] = "Nblue";
static const char __pyx_k_Niter[] = "Niter";
static const char __pyx_k_Nrays[] = "Nrays";
static const char __pyx_k_Nwave[] = "Nwave";
static const char __pyx_k_UTF_8[] = "UTF-8";
static const char __pyx_k_aDamp[] = "aDamp";
static const char __pyx_k_alpha[] = "alpha";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_atmos[] = "atmos";
static const char __pyx_k_atoms[] = "atoms";
static const char __pyx_k_chiIn[] = "chiIn";
static const char __pyx_k_class[] = "__class__";
static const char __pyx_k_dJMax[] = "dJMax";
static const char __pyx_k_dPops[] = "dPops";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_error[] = "error";
static const char __pyx_k_etaIn[] = "etaIn";
static const char __pyx_k_flags[] = "flags";
static const char __pyx_k_hOnly[] = "hOnly";
static const char __pyx_k_hPops[] = "hPops";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_int64[] = "int64";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_lines[] = "lines";
static const char __pyx_k_nHTot[] = "nHTot";
static const char __pyx_k_nPrev[] = "nPrev";
static const char __pyx_k_nStar[] = "nStar";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_quiet[] = "quiet";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_scaIn[] = "scaIn";
static const char __pyx_k_shape[] = "shape";
static const char __pyx_k_shift[] = "shift";
static const char __pyx_k_spect[] = "spect";
static const char __pyx_k_stage[] = "stage";
static const char __pyx_k_start[] = "start";
static const char __pyx_k_super[] = "super";
static const char __pyx_k_toObs[] = "toObs";
static const char __pyx_k_trans[] = "trans";
static const char __pyx_k_utils[] = "utils";
static const char __pyx_k_vturb[] = "vturb";
static const char __pyx_k_weno4[] = "weno4";
static const char __pyx_k_zeros[] = "zeros";
static const char __pyx_k_CLight[] = "CLight";
static const char __pyx_k_LwAtom[] = "LwAtom";
static const char __pyx_k_Ndelay[] = "Ndelay";
static const char __pyx_k_Norder[] = "Norder";
static const char __pyx_k_Nspace[] = "Nspace";
static const char __pyx_k_Qelast[] = "Qelast";
static const char __pyx_k_active[] = "active";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_argmax[] = "argmax";
static const char __pyx_k_astype[] = "astype";
static const char __pyx_k_chPops[] = "chPops";
static const char __pyx_k_chiB_2[] = ", chiB: ";
static const char __pyx_k_dNeMax[] = "dNeMax";
static const char __pyx_k_encode[] = "encode";
static const char __pyx_k_eqPops[] = "eqPops";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_gammaB[] = "gammaB";
static const char __pyx_k_h2Pops[] = "h2Pops";
static const char __pyx_k_iLevel[] = "iLevel";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_interp[] = "interp";
static const char __pyx_k_jLevel[] = "jLevel";
static const char __pyx_k_kwargs[] = "kwargs";
static const char __pyx_k_levels[] = "levels";
static const char __pyx_k_nTotal[] = "nTotal";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_ohPops[] = "ohPops";
static const char __pyx_k_params[] = "params";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_radSet[] = "radSet";
static const char __pyx_k_redIdx[] = "redIdx";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_rhoPrd[] = "rhoPrd";
static const char __pyx_k_stages[] = "stages";
static const char __pyx_k_stokes[] = "stokes";
static const char __pyx_k_struct[] = "struct";
static const char __pyx_k_unpack[] = "unpack";
static const char __pyx_k_upOnly[] = "upOnly";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_vBroad[] = "vBroad";
static const char __pyx_k_vlosMu[] = "vlosMu";
static const char __pyx_k_HPlanck[] = "HPlanck";
static const char __pyx_k_NM_TO_M[] = "NM_TO_M";
static const char __pyx_k_Nlambda[] = "Nlambda";
static const char __pyx_k_Nperiod[] = "Nperiod";
static const char __pyx_k_asarray[] = "asarray";
static const char __pyx_k_blueIdx[] = "blueIdx";
static const char __pyx_k_cos2chi[] = "cos2chi";
static const char __pyx_k_damping[] = "damping";
static const char __pyx_k_element[] = "element";
static const char __pyx_k_float64[] = "float64";
static const char __pyx_k_for_key[] = "'' for key ";
static const char __pyx_k_fortran[] = "fortran";
static const char __pyx_k_initSol[] = "initSol";
static const char __pyx_k_lambda0[] = "lambda0";
static const char __pyx_k_maxIter[] = "maxIter";
static const char __pyx_k_memview[] = "memview";
static const char __pyx_k_nrHOnly[] = "nrHOnly";
static const char __pyx_k_pyAtmos[] = "pyAtmos";
static const char __pyx_k_scatter[] = "scatter";
static const char __pyx_k_sin2chi[] = "sin2chi";
static const char __pyx_k_squeeze[] = "squeeze";
static const char __pyx_k_transId[] = "transId";
static const char __pyx_k_updateJ[] = "updateJ";
static const char __pyx_k_ERydberg[] = "ERydberg";
static const char __pyx_k_Ellipsis[] = "Ellipsis";
static const char __pyx_k_Epsilon0[] = "Epsilon0";
static const char __pyx_k_LineType[] = "LineType";
static const char __pyx_k_Nthreads[] = "Nthreads";
static const char __pyx_k_clear_ng[] = "clear_ng";
static const char __pyx_k_compAtom[] = "compAtom";
static const char __pyx_k_continua[] = "continua";
static const char __pyx_k_cosGamma[] = "cosGamma";
static const char __pyx_k_crswDone[] = "crswDone";
static const char __pyx_k_dJMaxIdx[] = "dJMaxIdx";
static const char __pyx_k_dJPrdMax[] = "dJPrdMax";
static const char __pyx_k_deepcopy[] = "deepcopy";
static const char __pyx_k_detailed[] = "detailed";
static const char __pyx_k_gammaB_2[] = ", gammaB: ";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_interpFn[] = "interpFn";
static const char __pyx_k_itemsize[] = "itemsize";
static const char __pyx_k_lte_pops[] = "lte_pops";
static const char __pyx_k_lwConfig[] = "lwConfig";
static const char __pyx_k_ngUpdate[] = "ngUpdate";
static const char __pyx_k_popsOnly[] = "popsOnly";
static const char __pyx_k_provider[] = "provider";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_quadSymm[] = "quadSymm";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_strength[] = "strength";
static const char __pyx_k_updatedJ[] = "updatedJ";
static const char __pyx_k_warnings[] = "warnings";
static const char __pyx_k_xLowerBc[] = "xLowerBc";
static const char __pyx_k_xUpperBc[] = "xUpperBc";
static const char __pyx_k_yLowerBc[] = "yLowerBc";
static const char __pyx_k_yUpperBc[] = "yUpperBc";
static const char __pyx_k_zLowerBc[] = "zLowerBc";
static const char __pyx_k_zUpperBc[] = "zUpperBc";
static const char __pyx_k_Continuum[] = "Continuum";
static const char __pyx_k_InterpFns[] = "InterpFns";
static const char __pyx_k_LwContext[] = "LwContext";
static const char __pyx_k_MElectron[] = "MElectron";
static const char __pyx_k_Noutgoing[] = "Noutgoing";
static const char __pyx_k_QElectron[] = "QElectron";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_aDampView[] = "aDampView";
static const char __pyx_k_chunkSize[] = "chunkSize";
static const char __pyx_k_dNeMaxIdx[] = "dNeMaxIdx";
static const char __pyx_k_depthData[] = "depthData";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_for_key_2[] = " for key ";
static const char __pyx_k_minLambda[] = "minLambda";
static const char __pyx_k_modelPops[] = "modelPops";
static const char __pyx_k_ngOptions[] = "ngOptions";
static const char __pyx_k_polarised[] = "polarised";
static const char __pyx_k_prevSpect[] = "prevSpect";
static const char __pyx_k_prevState[] = "prevState";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_recompute[] = "recompute";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_refinePrd[] = "refinePrd";
static const char __pyx_k_returnCtx[] = "returnCtx";
static const char __pyx_k_structure[] = "structure";
static const char __pyx_k_updateBcs[] = "updateBcs";
static const char __pyx_k_updatedNe[] = "updatedNe";
static const char __pyx_k_AtomicLine[] = "AtomicLine";
static const char __pyx_k_BC_to_enum[] = "BC_to_enum";
static const char __pyx_k_IndexError[] = "IndexError";
static const char __pyx_k_KBoltzmann[] = "KBoltzmann";
static const char __pyx_k_LwSpectrum[] = "LwSpectrum";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_atmosphere[] = "atmosphere";
static const char __pyx_k_atomicPops[] = "atomicPops";
static const char __pyx_k_atomic_set[] = "atomic_set";
static const char __pyx_k_background[] = "background";
static const char __pyx_k_collisions[] = "collisions";
static const char __pyx_k_compute_bc[] = "compute_bc";
static const char __pyx_k_dRhoMaxIdx[] = "dRhoMaxIdx";
static const char __pyx_k_formal_sol[] = "formal_sol";
static const char __pyx_k_hMinusPops[] = "hMinusPops";
static const char __pyx_k_lambdaEdge[] = "lambdaEdge";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_stat_equil[] = "stat_equil";
static const char __pyx_k_state_dict[] = "state_dict";
static const char __pyx_k_transModel[] = "transModel";
static const char __pyx_k_updatedRho[] = "updatedRho";
static const char __pyx_k_vBroadView[] = "vBroadView";
static const char __pyx_k_wavelength[] = "wavelength";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_LwDepthData[] = "LwDepthData";
static const char __pyx_k_MemoryError[] = "MemoryError";
static const char __pyx_k_NprdSubIter[] = "NprdSubIter";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_activeAtoms[] = "activeAtoms";
static const char __pyx_k_activeTrans[] = "activeTrans";
static const char __pyx_k_atomicModel[] = "atomicModel";
static const char __pyx_k_compute_bcs[] = "compute_bcs";
static const char __pyx_k_compute_phi[] = "compute_phi";
static const char __pyx_k_dJPrdMaxIdx[] = "dJPrdMaxIdx";
static const char __pyx_k_dPopsMaxIdx[] = "dPopsMaxIdx";
static const char __pyx_k_extraParams[] = "extraParams";
static const char __pyx_k_fromScratch[] = "fromScratch";
static const char __pyx_k_indexVector[] = "indexVector";
static const char __pyx_k_polarisable[] = "polarisable";
static const char __pyx_k_prevInitSol[] = "prevInitSol";
static const char __pyx_k_printUpdate[] = "printUpdate";
static const char __pyx_k_reconstruct[] = "_reconstruct";
static const char __pyx_k_temperature[] = "temperature";
static const char __pyx_k_transitions[] = "transitions";
static const char __pyx_k_update_deps[] = "update_deps";
static const char __pyx_k_updatedJPrd[] = "updatedJPrd";
static const char __pyx_k_updatedPops[] = "updatedPops";
static const char __pyx_k_wavelengths[] = "wavelengths";
static const char __pyx_k_LwAtmosphere[] = "LwAtmosphere";
static const char __pyx_k_LwBackground[] = "LwBackground";
static const char __pyx_k_LwTransition[] = "LwTransition";
static const char __pyx_k_Nwavelengths[] = "Nwavelengths";
static const char __pyx_k_atomic_model[] = "atomic_model";
static const char __pyx_k_atomic_table[] = "atomic_table";
static const char __pyx_k_backgroundNe[] = "backgroundNe";
static const char __pyx_k_bf_opacities[] = "bf_opacities";
static const char __pyx_k_crswCallback[] = "crswCallback";
static const char __pyx_k_fillDiagonal[] = "fillDiagonal";
static const char __pyx_k_formalSolver[] = "formalSolver";
static const char __pyx_k_fsIterScheme[] = "fsIterScheme";
static const char __pyx_k_passiveAtoms[] = "passiveAtoms";
static const char __pyx_k_prevTimePops[] = "prevTimePops";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_setup_stokes[] = "setup_stokes";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_stringsource[] = "stringsource";
static const char __pyx_k_updateTotals[] = "updateTotals";
static const char __pyx_k_FormalSolvers[] = "FormalSolvers";
static const char __pyx_k_PeriodicTable[] = "PeriodicTable";
static const char __pyx_k_Value_for_key[] = "Value for key ";
static const char __pyx_k_ZeroRadiation[] = "ZeroRadiation";
static const char __pyx_k_compute_rates[] = "compute_rates";
static const char __pyx_k_configure_bcs[] = "configure_bcs";
static const char __pyx_k_detailedAtoms[] = "detailedAtoms";
static const char __pyx_k_inConstructor[] = "inConstructor";
static const char __pyx_k_lambdaIterate[] = "lambdaIterate";
static const char __pyx_k_ngAccelerated[] = "ngAccelerated";
static const char __pyx_k_pyx_getbuffer[] = "__pyx_getbuffer";
static const char __pyx_k_recompute_gII[] = "recompute_gII";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_rel_diff_pops[] = "rel_diff_pops";
static const char __pyx_k_set_interp_fn[] = "set_interp_fn";
static const char __pyx_k_AttributeError[] = "AttributeError";
static const char __pyx_k_FastBackground[] = "FastBackground";
static const char __pyx_k_FormalSolver1d[] = "FormalSolver1d";
static const char __pyx_k_FormalSolver2d[] = "FormalSolver2d";
static const char __pyx_k_conserveCharge[] = "conserveCharge";
static const char __pyx_k_default_interp[] = "default_interp";
static const char __pyx_k_default_scheme[] = "default_scheme";
static const char __pyx_k_nr_post_update[] = "nr_post_update";
static const char __pyx_k_radiativeRates[] = "radiativeRates";
static const char __pyx_k_update_threads[] = "update_threads";
static const char __pyx_k_BasicBackground[] = "BasicBackground";
static const char __pyx_k_InitialSolution[] = "InitialSolution";
static const char __pyx_k_IterationScheme[] = "{IterationScheme}";
static const char __pyx_k_IterationUpdate[] = "IterationUpdate";
static const char __pyx_k_Singular_Matrix[] = "Singular Matrix";
static const char __pyx_k_Unexpected_Ndim[] = "Unexpected Ndim";
static const char __pyx_k_View_MemoryView[] = "View.MemoryView";
static const char __pyx_k_allocate_buffer[] = "allocate_buffer";
static const char __pyx_k_dtype_is_object[] = "dtype_is_object";
static const char __pyx_k_expected_one_of[] = ", expected one of ";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_time_dep_update[] = "time_dep_update";
static const char __pyx_k_LineProfileState[] = "LineProfileState";
static const char __pyx_k_compute_profiles[] = "compute_profiles";
static const char __pyx_k_get_fs_iter_libs[] = "get_fs_iter_libs";
static const char __pyx_k_interp_linear_2d[] = "interp_linear_2d";
static const char __pyx_k_iteration_update[] = "iteration_update";
static const char __pyx_k_prd_redistribute[] = "prd_redistribute";
static const char __pyx_k_preserveProfiles[] = "preserveProfiles";
static const char __pyx_k_setup_wavelength[] = "setup_wavelength";
static const char __pyx_k_single_stokes_fs[] = "single_stokes_fs";
static const char __pyx_k_transWavelengths[] = "transWavelengths";
static const char __pyx_k_wavelengthSubset[] = "wavelengthSubset";
static const char __pyx_k_BoundaryCondition[] = "BoundaryCondition";
static const char __pyx_k_EscapeProbability[] = "EscapeProbability";
static const char __pyx_k_LwInterpFnManager[] = "LwInterpFnManager";
static const char __pyx_k_PeriodicRadiation[] = "PeriodicRadiation";
static const char __pyx_k_RayleighScatterer[] = "RayleighScatterer";
static const char __pyx_k_UnityCrswIterator[] = "UnityCrswIterator";
static const char __pyx_k_activeWavelengths[] = "activeWavelengths";
static const char __pyx_k_dimensionSpecific[] = "dimensionSpecific";
static const char __pyx_k_pyx_unpickle_Enum[] = "__pyx_unpickle_Enum";
static const char __pyx_k_scheme_properties[] = "scheme_properties";
static const char __pyx_k_set_formal_solver[] = "set_formal_solver";
static const char __pyx_k_timeDependentData[] = "timeDependentData";
static const char __pyx_k_update_background[] = "update_background";
static const char __pyx_k_zeeman_components[] = "zeeman_components";
static const char __pyx_k_BackgroundProvider[] = "BackgroundProvider";
static const char __pyx_k_DeprecationWarning[] = "DeprecationWarning";
static const char __pyx_k_FsIterationSchemes[] = "FsIterationSchemes";
static const char __pyx_k_LwZeemanComponents[] = "LwZeemanComponents";
static const char __pyx_k_backgroundProvider[] = "backgroundProvider";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_compute_background[] = "compute_background";
static const char __pyx_k_compute_collisions[] = "compute_collisions";
static const char __pyx_k_lightweaver_config[] = "lightweaver.config";
static const char __pyx_k_load_fns_from_path[] = "load_fns_from_path";
static const char __pyx_k_set_fs_iter_scheme[] = "set_fs_iter_scheme";
static const char __pyx_k_strided_and_direct[] = "<strided and direct>";
static const char __pyx_k_update_hprd_coeffs[] = "update_hprd_coeffs";
static const char __pyx_k_update_projections[] = "update_projections";
static const char __pyx_k_Got_array_with_type[] = "Got array with type ";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_default_scheme_name[] = "default_scheme_name";
static const char __pyx_k_fixCollisionalRates[] = "fixCollisionalRates";
static const char __pyx_k_interp_J_from_state[] = "interp_J_from_state";
static const char __pyx_k_rayleigh_scattering[] = "rayleigh_scattering";
static const char __pyx_k_ExplodingMatrixError[] = "ExplodingMatrixError";
static const char __pyx_k_LwFsIterationManager[] = "LwFsIterationManager";
static const char __pyx_k_ThermalisedRadiation[] = "ThermalisedRadiation";
static const char __pyx_k_defaultWlaGijStorage[] = "defaultWlaGijStorage";
static const char __pyx_k_respectsFormalSolver[] = "respectsFormalSolver";
static const char __pyx_k_strided_and_indirect[] = "<strided and indirect>";
static const char __pyx_k_subset_configuration[] = "subset_configuration";
static const char __pyx_k_LwFormalSolverManager[] = "LwFormalSolverManager";
static const char __pyx_k_check_shape_exception[] = "check_shape_exception";
static const char __pyx_k_contiguous_and_direct[] = "<contiguous and direct>";
static const char __pyx_k_defaultPerAtomStorage[] = "defaultPerAtomStorage";
static const char __pyx_k_default_formal_solver[] = "default_formal_solver";
static const char __pyx_k_lightweaver_constants[] = "lightweaver.constants";
static const char __pyx_k_MemoryView_of_r_object[] = "<MemoryView of %r object>";
static const char __pyx_k_Please_specify_B_field[] = "Please specify B-field";
static const char __pyx_k_default_voigt_callback[] = "default_voigt_callback";
static const char __pyx_k_fsIterSchemeProperties[] = "fsIterSchemeProperties";
static const char __pyx_k_lightweaver_LwCompiled[] = "lightweaver.LwCompiled";
static const char __pyx_k_max_supported_is_4_got[] = ", max supported is 4, got ";
static const char __pyx_k_rel_diff_ng_accelerate[] = "rel_diff_ng_accelerate";
static const char __pyx_k_MemoryView_of_r_at_0x_x[] = "<MemoryView of %r at 0x%x>";
static const char __pyx_k_contiguous_and_indirect[] = "<contiguous and indirect>";
static const char __pyx_k_Cannot_index_with_type_s[] = "Cannot index with type '%s'";
static const char __pyx_k_Source_LwMiddleLayer_pyx[] = "Source/LwMiddleLayer.pyx";
static const char __pyx_k_Invalid_shape_in_axis_d_d[] = "Invalid shape in axis %d: %d.";
static const char __pyx_k_formal_sol_gamma_matrices[] = "formal_sol_gamma_matrices";
static const char __pyx_k_load_rates_prd_from_state[] = "load_rates_prd_from_state";
static const char __pyx_k_IterationScheme___SimdImpl[] = "{IterationScheme}_{SimdImpl}";
static const char __pyx_k_compute_polarised_profiles[] = "compute_polarised_profiles";
static const char __pyx_k_time_dep_restore_prev_pops[] = "time_dep_restore_prev_pops";
static const char __pyx_k_update_lte_atoms_Hmin_pops[] = "update_lte_atoms_Hmin_pops";
static const char __pyx_k_itemsize_0_for_cython_array[] = "itemsize <= 0 for cython.array";
static const char __pyx_k_set_pops_escape_probability[] = "set_pops_escape_probability";
static const char __pyx_k_get_fs_iter_scheme_properties[] = "get_fs_iter_scheme_properties";
static const char __pyx_k_unable_to_allocate_array_data[] = "unable to allocate array data.";
static const char __pyx_k_construct_from_state_dict_with[] = "construct_from_state_dict_with";
static const char __pyx_k_is_not_of_a_supported_type_got[] = " is not of a supported type, got ";
static const char __pyx_k_load_pops_rates_prd_from_state[] = "load_pops_rates_prd_from_state";
static const char __pyx_k_pyx_unpickle_BackgroundProvide[] = "__pyx_unpickle_BackgroundProvider";
static const char __pyx_k_pyx_unpickle_RayleighScatterer[] = "__pyx_unpickle_RayleighScatterer";
static const char __pyx_k_strided_and_direct_or_indirect[] = "<strided and direct or indirect>";
static const char __pyx_k_Dictionary_keys_for_ExtraParams[] = "Dictionary keys for ExtraParams must be str, got '";
static const char __pyx_k_Failed_to_load_iteration_scheme[] = "Failed to load iteration scheme from library at %s";
static const char __pyx_k_Shapes_of_B_gammaB_and_chiB_don[] = "Shapes of B, gammaB, and chiB don't match, verify that these are correctly set in the Atmosphere provided to Context. (B: ";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_self_ctx_cannot_be_converted_to[] = "self.ctx cannot be converted to a Python object for pickling";
static const char __pyx_k_Argument_is_not_a_BoundaryCondit[] = "Argument is not a BoundaryCondition.";
static const char __pyx_k_BC_returned_from_python_does_not[] = "BC returned from python does not match expected shape for ";
static const char __pyx_k_Buffer_view_does_not_expose_stri[] = "Buffer view does not expose strides";
static const char __pyx_k_Can_only_create_a_buffer_that_is[] = "Can only create a buffer that is contiguous in memory.";
static const char __pyx_k_Cannot_assign_to_read_only_memor[] = "Cannot assign to read-only memoryview";
static const char __pyx_k_Cannot_create_writable_memory_vi[] = "Cannot create writable memory view from read-only memoryview";
static const char __pyx_k_Empty_shape_tuple_for_cython_arr[] = "Empty shape tuple for cython.array";
static const char __pyx_k_Escape_probability_didn_t_conver[] = "Escape probability didn't converge for %s, setting LTE populations";
static const char __pyx_k_Failed_to_load_Formal_Solver_fro[] = "Failed to load Formal Solver from library at %s";
static const char __pyx_k_Failed_to_load_interpolation_fun[] = "Failed to load interpolation function from library at %s";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0[] = "Incompatible checksums (0x%x vs (0xd41d8cd, 0xe3b0c44, 0xda39a3e) = ())";
static const char __pyx_k_Indirect_dimensions_not_supporte[] = "Indirect dimensions not supported";
static const char __pyx_k_Invalid_mode_expected_c_or_fortr[] = "Invalid mode, expected 'c' or 'fortran', got %s";
static const char __pyx_k_One_of_the_quadrature_values_not[] = "One of the quadrature values not found, was .quadrature called on the Atmosphere object? (Caught: ";
static const char __pyx_k_Out_of_bounds_on_buffer_access_a[] = "Out of bounds on buffer access (axis %d)";
static const char __pyx_k_The_use_of_printUpdate_is_now_de[] = "The use of `printUpdate` is now deprecated, as this function no longer prints.";
static const char __pyx_k_Tried_to_load_a_pre_existing_pat[] = "Tried to load a pre-existing path";
static const char __pyx_k_Unable_to_convert_item_to_object[] = "Unable to convert item to object";
static const char __pyx_k_Unsupported_number_of_dimensions[] = "Unsupported number of dimensions on value associated with ";
static const char __pyx_k_Zero_radiation_InitialSolution_n[] = "Zero radiation InitialSolution not currently supported";
static const char __pyx_k_compute_phi_locals_default_voigt[] = "compute_phi.<locals>.default_voigt_callback";
static const char __pyx_k_got_differing_extents_in_dimensi[] = "got differing extents in dimension %d (got %d and %d)";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_only_contiguous_float64_and_int6[] = "only contiguous float64 and int64 are supported.";
static const char __pyx_k_self_atmos_cannot_be_converted_t[] = "self.atmos cannot be converted to a Python object for pickling";
static const char __pyx_k_self_atom_cannot_be_converted_to[] = "self.atom cannot be converted to a Python object for pickling";
static const char __pyx_k_self_background_cannot_be_conver[] = "self.background cannot be converted to a Python object for pickling";
static const char __pyx_k_self_depthData_cannot_be_convert[] = "self.depthData cannot be converted to a Python object for pickling";
static const char __pyx_k_self_manager_cannot_be_converted[] = "self.manager cannot be converted to a Python object for pickling";
static const char __pyx_k_self_spect_cannot_be_converted_t[] = "self.spect cannot be converted to a Python object for pickling";
static const char __pyx_k_self_trans_cannot_be_converted_t[] = "self.trans cannot be converted to a Python object for pickling";
static const char __pyx_k_self_zc_cannot_be_converted_to_a[] = "self.zc cannot be converted to a Python object for pickling";
static const char __pyx_k_unable_to_allocate_shape_and_str[] = "unable to allocate shape and strides.";
static const char __pyx_k_vlos_is_ambiguous_when_Ndim_1_us[] = "vlos is ambiguous when Ndim > 1, use vx, vy, or vz instead.";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_2[] = "Incompatible checksums (0x%x vs (0x72ae082, 0x7fee721, 0x0bb114b) = (C, atmos, atom, lambdaLimit, lambdaRed, lines, pops, sigmaE))";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0_3[] = "Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))";
static PyObject *__pyx_kp_u_;
static PyObject *__pyx_n_s_ASCII;
static PyObject *__pyx_n_s_Aji;
static PyObject *__pyx_kp_u_Argument_is_not_a_BoundaryCondit;
static PyObject *__pyx_n_s_AtomicLine;
static PyObject *__pyx_n_s_AttributeError;
static PyObject *__pyx_n_s_B;
static PyObject *__pyx_n_u_B;
static PyObject *__pyx_kp_u_BC_returned_from_python_does_not;
static PyObject *__pyx_n_s_BC_to_enum;
static PyObject *__pyx_n_s_BackgroundProvider;
static PyObject *__pyx_n_s_BasicBackground;
static PyObject *__pyx_n_s_Bij;
static PyObject *__pyx_n_s_Bji;
static PyObject *__pyx_n_s_BoundaryCondition;
static PyObject *__pyx_kp_s_Buffer_view_does_not_expose_stri;
static PyObject *__pyx_n_u_C;
static PyObject *__pyx_n_u_CH;
static PyObject *__pyx_n_s_CLight;
static PyObject *__pyx_kp_s_Can_only_create_a_buffer_that_is;
static PyObject *__pyx_kp_s_Cannot_assign_to_read_only_memor;
static PyObject *__pyx_kp_s_Cannot_create_writable_memory_vi;
static PyObject *__pyx_kp_s_Cannot_index_with_type_s;
static PyObject *__pyx_n_s_Const;
static PyObject *__pyx_n_u_Continuum;
static PyObject *__pyx_n_s_DeprecationWarning;
static PyObject *__pyx_kp_u_Dictionary_keys_for_ExtraParams;
static PyObject *__pyx_n_s_ERydberg;
static PyObject *__pyx_n_s_Ellipsis;
static PyObject *__pyx_kp_s_Empty_shape_tuple_for_cython_arr;
static PyObject *__pyx_n_s_Enum;
static PyObject *__pyx_n_s_Epsilon0;
static PyObject *__pyx_n_s_EscapeProbability;
static PyObject *__pyx_kp_u_Escape_probability_didn_t_conver;
static PyObject *__pyx_n_s_ExplodingMatrixError;
static PyObject *__pyx_kp_u_Failed_to_load_Formal_Solver_fro;
static PyObject *__pyx_kp_u_Failed_to_load_interpolation_fun;
static PyObject *__pyx_kp_u_Failed_to_load_iteration_scheme;
static PyObject *__pyx_n_s_FastBackground;
static PyObject *__pyx_n_u_FormalSolver1d;
static PyObject *__pyx_n_u_FormalSolver2d;
static PyObject *__pyx_n_s_FormalSolvers;
static PyObject *__pyx_n_s_FsIterationSchemes;
static PyObject *__pyx_n_u_Gamma;
static PyObject *__pyx_kp_u_Got_array_with_type;
static PyObject *__pyx_kp_u_H;
static PyObject *__pyx_n_u_H2;
static PyObject *__pyx_n_s_HC;
static PyObject *__pyx_n_s_HPlanck;
static PyObject *__pyx_n_u_H_2;
static PyObject *__pyx_n_u_He;
static PyObject *__pyx_n_u_I;
static PyObject *__pyx_n_s_ImportError;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_2;
static PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_3;
static PyObject *__pyx_n_s_IndexError;
static PyObject *__pyx_kp_s_Indirect_dimensions_not_supporte;
static PyObject *__pyx_n_s_InitialSolution;
static PyObject *__pyx_n_s_InterpFns;
static PyObject *__pyx_kp_s_Invalid_mode_expected_c_or_fortr;
static PyObject *__pyx_kp_s_Invalid_shape_in_axis_d_d;
static PyObject *__pyx_kp_u_IterationScheme;
static PyObject *__pyx_kp_u_IterationScheme___SimdImpl;
static PyObject *__pyx_n_s_IterationUpdate;
static PyObject *__pyx_n_s_J;
static PyObject *__pyx_n_u_J;
static PyObject *__pyx_n_u_JRest;
static PyObject *__pyx_n_s_KBoltzmann;
static PyObject *__pyx_n_u_Line;
static PyObject *__pyx_n_s_LineProfileState;
static PyObject *__pyx_n_s_LineType;
static PyObject *__pyx_n_s_Lte;
static PyObject *__pyx_n_s_LwAtmosphere;
static PyObject *__pyx_n_s_LwAtom;
static PyObject *__pyx_n_s_LwBackground;
static PyObject *__pyx_n_s_LwContext;
static PyObject *__pyx_n_s_LwDepthData;
static PyObject *__pyx_n_s_LwFormalSolverManager;
static PyObject *__pyx_n_s_LwFsIterationManager;
static PyObject *__pyx_n_s_LwInterpFnManager;
static PyObject *__pyx_n_s_LwSpectrum;
static PyObject *__pyx_n_s_LwTransition;
static PyObject *__pyx_n_s_LwZeemanComponents;
static PyObject *__pyx_n_s_MElectron;
static PyObject *__pyx_n_s_MemoryError;
static PyObject *__pyx_kp_s_MemoryView_of_r_at_0x_x;
static PyObject *__pyx_kp_s_MemoryView_of_r_object;
static PyObject *__pyx_n_s_NM_TO_M;
static PyObject *__pyx_n_u_Nblue;
static PyObject *__pyx_n_s_Ndelay;
static PyObject *__pyx_n_s_Ndim;
static PyObject *__pyx_n_u_Ndim;
static PyObject *__pyx_n_u_Ng;
static PyObject *__pyx_n_s_Niter;
static PyObject *__pyx_n_s_Nlambda;
static PyObject *__pyx_n_s_Nmu;
static PyObject *__pyx_n_s_NoBc;
static PyObject *__pyx_kp_u_None;
static PyObject *__pyx_n_s_Norder;
static PyObject *__pyx_n_s_NotImplementedError;
static PyObject *__pyx_n_s_Noutgoing;
static PyObject *__pyx_n_s_Nperiod;
static PyObject *__pyx_n_s_NprdSubIter;
static PyObject *__pyx_n_s_Nrays;
static PyObject *__pyx_n_u_Nred;
static PyObject *__pyx_n_s_Nspace;
static PyObject *__pyx_n_s_Nthreads;
static PyObject *__pyx_n_u_Nthreads;
static PyObject *__pyx_n_u_Nwave;
static PyObject *__pyx_n_s_Nwavelengths;
static PyObject *__pyx_n_s_Nx;
static PyObject *__pyx_n_u_Nx;
static PyObject *__pyx_n_s_Ny;
static PyObject *__pyx_n_u_Ny;
static PyObject *__pyx_n_s_Nz;
static PyObject *__pyx_n_u_Nz;
static PyObject *__pyx_n_b_O;
static PyObject *__pyx_n_u_OH;
static PyObject *__pyx_kp_u_One_of_the_quadrature_values_not;
static PyObject *__pyx_kp_s_Out_of_bounds_on_buffer_access_a;
static PyObject *__pyx_n_s_PRD;
static PyObject *__pyx_n_s_PeriodicRadiation;
static PyObject *__pyx_n_s_PeriodicTable;
static PyObject *__pyx_n_s_PickleError;
static PyObject *__pyx_kp_u_Please_specify_B_field;
static PyObject *__pyx_n_s_QElectron;
static PyObject *__pyx_n_s_Qelast;
static PyObject *__pyx_n_u_Qelast;
static PyObject *__pyx_n_u_Quv;
static PyObject *__pyx_n_s_RayleighScatterer;
static PyObject *__pyx_n_u_Rij;
static PyObject *__pyx_n_u_Rji;
static PyObject *__pyx_kp_u_Shapes_of_B_gammaB_and_chiB_don;
static PyObject *__pyx_kp_u_Singular_Matrix;
static PyObject *__pyx_kp_s_Source_LwMiddleLayer_pyx;
static PyObject *__pyx_kp_u_The_use_of_printUpdate_is_now_de;
static PyObject *__pyx_n_s_ThermalisedRadiation;
static PyObject *__pyx_kp_u_Tried_to_load_a_pre_existing_pat;
static PyObject *__pyx_n_s_TypeError;
static PyObject *__pyx_kp_u_UTF_8;
static PyObject *__pyx_n_s_Uji;
static PyObject *__pyx_kp_s_Unable_to_convert_item_to_object;
static PyObject *__pyx_kp_u_Unexpected_Ndim;
static PyObject *__pyx_n_s_UnityCrswIterator;
static PyObject *__pyx_kp_u_Unsupported_number_of_dimensions;
static PyObject *__pyx_n_s_ValueError;
static PyObject *__pyx_kp_u_Value_for_key;
static PyObject *__pyx_n_s_View_MemoryView;
static PyObject *__pyx_n_s_Vij;
static PyObject *__pyx_n_s_Vji;
static PyObject *__pyx_n_s_Zero;
static PyObject *__pyx_n_s_ZeroRadiation;
static PyObject *__pyx_kp_u_Zero_radiation_InitialSolution_n;
static PyObject *__pyx_kp_u__5;
static PyObject *__pyx_kp_u__6;
static PyObject *__pyx_n_s__67;
static PyObject *__pyx_n_s_a;
static PyObject *__pyx_n_s_aDamp;
static PyObject *__pyx_n_u_aDamp;
static PyObject *__pyx_n_s_aDampView;
static PyObject *__pyx_n_u_active;
static PyObject *__pyx_n_s_activeAtoms;
static PyObject *__pyx_n_u_activeAtoms;
static PyObject *__pyx_n_s_activeTrans;
static PyObject *__pyx_n_s_activeWavelengths;
static PyObject *__pyx_n_s_all;
static PyObject *__pyx_n_s_allocate_buffer;
static PyObject *__pyx_n_s_alpha;
static PyObject *__pyx_n_u_alpha;
static PyObject *__pyx_n_s_any;
static PyObject *__pyx_n_s_append;
static PyObject *__pyx_n_s_argmax;
static PyObject *__pyx_n_s_args;
static PyObject *__pyx_n_s_array;
static PyObject *__pyx_n_s_asarray;
static PyObject *__pyx_n_s_astype;
static PyObject *__pyx_n_s_atmos;
static PyObject *__pyx_n_u_atmos;
static PyObject *__pyx_n_s_atmosphere;
static PyObject *__pyx_n_s_atom;
static PyObject *__pyx_n_u_atom;
static PyObject *__pyx_n_s_atomicModel;
static PyObject *__pyx_n_u_atomicModel;
static PyObject *__pyx_n_s_atomicPops;
static PyObject *__pyx_n_s_atomic_model;
static PyObject *__pyx_n_s_atomic_set;
static PyObject *__pyx_n_s_atomic_table;
static PyObject *__pyx_n_s_atoms;
static PyObject *__pyx_n_s_auto;
static PyObject *__pyx_n_s_axis;
static PyObject *__pyx_n_s_background;
static PyObject *__pyx_n_u_background;
static PyObject *__pyx_n_s_backgroundNe;
static PyObject *__pyx_n_s_backgroundProvider;
static PyObject *__pyx_n_u_backgroundProvider;
static PyObject *__pyx_n_s_base;
static PyObject *__pyx_n_s_bc;
static PyObject *__pyx_n_s_bf_opacities;
static PyObject *__pyx_n_s_bg;
static PyObject *__pyx_n_s_blueIdx;
static PyObject *__pyx_n_s_bool;
static PyObject *__pyx_n_s_c;
static PyObject *__pyx_n_u_c;
static PyObject *__pyx_n_u_chPops;
static PyObject *__pyx_n_s_check_shape_exception;
static PyObject *__pyx_n_s_chi;
static PyObject *__pyx_n_u_chi;
static PyObject *__pyx_n_s_chiB;
static PyObject *__pyx_n_u_chiB;
static PyObject *__pyx_kp_u_chiB_2;
static PyObject *__pyx_n_s_chiIn;
static PyObject *__pyx_n_s_chunkSize;
static PyObject *__pyx_n_s_class;
static PyObject *__pyx_n_s_clear_ng;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_collisions;
static PyObject *__pyx_n_s_compAtom;
static PyObject *__pyx_n_s_compute_background;
static PyObject *__pyx_n_s_compute_bc;
static PyObject *__pyx_n_s_compute_bcs;
static PyObject *__pyx_n_s_compute_collisions;
static PyObject *__pyx_n_s_compute_phi;
static PyObject *__pyx_n_s_compute_phi_locals_default_voigt;
static PyObject *__pyx_n_s_compute_polarised_profiles;
static PyObject *__pyx_n_s_compute_profiles;
static PyObject *__pyx_n_s_compute_rates;
static PyObject *__pyx_n_s_configure_bcs;
static PyObject *__pyx_n_s_conserveCharge;
static PyObject *__pyx_n_u_conserveCharge;
static PyObject *__pyx_n_s_construct_from_state_dict_with;
static PyObject *__pyx_kp_s_contiguous_and_direct;
static PyObject *__pyx_kp_s_contiguous_and_indirect;
static PyObject *__pyx_n_s_continua;
static PyObject *__pyx_n_s_copy;
static PyObject *__pyx_n_u_cos2chi;
static PyObject *__pyx_n_u_cosGamma;
static PyObject *__pyx_n_s_crsw;
static PyObject *__pyx_n_s_crswCallback;
static PyObject *__pyx_n_u_crswCallback;
static PyObject *__pyx_n_u_crswDone;
static PyObject *__pyx_n_s_ctx;
static PyObject *__pyx_n_u_d;
static PyObject *__pyx_n_s_dC;
static PyObject *__pyx_n_s_dJMax;
static PyObject *__pyx_n_s_dJMaxIdx;
static PyObject *__pyx_n_s_dJPrdMax;
static PyObject *__pyx_n_s_dJPrdMaxIdx;
static PyObject *__pyx_n_s_dNeMax;
static PyObject *__pyx_n_s_dNeMaxIdx;
static PyObject *__pyx_n_s_dPops;
static PyObject *__pyx_n_s_dPopsMaxIdx;
static PyObject *__pyx_n_s_dRho;
static PyObject *__pyx_n_s_dRhoMaxIdx;
static PyObject *__pyx_n_s_damping;
static PyObject *__pyx_n_s_deepcopy;
static PyObject *__pyx_n_u_defaultPerAtomStorage;
static PyObject *__pyx_n_u_defaultWlaGijStorage;
static PyObject *__pyx_n_s_default_formal_solver;
static PyObject *__pyx_n_s_default_interp;
static PyObject *__pyx_n_s_default_scheme;
static PyObject *__pyx_n_s_default_scheme_name;
static PyObject *__pyx_n_s_default_voigt_callback;
static PyObject *__pyx_n_u_depthData;
static PyObject *__pyx_n_s_detailed;
static PyObject *__pyx_n_u_detailed;
static PyObject *__pyx_n_s_detailedAtoms;
static PyObject *__pyx_n_u_detailedAtoms;
static PyObject *__pyx_n_s_dict;
static PyObject *__pyx_n_u_dimensionSpecific;
static PyObject *__pyx_n_s_dt;
static PyObject *__pyx_n_u_dt;
static PyObject *__pyx_n_s_dtype;
static PyObject *__pyx_n_s_dtype_is_object;
static PyObject *__pyx_n_s_element;
static PyObject *__pyx_n_s_encode;
static PyObject *__pyx_n_s_enum;
static PyObject *__pyx_n_s_enumerate;
static PyObject *__pyx_n_s_eqPops;
static PyObject *__pyx_n_u_eqPops;
static PyObject *__pyx_n_s_error;
static PyObject *__pyx_n_s_eta;
static PyObject *__pyx_n_u_eta;
static PyObject *__pyx_n_s_etaIn;
static PyObject *__pyx_kp_u_expected_one_of;
static PyObject *__pyx_n_s_extraParams;
static PyObject *__pyx_n_s_fill;
static PyObject *__pyx_n_u_fill;
static PyObject *__pyx_n_s_fillDiagonal;
static PyObject *__pyx_n_s_fixCollisionalRates;
static PyObject *__pyx_n_s_flags;
static PyObject *__pyx_n_s_float64;
static PyObject *__pyx_kp_u_for_key;
static PyObject *__pyx_kp_u_for_key_2;
static PyObject *__pyx_n_s_formalSolver;
static PyObject *__pyx_n_u_formalSolver;
static PyObject *__pyx_n_s_formal_sol;
static PyObject *__pyx_n_s_formal_sol_gamma_matrices;
static PyObject *__pyx_n_s_format;
static PyObject *__pyx_n_s_fortran;
static PyObject *__pyx_n_u_fortran;
static PyObject *__pyx_n_s_fromScratch;
static PyObject *__pyx_n_s_fsIterScheme;
static PyObject *__pyx_n_u_fsIterScheme;
static PyObject *__pyx_n_s_fsIterSchemeProperties;
static PyObject *__pyx_n_u_fsIterSchemeProperties;
static PyObject *__pyx_n_s_g;
static PyObject *__pyx_n_s_gammaB;
static PyObject *__pyx_n_u_gammaB;
static PyObject *__pyx_kp_u_gammaB_2;
static PyObject *__pyx_n_s_get_fs_iter_libs;
static PyObject *__pyx_n_s_get_fs_iter_scheme_properties;
static PyObject *__pyx_n_s_getstate;
static PyObject *__pyx_kp_u_got;
static PyObject *__pyx_kp_s_got_differing_extents_in_dimensi;
static PyObject *__pyx_n_u_h2Pops;
static PyObject *__pyx_n_u_hMinusPops;
static PyObject *__pyx_n_s_hOnly;
static PyObject *__pyx_n_u_hPops;
static PyObject *__pyx_n_s_hprd;
static PyObject *__pyx_n_u_hprd;
static PyObject *__pyx_n_s_i;
static PyObject *__pyx_n_s_iLevel;
static PyObject *__pyx_n_s_id;
static PyObject *__pyx_n_s_import;
static PyObject *__pyx_n_s_inConstructor;
static PyObject *__pyx_n_s_index;
static PyObject *__pyx_n_s_indexVector;
static PyObject *__pyx_n_s_init;
static PyObject *__pyx_n_s_initSol;
static PyObject *__pyx_n_u_initSol;
static PyObject *__pyx_n_s_int64;
static PyObject *__pyx_n_s_int8;
static PyObject *__pyx_n_s_interp;
static PyObject *__pyx_n_s_interpFn;
static PyObject *__pyx_n_u_interpFn;
static PyObject *__pyx_n_s_interp_J_from_state;
static PyObject *__pyx_n_u_interp_linear_2d;
static PyObject *__pyx_kp_u_is_not_of_a_supported_type_got;
static PyObject *__pyx_n_s_items;
static PyObject *__pyx_n_s_itemsize;
static PyObject *__pyx_kp_s_itemsize_0_for_cython_array;
static PyObject *__pyx_n_s_iteration_update;
static PyObject *__pyx_n_s_j;
static PyObject *__pyx_n_s_jLevel;
static PyObject *__pyx_n_u_kwargs;
static PyObject *__pyx_n_s_la;
static PyObject *__pyx_n_s_lambda0;
static PyObject *__pyx_n_s_lambdaEdge;
static PyObject *__pyx_n_s_lambdaIterate;
static PyObject *__pyx_n_s_levels;
static PyObject *__pyx_n_s_lightweaver_LwCompiled;
static PyObject *__pyx_n_s_lightweaver_config;
static PyObject *__pyx_n_s_lightweaver_constants;
static PyObject *__pyx_n_s_lines;
static PyObject *__pyx_n_s_load_fns_from_path;
static PyObject *__pyx_n_s_load_pops_rates_prd_from_state;
static PyObject *__pyx_n_s_load_rates_prd_from_state;
static PyObject *__pyx_n_s_lte_pops;
static PyObject *__pyx_n_s_lwConfig;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_maxIter;
static PyObject *__pyx_kp_u_max_supported_is_4_got;
static PyObject *__pyx_n_s_memview;
static PyObject *__pyx_n_s_minLambda;
static PyObject *__pyx_n_s_mode;
static PyObject *__pyx_n_u_modelPops;
static PyObject *__pyx_n_s_mu;
static PyObject *__pyx_n_s_mus;
static PyObject *__pyx_n_s_mux;
static PyObject *__pyx_n_u_mux;
static PyObject *__pyx_n_s_muy;
static PyObject *__pyx_n_u_muy;
static PyObject *__pyx_n_s_muz;
static PyObject *__pyx_n_u_muz;
static PyObject *__pyx_n_s_n;
static PyObject *__pyx_n_u_n;
static PyObject *__pyx_n_s_nHTot;
static PyObject *__pyx_n_u_nHTot;
static PyObject *__pyx_n_u_nPrev;
static PyObject *__pyx_n_s_nStar;
static PyObject *__pyx_n_u_nStar;
static PyObject *__pyx_n_s_nTotal;
static PyObject *__pyx_n_u_nTotal;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_u_name;
static PyObject *__pyx_n_s_name_2;
static PyObject *__pyx_n_s_ndim;
static PyObject *__pyx_n_s_ne;
static PyObject *__pyx_n_u_ne;
static PyObject *__pyx_n_s_new;
static PyObject *__pyx_n_s_ngAccelerated;
static PyObject *__pyx_n_s_ngOptions;
static PyObject *__pyx_n_u_ngOptions;
static PyObject *__pyx_n_s_ngUpdate;
static PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
static PyObject *__pyx_n_s_np;
static PyObject *__pyx_n_s_nrHOnly;
static PyObject *__pyx_n_u_nrHOnly;
static PyObject *__pyx_n_s_nr_post_update;
static PyObject *__pyx_n_s_numpy;
static PyObject *__pyx_kp_u_numpy_core_multiarray_failed_to;
static PyObject *__pyx_kp_u_numpy_core_umath_failed_to_impor;
static PyObject *__pyx_n_s_obj;
static PyObject *__pyx_n_u_ohPops;
static PyObject *__pyx_n_s_ones;
static PyObject *__pyx_kp_u_only_contiguous_float64_and_int6;
static PyObject *__pyx_n_s_os;
static PyObject *__pyx_n_s_pack;
static PyObject *__pyx_n_s_params;
static PyObject *__pyx_n_s_passiveAtoms;
static PyObject *__pyx_n_s_phi;
static PyObject *__pyx_n_u_phi;
static PyObject *__pyx_n_s_phiQ;
static PyObject *__pyx_n_u_phiQ;
static PyObject *__pyx_n_u_phiU;
static PyObject *__pyx_n_u_phiV;
static PyObject *__pyx_n_s_pi;
static PyObject *__pyx_n_s_pickle;
static PyObject *__pyx_n_s_polarisable;
static PyObject *__pyx_n_s_polarised;
static PyObject *__pyx_n_u_polarised;
static PyObject *__pyx_n_s_pops;
static PyObject *__pyx_n_s_popsOnly;
static PyObject *__pyx_n_s_prd_redistribute;
static PyObject *__pyx_n_s_preserveProfiles;
static PyObject *__pyx_n_s_prevInitSol;
static PyObject *__pyx_n_s_prevSpect;
static PyObject *__pyx_n_s_prevState;
static PyObject *__pyx_n_s_prevTimePops;
static PyObject *__pyx_n_s_print;
static PyObject *__pyx_n_s_printUpdate;
static PyObject *__pyx_n_s_provider;
static PyObject *__pyx_n_u_provider;
static PyObject *__pyx_n_u_psiQ;
static PyObject *__pyx_n_u_psiU;
static PyObject *__pyx_n_u_psiV;
static PyObject *__pyx_n_u_pyAtmos;
static PyObject *__pyx_n_s_pyx_PickleError;
static PyObject *__pyx_n_s_pyx_checksum;
static PyObject *__pyx_n_s_pyx_getbuffer;
static PyObject *__pyx_n_s_pyx_result;
static PyObject *__pyx_n_s_pyx_state;
static PyObject *__pyx_n_s_pyx_type;
static PyObject *__pyx_n_s_pyx_unpickle_BackgroundProvide;
static PyObject *__pyx_n_s_pyx_unpickle_Enum;
static PyObject *__pyx_n_s_pyx_unpickle_RayleighScatterer;
static PyObject *__pyx_n_s_pyx_vtable;
static PyObject *__pyx_n_s_quadSymm;
static PyObject *__pyx_n_u_quadSymm;
static PyObject *__pyx_n_s_quiet;
static PyObject *__pyx_n_s_radSet;
static PyObject *__pyx_n_u_radSet;
static PyObject *__pyx_n_s_radiativeRates;
static PyObject *__pyx_n_s_range;
static PyObject *__pyx_n_s_rayleigh_scattering;
static PyObject *__pyx_n_s_rays;
static PyObject *__pyx_n_s_recompute;
static PyObject *__pyx_n_s_recompute_gII;
static PyObject *__pyx_n_s_reconstruct;
static PyObject *__pyx_n_s_redIdx;
static PyObject *__pyx_n_s_reduce;
static PyObject *__pyx_n_s_reduce_cython;
static PyObject *__pyx_n_s_reduce_ex;
static PyObject *__pyx_n_s_refinePrd;
static PyObject *__pyx_n_s_rel_diff_ng_accelerate;
static PyObject *__pyx_n_s_rel_diff_pops;
static PyObject *__pyx_n_u_respectsFormalSolver;
static PyObject *__pyx_n_s_returnCtx;
static PyObject *__pyx_n_u_rhoPrd;
static PyObject *__pyx_n_s_s;
static PyObject *__pyx_n_s_sca;
static PyObject *__pyx_n_u_sca;
static PyObject *__pyx_n_s_scaIn;
static PyObject *__pyx_n_s_scatter;
static PyObject *__pyx_n_s_scheme_properties;
static PyObject *__pyx_n_s_sd;
static PyObject *__pyx_kp_s_self_atmos_cannot_be_converted_t;
static PyObject *__pyx_kp_s_self_atom_cannot_be_converted_to;
static PyObject *__pyx_kp_s_self_background_cannot_be_conver;
static PyObject *__pyx_kp_s_self_ctx_cannot_be_converted_to;
static PyObject *__pyx_kp_s_self_depthData_cannot_be_convert;
static PyObject *__pyx_kp_s_self_manager_cannot_be_converted;
static PyObject *__pyx_kp_s_self_spect_cannot_be_converted_t;
static PyObject *__pyx_kp_s_self_trans_cannot_be_converted_t;
static PyObject *__pyx_kp_s_self_zc_cannot_be_converted_to_a;
static PyObject *__pyx_n_s_set_formal_solver;
static PyObject *__pyx_n_s_set_fs_iter_scheme;
static PyObject *__pyx_n_s_set_interp_fn;
static PyObject *__pyx_n_s_set_pops_escape_probability;
static PyObject *__pyx_n_s_setstate;
static PyObject *__pyx_n_s_setstate_cython;
static PyObject *__pyx_n_s_setup_stokes;
static PyObject *__pyx_n_s_setup_wavelength;
static PyObject *__pyx_n_s_shape;
static PyObject *__pyx_n_u_shape;
static PyObject *__pyx_n_s_shift;
static PyObject *__pyx_n_u_sin2chi;
static PyObject *__pyx_n_s_single_stokes_fs;
static PyObject *__pyx_n_s_size;
static PyObject *__pyx_n_s_spect;
static PyObject *__pyx_n_u_spect;
static PyObject *__pyx_n_s_sqrt;
static PyObject *__pyx_n_s_squeeze;
static PyObject *__pyx_n_s_stage;
static PyObject *__pyx_n_u_stages;
static PyObject *__pyx_n_s_start;
static PyObject *__pyx_n_s_stat_equil;
static PyObject *__pyx_n_s_state_dict;
static PyObject *__pyx_n_s_staticmethod;
static PyObject *__pyx_n_s_step;
static PyObject *__pyx_n_s_stokes;
static PyObject *__pyx_n_s_stop;
static PyObject *__pyx_n_s_strength;
static PyObject *__pyx_kp_s_strided_and_direct;
static PyObject *__pyx_kp_s_strided_and_direct_or_indirect;
static PyObject *__pyx_kp_s_strided_and_indirect;
static PyObject *__pyx_kp_s_stringsource;
static PyObject *__pyx_n_s_struct;
static PyObject *__pyx_n_s_structure;
static PyObject *__pyx_n_s_subset_configuration;
static PyObject *__pyx_n_s_sum;
static PyObject *__pyx_n_s_super;
static PyObject *__pyx_n_s_temperature;
static PyObject *__pyx_n_u_temperature;
static PyObject *__pyx_n_s_test;
static PyObject *__pyx_n_s_time;
static PyObject *__pyx_n_s_timeDependentData;
static PyObject *__pyx_n_s_time_dep_restore_prev_pops;
static PyObject *__pyx_n_s_time_dep_update;
static PyObject *__pyx_n_s_toObs;
static PyObject *__pyx_n_s_tol;
static PyObject *__pyx_n_s_trans;
static PyObject *__pyx_n_u_trans;
static PyObject *__pyx_n_s_transId;
static PyObject *__pyx_n_s_transModel;
static PyObject *__pyx_n_u_transModel;
static PyObject *__pyx_n_s_transWavelengths;
static PyObject *__pyx_n_s_transitions;
static PyObject *__pyx_n_s_type;
static PyObject *__pyx_n_u_type;
static PyObject *__pyx_kp_s_unable_to_allocate_array_data;
static PyObject *__pyx_kp_s_unable_to_allocate_shape_and_str;
static PyObject *__pyx_n_s_unpack;
static PyObject *__pyx_n_s_upOnly;
static PyObject *__pyx_n_s_update;
static PyObject *__pyx_n_s_updateBcs;
static PyObject *__pyx_n_s_updateJ;
static PyObject *__pyx_n_s_updateTotals;
static PyObject *__pyx_n_s_update_background;
static PyObject *__pyx_n_s_update_deps;
static PyObject *__pyx_n_s_update_hprd_coeffs;
static PyObject *__pyx_n_s_update_lte_atoms_Hmin_pops;
static PyObject *__pyx_n_s_update_projections;
static PyObject *__pyx_n_s_update_threads;
static PyObject *__pyx_n_s_updatedJ;
static PyObject *__pyx_n_s_updatedJPrd;
static PyObject *__pyx_n_s_updatedNe;
static PyObject *__pyx_n_s_updatedPops;
static PyObject *__pyx_n_s_updatedRho;
static PyObject *__pyx_n_s_utils;
static PyObject *__pyx_n_s_vBroad;
static PyObject *__pyx_n_u_vBroad;
static PyObject *__pyx_n_s_vBroadView;
static PyObject *__pyx_n_s_val;
static PyObject *__pyx_n_s_vlos;
static PyObject *__pyx_n_s_vlosMu;
static PyObject *__pyx_n_u_vlosMu;
static PyObject *__pyx_kp_u_vlos_is_ambiguous_when_Ndim_1_us;
static PyObject *__pyx_n_s_vturb;
static PyObject *__pyx_n_u_vturb;
static PyObject *__pyx_n_s_vx;
static PyObject *__pyx_n_u_vx;
static PyObject *__pyx_n_s_vy;
static PyObject *__pyx_n_u_vy;
static PyObject *__pyx_n_s_vz;
static PyObject *__pyx_n_u_vz;
static PyObject *__pyx_n_s_warn;
static PyObject *__pyx_n_s_warnings;
static PyObject *__pyx_n_s_wavelength;
static PyObject *__pyx_n_u_wavelength;
static PyObject *__pyx_n_s_wavelengthSubset;
static PyObject *__pyx_n_s_wavelengths;
static PyObject *__pyx_n_s_weno4;
static PyObject *__pyx_n_s_wmu;
static PyObject *__pyx_n_u_wmu;
static PyObject *__pyx_n_u_wphi;
static PyObject *__pyx_n_s_x;
static PyObject *__pyx_n_u_x;
static PyObject *__pyx_n_s_xLowerBc;
static PyObject *__pyx_n_u_xLowerBc;
static PyObject *__pyx_n_s_xUpperBc;
static PyObject *__pyx_n_u_xUpperBc;
static PyObject *__pyx_n_s_y;
static PyObject *__pyx_n_u_y;
static PyObject *__pyx_n_s_yLowerBc;
static PyObject *__pyx_n_u_yLowerBc;
static PyObject *__pyx_n_s_yUpperBc;
static PyObject *__pyx_n_u_yUpperBc;
static PyObject *__pyx_n_s_z;
static PyObject *__pyx_n_u_z;
static PyObject *__pyx_n_s_zLowerBc;
static PyObject *__pyx_n_u_zLowerBc;
static PyObject *__pyx_n_s_zUpperBc;
static PyObject *__pyx_n_u_zUpperBc;
static PyObject *__pyx_n_s_zeeman_components;
static PyObject *__pyx_n_s_zeros;
static int __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self, PyObject *__pyx_v_Nlambda, PyObject *__pyx_v_Nmu, PyObject *__pyx_v_Nspace); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_2__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self, PyObject *__pyx_v_s); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4fill___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4fill_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_3chi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_3eta___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_1I___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_BC_to_enum(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_bc); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, PyObject *__pyx_v_atmos, PyObject *__pyx_v_Nwavelengths); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2configure_bcs(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, PyObject *__pyx_v_atmos); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4compute_bcs(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_spect); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6update_projections(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_8__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_10__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6Nspace___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5Nrays___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4Ndim___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Nx___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Ny___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Nz___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1x___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1y___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1z___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6height___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_11temperature___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2ne___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vx___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vy___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vz___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4vlos___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6vlosMu___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1B___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6gammaB___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4chiB___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_8cosGamma___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7cos2chi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7sin2chi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5vturb___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5nHTot___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3muz___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3muy___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3mux___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3wmu___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_12__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_14__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider___init__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_eqPops, CYTHON_UNUSED PyObject *__pyx_v_radSet, CYTHON_UNUSED PyObject *__pyx_v_wavelength); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_2compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chi, PyObject *__pyx_v_eta, PyObject *__pyx_v_sca); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_4__reduce_cython__(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_6__setstate_cython__(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground___init__(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_radSet, PyObject *__pyx_v_wavelength); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_2compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chiIn, PyObject *__pyx_v_etaIn, PyObject *__pyx_v_scaIn); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_4rayleigh_scattering(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, __Pyx_memviewslice __pyx_v_sca); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_6bf_opacities(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, __Pyx_memviewslice __pyx_v_chi, __Pyx_memviewslice __pyx_v_eta); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_8__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_10__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_12_reconstruct(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_14__reduce__(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_14FastBackground___init__(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_radSet, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_Nthreads); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_2compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chiIn, PyObject *__pyx_v_etaIn, PyObject *__pyx_v_scaIn); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_4__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_6__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_8_reconstruct(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_10__reduce__(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwBackground___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, PyObject *__pyx_v_atmosphere, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_radSet, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_provider); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_2update_background(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_4__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_6__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3chi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3eta___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3sca___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer___init__(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self, PyObject *__pyx_v_atmos, PyObject *__pyx_v_atom, PyObject *__pyx_v_pops); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_2scatter(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self, __pyx_t_8CmoArray_f64 __pyx_v_wavelength, __Pyx_memviewslice __pyx_v_sca); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_4__reduce_cython__(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_6__setstate_cython__(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_trans, PyObject *__pyx_v_compAtom, PyObject *__pyx_v_atmos, PyObject *__pyx_v_spect); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_2__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6load_rates_prd_from_state(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_prevState, PyObject *__pyx_v_preserveProfiles); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_11compute_phi_default_voigt_callback(PyObject *__pyx_self, __Pyx_memviewslice __pyx_v_aDamp, __Pyx_memviewslice __pyx_v_vBroad); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_8compute_phi(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10compute_polarised_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_12recompute_gII(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_14uv(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, int __pyx_v_la, int __pyx_v_mu, bool __pyx_v_toObs, __Pyx_memviewslice __pyx_v_Uji, __Pyx_memviewslice __pyx_v_Vij, __Pyx_memviewslice __pyx_v_Vji); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6jLevel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6iLevel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_1j___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_1i___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Aji___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Bji___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Bij___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5Nblue___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_7lambda0___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4wphi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3phi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiQ___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiU___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiV___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiQ___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiU___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiV___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Rij___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Rji___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6rhoPrd___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5alpha___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10wavelength___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6active___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6Qelast___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5aDamp___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_11polarisable___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4type___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *__pyx_v_self, PyObject *__pyx_v_z); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_atom, PyObject *__pyx_v_atmos, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_spect, PyObject *__pyx_v_background, PyObject *__pyx_v_detailed, PyObject *__pyx_v_initSol, PyObject *__pyx_v_ngOptions, PyObject *__pyx_v_conserveCharge, PyObject *__pyx_v_fsIterSchemeProperties); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_2__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_4__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6load_pops_rates_prd_from_state(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_prevState, PyObject *__pyx_v_popsOnly, PyObject *__pyx_v_preserveProfiles); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_8compute_collisions(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_fillDiagonal); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_10set_pops_escape_probability(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a, struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_bg, PyObject *__pyx_v_conserveCharge, int __pyx_v_Niter); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_12setup_wavelength(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, int __pyx_v_la); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_14compute_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_polarised); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6Nlevel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6Ntrans___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6vBroad___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5Gamma___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_1C___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6nTotal___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_1n___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5nStar___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6stages___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5trans___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_7element___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_Nrays, PyObject *__pyx_v_Nspace, PyObject *__pyx_v_Noutgoing); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_2setup_stokes(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_4__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_6__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_8interp_J_from_state(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self, PyObject *__pyx_v_prevSpect); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_10wavelength___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_1I___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_1J___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_3Quv___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_atmos, PyObject *__pyx_v_spect, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_ngOptions, PyObject *__pyx_v_initSol, PyObject *__pyx_v_conserveCharge, PyObject *__pyx_v_nrHOnly, PyObject *__pyx_v_hprd, PyObject *__pyx_v_crswCallback, PyObject *__pyx_v_Nthreads, PyObject *__pyx_v_backgroundProvider, PyObject *__pyx_v_formalSolver, PyObject *__pyx_v_interpFn, PyObject *__pyx_v_fsIterScheme); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_2__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_4__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_6set_formal_solver(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_formalSolver, PyObject *__pyx_v_inConstructor); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_8set_interp_fn(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_interpFn); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_10set_fs_iter_scheme(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_fsIterScheme); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_12get_fs_iter_scheme_properties(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_fsIterScheme); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_8Nthreads___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8Nthreads_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_4hprd___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_14update_threads(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_16compute_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_polarised); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_18formal_sol_gamma_matrices(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_fixCollisionalRates, PyObject *__pyx_v_lambdaIterate, PyObject *__pyx_v_printUpdate, PyObject *__pyx_v_extraParams); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_20formal_sol(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_upOnly, PyObject *__pyx_v_extraParams); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_22update_deps(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_temperature, PyObject *__pyx_v_ne, PyObject *__pyx_v_vturb, PyObject *__pyx_v_vlos, PyObject *__pyx_v_B, PyObject *__pyx_v_background, PyObject *__pyx_v_hprd, PyObject *__pyx_v_quiet); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_24rel_diff_pops(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_printUpdate); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_26rel_diff_ng_accelerate(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_printUpdate); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_28time_dep_update(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, __pyx_t_8CmoArray_f64 __pyx_v_dt, PyObject *__pyx_v_prevTimePops, PyObject *__pyx_v_ngUpdate, PyObject *__pyx_v_printUpdate, int __pyx_v_chunkSize, PyObject *__pyx_v_extraParams); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_30time_dep_restore_prev_pops(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_prevTimePops); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_32clear_ng(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_34stat_equil(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_printUpdate, int __pyx_v_chunkSize, PyObject *__pyx_v_extraParams); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_36_nr_post_update_impl(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_atoms, PyObject *__pyx_v_dC, __Pyx_memviewslice __pyx_v_backgroundNe, PyObject *__pyx_v_timeDependentData, CYTHON_UNUSED int __pyx_v_chunkSize, PyObject *__pyx_v_extraParams); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_38update_projections(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_40setup_stokes(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_recompute); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_42single_stokes_fs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_recompute, PyObject *__pyx_v_updateJ, PyObject *__pyx_v_upOnly, PyObject *__pyx_v_extraParams); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_44prd_redistribute(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_v_maxIter, __pyx_t_8CmoArray_f64 __pyx_v_tol, PyObject *__pyx_v_printUpdate, PyObject *__pyx_v_extraParams); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_46update_hprd_coeffs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_11activeAtoms___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_13detailedAtoms___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_5spect___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_5atmos___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_10background___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_9depthData___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_48state_dict(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_50construct_from_state_dict_with(PyObject *__pyx_v_sd, PyObject *__pyx_v_atmos, PyObject *__pyx_v_spect, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_ngOptions, PyObject *__pyx_v_initSol, PyObject *__pyx_v_conserveCharge, PyObject *__pyx_v_nrHOnly, PyObject *__pyx_v_hprd, PyObject *__pyx_v_preserveProfiles, PyObject *__pyx_v_fromScratch, PyObject *__pyx_v_backgroundProvider); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_52compute_rays(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_wavelengths, PyObject *__pyx_v_mus, PyObject *__pyx_v_stokes, PyObject *__pyx_v_updateBcs, PyObject *__pyx_v_upOnly, PyObject *__pyx_v_returnCtx, PyObject *__pyx_v_refinePrd, PyObject *__pyx_v_squeeze); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_14conserveCharge___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_7nrHOnly___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_54__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_56__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_2load_fs_from_path(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, PyObject *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_4default_formal_solver(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, PyObject *__pyx_v_Ndim); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_2load_interp_fn_from_path(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, PyObject *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_4default_interp(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, PyObject *__pyx_v_Ndim); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_2load_fns_from_path(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, PyObject *__pyx_v_path); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_4scheme_properties(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_6default_scheme(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_8default_scheme_name(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_2__pyx_unpickle_BackgroundProvider(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_11lightweaver_10LwCompiled_4__pyx_unpickle_RayleighScatterer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_shape, Py_ssize_t __pyx_v_itemsize, PyObject *__pyx_v_format, PyObject *__pyx_v_mode, int __pyx_v_allocate_buffer); /* proto */
static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__(struct __pyx_array_obj *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_array___pyx_pf_15View_dot_MemoryView_5array_4__dealloc__(struct __pyx_array_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_5array_7memview___get__(struct __pyx_array_obj *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_array___pyx_pf_15View_dot_MemoryView_5array_6__len__(struct __pyx_array_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getattr__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_attr); /* proto */
static PyObject *__pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__getitem__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_item); /* proto */
static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array_12__setitem__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf___pyx_array___reduce_cython__(CYTHON_UNUSED struct __pyx_array_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf___pyx_array_2__setstate_cython__(CYTHON_UNUSED struct __pyx_array_obj *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum___init__(struct __pyx_MemviewEnum_obj *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum_2__repr__(struct __pyx_MemviewEnum_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf___pyx_MemviewEnum___reduce_cython__(struct __pyx_MemviewEnum_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf___pyx_MemviewEnum_2__setstate_cython__(struct __pyx_MemviewEnum_obj *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_v_flags, int __pyx_v_dtype_is_object); /* proto */
static void __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index); /* proto */
static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value); /* proto */
static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__(struct __pyx_memoryview_obj *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4base___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4ndim___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_8itemsize___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static Py_ssize_t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_10__len__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran(struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf___pyx_memoryview___reduce_cython__(CYTHON_UNUSED struct __pyx_memoryview_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf___pyx_memoryview_2__setstate_cython__(CYTHON_UNUSED struct __pyx_memoryview_obj *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static void __pyx_memoryviewslice___pyx_pf_15View_dot_MemoryView_16_memoryviewslice___dealloc__(struct __pyx_memoryviewslice_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView_16_memoryviewslice_4base___get__(struct __pyx_memoryviewslice_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf___pyx_memoryviewslice___reduce_cython__(CYTHON_UNUSED struct __pyx_memoryviewslice_obj *__pyx_v_self); /* proto */
static PyObject *__pyx_pf___pyx_memoryviewslice_2__setstate_cython__(CYTHON_UNUSED struct __pyx_memoryviewslice_obj *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_15View_dot_MemoryView___pyx_unpickle_Enum(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwDepthData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwAtmosphere(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_BackgroundProvider(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_BasicBackground(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_FastBackground(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwBackground(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_RayleighScatterer(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwTransition(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwZeemanComponents(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwAtom(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwSpectrum(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwContext(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwFormalSolverManager(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwInterpFnManager(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwFsIterationManager(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_array(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_Enum(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_memoryview(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new__memoryviewslice(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_float_0_0;
static PyObject *__pyx_float_1_0;
static PyObject *__pyx_float_2_0;
static PyObject *__pyx_float_3_0;
static PyObject *__pyx_float_4_0;
static PyObject *__pyx_float_8_0;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_12259659;
static PyObject *__pyx_int_112105877;
static PyObject *__pyx_int_120250498;
static PyObject *__pyx_int_134145825;
static PyObject *__pyx_int_136983863;
static PyObject *__pyx_int_184977713;
static PyObject *__pyx_int_222419149;
static PyObject *__pyx_int_228825662;
static PyObject *__pyx_int_238750788;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_tuple__2;
static PyObject *__pyx_tuple__3;
static PyObject *__pyx_tuple__4;
static PyObject *__pyx_tuple__7;
static PyObject *__pyx_tuple__8;
static PyObject *__pyx_tuple__9;
static PyObject *__pyx_slice__12;
static PyObject *__pyx_slice__33;
static PyObject *__pyx_tuple__10;
static PyObject *__pyx_tuple__11;
static PyObject *__pyx_tuple__13;
static PyObject *__pyx_tuple__15;
static PyObject *__pyx_tuple__16;
static PyObject *__pyx_tuple__17;
static PyObject *__pyx_tuple__18;
static PyObject *__pyx_tuple__19;
static PyObject *__pyx_tuple__20;
static PyObject *__pyx_tuple__21;
static PyObject *__pyx_tuple__22;
static PyObject *__pyx_tuple__23;
static PyObject *__pyx_tuple__24;
static PyObject *__pyx_tuple__25;
static PyObject *__pyx_tuple__26;
static PyObject *__pyx_tuple__27;
static PyObject *__pyx_tuple__28;
static PyObject *__pyx_tuple__29;
static PyObject *__pyx_tuple__30;
static PyObject *__pyx_tuple__31;
static PyObject *__pyx_tuple__32;
static PyObject *__pyx_tuple__34;
static PyObject *__pyx_tuple__35;
static PyObject *__pyx_tuple__36;
static PyObject *__pyx_tuple__37;
static PyObject *__pyx_tuple__38;
static PyObject *__pyx_tuple__39;
static PyObject *__pyx_tuple__40;
static PyObject *__pyx_tuple__41;
static PyObject *__pyx_tuple__42;
static PyObject *__pyx_tuple__43;
static PyObject *__pyx_tuple__44;
static PyObject *__pyx_tuple__45;
static PyObject *__pyx_tuple__46;
static PyObject *__pyx_tuple__47;
static PyObject *__pyx_tuple__48;
static PyObject *__pyx_tuple__49;
static PyObject *__pyx_tuple__50;
static PyObject *__pyx_tuple__51;
static PyObject *__pyx_tuple__52;
static PyObject *__pyx_tuple__53;
static PyObject *__pyx_tuple__54;
static PyObject *__pyx_tuple__55;
static PyObject *__pyx_tuple__56;
static PyObject *__pyx_tuple__57;
static PyObject *__pyx_tuple__58;
static PyObject *__pyx_tuple__59;
static PyObject *__pyx_tuple__60;
static PyObject *__pyx_tuple__61;
static PyObject *__pyx_tuple__62;
static PyObject *__pyx_tuple__63;
static PyObject *__pyx_tuple__64;
static PyObject *__pyx_tuple__65;
static PyObject *__pyx_tuple__66;
static PyObject *__pyx_tuple__68;
static PyObject *__pyx_tuple__70;
static PyObject *__pyx_tuple__72;
static PyObject *__pyx_tuple__74;
static PyObject *__pyx_tuple__76;
static PyObject *__pyx_tuple__77;
static PyObject *__pyx_tuple__78;
static PyObject *__pyx_tuple__79;
static PyObject *__pyx_tuple__80;
static PyObject *__pyx_tuple__81;
static PyObject *__pyx_codeobj__14;
static PyObject *__pyx_codeobj__69;
static PyObject *__pyx_codeobj__71;
static PyObject *__pyx_codeobj__73;
static PyObject *__pyx_codeobj__75;
static PyObject *__pyx_codeobj__82;
/* Late includes */

/* "Source/CmoArrayHelper.pyx":4
 * from CmoArrayHelper cimport f64
 * 
 * cdef F64View f64_view(f64[::1] memview) except +:             # <<<<<<<<<<<<<<
 *     if memview.shape[0] == 0:
 *         return F64View()
 */

static __pyx_t_8CmoArray_F64View __pyx_f_11lightweaver_10LwCompiled_f64_view(__Pyx_memviewslice __pyx_v_memview) {
  __pyx_t_8CmoArray_F64View __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("f64_view", 0);

  /* "Source/CmoArrayHelper.pyx":5
 * 
 * cdef F64View f64_view(f64[::1] memview) except +:
 *     if memview.shape[0] == 0:             # <<<<<<<<<<<<<<
 *         return F64View()
 *     return F64View(&memview[0], memview.shape[0])
 */
  __pyx_t_1 = (((__pyx_v_memview.shape[0]) == 0) != 0);
  if (__pyx_t_1) {

    /* "Source/CmoArrayHelper.pyx":6
 * cdef F64View f64_view(f64[::1] memview) except +:
 *     if memview.shape[0] == 0:
 *         return F64View()             # <<<<<<<<<<<<<<
 *     return F64View(&memview[0], memview.shape[0])
 * 
 */
    __pyx_r = __pyx_t_8CmoArray_F64View();
    goto __pyx_L0;

    /* "Source/CmoArrayHelper.pyx":5
 * 
 * cdef F64View f64_view(f64[::1] memview) except +:
 *     if memview.shape[0] == 0:             # <<<<<<<<<<<<<<
 *         return F64View()
 *     return F64View(&memview[0], memview.shape[0])
 */
  }

  /* "Source/CmoArrayHelper.pyx":7
 *     if memview.shape[0] == 0:
 *         return F64View()
 *     return F64View(&memview[0], memview.shape[0])             # <<<<<<<<<<<<<<
 * 
 * cdef F64View2D f64_view_2(f64[:, ::1] memview) except +:
 */
  __pyx_t_2 = 0;
  __pyx_t_3 = -1;
  if (__pyx_t_2 < 0) {
    __pyx_t_2 += __pyx_v_memview.shape[0];
    if (unlikely(__pyx_t_2 < 0)) __pyx_t_3 = 0;
  } else if (unlikely(__pyx_t_2 >= __pyx_v_memview.shape[0])) __pyx_t_3 = 0;
  if (unlikely(__pyx_t_3 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_3);
    __PYX_ERR(1, 7, __pyx_L1_error)
  }
  __pyx_r = __pyx_t_8CmoArray_F64View((&(*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_memview.data) + __pyx_t_2)) )))), (__pyx_v_memview.shape[0]));
  goto __pyx_L0;

  /* "Source/CmoArrayHelper.pyx":4
 * from CmoArrayHelper cimport f64
 * 
 * cdef F64View f64_view(f64[::1] memview) except +:             # <<<<<<<<<<<<<<
 *     if memview.shape[0] == 0:
 *         return F64View()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.f64_view", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/CmoArrayHelper.pyx":9
 *     return F64View(&memview[0], memview.shape[0])
 * 
 * cdef F64View2D f64_view_2(f64[:, ::1] memview) except +:             # <<<<<<<<<<<<<<
 *     return F64View2D(&memview[0,0], memview.shape[0], memview.shape[1])
 * 
 */

static __pyx_t_8CmoArray_F64View2D __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__Pyx_memviewslice __pyx_v_memview) {
  __pyx_t_8CmoArray_F64View2D __pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("f64_view_2", 0);

  /* "Source/CmoArrayHelper.pyx":10
 * 
 * cdef F64View2D f64_view_2(f64[:, ::1] memview) except +:
 *     return F64View2D(&memview[0,0], memview.shape[0], memview.shape[1])             # <<<<<<<<<<<<<<
 * 
 * cdef F64View3D f64_view_3(f64[:, :, ::1] memview) except +:
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_v_memview.shape[0];
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_3 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_v_memview.shape[0])) __pyx_t_3 = 0;
  if (__pyx_t_2 < 0) {
    __pyx_t_2 += __pyx_v_memview.shape[1];
    if (unlikely(__pyx_t_2 < 0)) __pyx_t_3 = 1;
  } else if (unlikely(__pyx_t_2 >= __pyx_v_memview.shape[1])) __pyx_t_3 = 1;
  if (unlikely(__pyx_t_3 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_3);
    __PYX_ERR(1, 10, __pyx_L1_error)
  }
  __pyx_r = __pyx_t_8CmoArray_F64View2D((&(*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_memview.data + __pyx_t_1 * __pyx_v_memview.strides[0]) )) + __pyx_t_2)) )))), (__pyx_v_memview.shape[0]), (__pyx_v_memview.shape[1]));
  goto __pyx_L0;

  /* "Source/CmoArrayHelper.pyx":9
 *     return F64View(&memview[0], memview.shape[0])
 * 
 * cdef F64View2D f64_view_2(f64[:, ::1] memview) except +:             # <<<<<<<<<<<<<<
 *     return F64View2D(&memview[0,0], memview.shape[0], memview.shape[1])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.f64_view_2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/CmoArrayHelper.pyx":12
 *     return F64View2D(&memview[0,0], memview.shape[0], memview.shape[1])
 * 
 * cdef F64View3D f64_view_3(f64[:, :, ::1] memview) except +:             # <<<<<<<<<<<<<<
 *     return F64View3D(&memview[0,0,0], memview.shape[0], memview.shape[1], memview.shape[2])
 * 
 */

static __pyx_t_8CmoArray_F64View3D __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__Pyx_memviewslice __pyx_v_memview) {
  __pyx_t_8CmoArray_F64View3D __pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("f64_view_3", 0);

  /* "Source/CmoArrayHelper.pyx":13
 * 
 * cdef F64View3D f64_view_3(f64[:, :, ::1] memview) except +:
 *     return F64View3D(&memview[0,0,0], memview.shape[0], memview.shape[1], memview.shape[2])             # <<<<<<<<<<<<<<
 * 
 * cdef F64View4D f64_view_4(f64[:, :, :, ::1] memview) except +:
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_v_memview.shape[0];
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_v_memview.shape[0])) __pyx_t_4 = 0;
  if (__pyx_t_2 < 0) {
    __pyx_t_2 += __pyx_v_memview.shape[1];
    if (unlikely(__pyx_t_2 < 0)) __pyx_t_4 = 1;
  } else if (unlikely(__pyx_t_2 >= __pyx_v_memview.shape[1])) __pyx_t_4 = 1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_v_memview.shape[2];
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_4 = 2;
  } else if (unlikely(__pyx_t_3 >= __pyx_v_memview.shape[2])) __pyx_t_4 = 2;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_r = __pyx_t_8CmoArray_F64View3D((&(*((__pyx_t_8CmoArray_f64 *) ( /* dim=2 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ (( /* dim=0 */ (__pyx_v_memview.data + __pyx_t_1 * __pyx_v_memview.strides[0]) ) + __pyx_t_2 * __pyx_v_memview.strides[1]) )) + __pyx_t_3)) )))), (__pyx_v_memview.shape[0]), (__pyx_v_memview.shape[1]), (__pyx_v_memview.shape[2]));
  goto __pyx_L0;

  /* "Source/CmoArrayHelper.pyx":12
 *     return F64View2D(&memview[0,0], memview.shape[0], memview.shape[1])
 * 
 * cdef F64View3D f64_view_3(f64[:, :, ::1] memview) except +:             # <<<<<<<<<<<<<<
 *     return F64View3D(&memview[0,0,0], memview.shape[0], memview.shape[1], memview.shape[2])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.f64_view_3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/CmoArrayHelper.pyx":15
 *     return F64View3D(&memview[0,0,0], memview.shape[0], memview.shape[1], memview.shape[2])
 * 
 * cdef F64View4D f64_view_4(f64[:, :, :, ::1] memview) except +:             # <<<<<<<<<<<<<<
 *     return F64View4D(&memview[0,0,0,0], memview.shape[0], memview.shape[1], memview.shape[2], memview.shape[3])
 */

static __pyx_t_8CmoArray_F64View4D __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__Pyx_memviewslice __pyx_v_memview) {
  __pyx_t_8CmoArray_F64View4D __pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("f64_view_4", 0);

  /* "Source/CmoArrayHelper.pyx":16
 * 
 * cdef F64View4D f64_view_4(f64[:, :, :, ::1] memview) except +:
 *     return F64View4D(&memview[0,0,0,0], memview.shape[0], memview.shape[1], memview.shape[2], memview.shape[3])             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_1 < 0) {
    __pyx_t_1 += __pyx_v_memview.shape[0];
    if (unlikely(__pyx_t_1 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_1 >= __pyx_v_memview.shape[0])) __pyx_t_5 = 0;
  if (__pyx_t_2 < 0) {
    __pyx_t_2 += __pyx_v_memview.shape[1];
    if (unlikely(__pyx_t_2 < 0)) __pyx_t_5 = 1;
  } else if (unlikely(__pyx_t_2 >= __pyx_v_memview.shape[1])) __pyx_t_5 = 1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_v_memview.shape[2];
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_5 = 2;
  } else if (unlikely(__pyx_t_3 >= __pyx_v_memview.shape[2])) __pyx_t_5 = 2;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_v_memview.shape[3];
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_5 = 3;
  } else if (unlikely(__pyx_t_4 >= __pyx_v_memview.shape[3])) __pyx_t_5 = 3;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(1, 16, __pyx_L1_error)
  }
  __pyx_r = __pyx_t_8CmoArray_F64View4D((&(*((__pyx_t_8CmoArray_f64 *) ( /* dim=3 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=2 */ (( /* dim=1 */ (( /* dim=0 */ (__pyx_v_memview.data + __pyx_t_1 * __pyx_v_memview.strides[0]) ) + __pyx_t_2 * __pyx_v_memview.strides[1]) ) + __pyx_t_3 * __pyx_v_memview.strides[2]) )) + __pyx_t_4)) )))), (__pyx_v_memview.shape[0]), (__pyx_v_memview.shape[1]), (__pyx_v_memview.shape[2]), (__pyx_v_memview.shape[3]));
  goto __pyx_L0;

  /* "Source/CmoArrayHelper.pyx":15
 *     return F64View3D(&memview[0,0,0], memview.shape[0], memview.shape[1], memview.shape[2])
 * 
 * cdef F64View4D f64_view_4(f64[:, :, :, ::1] memview) except +:             # <<<<<<<<<<<<<<
 *     return F64View4D(&memview[0,0,0,0], memview.shape[0], memview.shape[1], memview.shape[2], memview.shape[3])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.f64_view_4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":358
 *                                          const Atmosphere& atmos)
 * 
 * cdef ExtraParams dict2ExtraParams(dict d):             # <<<<<<<<<<<<<<
 *     """
 *     Convert a dict to an ExtraParams object accepted by Lightweaver's cpp API.
 */

static ExtraParams __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(PyObject *__pyx_v_d) {
  PyObject *__pyx_v_supportedTypes = NULL;
  ExtraParams __pyx_v_result;
  char *__pyx_v_kPtr;
  char *__pyx_v_vPtr;
  bool __pyx_v_bVal;
  __pyx_t_11lightweaver_10LwCompiled_i64 __pyx_v_iVal;
  __pyx_t_8CmoArray_f64 __pyx_v_fVal;
  __Pyx_memviewslice __pyx_v_f64View1 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_f64View2 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_f64View3 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_f64View4 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_i64View1 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_i64View2 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_i64View3 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_i64View4 = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_val = NULL;
  ExtraParams __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_UCS4 __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  char *__pyx_t_13;
  bool __pyx_t_14;
  __pyx_t_11lightweaver_10LwCompiled_i64 __pyx_t_15;
  __pyx_t_8CmoArray_f64 __pyx_t_16;
  __Pyx_memviewslice __pyx_t_17 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_18;
  __Pyx_memviewslice __pyx_t_19 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_20;
  __Pyx_memviewslice __pyx_t_21 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View3D __pyx_t_22;
  __Pyx_memviewslice __pyx_t_23 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View4D __pyx_t_24;
  __Pyx_memviewslice __pyx_t_25 = { 0, 0, { 0 }, { 0 }, { 0 } };
  Py_ssize_t __pyx_t_26;
  __Pyx_memviewslice __pyx_t_27 = { 0, 0, { 0 }, { 0 }, { 0 } };
  Py_ssize_t __pyx_t_28;
  __Pyx_memviewslice __pyx_t_29 = { 0, 0, { 0 }, { 0 }, { 0 } };
  Py_ssize_t __pyx_t_30;
  __Pyx_memviewslice __pyx_t_31 = { 0, 0, { 0 }, { 0 }, { 0 } };
  Py_ssize_t __pyx_t_32;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("dict2ExtraParams", 0);

  /* "Source/LwMiddleLayer.pyx":374
 *     """
 *     # NOTE(cmo): I do not like this function at all
 *     supportedTypes = (str, bool, int, float, np.ndarray)             # <<<<<<<<<<<<<<
 *     cdef ExtraParams result = ExtraParams()
 * 
 */
  __pyx_t_1 = PyTuple_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)(&PyUnicode_Type)));
  __Pyx_GIVEREF(((PyObject *)(&PyUnicode_Type)));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)(&PyUnicode_Type)));
  __Pyx_INCREF(((PyObject*)&PyBool_Type));
  __Pyx_GIVEREF(((PyObject*)&PyBool_Type));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject*)&PyBool_Type));
  __Pyx_INCREF(((PyObject *)(&PyInt_Type)));
  __Pyx_GIVEREF(((PyObject *)(&PyInt_Type)));
  PyTuple_SET_ITEM(__pyx_t_1, 2, ((PyObject *)(&PyInt_Type)));
  __Pyx_INCREF(((PyObject *)(&PyFloat_Type)));
  __Pyx_GIVEREF(((PyObject *)(&PyFloat_Type)));
  PyTuple_SET_ITEM(__pyx_t_1, 3, ((PyObject *)(&PyFloat_Type)));
  __Pyx_INCREF(((PyObject *)__pyx_ptype_5numpy_ndarray));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_5numpy_ndarray));
  PyTuple_SET_ITEM(__pyx_t_1, 4, ((PyObject *)__pyx_ptype_5numpy_ndarray));
  __pyx_v_supportedTypes = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":375
 *     # NOTE(cmo): I do not like this function at all
 *     supportedTypes = (str, bool, int, float, np.ndarray)
 *     cdef ExtraParams result = ExtraParams()             # <<<<<<<<<<<<<<
 * 
 *     cdef char* kPtr
 */
  __pyx_v_result = ExtraParams();

  /* "Source/LwMiddleLayer.pyx":391
 *     cdef i64[:,:,:,::1] i64View4
 * 
 *     for k, v in d.items():             # <<<<<<<<<<<<<<
 *         if type(k) is not str:
 *             raise TypeError(("Dictionary keys for ExtraParams must be str, "
 */
  __pyx_t_2 = 0;
  if (unlikely(__pyx_v_d == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
    __PYX_ERR(0, 391, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_d, 1, __pyx_n_s_items, (&__pyx_t_3), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 391, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_1);
  __pyx_t_1 = __pyx_t_5;
  __pyx_t_5 = 0;
  while (1) {
    __pyx_t_7 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_2, &__pyx_t_5, &__pyx_t_6, NULL, __pyx_t_4);
    if (unlikely(__pyx_t_7 == 0)) break;
    if (unlikely(__pyx_t_7 == -1)) __PYX_ERR(0, 391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF_SET(__pyx_v_k, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":392
 * 
 *     for k, v in d.items():
 *         if type(k) is not str:             # <<<<<<<<<<<<<<
 *             raise TypeError(("Dictionary keys for ExtraParams must be str, "
 *                             f"got '{type(k)}'' for key {k}"))
 */
    __pyx_t_8 = (((PyObject *)Py_TYPE(__pyx_v_k)) != ((PyObject *)(&PyUnicode_Type)));
    __pyx_t_9 = (__pyx_t_8 != 0);
    if (unlikely(__pyx_t_9)) {

      /* "Source/LwMiddleLayer.pyx":393
 *     for k, v in d.items():
 *         if type(k) is not str:
 *             raise TypeError(("Dictionary keys for ExtraParams must be str, "             # <<<<<<<<<<<<<<
 *                             f"got '{type(k)}'' for key {k}"))
 * 
 */
      __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 393, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = 0;
      __pyx_t_11 = 127;
      __Pyx_INCREF(__pyx_kp_u_Dictionary_keys_for_ExtraParams);
      __pyx_t_10 += 50;
      __Pyx_GIVEREF(__pyx_kp_u_Dictionary_keys_for_ExtraParams);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_Dictionary_keys_for_ExtraParams);

      /* "Source/LwMiddleLayer.pyx":394
 *         if type(k) is not str:
 *             raise TypeError(("Dictionary keys for ExtraParams must be str, "
 *                             f"got '{type(k)}'' for key {k}"))             # <<<<<<<<<<<<<<
 * 
 *         if type(v) not in supportedTypes:
 */
      __pyx_t_5 = __Pyx_PyObject_FormatSimple(((PyObject *)Py_TYPE(__pyx_v_k)), __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 394, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_11;
      __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_INCREF(__pyx_kp_u_for_key);
      __pyx_t_10 += 11;
      __Pyx_GIVEREF(__pyx_kp_u_for_key);
      PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_for_key);
      __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_v_k, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 394, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_11;
      __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "Source/LwMiddleLayer.pyx":393
 *     for k, v in d.items():
 *         if type(k) is not str:
 *             raise TypeError(("Dictionary keys for ExtraParams must be str, "             # <<<<<<<<<<<<<<
 *                             f"got '{type(k)}'' for key {k}"))
 * 
 */
      __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_6, 4, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 393, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 393, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(0, 393, __pyx_L1_error)

      /* "Source/LwMiddleLayer.pyx":392
 * 
 *     for k, v in d.items():
 *         if type(k) is not str:             # <<<<<<<<<<<<<<
 *             raise TypeError(("Dictionary keys for ExtraParams must be str, "
 *                             f"got '{type(k)}'' for key {k}"))
 */
    }

    /* "Source/LwMiddleLayer.pyx":396
 *                             f"got '{type(k)}'' for key {k}"))
 * 
 *         if type(v) not in supportedTypes:             # <<<<<<<<<<<<<<
 *             raise TypeError((f"Value for key {k} is not of a supported type, "
 *                              f"got {type(v)}, expected one of {supportedTypes}"))
 */
    __pyx_t_9 = (__Pyx_PySequence_ContainsTF(((PyObject *)Py_TYPE(__pyx_v_v)), __pyx_v_supportedTypes, Py_NE)); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 396, __pyx_L1_error)
    __pyx_t_8 = (__pyx_t_9 != 0);
    if (unlikely(__pyx_t_8)) {

      /* "Source/LwMiddleLayer.pyx":397
 * 
 *         if type(v) not in supportedTypes:
 *             raise TypeError((f"Value for key {k} is not of a supported type, "             # <<<<<<<<<<<<<<
 *                              f"got {type(v)}, expected one of {supportedTypes}"))
 * 
 */
      __pyx_t_6 = PyTuple_New(6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = 0;
      __pyx_t_11 = 127;
      __Pyx_INCREF(__pyx_kp_u_Value_for_key);
      __pyx_t_10 += 14;
      __Pyx_GIVEREF(__pyx_kp_u_Value_for_key);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_Value_for_key);
      __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_v_k, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_11;
      __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_INCREF(__pyx_kp_u_is_not_of_a_supported_type_got);
      __pyx_t_10 += 33;
      __Pyx_GIVEREF(__pyx_kp_u_is_not_of_a_supported_type_got);
      PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_is_not_of_a_supported_type_got);

      /* "Source/LwMiddleLayer.pyx":398
 *         if type(v) not in supportedTypes:
 *             raise TypeError((f"Value for key {k} is not of a supported type, "
 *                              f"got {type(v)}, expected one of {supportedTypes}"))             # <<<<<<<<<<<<<<
 * 
 *         # NOTE(cmo): Whilst this will be passed through const std::string&, it's
 */
      __pyx_t_5 = __Pyx_PyObject_FormatSimple(((PyObject *)Py_TYPE(__pyx_v_v)), __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 398, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_11;
      __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_INCREF(__pyx_kp_u_expected_one_of);
      __pyx_t_10 += 18;
      __Pyx_GIVEREF(__pyx_kp_u_expected_one_of);
      PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_kp_u_expected_one_of);
      __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_v_supportedTypes, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 398, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_11;
      __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 5, __pyx_t_5);
      __pyx_t_5 = 0;

      /* "Source/LwMiddleLayer.pyx":397
 * 
 *         if type(v) not in supportedTypes:
 *             raise TypeError((f"Value for key {k} is not of a supported type, "             # <<<<<<<<<<<<<<
 *                              f"got {type(v)}, expected one of {supportedTypes}"))
 * 
 */
      __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_6, 6, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 397, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(0, 397, __pyx_L1_error)

      /* "Source/LwMiddleLayer.pyx":396
 *                             f"got '{type(k)}'' for key {k}"))
 * 
 *         if type(v) not in supportedTypes:             # <<<<<<<<<<<<<<
 *             raise TypeError((f"Value for key {k} is not of a supported type, "
 *                              f"got {type(v)}, expected one of {supportedTypes}"))
 */
    }

    /* "Source/LwMiddleLayer.pyx":404
 *         # done by the end of the insert call. Also strings can no longer be COW
 *         # in C++11+.
 *         key = k.encode('UTF-8')             # <<<<<<<<<<<<<<
 *         kPtr = key
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_k, __pyx_n_s_encode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 404, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_12 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_6 = (__pyx_t_12) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_12, __pyx_kp_u_UTF_8) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_u_UTF_8);
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 404, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_6);
    __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":405
 *         # in C++11+.
 *         key = k.encode('UTF-8')
 *         kPtr = key             # <<<<<<<<<<<<<<
 * 
 *         if type(v) is str:
 */
    __pyx_t_13 = __Pyx_PyObject_AsWritableString(__pyx_v_key); if (unlikely((!__pyx_t_13) && PyErr_Occurred())) __PYX_ERR(0, 405, __pyx_L1_error)
    __pyx_v_kPtr = __pyx_t_13;

    /* "Source/LwMiddleLayer.pyx":407
 *         kPtr = key
 * 
 *         if type(v) is str:             # <<<<<<<<<<<<<<
 *             val = v.encode('UTF-8')
 *             vPtr = val
 */
    __pyx_t_8 = (((PyObject *)Py_TYPE(__pyx_v_v)) == ((PyObject *)(&PyUnicode_Type)));
    __pyx_t_9 = (__pyx_t_8 != 0);
    if (__pyx_t_9) {

      /* "Source/LwMiddleLayer.pyx":408
 * 
 *         if type(v) is str:
 *             val = v.encode('UTF-8')             # <<<<<<<<<<<<<<
 *             vPtr = val
 *             result.insert(kPtr, vPtr)
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_encode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 408, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_12 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_12)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_12);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_6 = (__pyx_t_12) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_12, __pyx_kp_u_UTF_8) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_kp_u_UTF_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 408, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_val, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "Source/LwMiddleLayer.pyx":409
 *         if type(v) is str:
 *             val = v.encode('UTF-8')
 *             vPtr = val             # <<<<<<<<<<<<<<
 *             result.insert(kPtr, vPtr)
 *         elif type(v) is bool:
 */
      __pyx_t_13 = __Pyx_PyObject_AsWritableString(__pyx_v_val); if (unlikely((!__pyx_t_13) && PyErr_Occurred())) __PYX_ERR(0, 409, __pyx_L1_error)
      __pyx_v_vPtr = __pyx_t_13;

      /* "Source/LwMiddleLayer.pyx":410
 *             val = v.encode('UTF-8')
 *             vPtr = val
 *             result.insert(kPtr, vPtr)             # <<<<<<<<<<<<<<
 *         elif type(v) is bool:
 *             bVal = v
 */
      try {
        __pyx_v_result.insert(__pyx_v_kPtr, __pyx_v_vPtr);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 410, __pyx_L1_error)
      }

      /* "Source/LwMiddleLayer.pyx":407
 *         kPtr = key
 * 
 *         if type(v) is str:             # <<<<<<<<<<<<<<
 *             val = v.encode('UTF-8')
 *             vPtr = val
 */
      goto __pyx_L7;
    }

    /* "Source/LwMiddleLayer.pyx":411
 *             vPtr = val
 *             result.insert(kPtr, vPtr)
 *         elif type(v) is bool:             # <<<<<<<<<<<<<<
 *             bVal = v
 *             result.insert(kPtr, bVal)
 */
    __pyx_t_9 = (((PyObject *)Py_TYPE(__pyx_v_v)) == ((PyObject*)&PyBool_Type));
    __pyx_t_8 = (__pyx_t_9 != 0);
    if (__pyx_t_8) {

      /* "Source/LwMiddleLayer.pyx":412
 *             result.insert(kPtr, vPtr)
 *         elif type(v) is bool:
 *             bVal = v             # <<<<<<<<<<<<<<
 *             result.insert(kPtr, bVal)
 *         elif type(v) is int:
 */
      __pyx_t_14 = __Pyx_PyObject_IsTrue(__pyx_v_v); if (unlikely((__pyx_t_14 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 412, __pyx_L1_error)
      __pyx_v_bVal = __pyx_t_14;

      /* "Source/LwMiddleLayer.pyx":413
 *         elif type(v) is bool:
 *             bVal = v
 *             result.insert(kPtr, bVal)             # <<<<<<<<<<<<<<
 *         elif type(v) is int:
 *             iVal = v
 */
      try {
        __pyx_v_result.insert(__pyx_v_kPtr, __pyx_v_bVal);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 413, __pyx_L1_error)
      }

      /* "Source/LwMiddleLayer.pyx":411
 *             vPtr = val
 *             result.insert(kPtr, vPtr)
 *         elif type(v) is bool:             # <<<<<<<<<<<<<<
 *             bVal = v
 *             result.insert(kPtr, bVal)
 */
      goto __pyx_L7;
    }

    /* "Source/LwMiddleLayer.pyx":414
 *             bVal = v
 *             result.insert(kPtr, bVal)
 *         elif type(v) is int:             # <<<<<<<<<<<<<<
 *             iVal = v
 *             result.insert(kPtr, iVal)
 */
    __pyx_t_8 = (((PyObject *)Py_TYPE(__pyx_v_v)) == ((PyObject *)(&PyInt_Type)));
    __pyx_t_9 = (__pyx_t_8 != 0);
    if (__pyx_t_9) {

      /* "Source/LwMiddleLayer.pyx":415
 *             result.insert(kPtr, bVal)
 *         elif type(v) is int:
 *             iVal = v             # <<<<<<<<<<<<<<
 *             result.insert(kPtr, iVal)
 *         elif type(v) is float:
 */
      __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_v_v); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 415, __pyx_L1_error)
      __pyx_v_iVal = __pyx_t_15;

      /* "Source/LwMiddleLayer.pyx":416
 *         elif type(v) is int:
 *             iVal = v
 *             result.insert(kPtr, iVal)             # <<<<<<<<<<<<<<
 *         elif type(v) is float:
 *             fVal = v
 */
      try {
        __pyx_v_result.insert(__pyx_v_kPtr, __pyx_v_iVal);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 416, __pyx_L1_error)
      }

      /* "Source/LwMiddleLayer.pyx":414
 *             bVal = v
 *             result.insert(kPtr, bVal)
 *         elif type(v) is int:             # <<<<<<<<<<<<<<
 *             iVal = v
 *             result.insert(kPtr, iVal)
 */
      goto __pyx_L7;
    }

    /* "Source/LwMiddleLayer.pyx":417
 *             iVal = v
 *             result.insert(kPtr, iVal)
 *         elif type(v) is float:             # <<<<<<<<<<<<<<
 *             fVal = v
 *             result.insert(kPtr, fVal)
 */
    __pyx_t_9 = (((PyObject *)Py_TYPE(__pyx_v_v)) == ((PyObject *)(&PyFloat_Type)));
    __pyx_t_8 = (__pyx_t_9 != 0);
    if (__pyx_t_8) {

      /* "Source/LwMiddleLayer.pyx":418
 *             result.insert(kPtr, iVal)
 *         elif type(v) is float:
 *             fVal = v             # <<<<<<<<<<<<<<
 *             result.insert(kPtr, fVal)
 *         elif type(v) is np.ndarray:
 */
      __pyx_t_16 = __pyx_PyFloat_AsDouble(__pyx_v_v); if (unlikely((__pyx_t_16 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 418, __pyx_L1_error)
      __pyx_v_fVal = __pyx_t_16;

      /* "Source/LwMiddleLayer.pyx":419
 *         elif type(v) is float:
 *             fVal = v
 *             result.insert(kPtr, fVal)             # <<<<<<<<<<<<<<
 *         elif type(v) is np.ndarray:
 *             if v.ndim > 4:
 */
      try {
        __pyx_v_result.insert(__pyx_v_kPtr, __pyx_v_fVal);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 419, __pyx_L1_error)
      }

      /* "Source/LwMiddleLayer.pyx":417
 *             iVal = v
 *             result.insert(kPtr, iVal)
 *         elif type(v) is float:             # <<<<<<<<<<<<<<
 *             fVal = v
 *             result.insert(kPtr, fVal)
 */
      goto __pyx_L7;
    }

    /* "Source/LwMiddleLayer.pyx":420
 *             fVal = v
 *             result.insert(kPtr, fVal)
 *         elif type(v) is np.ndarray:             # <<<<<<<<<<<<<<
 *             if v.ndim > 4:
 *                 raise ValueError(("Unsupported number of dimensions on value "
 */
    __pyx_t_8 = (((PyObject *)Py_TYPE(__pyx_v_v)) == ((PyObject *)__pyx_ptype_5numpy_ndarray));
    __pyx_t_9 = (__pyx_t_8 != 0);
    if (__pyx_t_9) {

      /* "Source/LwMiddleLayer.pyx":421
 *             result.insert(kPtr, fVal)
 *         elif type(v) is np.ndarray:
 *             if v.ndim > 4:             # <<<<<<<<<<<<<<
 *                 raise ValueError(("Unsupported number of dimensions on value "
 *                                 f"associated with {k}, max supported is 4, "
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 421, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = PyObject_RichCompare(__pyx_t_6, __pyx_int_4, Py_GT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 421, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 421, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(__pyx_t_9)) {

        /* "Source/LwMiddleLayer.pyx":422
 *         elif type(v) is np.ndarray:
 *             if v.ndim > 4:
 *                 raise ValueError(("Unsupported number of dimensions on value "             # <<<<<<<<<<<<<<
 *                                 f"associated with {k}, max supported is 4, "
 *                                 f"got {v.ndim}"))
 */
        __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_10 = 0;
        __pyx_t_11 = 127;
        __Pyx_INCREF(__pyx_kp_u_Unsupported_number_of_dimensions);
        __pyx_t_10 += 58;
        __Pyx_GIVEREF(__pyx_kp_u_Unsupported_number_of_dimensions);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_Unsupported_number_of_dimensions);

        /* "Source/LwMiddleLayer.pyx":423
 *             if v.ndim > 4:
 *                 raise ValueError(("Unsupported number of dimensions on value "
 *                                 f"associated with {k}, max supported is 4, "             # <<<<<<<<<<<<<<
 *                                 f"got {v.ndim}"))
 *             if v.dtype == np.float64:
 */
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_v_k, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 423, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
        __pyx_t_6 = 0;
        __Pyx_INCREF(__pyx_kp_u_max_supported_is_4_got);
        __pyx_t_10 += 26;
        __Pyx_GIVEREF(__pyx_kp_u_max_supported_is_4_got);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u_max_supported_is_4_got);

        /* "Source/LwMiddleLayer.pyx":424
 *                 raise ValueError(("Unsupported number of dimensions on value "
 *                                 f"associated with {k}, max supported is 4, "
 *                                 f"got {v.ndim}"))             # <<<<<<<<<<<<<<
 *             if v.dtype == np.float64:
 *                 if v.ndim == 1:
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 424, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_12 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 424, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_12);
        __pyx_t_12 = 0;

        /* "Source/LwMiddleLayer.pyx":422
 *         elif type(v) is np.ndarray:
 *             if v.ndim > 4:
 *                 raise ValueError(("Unsupported number of dimensions on value "             # <<<<<<<<<<<<<<
 *                                 f"associated with {k}, max supported is 4, "
 *                                 f"got {v.ndim}"))
 */
        __pyx_t_12 = __Pyx_PyUnicode_Join(__pyx_t_5, 4, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 422, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __PYX_ERR(0, 422, __pyx_L1_error)

        /* "Source/LwMiddleLayer.pyx":421
 *             result.insert(kPtr, fVal)
 *         elif type(v) is np.ndarray:
 *             if v.ndim > 4:             # <<<<<<<<<<<<<<
 *                 raise ValueError(("Unsupported number of dimensions on value "
 *                                 f"associated with {k}, max supported is 4, "
 */
      }

      /* "Source/LwMiddleLayer.pyx":425
 *                                 f"associated with {k}, max supported is 4, "
 *                                 f"got {v.ndim}"))
 *             if v.dtype == np.float64:             # <<<<<<<<<<<<<<
 *                 if v.ndim == 1:
 *                     f64View1 = v
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_dtype); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 425, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 425, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_float64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 425, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = PyObject_RichCompare(__pyx_t_5, __pyx_t_6, Py_EQ); __Pyx_XGOTREF(__pyx_t_12); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 425, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_12); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 425, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (__pyx_t_9) {

        /* "Source/LwMiddleLayer.pyx":426
 *                                 f"got {v.ndim}"))
 *             if v.dtype == np.float64:
 *                 if v.ndim == 1:             # <<<<<<<<<<<<<<
 *                     f64View1 = v
 *                     result.insert(kPtr, f64_view(f64View1))
 */
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 426, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_6 = __Pyx_PyInt_EqObjC(__pyx_t_12, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 426, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 426, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_9) {

          /* "Source/LwMiddleLayer.pyx":427
 *             if v.dtype == np.float64:
 *                 if v.ndim == 1:
 *                     f64View1 = v             # <<<<<<<<<<<<<<
 *                     result.insert(kPtr, f64_view(f64View1))
 *                 elif v.ndim == 2:
 */
          __pyx_t_17 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_v, PyBUF_WRITABLE); if (unlikely(!__pyx_t_17.memview)) __PYX_ERR(0, 427, __pyx_L1_error)
          __PYX_XDEC_MEMVIEW(&__pyx_v_f64View1, 1);
          __pyx_v_f64View1 = __pyx_t_17;
          __pyx_t_17.memview = NULL;
          __pyx_t_17.data = NULL;

          /* "Source/LwMiddleLayer.pyx":428
 *                 if v.ndim == 1:
 *                     f64View1 = v
 *                     result.insert(kPtr, f64_view(f64View1))             # <<<<<<<<<<<<<<
 *                 elif v.ndim == 2:
 *                     f64View2 = v
 */
          try {
            __pyx_t_18 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_f64View1);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 428, __pyx_L1_error)
          }
          try {
            __pyx_v_result.insert(__pyx_v_kPtr, __pyx_t_18);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 428, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":426
 *                                 f"got {v.ndim}"))
 *             if v.dtype == np.float64:
 *                 if v.ndim == 1:             # <<<<<<<<<<<<<<
 *                     f64View1 = v
 *                     result.insert(kPtr, f64_view(f64View1))
 */
          goto __pyx_L10;
        }

        /* "Source/LwMiddleLayer.pyx":429
 *                     f64View1 = v
 *                     result.insert(kPtr, f64_view(f64View1))
 *                 elif v.ndim == 2:             # <<<<<<<<<<<<<<
 *                     f64View2 = v
 *                     result.insert(kPtr, f64_view_2(f64View2))
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 429, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_12 = __Pyx_PyInt_EqObjC(__pyx_t_6, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 429, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_12); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 429, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (__pyx_t_9) {

          /* "Source/LwMiddleLayer.pyx":430
 *                     result.insert(kPtr, f64_view(f64View1))
 *                 elif v.ndim == 2:
 *                     f64View2 = v             # <<<<<<<<<<<<<<
 *                     result.insert(kPtr, f64_view_2(f64View2))
 *                 elif v.ndim == 3:
 */
          __pyx_t_19 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_v, PyBUF_WRITABLE); if (unlikely(!__pyx_t_19.memview)) __PYX_ERR(0, 430, __pyx_L1_error)
          __PYX_XDEC_MEMVIEW(&__pyx_v_f64View2, 1);
          __pyx_v_f64View2 = __pyx_t_19;
          __pyx_t_19.memview = NULL;
          __pyx_t_19.data = NULL;

          /* "Source/LwMiddleLayer.pyx":431
 *                 elif v.ndim == 2:
 *                     f64View2 = v
 *                     result.insert(kPtr, f64_view_2(f64View2))             # <<<<<<<<<<<<<<
 *                 elif v.ndim == 3:
 *                     f64View3 = v
 */
          try {
            __pyx_t_20 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_f64View2);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 431, __pyx_L1_error)
          }
          try {
            __pyx_v_result.insert(__pyx_v_kPtr, __pyx_t_20);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 431, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":429
 *                     f64View1 = v
 *                     result.insert(kPtr, f64_view(f64View1))
 *                 elif v.ndim == 2:             # <<<<<<<<<<<<<<
 *                     f64View2 = v
 *                     result.insert(kPtr, f64_view_2(f64View2))
 */
          goto __pyx_L10;
        }

        /* "Source/LwMiddleLayer.pyx":432
 *                     f64View2 = v
 *                     result.insert(kPtr, f64_view_2(f64View2))
 *                 elif v.ndim == 3:             # <<<<<<<<<<<<<<
 *                     f64View3 = v
 *                     result.insert(kPtr, f64_view_3(f64View3))
 */
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 432, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_6 = __Pyx_PyInt_EqObjC(__pyx_t_12, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 432, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 432, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_9) {

          /* "Source/LwMiddleLayer.pyx":433
 *                     result.insert(kPtr, f64_view_2(f64View2))
 *                 elif v.ndim == 3:
 *                     f64View3 = v             # <<<<<<<<<<<<<<
 *                     result.insert(kPtr, f64_view_3(f64View3))
 *                 elif v.ndim == 4:
 */
          __pyx_t_21 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_v, PyBUF_WRITABLE); if (unlikely(!__pyx_t_21.memview)) __PYX_ERR(0, 433, __pyx_L1_error)
          __PYX_XDEC_MEMVIEW(&__pyx_v_f64View3, 1);
          __pyx_v_f64View3 = __pyx_t_21;
          __pyx_t_21.memview = NULL;
          __pyx_t_21.data = NULL;

          /* "Source/LwMiddleLayer.pyx":434
 *                 elif v.ndim == 3:
 *                     f64View3 = v
 *                     result.insert(kPtr, f64_view_3(f64View3))             # <<<<<<<<<<<<<<
 *                 elif v.ndim == 4:
 *                     f64View4 = v
 */
          try {
            __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_f64View3);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 434, __pyx_L1_error)
          }
          try {
            __pyx_v_result.insert(__pyx_v_kPtr, __pyx_t_22);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 434, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":432
 *                     f64View2 = v
 *                     result.insert(kPtr, f64_view_2(f64View2))
 *                 elif v.ndim == 3:             # <<<<<<<<<<<<<<
 *                     f64View3 = v
 *                     result.insert(kPtr, f64_view_3(f64View3))
 */
          goto __pyx_L10;
        }

        /* "Source/LwMiddleLayer.pyx":435
 *                     f64View3 = v
 *                     result.insert(kPtr, f64_view_3(f64View3))
 *                 elif v.ndim == 4:             # <<<<<<<<<<<<<<
 *                     f64View4 = v
 *                     result.insert(kPtr, f64_view_4(f64View4))
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_12 = __Pyx_PyInt_EqObjC(__pyx_t_6, __pyx_int_4, 4, 0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_12); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 435, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (__pyx_t_9) {

          /* "Source/LwMiddleLayer.pyx":436
 *                     result.insert(kPtr, f64_view_3(f64View3))
 *                 elif v.ndim == 4:
 *                     f64View4 = v             # <<<<<<<<<<<<<<
 *                     result.insert(kPtr, f64_view_4(f64View4))
 *             elif v.dtype == np.int64:
 */
          __pyx_t_23 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_v, PyBUF_WRITABLE); if (unlikely(!__pyx_t_23.memview)) __PYX_ERR(0, 436, __pyx_L1_error)
          __PYX_XDEC_MEMVIEW(&__pyx_v_f64View4, 1);
          __pyx_v_f64View4 = __pyx_t_23;
          __pyx_t_23.memview = NULL;
          __pyx_t_23.data = NULL;

          /* "Source/LwMiddleLayer.pyx":437
 *                 elif v.ndim == 4:
 *                     f64View4 = v
 *                     result.insert(kPtr, f64_view_4(f64View4))             # <<<<<<<<<<<<<<
 *             elif v.dtype == np.int64:
 *                 if v.ndim == 1:
 */
          try {
            __pyx_t_24 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_f64View4);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 437, __pyx_L1_error)
          }
          try {
            __pyx_v_result.insert(__pyx_v_kPtr, __pyx_t_24);
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 437, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":435
 *                     f64View3 = v
 *                     result.insert(kPtr, f64_view_3(f64View3))
 *                 elif v.ndim == 4:             # <<<<<<<<<<<<<<
 *                     f64View4 = v
 *                     result.insert(kPtr, f64_view_4(f64View4))
 */
        }
        __pyx_L10:;

        /* "Source/LwMiddleLayer.pyx":425
 *                                 f"associated with {k}, max supported is 4, "
 *                                 f"got {v.ndim}"))
 *             if v.dtype == np.float64:             # <<<<<<<<<<<<<<
 *                 if v.ndim == 1:
 *                     f64View1 = v
 */
        goto __pyx_L9;
      }

      /* "Source/LwMiddleLayer.pyx":438
 *                     f64View4 = v
 *                     result.insert(kPtr, f64_view_4(f64View4))
 *             elif v.dtype == np.int64:             # <<<<<<<<<<<<<<
 *                 if v.ndim == 1:
 *                     i64View1 = v
 */
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_dtype); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 438, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 438, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_int64); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 438, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_RichCompare(__pyx_t_12, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 438, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 438, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (likely(__pyx_t_9)) {

        /* "Source/LwMiddleLayer.pyx":439
 *                     result.insert(kPtr, f64_view_4(f64View4))
 *             elif v.dtype == np.int64:
 *                 if v.ndim == 1:             # <<<<<<<<<<<<<<
 *                     i64View1 = v
 *                     result.insert(kPtr,
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 439, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyInt_EqObjC(__pyx_t_6, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 439, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 439, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_9) {

          /* "Source/LwMiddleLayer.pyx":440
 *             elif v.dtype == np.int64:
 *                 if v.ndim == 1:
 *                     i64View1 = v             # <<<<<<<<<<<<<<
 *                     result.insert(kPtr,
 *                                   Array1NonOwn[i64](&i64View1[0], i64View1.shape[0]))
 */
          __pyx_t_25 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(__pyx_v_v, PyBUF_WRITABLE); if (unlikely(!__pyx_t_25.memview)) __PYX_ERR(0, 440, __pyx_L1_error)
          __PYX_XDEC_MEMVIEW(&__pyx_v_i64View1, 1);
          __pyx_v_i64View1 = __pyx_t_25;
          __pyx_t_25.memview = NULL;
          __pyx_t_25.data = NULL;

          /* "Source/LwMiddleLayer.pyx":442
 *                     i64View1 = v
 *                     result.insert(kPtr,
 *                                   Array1NonOwn[i64](&i64View1[0], i64View1.shape[0]))             # <<<<<<<<<<<<<<
 *                 elif v.ndim == 2:
 *                     i64View2 = v
 */
          __pyx_t_26 = 0;
          __pyx_t_7 = -1;
          if (__pyx_t_26 < 0) {
            __pyx_t_26 += __pyx_v_i64View1.shape[0];
            if (unlikely(__pyx_t_26 < 0)) __pyx_t_7 = 0;
          } else if (unlikely(__pyx_t_26 >= __pyx_v_i64View1.shape[0])) __pyx_t_7 = 0;
          if (unlikely(__pyx_t_7 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_7);
            __PYX_ERR(0, 442, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":441
 *                 if v.ndim == 1:
 *                     i64View1 = v
 *                     result.insert(kPtr,             # <<<<<<<<<<<<<<
 *                                   Array1NonOwn[i64](&i64View1[0], i64View1.shape[0]))
 *                 elif v.ndim == 2:
 */
          try {
            __pyx_v_result.insert(__pyx_v_kPtr, Jasnah::Array1NonOwn<__pyx_t_11lightweaver_10LwCompiled_i64> ((&(*((__pyx_t_11lightweaver_10LwCompiled_i64 *) ( /* dim=0 */ ((char *) (((__pyx_t_11lightweaver_10LwCompiled_i64 *) __pyx_v_i64View1.data) + __pyx_t_26)) )))), (__pyx_v_i64View1.shape[0])));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 441, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":439
 *                     result.insert(kPtr, f64_view_4(f64View4))
 *             elif v.dtype == np.int64:
 *                 if v.ndim == 1:             # <<<<<<<<<<<<<<
 *                     i64View1 = v
 *                     result.insert(kPtr,
 */
          goto __pyx_L11;
        }

        /* "Source/LwMiddleLayer.pyx":443
 *                     result.insert(kPtr,
 *                                   Array1NonOwn[i64](&i64View1[0], i64View1.shape[0]))
 *                 elif v.ndim == 2:             # <<<<<<<<<<<<<<
 *                     i64View2 = v
 *                     result.insert(kPtr,
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 443, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyInt_EqObjC(__pyx_t_5, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 443, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 443, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_9) {

          /* "Source/LwMiddleLayer.pyx":444
 *                                   Array1NonOwn[i64](&i64View1[0], i64View1.shape[0]))
 *                 elif v.ndim == 2:
 *                     i64View2 = v             # <<<<<<<<<<<<<<
 *                     result.insert(kPtr,
 *                                   Array2NonOwn[i64](&i64View2[0,0],
 */
          __pyx_t_27 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(__pyx_v_v, PyBUF_WRITABLE); if (unlikely(!__pyx_t_27.memview)) __PYX_ERR(0, 444, __pyx_L1_error)
          __PYX_XDEC_MEMVIEW(&__pyx_v_i64View2, 1);
          __pyx_v_i64View2 = __pyx_t_27;
          __pyx_t_27.memview = NULL;
          __pyx_t_27.data = NULL;

          /* "Source/LwMiddleLayer.pyx":446
 *                     i64View2 = v
 *                     result.insert(kPtr,
 *                                   Array2NonOwn[i64](&i64View2[0,0],             # <<<<<<<<<<<<<<
 *                                                     i64View2.shape[0],
 *                                                     i64View2.shape[1]))
 */
          __pyx_t_26 = 0;
          __pyx_t_28 = 0;
          __pyx_t_7 = -1;
          if (__pyx_t_26 < 0) {
            __pyx_t_26 += __pyx_v_i64View2.shape[0];
            if (unlikely(__pyx_t_26 < 0)) __pyx_t_7 = 0;
          } else if (unlikely(__pyx_t_26 >= __pyx_v_i64View2.shape[0])) __pyx_t_7 = 0;
          if (__pyx_t_28 < 0) {
            __pyx_t_28 += __pyx_v_i64View2.shape[1];
            if (unlikely(__pyx_t_28 < 0)) __pyx_t_7 = 1;
          } else if (unlikely(__pyx_t_28 >= __pyx_v_i64View2.shape[1])) __pyx_t_7 = 1;
          if (unlikely(__pyx_t_7 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_7);
            __PYX_ERR(0, 446, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":445
 *                 elif v.ndim == 2:
 *                     i64View2 = v
 *                     result.insert(kPtr,             # <<<<<<<<<<<<<<
 *                                   Array2NonOwn[i64](&i64View2[0,0],
 *                                                     i64View2.shape[0],
 */
          try {
            __pyx_v_result.insert(__pyx_v_kPtr, Jasnah::Array2NonOwn<__pyx_t_11lightweaver_10LwCompiled_i64> ((&(*((__pyx_t_11lightweaver_10LwCompiled_i64 *) ( /* dim=1 */ ((char *) (((__pyx_t_11lightweaver_10LwCompiled_i64 *) ( /* dim=0 */ (__pyx_v_i64View2.data + __pyx_t_26 * __pyx_v_i64View2.strides[0]) )) + __pyx_t_28)) )))), (__pyx_v_i64View2.shape[0]), (__pyx_v_i64View2.shape[1])));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 445, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":443
 *                     result.insert(kPtr,
 *                                   Array1NonOwn[i64](&i64View1[0], i64View1.shape[0]))
 *                 elif v.ndim == 2:             # <<<<<<<<<<<<<<
 *                     i64View2 = v
 *                     result.insert(kPtr,
 */
          goto __pyx_L11;
        }

        /* "Source/LwMiddleLayer.pyx":449
 *                                                     i64View2.shape[0],
 *                                                     i64View2.shape[1]))
 *                 elif v.ndim == 3:             # <<<<<<<<<<<<<<
 *                     i64View3 = v
 *                     result.insert(kPtr,
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 449, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyInt_EqObjC(__pyx_t_6, __pyx_int_3, 3, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 449, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 449, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__pyx_t_9) {

          /* "Source/LwMiddleLayer.pyx":450
 *                                                     i64View2.shape[1]))
 *                 elif v.ndim == 3:
 *                     i64View3 = v             # <<<<<<<<<<<<<<
 *                     result.insert(kPtr,
 *                                   Array3NonOwn[i64](&i64View3[0,0,0],
 */
          __pyx_t_29 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(__pyx_v_v, PyBUF_WRITABLE); if (unlikely(!__pyx_t_29.memview)) __PYX_ERR(0, 450, __pyx_L1_error)
          __PYX_XDEC_MEMVIEW(&__pyx_v_i64View3, 1);
          __pyx_v_i64View3 = __pyx_t_29;
          __pyx_t_29.memview = NULL;
          __pyx_t_29.data = NULL;

          /* "Source/LwMiddleLayer.pyx":452
 *                     i64View3 = v
 *                     result.insert(kPtr,
 *                                   Array3NonOwn[i64](&i64View3[0,0,0],             # <<<<<<<<<<<<<<
 *                                                     i64View3.shape[0],
 *                                                     i64View3.shape[1],
 */
          __pyx_t_28 = 0;
          __pyx_t_26 = 0;
          __pyx_t_30 = 0;
          __pyx_t_7 = -1;
          if (__pyx_t_28 < 0) {
            __pyx_t_28 += __pyx_v_i64View3.shape[0];
            if (unlikely(__pyx_t_28 < 0)) __pyx_t_7 = 0;
          } else if (unlikely(__pyx_t_28 >= __pyx_v_i64View3.shape[0])) __pyx_t_7 = 0;
          if (__pyx_t_26 < 0) {
            __pyx_t_26 += __pyx_v_i64View3.shape[1];
            if (unlikely(__pyx_t_26 < 0)) __pyx_t_7 = 1;
          } else if (unlikely(__pyx_t_26 >= __pyx_v_i64View3.shape[1])) __pyx_t_7 = 1;
          if (__pyx_t_30 < 0) {
            __pyx_t_30 += __pyx_v_i64View3.shape[2];
            if (unlikely(__pyx_t_30 < 0)) __pyx_t_7 = 2;
          } else if (unlikely(__pyx_t_30 >= __pyx_v_i64View3.shape[2])) __pyx_t_7 = 2;
          if (unlikely(__pyx_t_7 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_7);
            __PYX_ERR(0, 452, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":451
 *                 elif v.ndim == 3:
 *                     i64View3 = v
 *                     result.insert(kPtr,             # <<<<<<<<<<<<<<
 *                                   Array3NonOwn[i64](&i64View3[0,0,0],
 *                                                     i64View3.shape[0],
 */
          try {
            __pyx_v_result.insert(__pyx_v_kPtr, Jasnah::Array3NonOwn<__pyx_t_11lightweaver_10LwCompiled_i64> ((&(*((__pyx_t_11lightweaver_10LwCompiled_i64 *) ( /* dim=2 */ ((char *) (((__pyx_t_11lightweaver_10LwCompiled_i64 *) ( /* dim=1 */ (( /* dim=0 */ (__pyx_v_i64View3.data + __pyx_t_28 * __pyx_v_i64View3.strides[0]) ) + __pyx_t_26 * __pyx_v_i64View3.strides[1]) )) + __pyx_t_30)) )))), (__pyx_v_i64View3.shape[0]), (__pyx_v_i64View3.shape[1]), (__pyx_v_i64View3.shape[2])));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 451, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":449
 *                                                     i64View2.shape[0],
 *                                                     i64View2.shape[1]))
 *                 elif v.ndim == 3:             # <<<<<<<<<<<<<<
 *                     i64View3 = v
 *                     result.insert(kPtr,
 */
          goto __pyx_L11;
        }

        /* "Source/LwMiddleLayer.pyx":456
 *                                                     i64View3.shape[1],
 *                                                     i64View3.shape[2]))
 *                 elif v.ndim == 4:             # <<<<<<<<<<<<<<
 *                     i64View4 = v
 *                     result.insert(kPtr,
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_ndim); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 456, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyInt_EqObjC(__pyx_t_5, __pyx_int_4, 4, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 456, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 456, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_9) {

          /* "Source/LwMiddleLayer.pyx":457
 *                                                     i64View3.shape[2]))
 *                 elif v.ndim == 4:
 *                     i64View4 = v             # <<<<<<<<<<<<<<
 *                     result.insert(kPtr,
 *                                   Array4NonOwn[i64](&i64View4[0,0,0,0],
 */
          __pyx_t_31 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(__pyx_v_v, PyBUF_WRITABLE); if (unlikely(!__pyx_t_31.memview)) __PYX_ERR(0, 457, __pyx_L1_error)
          __PYX_XDEC_MEMVIEW(&__pyx_v_i64View4, 1);
          __pyx_v_i64View4 = __pyx_t_31;
          __pyx_t_31.memview = NULL;
          __pyx_t_31.data = NULL;

          /* "Source/LwMiddleLayer.pyx":459
 *                     i64View4 = v
 *                     result.insert(kPtr,
 *                                   Array4NonOwn[i64](&i64View4[0,0,0,0],             # <<<<<<<<<<<<<<
 *                                                     i64View4.shape[0],
 *                                                     i64View4.shape[1],
 */
          __pyx_t_30 = 0;
          __pyx_t_26 = 0;
          __pyx_t_28 = 0;
          __pyx_t_32 = 0;
          __pyx_t_7 = -1;
          if (__pyx_t_30 < 0) {
            __pyx_t_30 += __pyx_v_i64View4.shape[0];
            if (unlikely(__pyx_t_30 < 0)) __pyx_t_7 = 0;
          } else if (unlikely(__pyx_t_30 >= __pyx_v_i64View4.shape[0])) __pyx_t_7 = 0;
          if (__pyx_t_26 < 0) {
            __pyx_t_26 += __pyx_v_i64View4.shape[1];
            if (unlikely(__pyx_t_26 < 0)) __pyx_t_7 = 1;
          } else if (unlikely(__pyx_t_26 >= __pyx_v_i64View4.shape[1])) __pyx_t_7 = 1;
          if (__pyx_t_28 < 0) {
            __pyx_t_28 += __pyx_v_i64View4.shape[2];
            if (unlikely(__pyx_t_28 < 0)) __pyx_t_7 = 2;
          } else if (unlikely(__pyx_t_28 >= __pyx_v_i64View4.shape[2])) __pyx_t_7 = 2;
          if (__pyx_t_32 < 0) {
            __pyx_t_32 += __pyx_v_i64View4.shape[3];
            if (unlikely(__pyx_t_32 < 0)) __pyx_t_7 = 3;
          } else if (unlikely(__pyx_t_32 >= __pyx_v_i64View4.shape[3])) __pyx_t_7 = 3;
          if (unlikely(__pyx_t_7 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_7);
            __PYX_ERR(0, 459, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":458
 *                 elif v.ndim == 4:
 *                     i64View4 = v
 *                     result.insert(kPtr,             # <<<<<<<<<<<<<<
 *                                   Array4NonOwn[i64](&i64View4[0,0,0,0],
 *                                                     i64View4.shape[0],
 */
          try {
            __pyx_v_result.insert(__pyx_v_kPtr, Jasnah::Array4NonOwn<__pyx_t_11lightweaver_10LwCompiled_i64> ((&(*((__pyx_t_11lightweaver_10LwCompiled_i64 *) ( /* dim=3 */ ((char *) (((__pyx_t_11lightweaver_10LwCompiled_i64 *) ( /* dim=2 */ (( /* dim=1 */ (( /* dim=0 */ (__pyx_v_i64View4.data + __pyx_t_30 * __pyx_v_i64View4.strides[0]) ) + __pyx_t_26 * __pyx_v_i64View4.strides[1]) ) + __pyx_t_28 * __pyx_v_i64View4.strides[2]) )) + __pyx_t_32)) )))), (__pyx_v_i64View4.shape[0]), (__pyx_v_i64View4.shape[1]), (__pyx_v_i64View4.shape[2]), (__pyx_v_i64View4.shape[3])));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 458, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":456
 *                                                     i64View3.shape[1],
 *                                                     i64View3.shape[2]))
 *                 elif v.ndim == 4:             # <<<<<<<<<<<<<<
 *                     i64View4 = v
 *                     result.insert(kPtr,
 */
        }
        __pyx_L11:;

        /* "Source/LwMiddleLayer.pyx":438
 *                     f64View4 = v
 *                     result.insert(kPtr, f64_view_4(f64View4))
 *             elif v.dtype == np.int64:             # <<<<<<<<<<<<<<
 *                 if v.ndim == 1:
 *                     i64View1 = v
 */
        goto __pyx_L9;
      }

      /* "Source/LwMiddleLayer.pyx":465
 *                                                     i64View4.shape[3]))
 *             else:
 *                 raise TypeError((f"Got array with type {v.dtype} for key {k}, ",             # <<<<<<<<<<<<<<
 *                                  "only contiguous float64 and int64 are supported."))
 *     return result
 */
      /*else*/ {
        __pyx_t_6 = PyTuple_New(5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 465, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_10 = 0;
        __pyx_t_11 = 127;
        __Pyx_INCREF(__pyx_kp_u_Got_array_with_type);
        __pyx_t_10 += 20;
        __Pyx_GIVEREF(__pyx_kp_u_Got_array_with_type);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_Got_array_with_type);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_v, __pyx_n_s_dtype); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 465, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_12 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 465, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_12);
        __pyx_t_12 = 0;
        __Pyx_INCREF(__pyx_kp_u_for_key_2);
        __pyx_t_10 += 9;
        __Pyx_GIVEREF(__pyx_kp_u_for_key_2);
        PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_for_key_2);
        __pyx_t_12 = __Pyx_PyObject_FormatSimple(__pyx_v_k, __pyx_empty_unicode); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 465, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_12);
        __pyx_t_12 = 0;
        __Pyx_INCREF(__pyx_kp_u_);
        __pyx_t_10 += 2;
        __Pyx_GIVEREF(__pyx_kp_u_);
        PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_kp_u_);
        __pyx_t_12 = __Pyx_PyUnicode_Join(__pyx_t_6, 5, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 465, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 465, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_12);
        __Pyx_INCREF(__pyx_kp_u_only_contiguous_float64_and_int6);
        __Pyx_GIVEREF(__pyx_kp_u_only_contiguous_float64_and_int6);
        PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_kp_u_only_contiguous_float64_and_int6);
        __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_6); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 465, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_Raise(__pyx_t_12, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __PYX_ERR(0, 465, __pyx_L1_error)
      }
      __pyx_L9:;

      /* "Source/LwMiddleLayer.pyx":420
 *             fVal = v
 *             result.insert(kPtr, fVal)
 *         elif type(v) is np.ndarray:             # <<<<<<<<<<<<<<
 *             if v.ndim > 4:
 *                 raise ValueError(("Unsupported number of dimensions on value "
 */
    }
    __pyx_L7:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":467
 *                 raise TypeError((f"Got array with type {v.dtype} for key {k}, ",
 *                                  "only contiguous float64 and int64 are supported."))
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef class LwDepthData:
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":358
 *                                          const Atmosphere& atmos)
 * 
 * cdef ExtraParams dict2ExtraParams(dict d):             # <<<<<<<<<<<<<<
 *     """
 *     Convert a dict to an ExtraParams object accepted by Lightweaver's cpp API.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_12);
  __PYX_XDEC_MEMVIEW(&__pyx_t_17, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_19, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_21, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_23, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_25, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_27, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_29, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_31, 1);
  __Pyx_WriteUnraisable("lightweaver.LwCompiled.dict2ExtraParams", __pyx_clineno, __pyx_lineno, __pyx_filename, 1, 0);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_supportedTypes);
  __PYX_XDEC_MEMVIEW(&__pyx_v_f64View1, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_f64View2, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_f64View3, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_f64View4, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_i64View1, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_i64View2, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_i64View3, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_i64View4, 1);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_val);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":482
 *     cdef f64[:,:,:,::1] I
 * 
 *     def __init__(self, Nlambda, Nmu, Nspace):             # <<<<<<<<<<<<<<
 *         self.shape = (Nlambda, Nmu, 2, Nspace)
 *         self.depthData.fill = 0
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_Nlambda = 0;
  PyObject *__pyx_v_Nmu = 0;
  PyObject *__pyx_v_Nspace = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_Nlambda,&__pyx_n_s_Nmu,&__pyx_n_s_Nspace,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Nlambda)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Nmu)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 482, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Nspace)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 482, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 482, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_Nlambda = values[0];
    __pyx_v_Nmu = values[1];
    __pyx_v_Nspace = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 482, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self), __pyx_v_Nlambda, __pyx_v_Nmu, __pyx_v_Nspace);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self, PyObject *__pyx_v_Nlambda, PyObject *__pyx_v_Nmu, PyObject *__pyx_v_Nspace) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":483
 * 
 *     def __init__(self, Nlambda, Nmu, Nspace):
 *         self.shape = (Nlambda, Nmu, 2, Nspace)             # <<<<<<<<<<<<<<
 *         self.depthData.fill = 0
 * 
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_Nlambda);
  __Pyx_GIVEREF(__pyx_v_Nlambda);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_Nlambda);
  __Pyx_INCREF(__pyx_v_Nmu);
  __Pyx_GIVEREF(__pyx_v_Nmu);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_Nmu);
  __Pyx_INCREF(__pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_int_2);
  __Pyx_INCREF(__pyx_v_Nspace);
  __Pyx_GIVEREF(__pyx_v_Nspace);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_Nspace);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->shape);
  __Pyx_DECREF(__pyx_v_self->shape);
  __pyx_v_self->shape = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":484
 *     def __init__(self, Nlambda, Nmu, Nspace):
 *         self.shape = (Nlambda, Nmu, 2, Nspace)
 *         self.depthData.fill = 0             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
  __pyx_v_self->depthData.fill = 0;

  /* "Source/LwMiddleLayer.pyx":482
 *     cdef f64[:,:,:,::1] I
 * 
 *     def __init__(self, Nlambda, Nmu, Nspace):             # <<<<<<<<<<<<<<
 *         self.shape = (Nlambda, Nmu, 2, Nspace)
 *         self.depthData.fill = 0
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":486
 *         self.depthData.fill = 0
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         s = {}
 *         s['shape'] = self.shape
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_2__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_2__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self) {
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":487
 * 
 *     def __getstate__(self):
 *         s = {}             # <<<<<<<<<<<<<<
 *         s['shape'] = self.shape
 *         s['fill'] = bool(self.fill)
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_s = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":488
 *     def __getstate__(self):
 *         s = {}
 *         s['shape'] = self.shape             # <<<<<<<<<<<<<<
 *         s['fill'] = bool(self.fill)
 *         try:
 */
  __pyx_t_1 = __pyx_v_self->shape;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_s, __pyx_n_u_shape, __pyx_t_1) < 0)) __PYX_ERR(0, 488, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":489
 *         s = {}
 *         s['shape'] = self.shape
 *         s['fill'] = bool(self.fill)             # <<<<<<<<<<<<<<
 *         try:
 *             s['chi'] = np.copy(np.asarray(self.chi))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_fill); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyBool_FromLong((!(!__pyx_t_2))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_s, __pyx_n_u_fill, __pyx_t_1) < 0)) __PYX_ERR(0, 489, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":490
 *         s['shape'] = self.shape
 *         s['fill'] = bool(self.fill)
 *         try:             # <<<<<<<<<<<<<<
 *             s['chi'] = np.copy(np.asarray(self.chi))
 *             s['eta'] = np.copy(np.asarray(self.eta))
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":491
 *         s['fill'] = bool(self.fill)
 *         try:
 *             s['chi'] = np.copy(np.asarray(self.chi))             # <<<<<<<<<<<<<<
 *             s['eta'] = np.copy(np.asarray(self.eta))
 *             s['I'] = np.copy(np.asarray(self.I))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_copy); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_asarray); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 491, __pyx_L3_error)}
      __pyx_t_8 = __pyx_memoryview_fromslice(__pyx_v_self->chi, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      __pyx_t_6 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_9, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_s, __pyx_n_u_chi, __pyx_t_1) < 0)) __PYX_ERR(0, 491, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":492
 *         try:
 *             s['chi'] = np.copy(np.asarray(self.chi))
 *             s['eta'] = np.copy(np.asarray(self.eta))             # <<<<<<<<<<<<<<
 *             s['I'] = np.copy(np.asarray(self.I))
 *         except AttributeError:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_copy); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_asarray); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 492, __pyx_L3_error)}
      __pyx_t_9 = __pyx_memoryview_fromslice(__pyx_v_self->eta, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
        }
      }
      __pyx_t_7 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_10, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_9);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_s, __pyx_n_u_eta, __pyx_t_1) < 0)) __PYX_ERR(0, 492, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":493
 *             s['chi'] = np.copy(np.asarray(self.chi))
 *             s['eta'] = np.copy(np.asarray(self.eta))
 *             s['I'] = np.copy(np.asarray(self.I))             # <<<<<<<<<<<<<<
 *         except AttributeError:
 *             s['chi'] = None
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 493, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_copy); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 493, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 493, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_asarray); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 493, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 493, __pyx_L3_error)}
      __pyx_t_8 = __pyx_memoryview_fromslice(__pyx_v_self->I, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 493, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      __pyx_t_6 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_8);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 493, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_9)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_9);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_1 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_9, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 493, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_s, __pyx_n_u_I, __pyx_t_1) < 0)) __PYX_ERR(0, 493, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":490
 *         s['shape'] = self.shape
 *         s['fill'] = bool(self.fill)
 *         try:             # <<<<<<<<<<<<<<
 *             s['chi'] = np.copy(np.asarray(self.chi))
 *             s['eta'] = np.copy(np.asarray(self.eta))
 */
    }
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "Source/LwMiddleLayer.pyx":494
 *             s['eta'] = np.copy(np.asarray(self.eta))
 *             s['I'] = np.copy(np.asarray(self.I))
 *         except AttributeError:             # <<<<<<<<<<<<<<
 *             s['chi'] = None
 *             s['eta'] = None
 */
    __pyx_t_11 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_11) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_7, &__pyx_t_6) < 0) __PYX_ERR(0, 494, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GOTREF(__pyx_t_6);

      /* "Source/LwMiddleLayer.pyx":495
 *             s['I'] = np.copy(np.asarray(self.I))
 *         except AttributeError:
 *             s['chi'] = None             # <<<<<<<<<<<<<<
 *             s['eta'] = None
 *             s['I'] = None
 */
      if (unlikely(PyDict_SetItem(__pyx_v_s, __pyx_n_u_chi, Py_None) < 0)) __PYX_ERR(0, 495, __pyx_L5_except_error)

      /* "Source/LwMiddleLayer.pyx":496
 *         except AttributeError:
 *             s['chi'] = None
 *             s['eta'] = None             # <<<<<<<<<<<<<<
 *             s['I'] = None
 * 
 */
      if (unlikely(PyDict_SetItem(__pyx_v_s, __pyx_n_u_eta, Py_None) < 0)) __PYX_ERR(0, 496, __pyx_L5_except_error)

      /* "Source/LwMiddleLayer.pyx":497
 *             s['chi'] = None
 *             s['eta'] = None
 *             s['I'] = None             # <<<<<<<<<<<<<<
 * 
 *         return s
 */
      if (unlikely(PyDict_SetItem(__pyx_v_s, __pyx_n_u_I, Py_None) < 0)) __PYX_ERR(0, 497, __pyx_L5_except_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "Source/LwMiddleLayer.pyx":490
 *         s['shape'] = self.shape
 *         s['fill'] = bool(self.fill)
 *         try:             # <<<<<<<<<<<<<<
 *             s['chi'] = np.copy(np.asarray(self.chi))
 *             s['eta'] = np.copy(np.asarray(self.eta))
 */
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
    __pyx_L8_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":499
 *             s['I'] = None
 * 
 *         return s             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, s):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_s);
  __pyx_r = __pyx_v_s;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":486
 *         self.depthData.fill = 0
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         s = {}
 *         s['shape'] = self.shape
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":501
 *         return s
 * 
 *     def __setstate__(self, s):             # <<<<<<<<<<<<<<
 *         self.shape = s['shape']
 *         self.depthData.fill = int(s['fill'])
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_5__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_s); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_5__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_s) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self), ((PyObject *)__pyx_v_s));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self, PyObject *__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  bool __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  __Pyx_memviewslice __pyx_t_6 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View4D __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":502
 * 
 *     def __setstate__(self, s):
 *         self.shape = s['shape']             # <<<<<<<<<<<<<<
 *         self.depthData.fill = int(s['fill'])
 *         if s['chi'] is not None:
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_s, __pyx_n_u_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->shape);
  __Pyx_DECREF(__pyx_v_self->shape);
  __pyx_v_self->shape = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":503
 *     def __setstate__(self, s):
 *         self.shape = s['shape']
 *         self.depthData.fill = int(s['fill'])             # <<<<<<<<<<<<<<
 *         if s['chi'] is not None:
 *             self.chi = s['chi']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_s, __pyx_n_u_fill); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_3 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 503, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->depthData.fill = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":504
 *         self.shape = s['shape']
 *         self.depthData.fill = int(s['fill'])
 *         if s['chi'] is not None:             # <<<<<<<<<<<<<<
 *             self.chi = s['chi']
 *             self.depthData.chi = f64_view_4(self.chi)
 */
  __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_s, __pyx_n_u_chi); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 504, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = (__pyx_t_2 != Py_None);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = (__pyx_t_4 != 0);
  if (__pyx_t_5) {

    /* "Source/LwMiddleLayer.pyx":505
 *         self.depthData.fill = int(s['fill'])
 *         if s['chi'] is not None:
 *             self.chi = s['chi']             # <<<<<<<<<<<<<<
 *             self.depthData.chi = f64_view_4(self.chi)
 *             self.eta = s['eta']
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_s, __pyx_n_u_chi); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_6.memview)) __PYX_ERR(0, 505, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->chi, 0);
    __pyx_v_self->chi = __pyx_t_6;
    __pyx_t_6.memview = NULL;
    __pyx_t_6.data = NULL;

    /* "Source/LwMiddleLayer.pyx":506
 *         if s['chi'] is not None:
 *             self.chi = s['chi']
 *             self.depthData.chi = f64_view_4(self.chi)             # <<<<<<<<<<<<<<
 *             self.eta = s['eta']
 *             self.depthData.eta = f64_view_4(self.eta)
 */
    if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 506, __pyx_L1_error)}
    try {
      __pyx_t_7 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->chi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 506, __pyx_L1_error)
    }
    __pyx_v_self->depthData.chi = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":507
 *             self.chi = s['chi']
 *             self.depthData.chi = f64_view_4(self.chi)
 *             self.eta = s['eta']             # <<<<<<<<<<<<<<
 *             self.depthData.eta = f64_view_4(self.eta)
 *             self.I = s['I']
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_s, __pyx_n_u_eta); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_6.memview)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->eta, 0);
    __pyx_v_self->eta = __pyx_t_6;
    __pyx_t_6.memview = NULL;
    __pyx_t_6.data = NULL;

    /* "Source/LwMiddleLayer.pyx":508
 *             self.depthData.chi = f64_view_4(self.chi)
 *             self.eta = s['eta']
 *             self.depthData.eta = f64_view_4(self.eta)             # <<<<<<<<<<<<<<
 *             self.I = s['I']
 *             self.depthData.I = f64_view_4(self.I)
 */
    if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 508, __pyx_L1_error)}
    try {
      __pyx_t_7 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->eta);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 508, __pyx_L1_error)
    }
    __pyx_v_self->depthData.eta = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":509
 *             self.eta = s['eta']
 *             self.depthData.eta = f64_view_4(self.eta)
 *             self.I = s['I']             # <<<<<<<<<<<<<<
 *             self.depthData.I = f64_view_4(self.I)
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_s, __pyx_n_u_I); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_6.memview)) __PYX_ERR(0, 509, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->I, 0);
    __pyx_v_self->I = __pyx_t_6;
    __pyx_t_6.memview = NULL;
    __pyx_t_6.data = NULL;

    /* "Source/LwMiddleLayer.pyx":510
 *             self.depthData.eta = f64_view_4(self.eta)
 *             self.I = s['I']
 *             self.depthData.I = f64_view_4(self.I)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
    if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 510, __pyx_L1_error)}
    try {
      __pyx_t_7 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->I);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 510, __pyx_L1_error)
    }
    __pyx_v_self->depthData.I = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":504
 *         self.shape = s['shape']
 *         self.depthData.fill = int(s['fill'])
 *         if s['chi'] is not None:             # <<<<<<<<<<<<<<
 *             self.chi = s['chi']
 *             self.depthData.chi = f64_view_4(self.chi)
 */
  }

  /* "Source/LwMiddleLayer.pyx":501
 *         return s
 * 
 *     def __setstate__(self, s):             # <<<<<<<<<<<<<<
 *         self.shape = s['shape']
 *         self.depthData.fill = int(s['fill'])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __PYX_XDEC_MEMVIEW(&__pyx_t_6, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":513
 * 
 *     @property
 *     def fill(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Set this to True to fill the arrays, this will take care of
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_4fill_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_4fill_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4fill___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4fill___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":518
 *         allocating the space if not previously done.
 *         '''
 *         return bool(self.depthData.fill)             # <<<<<<<<<<<<<<
 * 
 *     @fill.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->depthData.fill); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 518, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 518, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyBool_FromLong((!(!__pyx_t_2))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 518, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":513
 * 
 *     @property
 *     def fill(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Set this to True to fill the arrays, this will take care of
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.fill.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":521
 * 
 *     @fill.setter
 *     def fill(self, value):             # <<<<<<<<<<<<<<
 *         try:
 *             self.depthData.fill = int(value)
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_4fill_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_4fill_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4fill_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_4fill_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  bool __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_memviewslice __pyx_t_13 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View4D __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "Source/LwMiddleLayer.pyx":522
 *     @fill.setter
 *     def fill(self, value):
 *         try:             # <<<<<<<<<<<<<<
 *             self.depthData.fill = int(value)
 *             if value:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":523
 *     def fill(self, value):
 *         try:
 *             self.depthData.fill = int(value)             # <<<<<<<<<<<<<<
 *             if value:
 *                 self.chi
 */
      __pyx_t_4 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 523, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 523, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_self->depthData.fill = __pyx_t_5;

      /* "Source/LwMiddleLayer.pyx":524
 *         try:
 *             self.depthData.fill = int(value)
 *             if value:             # <<<<<<<<<<<<<<
 *                 self.chi
 *         except AttributeError:
 */
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 524, __pyx_L3_error)
      if (__pyx_t_6) {

        /* "Source/LwMiddleLayer.pyx":525
 *             self.depthData.fill = int(value)
 *             if value:
 *                 self.chi             # <<<<<<<<<<<<<<
 *         except AttributeError:
 *             self.chi = np.zeros(self.shape)
 */
        if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 525, __pyx_L3_error)}
        (void)(__pyx_v_self->chi);

        /* "Source/LwMiddleLayer.pyx":524
 *         try:
 *             self.depthData.fill = int(value)
 *             if value:             # <<<<<<<<<<<<<<
 *                 self.chi
 *         except AttributeError:
 */
      }

      /* "Source/LwMiddleLayer.pyx":522
 *     @fill.setter
 *     def fill(self, value):
 *         try:             # <<<<<<<<<<<<<<
 *             self.depthData.fill = int(value)
 *             if value:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":526
 *             if value:
 *                 self.chi
 *         except AttributeError:             # <<<<<<<<<<<<<<
 *             self.chi = np.zeros(self.shape)
 *             self.depthData.chi = f64_view_4(self.chi)
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.fill.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_8, &__pyx_t_9) < 0) __PYX_ERR(0, 526, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_9);

      /* "Source/LwMiddleLayer.pyx":527
 *                 self.chi
 *         except AttributeError:
 *             self.chi = np.zeros(self.shape)             # <<<<<<<<<<<<<<
 *             self.depthData.chi = f64_view_4(self.chi)
 *             self.eta = np.zeros(self.shape)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 527, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_zeros); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 527, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
        }
      }
      __pyx_t_10 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_11, __pyx_v_self->shape) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_v_self->shape);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 527, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_13 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_10, PyBUF_WRITABLE); if (unlikely(!__pyx_t_13.memview)) __PYX_ERR(0, 527, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->chi, 0);
      __pyx_v_self->chi = __pyx_t_13;
      __pyx_t_13.memview = NULL;
      __pyx_t_13.data = NULL;

      /* "Source/LwMiddleLayer.pyx":528
 *         except AttributeError:
 *             self.chi = np.zeros(self.shape)
 *             self.depthData.chi = f64_view_4(self.chi)             # <<<<<<<<<<<<<<
 *             self.eta = np.zeros(self.shape)
 *             self.depthData.eta = f64_view_4(self.eta)
 */
      if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 528, __pyx_L5_except_error)}
      try {
        __pyx_t_14 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->chi);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 528, __pyx_L5_except_error)
      }
      __pyx_v_self->depthData.chi = __pyx_t_14;

      /* "Source/LwMiddleLayer.pyx":529
 *             self.chi = np.zeros(self.shape)
 *             self.depthData.chi = f64_view_4(self.chi)
 *             self.eta = np.zeros(self.shape)             # <<<<<<<<<<<<<<
 *             self.depthData.eta = f64_view_4(self.eta)
 *             self.I = np.zeros(self.shape)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 529, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_zeros); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 529, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_12)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_12);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
        }
      }
      __pyx_t_10 = (__pyx_t_12) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_12, __pyx_v_self->shape) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_v_self->shape);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 529, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_13 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_10, PyBUF_WRITABLE); if (unlikely(!__pyx_t_13.memview)) __PYX_ERR(0, 529, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->eta, 0);
      __pyx_v_self->eta = __pyx_t_13;
      __pyx_t_13.memview = NULL;
      __pyx_t_13.data = NULL;

      /* "Source/LwMiddleLayer.pyx":530
 *             self.depthData.chi = f64_view_4(self.chi)
 *             self.eta = np.zeros(self.shape)
 *             self.depthData.eta = f64_view_4(self.eta)             # <<<<<<<<<<<<<<
 *             self.I = np.zeros(self.shape)
 *             self.depthData.I = f64_view_4(self.I)
 */
      if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 530, __pyx_L5_except_error)}
      try {
        __pyx_t_14 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->eta);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 530, __pyx_L5_except_error)
      }
      __pyx_v_self->depthData.eta = __pyx_t_14;

      /* "Source/LwMiddleLayer.pyx":531
 *             self.eta = np.zeros(self.shape)
 *             self.depthData.eta = f64_view_4(self.eta)
 *             self.I = np.zeros(self.shape)             # <<<<<<<<<<<<<<
 *             self.depthData.I = f64_view_4(self.I)
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 531, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_zeros); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 531, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
        }
      }
      __pyx_t_10 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_11, __pyx_v_self->shape) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_v_self->shape);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 531, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_13 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_10, PyBUF_WRITABLE); if (unlikely(!__pyx_t_13.memview)) __PYX_ERR(0, 531, __pyx_L5_except_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->I, 0);
      __pyx_v_self->I = __pyx_t_13;
      __pyx_t_13.memview = NULL;
      __pyx_t_13.data = NULL;

      /* "Source/LwMiddleLayer.pyx":532
 *             self.depthData.eta = f64_view_4(self.eta)
 *             self.I = np.zeros(self.shape)
 *             self.depthData.I = f64_view_4(self.I)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
      if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 532, __pyx_L5_except_error)}
      try {
        __pyx_t_14 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->I);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 532, __pyx_L5_except_error)
      }
      __pyx_v_self->depthData.I = __pyx_t_14;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "Source/LwMiddleLayer.pyx":522
 *     @fill.setter
 *     def fill(self, value):
 *         try:             # <<<<<<<<<<<<<<
 *             self.depthData.fill = int(value)
 *             if value:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":521
 * 
 *     @fill.setter
 *     def fill(self, value):             # <<<<<<<<<<<<<<
 *         try:
 *             self.depthData.fill = int(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __PYX_XDEC_MEMVIEW(&__pyx_t_13, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.fill.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":535
 * 
 *     @property
 *     def chi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Full depth dependent opacity [Nlambda, Nmu, Up/Down, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3chi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3chi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_3chi___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_3chi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":539
 *         Full depth dependent opacity [Nlambda, Nmu, Up/Down, Nspace].
 *         '''
 *         return np.asarray(self.chi)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 539, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->chi, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":535
 * 
 *     @property
 *     def chi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Full depth dependent opacity [Nlambda, Nmu, Up/Down, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.chi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":542
 * 
 *     @property
 *     def eta(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Full depth dependent emissivity [Nlambda, Nmu, Up/Down, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_3eta___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_3eta___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":546
 *         Full depth dependent emissivity [Nlambda, Nmu, Up/Down, Nspace].
 *         '''
 *         return np.asarray(self.eta)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 546, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->eta, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":542
 * 
 *     @property
 *     def eta(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Full depth dependent emissivity [Nlambda, Nmu, Up/Down, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":549
 * 
 *     @property
 *     def I(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Full depth dependent intensity [Nlambda, Nmu, Up/Down, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_1I_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_1I_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_1I___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_1I___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":553
 *         Full depth dependent intensity [Nlambda, Nmu, Up/Down, Nspace].
 *         '''
 *         return np.asarray(self.I)             # <<<<<<<<<<<<<<
 * 
 * def BC_to_enum(bc):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 553, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->I, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":549
 * 
 *     @property
 *     def I(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Full depth dependent intensity [Nlambda, Nmu, Up/Down, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.I.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_6__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_8__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_11LwDepthData_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwDepthData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":555
 *         return np.asarray(self.I)
 * 
 * def BC_to_enum(bc):             # <<<<<<<<<<<<<<
 *     '''
 *     Returns the C++ enum associated with the type of python BoundaryCondition
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_1BC_to_enum(PyObject *__pyx_self, PyObject *__pyx_v_bc); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_BC_to_enum[] = "\n    Returns the C++ enum associated with the type of python BoundaryCondition\n    object.\n    ";
static PyMethodDef __pyx_mdef_11lightweaver_10LwCompiled_1BC_to_enum = {"BC_to_enum", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_1BC_to_enum, METH_O, __pyx_doc_11lightweaver_10LwCompiled_BC_to_enum};
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_1BC_to_enum(PyObject *__pyx_self, PyObject *__pyx_v_bc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BC_to_enum (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_BC_to_enum(__pyx_self, ((PyObject *)__pyx_v_bc));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_BC_to_enum(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_bc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BC_to_enum", 0);

  /* "Source/LwMiddleLayer.pyx":560
 *     object.
 *     '''
 *     if isinstance(bc, ZeroRadiation):             # <<<<<<<<<<<<<<
 *         return ZERO
 *     elif isinstance(bc, ThermalisedRadiation):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ZeroRadiation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_IsInstance(__pyx_v_bc, __pyx_t_1); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":561
 *     '''
 *     if isinstance(bc, ZeroRadiation):
 *         return ZERO             # <<<<<<<<<<<<<<
 *     elif isinstance(bc, ThermalisedRadiation):
 *         return THERMALISED
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyInt_From_enum__RadiationBc(ZERO); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 561, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":560
 *     object.
 *     '''
 *     if isinstance(bc, ZeroRadiation):             # <<<<<<<<<<<<<<
 *         return ZERO
 *     elif isinstance(bc, ThermalisedRadiation):
 */
  }

  /* "Source/LwMiddleLayer.pyx":562
 *     if isinstance(bc, ZeroRadiation):
 *         return ZERO
 *     elif isinstance(bc, ThermalisedRadiation):             # <<<<<<<<<<<<<<
 *         return THERMALISED
 *     elif isinstance(bc, PeriodicRadiation):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_ThermalisedRadiation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 562, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_IsInstance(__pyx_v_bc, __pyx_t_1); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(0, 562, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":563
 *         return ZERO
 *     elif isinstance(bc, ThermalisedRadiation):
 *         return THERMALISED             # <<<<<<<<<<<<<<
 *     elif isinstance(bc, PeriodicRadiation):
 *         return PERIODIC
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyInt_From_enum__RadiationBc(THERMALISED); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 563, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":562
 *     if isinstance(bc, ZeroRadiation):
 *         return ZERO
 *     elif isinstance(bc, ThermalisedRadiation):             # <<<<<<<<<<<<<<
 *         return THERMALISED
 *     elif isinstance(bc, PeriodicRadiation):
 */
  }

  /* "Source/LwMiddleLayer.pyx":564
 *     elif isinstance(bc, ThermalisedRadiation):
 *         return THERMALISED
 *     elif isinstance(bc, PeriodicRadiation):             # <<<<<<<<<<<<<<
 *         return PERIODIC
 *     elif isinstance(bc, NoBc):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PeriodicRadiation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 564, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_IsInstance(__pyx_v_bc, __pyx_t_1); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 564, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":565
 *         return THERMALISED
 *     elif isinstance(bc, PeriodicRadiation):
 *         return PERIODIC             # <<<<<<<<<<<<<<
 *     elif isinstance(bc, NoBc):
 *         return UNINITIALISED
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyInt_From_enum__RadiationBc(PERIODIC); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 565, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":564
 *     elif isinstance(bc, ThermalisedRadiation):
 *         return THERMALISED
 *     elif isinstance(bc, PeriodicRadiation):             # <<<<<<<<<<<<<<
 *         return PERIODIC
 *     elif isinstance(bc, NoBc):
 */
  }

  /* "Source/LwMiddleLayer.pyx":566
 *     elif isinstance(bc, PeriodicRadiation):
 *         return PERIODIC
 *     elif isinstance(bc, NoBc):             # <<<<<<<<<<<<<<
 *         return UNINITIALISED
 *     elif isinstance(bc, BoundaryCondition):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_NoBc); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyObject_IsInstance(__pyx_v_bc, __pyx_t_1); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(0, 566, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":567
 *         return PERIODIC
 *     elif isinstance(bc, NoBc):
 *         return UNINITIALISED             # <<<<<<<<<<<<<<
 *     elif isinstance(bc, BoundaryCondition):
 *         return CALLABLE
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyInt_From_enum__RadiationBc(UNINITIALISED); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 567, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":566
 *     elif isinstance(bc, PeriodicRadiation):
 *         return PERIODIC
 *     elif isinstance(bc, NoBc):             # <<<<<<<<<<<<<<
 *         return UNINITIALISED
 *     elif isinstance(bc, BoundaryCondition):
 */
  }

  /* "Source/LwMiddleLayer.pyx":568
 *     elif isinstance(bc, NoBc):
 *         return UNINITIALISED
 *     elif isinstance(bc, BoundaryCondition):             # <<<<<<<<<<<<<<
 *         return CALLABLE
 *     else:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_BoundaryCondition); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_IsInstance(__pyx_v_bc, __pyx_t_1); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 568, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (likely(__pyx_t_3)) {

    /* "Source/LwMiddleLayer.pyx":569
 *         return UNINITIALISED
 *     elif isinstance(bc, BoundaryCondition):
 *         return CALLABLE             # <<<<<<<<<<<<<<
 *     else:
 *         raise ValueError('Argument is not a BoundaryCondition.')
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_1 = __Pyx_PyInt_From_enum__RadiationBc(CALLABLE); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 569, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":568
 *     elif isinstance(bc, NoBc):
 *         return UNINITIALISED
 *     elif isinstance(bc, BoundaryCondition):             # <<<<<<<<<<<<<<
 *         return CALLABLE
 *     else:
 */
  }

  /* "Source/LwMiddleLayer.pyx":571
 *         return CALLABLE
 *     else:
 *         raise ValueError('Argument is not a BoundaryCondition.')             # <<<<<<<<<<<<<<
 * 
 * cdef verify_bc_array_sizes(AtmosphericBoundaryCondition* abc, f64[:,:,::1] pyArr, str location):
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 571, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 571, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":555
 *         return np.asarray(self.I)
 * 
 * def BC_to_enum(bc):             # <<<<<<<<<<<<<<
 *     '''
 *     Returns the C++ enum associated with the type of python BoundaryCondition
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BC_to_enum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":573
 *         raise ValueError('Argument is not a BoundaryCondition.')
 * 
 * cdef verify_bc_array_sizes(AtmosphericBoundaryCondition* abc, f64[:,:,::1] pyArr, str location):             # <<<<<<<<<<<<<<
 *     cdef int dim0 = abc.bcData.shape(0)
 *     cdef int dim1 = abc.bcData.shape(1)
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled_verify_bc_array_sizes(AtmosphericBoundaryCondition *__pyx_v_abc, __Pyx_memviewslice __pyx_v_pyArr, PyObject *__pyx_v_location) {
  int __pyx_v_dim0;
  int __pyx_v_dim1;
  int __pyx_v_dim2;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  Py_UCS4 __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("verify_bc_array_sizes", 0);

  /* "Source/LwMiddleLayer.pyx":574
 * 
 * cdef verify_bc_array_sizes(AtmosphericBoundaryCondition* abc, f64[:,:,::1] pyArr, str location):
 *     cdef int dim0 = abc.bcData.shape(0)             # <<<<<<<<<<<<<<
 *     cdef int dim1 = abc.bcData.shape(1)
 *     cdef int dim2 = abc.bcData.shape(2)
 */
  __pyx_v_dim0 = __pyx_v_abc->bcData.shape(0);

  /* "Source/LwMiddleLayer.pyx":575
 * cdef verify_bc_array_sizes(AtmosphericBoundaryCondition* abc, f64[:,:,::1] pyArr, str location):
 *     cdef int dim0 = abc.bcData.shape(0)
 *     cdef int dim1 = abc.bcData.shape(1)             # <<<<<<<<<<<<<<
 *     cdef int dim2 = abc.bcData.shape(2)
 *     if dim0 != pyArr.shape[0] or dim1 != pyArr.shape[1] or dim2 != pyArr.shape[2]:
 */
  __pyx_v_dim1 = __pyx_v_abc->bcData.shape(1);

  /* "Source/LwMiddleLayer.pyx":576
 *     cdef int dim0 = abc.bcData.shape(0)
 *     cdef int dim1 = abc.bcData.shape(1)
 *     cdef int dim2 = abc.bcData.shape(2)             # <<<<<<<<<<<<<<
 *     if dim0 != pyArr.shape[0] or dim1 != pyArr.shape[1] or dim2 != pyArr.shape[2]:
 *         raise ValueError('BC returned from python does not match expected shape for %s (%d, %d, %d), got %s' % (location, dim0, dim1, dim2, repr(pyArr.shape)))
 */
  __pyx_v_dim2 = __pyx_v_abc->bcData.shape(2);

  /* "Source/LwMiddleLayer.pyx":577
 *     cdef int dim1 = abc.bcData.shape(1)
 *     cdef int dim2 = abc.bcData.shape(2)
 *     if dim0 != pyArr.shape[0] or dim1 != pyArr.shape[1] or dim2 != pyArr.shape[2]:             # <<<<<<<<<<<<<<
 *         raise ValueError('BC returned from python does not match expected shape for %s (%d, %d, %d), got %s' % (location, dim0, dim1, dim2, repr(pyArr.shape)))
 * 
 */
  __pyx_t_2 = ((__pyx_v_dim0 != (__pyx_v_pyArr.shape[0])) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_dim1 != (__pyx_v_pyArr.shape[1])) != 0);
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = ((__pyx_v_dim2 != (__pyx_v_pyArr.shape[2])) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "Source/LwMiddleLayer.pyx":578
 *     cdef int dim2 = abc.bcData.shape(2)
 *     if dim0 != pyArr.shape[0] or dim1 != pyArr.shape[1] or dim2 != pyArr.shape[2]:
 *         raise ValueError('BC returned from python does not match expected shape for %s (%d, %d, %d), got %s' % (location, dim0, dim1, dim2, repr(pyArr.shape)))             # <<<<<<<<<<<<<<
 * 
 * cdef class LwAtmosphere:
 */
    __pyx_t_3 = PyTuple_New(10); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = 0;
    __pyx_t_5 = 127;
    __Pyx_INCREF(__pyx_kp_u_BC_returned_from_python_does_not);
    __pyx_t_4 += 58;
    __Pyx_GIVEREF(__pyx_kp_u_BC_returned_from_python_does_not);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_BC_returned_from_python_does_not);
    __pyx_t_6 = __Pyx_PyUnicode_Unicode(__pyx_v_location); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_5;
    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u__5);
    __pyx_t_4 += 2;
    __Pyx_GIVEREF(__pyx_kp_u__5);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__5);
    __pyx_t_6 = __Pyx_PyUnicode_From_int(__pyx_v_dim0, 0, ' ', 'd'); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u_);
    __pyx_t_4 += 2;
    __Pyx_GIVEREF(__pyx_kp_u_);
    PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_kp_u_);
    __pyx_t_6 = __Pyx_PyUnicode_From_int(__pyx_v_dim1, 0, ' ', 'd'); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u_);
    __pyx_t_4 += 2;
    __Pyx_GIVEREF(__pyx_kp_u_);
    PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_kp_u_);
    __pyx_t_6 = __Pyx_PyUnicode_From_int(__pyx_v_dim2, 0, ' ', 'd'); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 7, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u_got);
    __pyx_t_4 += 7;
    __Pyx_GIVEREF(__pyx_kp_u_got);
    PyTuple_SET_ITEM(__pyx_t_3, 8, __pyx_kp_u_got);
    __pyx_t_6 = __Pyx_carray_to_py_Py_ssize_t(__pyx_v_pyArr.shape, 8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = PyObject_Repr(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_FormatSimpleAndDecref(PyObject_Unicode(__pyx_t_7), __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_5;
    __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_3, 9, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_3, 10, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 578, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 578, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":577
 *     cdef int dim1 = abc.bcData.shape(1)
 *     cdef int dim2 = abc.bcData.shape(2)
 *     if dim0 != pyArr.shape[0] or dim1 != pyArr.shape[1] or dim2 != pyArr.shape[2]:             # <<<<<<<<<<<<<<
 *         raise ValueError('BC returned from python does not match expected shape for %s (%d, %d, %d), got %s' % (location, dim0, dim1, dim2, repr(pyArr.shape)))
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":573
 *         raise ValueError('Argument is not a BoundaryCondition.')
 * 
 * cdef verify_bc_array_sizes(AtmosphericBoundaryCondition* abc, f64[:,:,::1] pyArr, str location):             # <<<<<<<<<<<<<<
 *     cdef int dim0 = abc.bcData.shape(0)
 *     cdef int dim1 = abc.bcData.shape(1)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("lightweaver.LwCompiled.verify_bc_array_sizes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":621
 *     cdef public object pyAtmos
 * 
 *     def __init__(self, atmos, Nwavelengths):             # <<<<<<<<<<<<<<
 *         cdef int Nwave = Nwavelengths
 *         self.Nwave = Nwave
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_atmos = 0;
  PyObject *__pyx_v_Nwavelengths = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmos,&__pyx_n_s_Nwavelengths,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Nwavelengths)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, 1); __PYX_ERR(0, 621, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 621, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_atmos = values[0];
    __pyx_v_Nwavelengths = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 621, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self), __pyx_v_atmos, __pyx_v_Nwavelengths);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, PyObject *__pyx_v_atmos, PyObject *__pyx_v_Nwavelengths) {
  int __pyx_v_Nwave;
  int __pyx_v_Nspace;
  int __pyx_v_Nrays;
  int __pyx_v_Ndim;
  int __pyx_v_Nx;
  int __pyx_v_Ny;
  int __pyx_v_Nz;
  PyObject *__pyx_v_e = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_memviewslice __pyx_t_3 = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  __Pyx_memviewslice __pyx_t_11 = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  char const *__pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  bool __pyx_t_21;
  __pyx_t_8CmoArray_F64View __pyx_t_22;
  __pyx_t_8CmoArray_F64View2D __pyx_t_23;
  int __pyx_t_24;
  Py_ssize_t __pyx_t_25;
  Py_UCS4 __pyx_t_26;
  __Pyx_memviewslice __pyx_t_27 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View3D __pyx_t_28;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":622
 * 
 *     def __init__(self, atmos, Nwavelengths):
 *         cdef int Nwave = Nwavelengths             # <<<<<<<<<<<<<<
 *         self.Nwave = Nwave
 *         self.pyAtmos = atmos
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_Nwavelengths); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)
  __pyx_v_Nwave = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":623
 *     def __init__(self, atmos, Nwavelengths):
 *         cdef int Nwave = Nwavelengths
 *         self.Nwave = Nwave             # <<<<<<<<<<<<<<
 *         self.pyAtmos = atmos
 * 
 */
  __pyx_v_self->Nwave = __pyx_v_Nwave;

  /* "Source/LwMiddleLayer.pyx":624
 *         cdef int Nwave = Nwavelengths
 *         self.Nwave = Nwave
 *         self.pyAtmos = atmos             # <<<<<<<<<<<<<<
 * 
 *         cdef int Nspace = atmos.Nspace
 */
  __Pyx_INCREF(__pyx_v_atmos);
  __Pyx_GIVEREF(__pyx_v_atmos);
  __Pyx_GOTREF(__pyx_v_self->pyAtmos);
  __Pyx_DECREF(__pyx_v_self->pyAtmos);
  __pyx_v_self->pyAtmos = __pyx_v_atmos;

  /* "Source/LwMiddleLayer.pyx":626
 *         self.pyAtmos = atmos
 * 
 *         cdef int Nspace = atmos.Nspace             # <<<<<<<<<<<<<<
 *         self.atmos.Nspace = Nspace
 *         cdef int Nrays = atmos.Nrays
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nspace = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":627
 * 
 *         cdef int Nspace = atmos.Nspace
 *         self.atmos.Nspace = Nspace             # <<<<<<<<<<<<<<
 *         cdef int Nrays = atmos.Nrays
 *         self.atmos.Nrays = Nrays
 */
  __pyx_v_self->atmos.Nspace = __pyx_v_Nspace;

  /* "Source/LwMiddleLayer.pyx":628
 *         cdef int Nspace = atmos.Nspace
 *         self.atmos.Nspace = Nspace
 *         cdef int Nrays = atmos.Nrays             # <<<<<<<<<<<<<<
 *         self.atmos.Nrays = Nrays
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 628, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nrays = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":629
 *         self.atmos.Nspace = Nspace
 *         cdef int Nrays = atmos.Nrays
 *         self.atmos.Nrays = Nrays             # <<<<<<<<<<<<<<
 * 
 *         cdef int Ndim = atmos.Ndim
 */
  __pyx_v_self->atmos.Nrays = __pyx_v_Nrays;

  /* "Source/LwMiddleLayer.pyx":631
 *         self.atmos.Nrays = Nrays
 * 
 *         cdef int Ndim = atmos.Ndim             # <<<<<<<<<<<<<<
 *         self.atmos.Ndim = Ndim
 *         cdef int Nx = atmos.Nx
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Ndim); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Ndim = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":632
 * 
 *         cdef int Ndim = atmos.Ndim
 *         self.atmos.Ndim = Ndim             # <<<<<<<<<<<<<<
 *         cdef int Nx = atmos.Nx
 *         self.atmos.Nx = Nx
 */
  __pyx_v_self->atmos.Ndim = __pyx_v_Ndim;

  /* "Source/LwMiddleLayer.pyx":633
 *         cdef int Ndim = atmos.Ndim
 *         self.atmos.Ndim = Ndim
 *         cdef int Nx = atmos.Nx             # <<<<<<<<<<<<<<
 *         self.atmos.Nx = Nx
 *         cdef int Ny = atmos.Ny
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 633, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nx = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":634
 *         self.atmos.Ndim = Ndim
 *         cdef int Nx = atmos.Nx
 *         self.atmos.Nx = Nx             # <<<<<<<<<<<<<<
 *         cdef int Ny = atmos.Ny
 *         self.atmos.Ny = Ny
 */
  __pyx_v_self->atmos.Nx = __pyx_v_Nx;

  /* "Source/LwMiddleLayer.pyx":635
 *         cdef int Nx = atmos.Nx
 *         self.atmos.Nx = Nx
 *         cdef int Ny = atmos.Ny             # <<<<<<<<<<<<<<
 *         self.atmos.Ny = Ny
 *         cdef int Nz = atmos.Nz
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Ny); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Ny = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":636
 *         self.atmos.Nx = Nx
 *         cdef int Ny = atmos.Ny
 *         self.atmos.Ny = Ny             # <<<<<<<<<<<<<<
 *         cdef int Nz = atmos.Nz
 *         self.atmos.Nz = Nz
 */
  __pyx_v_self->atmos.Ny = __pyx_v_Ny;

  /* "Source/LwMiddleLayer.pyx":637
 *         cdef int Ny = atmos.Ny
 *         self.atmos.Ny = Ny
 *         cdef int Nz = atmos.Nz             # <<<<<<<<<<<<<<
 *         self.atmos.Nz = Nz
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nz); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 637, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nz = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":638
 *         self.atmos.Ny = Ny
 *         cdef int Nz = atmos.Nz
 *         self.atmos.Nz = Nz             # <<<<<<<<<<<<<<
 * 
 *         self.x = atmos.x
 */
  __pyx_v_self->atmos.Nz = __pyx_v_Nz;

  /* "Source/LwMiddleLayer.pyx":640
 *         self.atmos.Nz = Nz
 * 
 *         self.x = atmos.x             # <<<<<<<<<<<<<<
 *         check_shape_exception(self.x, Nx, name='x')
 *         self.y = atmos.y
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_x); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->x, 0);
  __pyx_v_self->x = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":641
 * 
 *         self.x = atmos.x
 *         check_shape_exception(self.x, Nx, name='x')             # <<<<<<<<<<<<<<
 *         self.y = atmos.y
 *         check_shape_exception(self.y, Ny, name='y')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(!__pyx_v_self->x.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 641, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->x, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_Nx); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_name, __pyx_n_u_x) < 0) __PYX_ERR(0, 641, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":642
 *         self.x = atmos.x
 *         check_shape_exception(self.x, Nx, name='x')
 *         self.y = atmos.y             # <<<<<<<<<<<<<<
 *         check_shape_exception(self.y, Ny, name='y')
 *         self.z = atmos.z
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_y); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->y, 0);
  __pyx_v_self->y = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":643
 *         check_shape_exception(self.x, Nx, name='x')
 *         self.y = atmos.y
 *         check_shape_exception(self.y, Ny, name='y')             # <<<<<<<<<<<<<<
 *         self.z = atmos.z
 *         check_shape_exception(self.z, Nz, name='y')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (unlikely(!__pyx_v_self->y.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 643, __pyx_L1_error)}
  __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->y, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Ny); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_6);
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_name, __pyx_n_u_y) < 0) __PYX_ERR(0, 643, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":644
 *         self.y = atmos.y
 *         check_shape_exception(self.y, Ny, name='y')
 *         self.z = atmos.z             # <<<<<<<<<<<<<<
 *         check_shape_exception(self.z, Nz, name='y')
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_z); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->z, 0);
  __pyx_v_self->z = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":645
 *         check_shape_exception(self.y, Ny, name='y')
 *         self.z = atmos.z
 *         check_shape_exception(self.z, Nz, name='y')             # <<<<<<<<<<<<<<
 * 
 *         self.temperature = atmos.temperature
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (unlikely(!__pyx_v_self->z.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 645, __pyx_L1_error)}
  __pyx_t_6 = __pyx_memoryview_fromslice(__pyx_v_self->z, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nz); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __pyx_t_6 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_name, __pyx_n_u_y) < 0) __PYX_ERR(0, 645, __pyx_L1_error)
  __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 645, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "Source/LwMiddleLayer.pyx":647
 *         check_shape_exception(self.z, Nz, name='y')
 * 
 *         self.temperature = atmos.temperature             # <<<<<<<<<<<<<<
 *         check_shape_exception(self.temperature, Nspace, name='temperature')
 *         self.ne = atmos.ne
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_temperature); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_6, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 647, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->temperature, 0);
  __pyx_v_self->temperature = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":648
 * 
 *         self.temperature = atmos.temperature
 *         check_shape_exception(self.temperature, Nspace, name='temperature')             # <<<<<<<<<<<<<<
 *         self.ne = atmos.ne
 *         check_shape_exception(self.ne, Nspace, name='ne')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (unlikely(!__pyx_v_self->temperature.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 648, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->temperature, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_name, __pyx_n_u_temperature) < 0) __PYX_ERR(0, 648, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":649
 *         self.temperature = atmos.temperature
 *         check_shape_exception(self.temperature, Nspace, name='temperature')
 *         self.ne = atmos.ne             # <<<<<<<<<<<<<<
 *         check_shape_exception(self.ne, Nspace, name='ne')
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_ne); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 649, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->ne, 0);
  __pyx_v_self->ne = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":650
 *         check_shape_exception(self.temperature, Nspace, name='temperature')
 *         self.ne = atmos.ne
 *         check_shape_exception(self.ne, Nspace, name='ne')             # <<<<<<<<<<<<<<
 * 
 *         self.vz = atmos.vz
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(!__pyx_v_self->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 650, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->ne, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_name, __pyx_n_u_ne) < 0) __PYX_ERR(0, 650, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":652
 *         check_shape_exception(self.ne, Nspace, name='ne')
 * 
 *         self.vz = atmos.vz             # <<<<<<<<<<<<<<
 *         check_shape_exception(self.vz, Nspace, name='vz')
 *         self.vx = atmos.vx
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_vz); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 652, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vz, 0);
  __pyx_v_self->vz = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":653
 * 
 *         self.vz = atmos.vz
 *         check_shape_exception(self.vz, Nspace, name='vz')             # <<<<<<<<<<<<<<
 *         self.vx = atmos.vx
 *         self.vy = atmos.vy
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (unlikely(!__pyx_v_self->vz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 653, __pyx_L1_error)}
  __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->vz, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_6);
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_name, __pyx_n_u_vz) < 0) __PYX_ERR(0, 653, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":654
 *         self.vz = atmos.vz
 *         check_shape_exception(self.vz, Nspace, name='vz')
 *         self.vx = atmos.vx             # <<<<<<<<<<<<<<
 *         self.vy = atmos.vy
 *         if Ndim >= 2:
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_vx); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 654, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vx, 0);
  __pyx_v_self->vx = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":655
 *         check_shape_exception(self.vz, Nspace, name='vz')
 *         self.vx = atmos.vx
 *         self.vy = atmos.vy             # <<<<<<<<<<<<<<
 *         if Ndim >= 2:
 *             check_shape_exception(self.vx, Nspace, name='vx')
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_vy); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 655, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vy, 0);
  __pyx_v_self->vy = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":656
 *         self.vx = atmos.vx
 *         self.vy = atmos.vy
 *         if Ndim >= 2:             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.vx, Nspace, name='vx')
 *         if Ndim >= 3:
 */
  __pyx_t_7 = ((__pyx_v_Ndim >= 2) != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":657
 *         self.vy = atmos.vy
 *         if Ndim >= 2:
 *             check_shape_exception(self.vx, Nspace, name='vx')             # <<<<<<<<<<<<<<
 *         if Ndim >= 3:
 *             check_shape_exception(self.vy, Nspace, name='vy')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(!__pyx_v_self->vx.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 657, __pyx_L1_error)}
    __pyx_t_6 = __pyx_memoryview_fromslice(__pyx_v_self->vx, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
    __pyx_t_6 = 0;
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_name, __pyx_n_u_vx) < 0) __PYX_ERR(0, 657, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 657, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":656
 *         self.vx = atmos.vx
 *         self.vy = atmos.vy
 *         if Ndim >= 2:             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.vx, Nspace, name='vx')
 *         if Ndim >= 3:
 */
  }

  /* "Source/LwMiddleLayer.pyx":658
 *         if Ndim >= 2:
 *             check_shape_exception(self.vx, Nspace, name='vx')
 *         if Ndim >= 3:             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.vy, Nspace, name='vy')
 * 
 */
  __pyx_t_7 = ((__pyx_v_Ndim >= 3) != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":659
 *             check_shape_exception(self.vx, Nspace, name='vx')
 *         if Ndim >= 3:
 *             check_shape_exception(self.vy, Nspace, name='vy')             # <<<<<<<<<<<<<<
 * 
 *         self.vturb = atmos.vturb
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(!__pyx_v_self->vy.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 659, __pyx_L1_error)}
    __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vy, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_name, __pyx_n_u_vy) < 0) __PYX_ERR(0, 659, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 659, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":658
 *         if Ndim >= 2:
 *             check_shape_exception(self.vx, Nspace, name='vx')
 *         if Ndim >= 3:             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.vy, Nspace, name='vy')
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":661
 *             check_shape_exception(self.vy, Nspace, name='vy')
 * 
 *         self.vturb = atmos.vturb             # <<<<<<<<<<<<<<
 *         check_shape_exception(self.vturb, Nspace, name='vturb')
 *         self.nHTot = atmos.nHTot
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_vturb); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 661, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vturb, 0);
  __pyx_v_self->vturb = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":662
 * 
 *         self.vturb = atmos.vturb
 *         check_shape_exception(self.vturb, Nspace, name='vturb')             # <<<<<<<<<<<<<<
 *         self.nHTot = atmos.nHTot
 *         check_shape_exception(self.nHTot, Nspace, name='vturb')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(!__pyx_v_self->vturb.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 662, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->vturb, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_name, __pyx_n_u_vturb) < 0) __PYX_ERR(0, 662, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_6, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":663
 *         self.vturb = atmos.vturb
 *         check_shape_exception(self.vturb, Nspace, name='vturb')
 *         self.nHTot = atmos.nHTot             # <<<<<<<<<<<<<<
 *         check_shape_exception(self.nHTot, Nspace, name='vturb')
 *         try:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_nHTot); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 663, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->nHTot, 0);
  __pyx_v_self->nHTot = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":664
 *         check_shape_exception(self.vturb, Nspace, name='vturb')
 *         self.nHTot = atmos.nHTot
 *         check_shape_exception(self.nHTot, Nspace, name='vturb')             # <<<<<<<<<<<<<<
 *         try:
 *             self.muz = atmos.muz
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (unlikely(!__pyx_v_self->nHTot.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 664, __pyx_L1_error)}
  __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->nHTot, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_6);
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_name, __pyx_n_u_vturb) < 0) __PYX_ERR(0, 664, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":665
 *         self.nHTot = atmos.nHTot
 *         check_shape_exception(self.nHTot, Nspace, name='vturb')
 *         try:             # <<<<<<<<<<<<<<
 *             self.muz = atmos.muz
 *             check_shape_exception(self.muz, (Nrays,2), 2, name='muz')
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":666
 *         check_shape_exception(self.nHTot, Nspace, name='vturb')
 *         try:
 *             self.muz = atmos.muz             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.muz, (Nrays,2), 2, name='muz')
 *             self.muy = atmos.muy
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_muz); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 666, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_11.memview)) __PYX_ERR(0, 666, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->muz, 0);
      __pyx_v_self->muz = __pyx_t_11;
      __pyx_t_11.memview = NULL;
      __pyx_t_11.data = NULL;

      /* "Source/LwMiddleLayer.pyx":667
 *         try:
 *             self.muz = atmos.muz
 *             check_shape_exception(self.muz, (Nrays,2), 2, name='muz')             # <<<<<<<<<<<<<<
 *             self.muy = atmos.muy
 *             check_shape_exception(self.muy, (Nrays,2), 2, name='muy')
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 667, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(!__pyx_v_self->muz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 667, __pyx_L5_error)}
      __pyx_t_6 = __pyx_memoryview_fromslice(__pyx_v_self->muz, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 667, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 667, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 667, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_int_2);
      __pyx_t_6 = 0;
      __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 667, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_name, __pyx_n_u_muz) < 0) __PYX_ERR(0, 667, __pyx_L5_error)
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 667, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Source/LwMiddleLayer.pyx":668
 *             self.muz = atmos.muz
 *             check_shape_exception(self.muz, (Nrays,2), 2, name='muz')
 *             self.muy = atmos.muy             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.muy, (Nrays,2), 2, name='muy')
 *             self.mux = atmos.mux
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_muy); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 668, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_6, PyBUF_WRITABLE); if (unlikely(!__pyx_t_11.memview)) __PYX_ERR(0, 668, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->muy, 0);
      __pyx_v_self->muy = __pyx_t_11;
      __pyx_t_11.memview = NULL;
      __pyx_t_11.data = NULL;

      /* "Source/LwMiddleLayer.pyx":669
 *             check_shape_exception(self.muz, (Nrays,2), 2, name='muz')
 *             self.muy = atmos.muy
 *             check_shape_exception(self.muy, (Nrays,2), 2, name='muy')             # <<<<<<<<<<<<<<
 *             self.mux = atmos.mux
 *             check_shape_exception(self.mux, (Nrays,2), 2, name='mux')
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 669, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(!__pyx_v_self->muy.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 669, __pyx_L5_error)}
      __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->muy, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 669, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 669, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_2);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_int_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 669, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_5);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_int_2);
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 669, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_name, __pyx_n_u_muy) < 0) __PYX_ERR(0, 669, __pyx_L5_error)
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 669, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Source/LwMiddleLayer.pyx":670
 *             self.muy = atmos.muy
 *             check_shape_exception(self.muy, (Nrays,2), 2, name='muy')
 *             self.mux = atmos.mux             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.mux, (Nrays,2), 2, name='mux')
 *             self.wmu = atmos.wmu
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_mux); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 670, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_11 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_11.memview)) __PYX_ERR(0, 670, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->mux, 0);
      __pyx_v_self->mux = __pyx_t_11;
      __pyx_t_11.memview = NULL;
      __pyx_t_11.data = NULL;

      /* "Source/LwMiddleLayer.pyx":671
 *             check_shape_exception(self.muy, (Nrays,2), 2, name='muy')
 *             self.mux = atmos.mux
 *             check_shape_exception(self.mux, (Nrays,2), 2, name='mux')             # <<<<<<<<<<<<<<
 *             self.wmu = atmos.wmu
 *             check_shape_exception(self.wmu, (Nrays,2), 2, name='wmu')
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 671, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (unlikely(!__pyx_v_self->mux.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 671, __pyx_L5_error)}
      __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->mux, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 671, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 671, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 671, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 671, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_6);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_int_2);
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 671, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_name, __pyx_n_u_mux) < 0) __PYX_ERR(0, 671, __pyx_L5_error)
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 671, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "Source/LwMiddleLayer.pyx":672
 *             self.mux = atmos.mux
 *             check_shape_exception(self.mux, (Nrays,2), 2, name='mux')
 *             self.wmu = atmos.wmu             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.wmu, (Nrays,2), 2, name='wmu')
 *         except AttributeError as e:
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_wmu); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 672, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_11.memview)) __PYX_ERR(0, 672, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->wmu, 0);
      __pyx_v_self->wmu = __pyx_t_11;
      __pyx_t_11.memview = NULL;
      __pyx_t_11.data = NULL;

      /* "Source/LwMiddleLayer.pyx":673
 *             check_shape_exception(self.mux, (Nrays,2), 2, name='mux')
 *             self.wmu = atmos.wmu
 *             check_shape_exception(self.wmu, (Nrays,2), 2, name='wmu')             # <<<<<<<<<<<<<<
 *         except AttributeError as e:
 *             raise ValueError(f'One of the quadrature values not found, was .quadrature called on the Atmosphere object? (Caught: {e}')
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 673, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(!__pyx_v_self->wmu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 673, __pyx_L5_error)}
      __pyx_t_6 = __pyx_memoryview_fromslice(__pyx_v_self->wmu, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 673, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 673, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 673, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 673, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_int_2);
      __pyx_t_6 = 0;
      __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 673, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_name, __pyx_n_u_wmu) < 0) __PYX_ERR(0, 673, __pyx_L5_error)
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 673, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Source/LwMiddleLayer.pyx":665
 *         self.nHTot = atmos.nHTot
 *         check_shape_exception(self.nHTot, Nspace, name='vturb')
 *         try:             # <<<<<<<<<<<<<<
 *             self.muz = atmos.muz
 *             check_shape_exception(self.muz, (Nrays,2), 2, name='muz')
 */
    }
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    goto __pyx_L10_try_end;
    __pyx_L5_error:;
    __PYX_XDEC_MEMVIEW(&__pyx_t_11, 1);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_t_3, 1);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":674
 *             self.wmu = atmos.wmu
 *             check_shape_exception(self.wmu, (Nrays,2), 2, name='wmu')
 *         except AttributeError as e:             # <<<<<<<<<<<<<<
 *             raise ValueError(f'One of the quadrature values not found, was .quadrature called on the Atmosphere object? (Caught: {e}')
 *         self.quadSymm = atmos.quadSymm
 */
    __pyx_t_1 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_1) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_4, &__pyx_t_2) < 0) __PYX_ERR(0, 674, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __pyx_v_e = __pyx_t_4;
      /*try:*/ {

        /* "Source/LwMiddleLayer.pyx":675
 *             check_shape_exception(self.wmu, (Nrays,2), 2, name='wmu')
 *         except AttributeError as e:
 *             raise ValueError(f'One of the quadrature values not found, was .quadrature called on the Atmosphere object? (Caught: {e}')             # <<<<<<<<<<<<<<
 *         self.quadSymm = atmos.quadSymm
 *         self.atmos.z = f64_view(self.z)
 */
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_v_e, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 675, __pyx_L16_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_12 = __Pyx_PyUnicode_Concat(__pyx_kp_u_One_of_the_quadrature_values_not, __pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 675, __pyx_L16_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 675, __pyx_L16_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __PYX_ERR(0, 675, __pyx_L16_error)
      }

      /* "Source/LwMiddleLayer.pyx":674
 *             self.wmu = atmos.wmu
 *             check_shape_exception(self.wmu, (Nrays,2), 2, name='wmu')
 *         except AttributeError as e:             # <<<<<<<<<<<<<<
 *             raise ValueError(f'One of the quadrature values not found, was .quadrature called on the Atmosphere object? (Caught: {e}')
 *         self.quadSymm = atmos.quadSymm
 */
      /*finally:*/ {
        __pyx_L16_error:;
        /*exception exit:*/{
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __pyx_t_15 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0; __pyx_t_20 = 0;
          __PYX_XDEC_MEMVIEW(&__pyx_t_11, 1);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __PYX_XDEC_MEMVIEW(&__pyx_t_3, 1);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_18, &__pyx_t_19, &__pyx_t_20);
          if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_15, &__pyx_t_16, &__pyx_t_17) < 0)) __Pyx_ErrFetch(&__pyx_t_15, &__pyx_t_16, &__pyx_t_17);
          __Pyx_XGOTREF(__pyx_t_15);
          __Pyx_XGOTREF(__pyx_t_16);
          __Pyx_XGOTREF(__pyx_t_17);
          __Pyx_XGOTREF(__pyx_t_18);
          __Pyx_XGOTREF(__pyx_t_19);
          __Pyx_XGOTREF(__pyx_t_20);
          __pyx_t_1 = __pyx_lineno; __pyx_t_13 = __pyx_clineno; __pyx_t_14 = __pyx_filename;
          {
            __Pyx_DECREF(__pyx_v_e);
            __pyx_v_e = NULL;
          }
          if (PY_MAJOR_VERSION >= 3) {
            __Pyx_XGIVEREF(__pyx_t_18);
            __Pyx_XGIVEREF(__pyx_t_19);
            __Pyx_XGIVEREF(__pyx_t_20);
            __Pyx_ExceptionReset(__pyx_t_18, __pyx_t_19, __pyx_t_20);
          }
          __Pyx_XGIVEREF(__pyx_t_15);
          __Pyx_XGIVEREF(__pyx_t_16);
          __Pyx_XGIVEREF(__pyx_t_17);
          __Pyx_ErrRestore(__pyx_t_15, __pyx_t_16, __pyx_t_17);
          __pyx_t_15 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0; __pyx_t_20 = 0;
          __pyx_lineno = __pyx_t_1; __pyx_clineno = __pyx_t_13; __pyx_filename = __pyx_t_14;
          goto __pyx_L7_except_error;
        }
      }
    }
    goto __pyx_L7_except_error;
    __pyx_L7_except_error:;

    /* "Source/LwMiddleLayer.pyx":665
 *         self.nHTot = atmos.nHTot
 *         check_shape_exception(self.nHTot, Nspace, name='vturb')
 *         try:             # <<<<<<<<<<<<<<
 *             self.muz = atmos.muz
 *             check_shape_exception(self.muz, (Nrays,2), 2, name='muz')
 */
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    goto __pyx_L1_error;
    __pyx_L10_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":676
 *         except AttributeError as e:
 *             raise ValueError(f'One of the quadrature values not found, was .quadrature called on the Atmosphere object? (Caught: {e}')
 *         self.quadSymm = atmos.quadSymm             # <<<<<<<<<<<<<<
 *         self.atmos.z = f64_view(self.z)
 *         self.atmos.height = f64_view(self.z)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_quadSymm); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_21 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_21 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 676, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->quadSymm = __pyx_t_21;

  /* "Source/LwMiddleLayer.pyx":677
 *             raise ValueError(f'One of the quadrature values not found, was .quadrature called on the Atmosphere object? (Caught: {e}')
 *         self.quadSymm = atmos.quadSymm
 *         self.atmos.z = f64_view(self.z)             # <<<<<<<<<<<<<<
 *         self.atmos.height = f64_view(self.z)
 *         self.atmos.x = f64_view(self.x)
 */
  if (unlikely(!__pyx_v_self->z.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 677, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->z);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 677, __pyx_L1_error)
  }
  __pyx_v_self->atmos.z = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":678
 *         self.quadSymm = atmos.quadSymm
 *         self.atmos.z = f64_view(self.z)
 *         self.atmos.height = f64_view(self.z)             # <<<<<<<<<<<<<<
 *         self.atmos.x = f64_view(self.x)
 *         self.atmos.y = f64_view(self.y)
 */
  if (unlikely(!__pyx_v_self->z.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 678, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->z);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 678, __pyx_L1_error)
  }
  __pyx_v_self->atmos.height = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":679
 *         self.atmos.z = f64_view(self.z)
 *         self.atmos.height = f64_view(self.z)
 *         self.atmos.x = f64_view(self.x)             # <<<<<<<<<<<<<<
 *         self.atmos.y = f64_view(self.y)
 *         self.atmos.temperature = f64_view(self.temperature)
 */
  if (unlikely(!__pyx_v_self->x.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 679, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->x);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 679, __pyx_L1_error)
  }
  __pyx_v_self->atmos.x = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":680
 *         self.atmos.height = f64_view(self.z)
 *         self.atmos.x = f64_view(self.x)
 *         self.atmos.y = f64_view(self.y)             # <<<<<<<<<<<<<<
 *         self.atmos.temperature = f64_view(self.temperature)
 *         self.atmos.ne = f64_view(self.ne)
 */
  if (unlikely(!__pyx_v_self->y.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 680, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->y);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 680, __pyx_L1_error)
  }
  __pyx_v_self->atmos.y = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":681
 *         self.atmos.x = f64_view(self.x)
 *         self.atmos.y = f64_view(self.y)
 *         self.atmos.temperature = f64_view(self.temperature)             # <<<<<<<<<<<<<<
 *         self.atmos.ne = f64_view(self.ne)
 *         self.atmos.vx = f64_view(self.vx)
 */
  if (unlikely(!__pyx_v_self->temperature.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 681, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->temperature);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 681, __pyx_L1_error)
  }
  __pyx_v_self->atmos.temperature = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":682
 *         self.atmos.y = f64_view(self.y)
 *         self.atmos.temperature = f64_view(self.temperature)
 *         self.atmos.ne = f64_view(self.ne)             # <<<<<<<<<<<<<<
 *         self.atmos.vx = f64_view(self.vx)
 *         self.atmos.vy = f64_view(self.vy)
 */
  if (unlikely(!__pyx_v_self->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 682, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->ne);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 682, __pyx_L1_error)
  }
  __pyx_v_self->atmos.ne = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":683
 *         self.atmos.temperature = f64_view(self.temperature)
 *         self.atmos.ne = f64_view(self.ne)
 *         self.atmos.vx = f64_view(self.vx)             # <<<<<<<<<<<<<<
 *         self.atmos.vy = f64_view(self.vy)
 *         self.atmos.vz = f64_view(self.vz)
 */
  if (unlikely(!__pyx_v_self->vx.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 683, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vx);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 683, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vx = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":684
 *         self.atmos.ne = f64_view(self.ne)
 *         self.atmos.vx = f64_view(self.vx)
 *         self.atmos.vy = f64_view(self.vy)             # <<<<<<<<<<<<<<
 *         self.atmos.vz = f64_view(self.vz)
 *         self.atmos.vturb = f64_view(self.vturb)
 */
  if (unlikely(!__pyx_v_self->vy.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 684, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vy);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 684, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vy = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":685
 *         self.atmos.vx = f64_view(self.vx)
 *         self.atmos.vy = f64_view(self.vy)
 *         self.atmos.vz = f64_view(self.vz)             # <<<<<<<<<<<<<<
 *         self.atmos.vturb = f64_view(self.vturb)
 *         self.atmos.nHTot = f64_view(self.nHTot)
 */
  if (unlikely(!__pyx_v_self->vz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 685, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vz);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 685, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vz = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":686
 *         self.atmos.vy = f64_view(self.vy)
 *         self.atmos.vz = f64_view(self.vz)
 *         self.atmos.vturb = f64_view(self.vturb)             # <<<<<<<<<<<<<<
 *         self.atmos.nHTot = f64_view(self.nHTot)
 *         self.atmos.muz = f64_view_2(self.muz)
 */
  if (unlikely(!__pyx_v_self->vturb.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 686, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vturb);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 686, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vturb = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":687
 *         self.atmos.vz = f64_view(self.vz)
 *         self.atmos.vturb = f64_view(self.vturb)
 *         self.atmos.nHTot = f64_view(self.nHTot)             # <<<<<<<<<<<<<<
 *         self.atmos.muz = f64_view_2(self.muz)
 *         self.atmos.muy = f64_view_2(self.muy)
 */
  if (unlikely(!__pyx_v_self->nHTot.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 687, __pyx_L1_error)}
  try {
    __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->nHTot);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 687, __pyx_L1_error)
  }
  __pyx_v_self->atmos.nHTot = __pyx_t_22;

  /* "Source/LwMiddleLayer.pyx":688
 *         self.atmos.vturb = f64_view(self.vturb)
 *         self.atmos.nHTot = f64_view(self.nHTot)
 *         self.atmos.muz = f64_view_2(self.muz)             # <<<<<<<<<<<<<<
 *         self.atmos.muy = f64_view_2(self.muy)
 *         self.atmos.mux = f64_view_2(self.mux)
 */
  if (unlikely(!__pyx_v_self->muz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 688, __pyx_L1_error)}
  try {
    __pyx_t_23 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->muz);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 688, __pyx_L1_error)
  }
  __pyx_v_self->atmos.muz = __pyx_t_23;

  /* "Source/LwMiddleLayer.pyx":689
 *         self.atmos.nHTot = f64_view(self.nHTot)
 *         self.atmos.muz = f64_view_2(self.muz)
 *         self.atmos.muy = f64_view_2(self.muy)             # <<<<<<<<<<<<<<
 *         self.atmos.mux = f64_view_2(self.mux)
 *         self.atmos.wmu = f64_view_2(self.wmu)
 */
  if (unlikely(!__pyx_v_self->muy.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 689, __pyx_L1_error)}
  try {
    __pyx_t_23 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->muy);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 689, __pyx_L1_error)
  }
  __pyx_v_self->atmos.muy = __pyx_t_23;

  /* "Source/LwMiddleLayer.pyx":690
 *         self.atmos.muz = f64_view_2(self.muz)
 *         self.atmos.muy = f64_view_2(self.muy)
 *         self.atmos.mux = f64_view_2(self.mux)             # <<<<<<<<<<<<<<
 *         self.atmos.wmu = f64_view_2(self.wmu)
 *         self.atmos.quadSymm = self.quadSymm
 */
  if (unlikely(!__pyx_v_self->mux.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 690, __pyx_L1_error)}
  try {
    __pyx_t_23 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->mux);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 690, __pyx_L1_error)
  }
  __pyx_v_self->atmos.mux = __pyx_t_23;

  /* "Source/LwMiddleLayer.pyx":691
 *         self.atmos.muy = f64_view_2(self.muy)
 *         self.atmos.mux = f64_view_2(self.mux)
 *         self.atmos.wmu = f64_view_2(self.wmu)             # <<<<<<<<<<<<<<
 *         self.atmos.quadSymm = self.quadSymm
 * 
 */
  if (unlikely(!__pyx_v_self->wmu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 691, __pyx_L1_error)}
  try {
    __pyx_t_23 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->wmu);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 691, __pyx_L1_error)
  }
  __pyx_v_self->atmos.wmu = __pyx_t_23;

  /* "Source/LwMiddleLayer.pyx":692
 *         self.atmos.mux = f64_view_2(self.mux)
 *         self.atmos.wmu = f64_view_2(self.wmu)
 *         self.atmos.quadSymm = self.quadSymm             # <<<<<<<<<<<<<<
 * 
 *         if atmos.B is not None:
 */
  __pyx_t_21 = __pyx_v_self->quadSymm;
  __pyx_v_self->atmos.quadSymm = __pyx_t_21;

  /* "Source/LwMiddleLayer.pyx":694
 *         self.atmos.quadSymm = self.quadSymm
 * 
 *         if atmos.B is not None:             # <<<<<<<<<<<<<<
 *             self.B = atmos.B
 *             check_shape_exception(self.B, Nspace, name='B')
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = (__pyx_t_2 != Py_None);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_24 = (__pyx_t_7 != 0);
  if (__pyx_t_24) {

    /* "Source/LwMiddleLayer.pyx":695
 * 
 *         if atmos.B is not None:
 *             self.B = atmos.B             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.B, Nspace, name='B')
 *             self.gammaB = atmos.gammaB
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 695, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 695, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->B, 0);
    __pyx_v_self->B = __pyx_t_3;
    __pyx_t_3.memview = NULL;
    __pyx_t_3.data = NULL;

    /* "Source/LwMiddleLayer.pyx":696
 *         if atmos.B is not None:
 *             self.B = atmos.B
 *             check_shape_exception(self.B, Nspace, name='B')             # <<<<<<<<<<<<<<
 *             self.gammaB = atmos.gammaB
 *             check_shape_exception(self.gammaB, Nspace, name='gammaB')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(!__pyx_v_self->B.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 696, __pyx_L1_error)}
    __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->B, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_name, __pyx_n_u_B) < 0) __PYX_ERR(0, 696, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 696, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":697
 *             self.B = atmos.B
 *             check_shape_exception(self.B, Nspace, name='B')
 *             self.gammaB = atmos.gammaB             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.gammaB, Nspace, name='gammaB')
 *             self.chiB = atmos.chiB
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_gammaB); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 697, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 697, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->gammaB, 0);
    __pyx_v_self->gammaB = __pyx_t_3;
    __pyx_t_3.memview = NULL;
    __pyx_t_3.data = NULL;

    /* "Source/LwMiddleLayer.pyx":698
 *             check_shape_exception(self.B, Nspace, name='B')
 *             self.gammaB = atmos.gammaB
 *             check_shape_exception(self.gammaB, Nspace, name='gammaB')             # <<<<<<<<<<<<<<
 *             self.chiB = atmos.chiB
 *             check_shape_exception(self.chiB, Nspace, name='chiB')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (unlikely(!__pyx_v_self->gammaB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 698, __pyx_L1_error)}
    __pyx_t_6 = __pyx_memoryview_fromslice(__pyx_v_self->gammaB, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_5);
    __pyx_t_6 = 0;
    __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_name, __pyx_n_u_gammaB) < 0) __PYX_ERR(0, 698, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":699
 *             self.gammaB = atmos.gammaB
 *             check_shape_exception(self.gammaB, Nspace, name='gammaB')
 *             self.chiB = atmos.chiB             # <<<<<<<<<<<<<<
 *             check_shape_exception(self.chiB, Nspace, name='chiB')
 *             if self.B.shape[0] != self.gammaB.shape[0] or self.B.shape[0] != self.chiB.shape[0]:
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_chiB); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_6, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 699, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->chiB, 0);
    __pyx_v_self->chiB = __pyx_t_3;
    __pyx_t_3.memview = NULL;
    __pyx_t_3.data = NULL;

    /* "Source/LwMiddleLayer.pyx":700
 *             check_shape_exception(self.gammaB, Nspace, name='gammaB')
 *             self.chiB = atmos.chiB
 *             check_shape_exception(self.chiB, Nspace, name='chiB')             # <<<<<<<<<<<<<<
 *             if self.B.shape[0] != self.gammaB.shape[0] or self.B.shape[0] != self.chiB.shape[0]:
 *                 raise ValueError(f'Shapes of B, gammaB, and chiB don\'t match, verify that these are correctly set in the Atmosphere provided to Context. (B: {self.B.shape}, chiB: {self.chiB.shape}, gammaB: {self.gammaB.shape}.')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(!__pyx_v_self->chiB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 700, __pyx_L1_error)}
    __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->chiB, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
    __pyx_t_5 = 0;
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_name, __pyx_n_u_chiB) < 0) __PYX_ERR(0, 700, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Source/LwMiddleLayer.pyx":701
 *             self.chiB = atmos.chiB
 *             check_shape_exception(self.chiB, Nspace, name='chiB')
 *             if self.B.shape[0] != self.gammaB.shape[0] or self.B.shape[0] != self.chiB.shape[0]:             # <<<<<<<<<<<<<<
 *                 raise ValueError(f'Shapes of B, gammaB, and chiB don\'t match, verify that these are correctly set in the Atmosphere provided to Context. (B: {self.B.shape}, chiB: {self.chiB.shape}, gammaB: {self.gammaB.shape}.')
 *             self.atmos.B = f64_view(self.B)
 */
    if (unlikely(!__pyx_v_self->B.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 701, __pyx_L1_error)}
    if (unlikely(!__pyx_v_self->gammaB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 701, __pyx_L1_error)}
    __pyx_t_7 = (((__pyx_v_self->B.shape[0]) != (__pyx_v_self->gammaB.shape[0])) != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_24 = __pyx_t_7;
      goto __pyx_L24_bool_binop_done;
    }
    if (unlikely(!__pyx_v_self->B.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 701, __pyx_L1_error)}
    if (unlikely(!__pyx_v_self->chiB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 701, __pyx_L1_error)}
    __pyx_t_7 = (((__pyx_v_self->B.shape[0]) != (__pyx_v_self->chiB.shape[0])) != 0);
    __pyx_t_24 = __pyx_t_7;
    __pyx_L24_bool_binop_done:;
    if (unlikely(__pyx_t_24)) {

      /* "Source/LwMiddleLayer.pyx":702
 *             check_shape_exception(self.chiB, Nspace, name='chiB')
 *             if self.B.shape[0] != self.gammaB.shape[0] or self.B.shape[0] != self.chiB.shape[0]:
 *                 raise ValueError(f'Shapes of B, gammaB, and chiB don\'t match, verify that these are correctly set in the Atmosphere provided to Context. (B: {self.B.shape}, chiB: {self.chiB.shape}, gammaB: {self.gammaB.shape}.')             # <<<<<<<<<<<<<<
 *             self.atmos.B = f64_view(self.B)
 *             self.atmos.gammaB = f64_view(self.gammaB)
 */
      __pyx_t_5 = PyTuple_New(7); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_25 = 0;
      __pyx_t_26 = 127;
      __Pyx_INCREF(__pyx_kp_u_Shapes_of_B_gammaB_and_chiB_don);
      __pyx_t_25 += 122;
      __Pyx_GIVEREF(__pyx_kp_u_Shapes_of_B_gammaB_and_chiB_don);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_Shapes_of_B_gammaB_and_chiB_don);
      if (unlikely(!__pyx_v_self->B.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 702, __pyx_L1_error)}
      __pyx_t_2 = __Pyx_carray_to_py_Py_ssize_t(__pyx_v_self->B.shape, 8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_26 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_26) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_26;
      __pyx_t_25 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
      __pyx_t_4 = 0;
      __Pyx_INCREF(__pyx_kp_u_chiB_2);
      __pyx_t_25 += 8;
      __Pyx_GIVEREF(__pyx_kp_u_chiB_2);
      PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u_chiB_2);
      if (unlikely(!__pyx_v_self->chiB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 702, __pyx_L1_error)}
      __pyx_t_4 = __Pyx_carray_to_py_Py_ssize_t(__pyx_v_self->chiB.shape, 8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_26 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_26) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_26;
      __pyx_t_25 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_2);
      __pyx_t_2 = 0;
      __Pyx_INCREF(__pyx_kp_u_gammaB_2);
      __pyx_t_25 += 10;
      __Pyx_GIVEREF(__pyx_kp_u_gammaB_2);
      PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_kp_u_gammaB_2);
      if (unlikely(!__pyx_v_self->gammaB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 702, __pyx_L1_error)}
      __pyx_t_2 = __Pyx_carray_to_py_Py_ssize_t(__pyx_v_self->gammaB.shape, 8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_26 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_26) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_26;
      __pyx_t_25 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_5, 5, __pyx_t_4);
      __pyx_t_4 = 0;
      __Pyx_INCREF(__pyx_kp_u__6);
      __pyx_t_25 += 1;
      __Pyx_GIVEREF(__pyx_kp_u__6);
      PyTuple_SET_ITEM(__pyx_t_5, 6, __pyx_kp_u__6);
      __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_5, 7, __pyx_t_25, __pyx_t_26); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 702, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_ERR(0, 702, __pyx_L1_error)

      /* "Source/LwMiddleLayer.pyx":701
 *             self.chiB = atmos.chiB
 *             check_shape_exception(self.chiB, Nspace, name='chiB')
 *             if self.B.shape[0] != self.gammaB.shape[0] or self.B.shape[0] != self.chiB.shape[0]:             # <<<<<<<<<<<<<<
 *                 raise ValueError(f'Shapes of B, gammaB, and chiB don\'t match, verify that these are correctly set in the Atmosphere provided to Context. (B: {self.B.shape}, chiB: {self.chiB.shape}, gammaB: {self.gammaB.shape}.')
 *             self.atmos.B = f64_view(self.B)
 */
    }

    /* "Source/LwMiddleLayer.pyx":703
 *             if self.B.shape[0] != self.gammaB.shape[0] or self.B.shape[0] != self.chiB.shape[0]:
 *                 raise ValueError(f'Shapes of B, gammaB, and chiB don\'t match, verify that these are correctly set in the Atmosphere provided to Context. (B: {self.B.shape}, chiB: {self.chiB.shape}, gammaB: {self.gammaB.shape}.')
 *             self.atmos.B = f64_view(self.B)             # <<<<<<<<<<<<<<
 *             self.atmos.gammaB = f64_view(self.gammaB)
 *             self.atmos.chiB = f64_view(self.chiB)
 */
    if (unlikely(!__pyx_v_self->B.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 703, __pyx_L1_error)}
    try {
      __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->B);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 703, __pyx_L1_error)
    }
    __pyx_v_self->atmos.B = __pyx_t_22;

    /* "Source/LwMiddleLayer.pyx":704
 *                 raise ValueError(f'Shapes of B, gammaB, and chiB don\'t match, verify that these are correctly set in the Atmosphere provided to Context. (B: {self.B.shape}, chiB: {self.chiB.shape}, gammaB: {self.gammaB.shape}.')
 *             self.atmos.B = f64_view(self.B)
 *             self.atmos.gammaB = f64_view(self.gammaB)             # <<<<<<<<<<<<<<
 *             self.atmos.chiB = f64_view(self.chiB)
 *             self.cosGamma = np.zeros((Nrays, 2, Nspace))
 */
    if (unlikely(!__pyx_v_self->gammaB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 704, __pyx_L1_error)}
    try {
      __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->gammaB);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 704, __pyx_L1_error)
    }
    __pyx_v_self->atmos.gammaB = __pyx_t_22;

    /* "Source/LwMiddleLayer.pyx":705
 *             self.atmos.B = f64_view(self.B)
 *             self.atmos.gammaB = f64_view(self.gammaB)
 *             self.atmos.chiB = f64_view(self.chiB)             # <<<<<<<<<<<<<<
 *             self.cosGamma = np.zeros((Nrays, 2, Nspace))
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)
 */
    if (unlikely(!__pyx_v_self->chiB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 705, __pyx_L1_error)}
    try {
      __pyx_t_22 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->chiB);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 705, __pyx_L1_error)
    }
    __pyx_v_self->atmos.chiB = __pyx_t_22;

    /* "Source/LwMiddleLayer.pyx":706
 *             self.atmos.gammaB = f64_view(self.gammaB)
 *             self.atmos.chiB = f64_view(self.chiB)
 *             self.cosGamma = np.zeros((Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)
 *             self.cos2chi = np.zeros((Nrays, 2, Nspace))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_4);
    __Pyx_INCREF(__pyx_int_2);
    __Pyx_GIVEREF(__pyx_int_2);
    PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_int_2);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_12);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_27 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_27.memview)) __PYX_ERR(0, 706, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->cosGamma, 0);
    __pyx_v_self->cosGamma = __pyx_t_27;
    __pyx_t_27.memview = NULL;
    __pyx_t_27.data = NULL;

    /* "Source/LwMiddleLayer.pyx":707
 *             self.atmos.chiB = f64_view(self.chiB)
 *             self.cosGamma = np.zeros((Nrays, 2, Nspace))
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)             # <<<<<<<<<<<<<<
 *             self.cos2chi = np.zeros((Nrays, 2, Nspace))
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)
 */
    if (unlikely(!__pyx_v_self->cosGamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 707, __pyx_L1_error)}
    try {
      __pyx_t_28 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->cosGamma);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 707, __pyx_L1_error)
    }
    __pyx_v_self->atmos.cosGamma = __pyx_t_28;

    /* "Source/LwMiddleLayer.pyx":708
 *             self.cosGamma = np.zeros((Nrays, 2, Nspace))
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)
 *             self.cos2chi = np.zeros((Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)
 *             self.sin2chi = np.zeros((Nrays, 2, Nspace))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
    __Pyx_INCREF(__pyx_int_2);
    __Pyx_GIVEREF(__pyx_int_2);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_2);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_6);
    __pyx_t_2 = 0;
    __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
      }
    }
    __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_27 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_27.memview)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->cos2chi, 0);
    __pyx_v_self->cos2chi = __pyx_t_27;
    __pyx_t_27.memview = NULL;
    __pyx_t_27.data = NULL;

    /* "Source/LwMiddleLayer.pyx":709
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)
 *             self.cos2chi = np.zeros((Nrays, 2, Nspace))
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)             # <<<<<<<<<<<<<<
 *             self.sin2chi = np.zeros((Nrays, 2, Nspace))
 *             self.atmos.sin2chi = f64_view_3(self.sin2chi)
 */
    if (unlikely(!__pyx_v_self->cos2chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 709, __pyx_L1_error)}
    try {
      __pyx_t_28 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->cos2chi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 709, __pyx_L1_error)
    }
    __pyx_v_self->atmos.cos2chi = __pyx_t_28;

    /* "Source/LwMiddleLayer.pyx":710
 *             self.cos2chi = np.zeros((Nrays, 2, Nspace))
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)
 *             self.sin2chi = np.zeros((Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.atmos.sin2chi = f64_view_3(self.sin2chi)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 710, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_zeros); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 710, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 710, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 710, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 710, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_12);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_12);
    __Pyx_INCREF(__pyx_int_2);
    __Pyx_GIVEREF(__pyx_int_2);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_int_2);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_6);
    __pyx_t_12 = 0;
    __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 710, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_27 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_27.memview)) __PYX_ERR(0, 710, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->sin2chi, 0);
    __pyx_v_self->sin2chi = __pyx_t_27;
    __pyx_t_27.memview = NULL;
    __pyx_t_27.data = NULL;

    /* "Source/LwMiddleLayer.pyx":711
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)
 *             self.sin2chi = np.zeros((Nrays, 2, Nspace))
 *             self.atmos.sin2chi = f64_view_3(self.sin2chi)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    if (unlikely(!__pyx_v_self->sin2chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 711, __pyx_L1_error)}
    try {
      __pyx_t_28 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->sin2chi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 711, __pyx_L1_error)
    }
    __pyx_v_self->atmos.sin2chi = __pyx_t_28;

    /* "Source/LwMiddleLayer.pyx":694
 *         self.atmos.quadSymm = self.quadSymm
 * 
 *         if atmos.B is not None:             # <<<<<<<<<<<<<<
 *             self.B = atmos.B
 *             check_shape_exception(self.B, Nspace, name='B')
 */
  }

  /* "Source/LwMiddleLayer.pyx":714
 * 
 * 
 *         self.vlosMu = np.zeros((Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_4);
  __Pyx_INCREF(__pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_int_2);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_6);
  __pyx_t_4 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_6, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_12);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_27 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_27.memview)) __PYX_ERR(0, 714, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vlosMu, 0);
  __pyx_v_self->vlosMu = __pyx_t_27;
  __pyx_t_27.memview = NULL;
  __pyx_t_27.data = NULL;

  /* "Source/LwMiddleLayer.pyx":715
 * 
 *         self.vlosMu = np.zeros((Nrays, 2, Nspace))
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)             # <<<<<<<<<<<<<<
 * 
 *         self.configure_bcs(atmos)
 */
  if (unlikely(!__pyx_v_self->vlosMu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 715, __pyx_L1_error)}
  try {
    __pyx_t_28 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->vlosMu);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 715, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vlosMu = __pyx_t_28;

  /* "Source/LwMiddleLayer.pyx":717
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)
 * 
 *         self.configure_bcs(atmos)             # <<<<<<<<<<<<<<
 *         self.update_projections()
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_configure_bcs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_12 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_12)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_12);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_5 = (__pyx_t_12) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_12, __pyx_v_atmos) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_atmos);
  __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":718
 * 
 *         self.configure_bcs(atmos)
 *         self.update_projections()             # <<<<<<<<<<<<<<
 * 
 *     def configure_bcs(self, atmos):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_projections); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 718, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_12 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_12)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_12);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_5 = (__pyx_t_12) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_12) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 718, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":621
 *     cdef public object pyAtmos
 * 
 *     def __init__(self, atmos, Nwavelengths):             # <<<<<<<<<<<<<<
 *         cdef int Nwave = Nwavelengths
 *         self.Nwave = Nwave
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __PYX_XDEC_MEMVIEW(&__pyx_t_3, 1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __PYX_XDEC_MEMVIEW(&__pyx_t_11, 1);
  __Pyx_XDECREF(__pyx_t_12);
  __PYX_XDEC_MEMVIEW(&__pyx_t_27, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":720
 *         self.update_projections()
 * 
 *     def configure_bcs(self, atmos):             # <<<<<<<<<<<<<<
 *         cdef int Nx = max(atmos.Nx, 1)
 *         cdef int Ny = max(atmos.Ny, 1)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3configure_bcs(PyObject *__pyx_v_self, PyObject *__pyx_v_atmos); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3configure_bcs(PyObject *__pyx_v_self, PyObject *__pyx_v_atmos) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("configure_bcs (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2configure_bcs(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self), ((PyObject *)__pyx_v_atmos));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2configure_bcs(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, PyObject *__pyx_v_atmos) {
  int __pyx_v_Nx;
  int __pyx_v_Ny;
  int __pyx_v_Nz;
  int __pyx_v_Nbcx;
  int __pyx_v_Nbcy;
  int __pyx_v_Nbcz;
  int __pyx_v_Nrays;
  PyObject *__pyx_v_s = NULL;
  __Pyx_memviewslice __pyx_v_xLowerIdxs = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_xUpperIdxs = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_yLowerIdxs = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_yUpperIdxs = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_zLowerIdxs = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_zUpperIdxs = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  enum RadiationBc __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("configure_bcs", 0);

  /* "Source/LwMiddleLayer.pyx":721
 * 
 *     def configure_bcs(self, atmos):
 *         cdef int Nx = max(atmos.Nx, 1)             # <<<<<<<<<<<<<<
 *         cdef int Ny = max(atmos.Ny, 1)
 *         cdef int Nz = atmos.Nz
 */
  __pyx_t_1 = 1;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 721, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 721, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_4, __pyx_t_2, Py_GT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 721, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 721, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_6) {
    __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 721, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __pyx_t_5;
    __pyx_t_5 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = __pyx_t_2;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 721, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_Nx = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":722
 *     def configure_bcs(self, atmos):
 *         cdef int Nx = max(atmos.Nx, 1)
 *         cdef int Ny = max(atmos.Ny, 1)             # <<<<<<<<<<<<<<
 *         cdef int Nz = atmos.Nz
 * 
 */
  __pyx_t_1 = 1;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Ny); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyObject_RichCompare(__pyx_t_5, __pyx_t_3, Py_GT); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__pyx_t_6) {
    __pyx_t_4 = __Pyx_PyInt_From_long(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 722, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __pyx_t_4;
    __pyx_t_4 = 0;
  } else {
    __Pyx_INCREF(__pyx_t_3);
    __pyx_t_2 = __pyx_t_3;
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 722, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Ny = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":723
 *         cdef int Nx = max(atmos.Nx, 1)
 *         cdef int Ny = max(atmos.Ny, 1)
 *         cdef int Nz = atmos.Nz             # <<<<<<<<<<<<<<
 * 
 *         cdef int Nbcx = Nz * Ny
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nz); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nz = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":725
 *         cdef int Nz = atmos.Nz
 * 
 *         cdef int Nbcx = Nz * Ny             # <<<<<<<<<<<<<<
 *         cdef int Nbcy = Nz * Nx
 *         cdef int Nbcz = Nx * Ny
 */
  __pyx_v_Nbcx = (__pyx_v_Nz * __pyx_v_Ny);

  /* "Source/LwMiddleLayer.pyx":726
 * 
 *         cdef int Nbcx = Nz * Ny
 *         cdef int Nbcy = Nz * Nx             # <<<<<<<<<<<<<<
 *         cdef int Nbcz = Nx * Ny
 * 
 */
  __pyx_v_Nbcy = (__pyx_v_Nz * __pyx_v_Nx);

  /* "Source/LwMiddleLayer.pyx":727
 *         cdef int Nbcx = Nz * Ny
 *         cdef int Nbcy = Nz * Nx
 *         cdef int Nbcz = Nx * Ny             # <<<<<<<<<<<<<<
 * 
 *         cdef int Nrays = self.Nrays
 */
  __pyx_v_Nbcz = (__pyx_v_Nx * __pyx_v_Ny);

  /* "Source/LwMiddleLayer.pyx":729
 *         cdef int Nbcz = Nx * Ny
 * 
 *         cdef int Nrays = self.Nrays             # <<<<<<<<<<<<<<
 *         s = atmos.structure
 *         cdef np.int32_t[:,::1] xLowerIdxs = self.pyAtmos.xLowerBc.indexVector
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 729, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 729, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nrays = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":730
 * 
 *         cdef int Nrays = self.Nrays
 *         s = atmos.structure             # <<<<<<<<<<<<<<
 *         cdef np.int32_t[:,::1] xLowerIdxs = self.pyAtmos.xLowerBc.indexVector
 *         self.atmos.xLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.xLowerBc),
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_structure); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 730, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_s = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":731
 *         cdef int Nrays = self.Nrays
 *         s = atmos.structure
 *         cdef np.int32_t[:,::1] xLowerIdxs = self.pyAtmos.xLowerBc.indexVector             # <<<<<<<<<<<<<<
 *         self.atmos.xLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.xLowerBc),
 *                                                            self.Nwave, Nrays, Nbcx,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_xLowerBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 731, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 731, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_5numpy_int32_t(__pyx_t_3, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 731, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_xLowerIdxs = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":732
 *         s = atmos.structure
 *         cdef np.int32_t[:,::1] xLowerIdxs = self.pyAtmos.xLowerBc.indexVector
 *         self.atmos.xLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.xLowerBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcx,
 *                                                            BcIdxs(&xLowerIdxs[0,0],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BC_to_enum); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_xLowerBc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_9 = ((enum RadiationBc)__Pyx_PyInt_As_enum__RadiationBc(__pyx_t_3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 732, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":734
 *         self.atmos.xLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.xLowerBc),
 *                                                            self.Nwave, Nrays, Nbcx,
 *                                                            BcIdxs(&xLowerIdxs[0,0],             # <<<<<<<<<<<<<<
 *                                                                   xLowerIdxs.shape[0],
 *                                                                   xLowerIdxs.shape[1]))
 */
  __pyx_t_10 = 0;
  __pyx_t_11 = 0;
  __pyx_t_7 = -1;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_v_xLowerIdxs.shape[0];
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_7 = 0;
  } else if (unlikely(__pyx_t_10 >= __pyx_v_xLowerIdxs.shape[0])) __pyx_t_7 = 0;
  if (__pyx_t_11 < 0) {
    __pyx_t_11 += __pyx_v_xLowerIdxs.shape[1];
    if (unlikely(__pyx_t_11 < 0)) __pyx_t_7 = 1;
  } else if (unlikely(__pyx_t_11 >= __pyx_v_xLowerIdxs.shape[1])) __pyx_t_7 = 1;
  if (unlikely(__pyx_t_7 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_7);
    __PYX_ERR(0, 734, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":732
 *         s = atmos.structure
 *         cdef np.int32_t[:,::1] xLowerIdxs = self.pyAtmos.xLowerBc.indexVector
 *         self.atmos.xLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.xLowerBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcx,
 *                                                            BcIdxs(&xLowerIdxs[0,0],
 */
  __pyx_v_self->atmos.xLowerBc = AtmosphericBoundaryCondition(__pyx_t_9, __pyx_v_self->Nwave, __pyx_v_Nrays, __pyx_v_Nbcx, __pyx_t_11lightweaver_10LwCompiled_BcIdxs((&(*((__pyx_t_5numpy_int32_t *) ( /* dim=1 */ ((char *) (((__pyx_t_5numpy_int32_t *) ( /* dim=0 */ (__pyx_v_xLowerIdxs.data + __pyx_t_10 * __pyx_v_xLowerIdxs.strides[0]) )) + __pyx_t_11)) )))), (__pyx_v_xLowerIdxs.shape[0]), (__pyx_v_xLowerIdxs.shape[1])));

  /* "Source/LwMiddleLayer.pyx":737
 *                                                                   xLowerIdxs.shape[0],
 *                                                                   xLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] xUpperIdxs = self.pyAtmos.xUpperBc.indexVector             # <<<<<<<<<<<<<<
 *         self.atmos.xUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.xUpperBc),
 *                                                            self.Nwave, Nrays, Nbcx,
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_xUpperBc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_5numpy_int32_t(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 737, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_xUpperIdxs = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":738
 *                                                                   xLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] xUpperIdxs = self.pyAtmos.xUpperBc.indexVector
 *         self.atmos.xUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.xUpperBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcx,
 *                                                            BcIdxs(&xUpperIdxs[0,0],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_BC_to_enum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_xUpperBc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = ((enum RadiationBc)__Pyx_PyInt_As_enum__RadiationBc(__pyx_t_2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":740
 *         self.atmos.xUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.xUpperBc),
 *                                                            self.Nwave, Nrays, Nbcx,
 *                                                            BcIdxs(&xUpperIdxs[0,0],             # <<<<<<<<<<<<<<
 *                                                                   xUpperIdxs.shape[0],
 *                                                                   xUpperIdxs.shape[1]))
 */
  __pyx_t_11 = 0;
  __pyx_t_10 = 0;
  __pyx_t_7 = -1;
  if (__pyx_t_11 < 0) {
    __pyx_t_11 += __pyx_v_xUpperIdxs.shape[0];
    if (unlikely(__pyx_t_11 < 0)) __pyx_t_7 = 0;
  } else if (unlikely(__pyx_t_11 >= __pyx_v_xUpperIdxs.shape[0])) __pyx_t_7 = 0;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_v_xUpperIdxs.shape[1];
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_7 = 1;
  } else if (unlikely(__pyx_t_10 >= __pyx_v_xUpperIdxs.shape[1])) __pyx_t_7 = 1;
  if (unlikely(__pyx_t_7 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_7);
    __PYX_ERR(0, 740, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":738
 *                                                                   xLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] xUpperIdxs = self.pyAtmos.xUpperBc.indexVector
 *         self.atmos.xUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.xUpperBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcx,
 *                                                            BcIdxs(&xUpperIdxs[0,0],
 */
  __pyx_v_self->atmos.xUpperBc = AtmosphericBoundaryCondition(__pyx_t_9, __pyx_v_self->Nwave, __pyx_v_Nrays, __pyx_v_Nbcx, __pyx_t_11lightweaver_10LwCompiled_BcIdxs((&(*((__pyx_t_5numpy_int32_t *) ( /* dim=1 */ ((char *) (((__pyx_t_5numpy_int32_t *) ( /* dim=0 */ (__pyx_v_xUpperIdxs.data + __pyx_t_11 * __pyx_v_xUpperIdxs.strides[0]) )) + __pyx_t_10)) )))), (__pyx_v_xUpperIdxs.shape[0]), (__pyx_v_xUpperIdxs.shape[1])));

  /* "Source/LwMiddleLayer.pyx":743
 *                                                                   xUpperIdxs.shape[0],
 *                                                                   xUpperIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] yLowerIdxs = self.pyAtmos.yLowerBc.indexVector             # <<<<<<<<<<<<<<
 *         self.atmos.yLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.yLowerBc),
 *                                                            self.Nwave, Nrays, Nbcy,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_yLowerBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_5numpy_int32_t(__pyx_t_3, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 743, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_yLowerIdxs = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":744
 *                                                                   xUpperIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] yLowerIdxs = self.pyAtmos.yLowerBc.indexVector
 *         self.atmos.yLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.yLowerBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcy,
 *                                                            BcIdxs(&yLowerIdxs[0,0],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BC_to_enum); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_yLowerBc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_9 = ((enum RadiationBc)__Pyx_PyInt_As_enum__RadiationBc(__pyx_t_3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 744, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":746
 *         self.atmos.yLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.yLowerBc),
 *                                                            self.Nwave, Nrays, Nbcy,
 *                                                            BcIdxs(&yLowerIdxs[0,0],             # <<<<<<<<<<<<<<
 *                                                                   yLowerIdxs.shape[0],
 *                                                                   yLowerIdxs.shape[1]))
 */
  __pyx_t_10 = 0;
  __pyx_t_11 = 0;
  __pyx_t_7 = -1;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_v_yLowerIdxs.shape[0];
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_7 = 0;
  } else if (unlikely(__pyx_t_10 >= __pyx_v_yLowerIdxs.shape[0])) __pyx_t_7 = 0;
  if (__pyx_t_11 < 0) {
    __pyx_t_11 += __pyx_v_yLowerIdxs.shape[1];
    if (unlikely(__pyx_t_11 < 0)) __pyx_t_7 = 1;
  } else if (unlikely(__pyx_t_11 >= __pyx_v_yLowerIdxs.shape[1])) __pyx_t_7 = 1;
  if (unlikely(__pyx_t_7 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_7);
    __PYX_ERR(0, 746, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":744
 *                                                                   xUpperIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] yLowerIdxs = self.pyAtmos.yLowerBc.indexVector
 *         self.atmos.yLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.yLowerBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcy,
 *                                                            BcIdxs(&yLowerIdxs[0,0],
 */
  __pyx_v_self->atmos.yLowerBc = AtmosphericBoundaryCondition(__pyx_t_9, __pyx_v_self->Nwave, __pyx_v_Nrays, __pyx_v_Nbcy, __pyx_t_11lightweaver_10LwCompiled_BcIdxs((&(*((__pyx_t_5numpy_int32_t *) ( /* dim=1 */ ((char *) (((__pyx_t_5numpy_int32_t *) ( /* dim=0 */ (__pyx_v_yLowerIdxs.data + __pyx_t_10 * __pyx_v_yLowerIdxs.strides[0]) )) + __pyx_t_11)) )))), (__pyx_v_yLowerIdxs.shape[0]), (__pyx_v_yLowerIdxs.shape[1])));

  /* "Source/LwMiddleLayer.pyx":749
 *                                                                   yLowerIdxs.shape[0],
 *                                                                   yLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] yUpperIdxs = self.pyAtmos.yUpperBc.indexVector             # <<<<<<<<<<<<<<
 *         self.atmos.yUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.yUpperBc),
 *                                                            self.Nwave, Nrays, Nbcy,
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_yUpperBc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_5numpy_int32_t(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 749, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_yUpperIdxs = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":750
 *                                                                   yLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] yUpperIdxs = self.pyAtmos.yUpperBc.indexVector
 *         self.atmos.yUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.yUpperBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcy,
 *                                                            BcIdxs(&yUpperIdxs[0,0],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_BC_to_enum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 750, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_yUpperBc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 750, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 750, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = ((enum RadiationBc)__Pyx_PyInt_As_enum__RadiationBc(__pyx_t_2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 750, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":752
 *         self.atmos.yUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.yUpperBc),
 *                                                            self.Nwave, Nrays, Nbcy,
 *                                                            BcIdxs(&yUpperIdxs[0,0],             # <<<<<<<<<<<<<<
 *                                                                   yUpperIdxs.shape[0],
 *                                                                   yLowerIdxs.shape[1]))
 */
  __pyx_t_11 = 0;
  __pyx_t_10 = 0;
  __pyx_t_7 = -1;
  if (__pyx_t_11 < 0) {
    __pyx_t_11 += __pyx_v_yUpperIdxs.shape[0];
    if (unlikely(__pyx_t_11 < 0)) __pyx_t_7 = 0;
  } else if (unlikely(__pyx_t_11 >= __pyx_v_yUpperIdxs.shape[0])) __pyx_t_7 = 0;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_v_yUpperIdxs.shape[1];
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_7 = 1;
  } else if (unlikely(__pyx_t_10 >= __pyx_v_yUpperIdxs.shape[1])) __pyx_t_7 = 1;
  if (unlikely(__pyx_t_7 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_7);
    __PYX_ERR(0, 752, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":750
 *                                                                   yLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] yUpperIdxs = self.pyAtmos.yUpperBc.indexVector
 *         self.atmos.yUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.yUpperBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcy,
 *                                                            BcIdxs(&yUpperIdxs[0,0],
 */
  __pyx_v_self->atmos.yUpperBc = AtmosphericBoundaryCondition(__pyx_t_9, __pyx_v_self->Nwave, __pyx_v_Nrays, __pyx_v_Nbcy, __pyx_t_11lightweaver_10LwCompiled_BcIdxs((&(*((__pyx_t_5numpy_int32_t *) ( /* dim=1 */ ((char *) (((__pyx_t_5numpy_int32_t *) ( /* dim=0 */ (__pyx_v_yUpperIdxs.data + __pyx_t_11 * __pyx_v_yUpperIdxs.strides[0]) )) + __pyx_t_10)) )))), (__pyx_v_yUpperIdxs.shape[0]), (__pyx_v_yLowerIdxs.shape[1])));

  /* "Source/LwMiddleLayer.pyx":755
 *                                                                   yUpperIdxs.shape[0],
 *                                                                   yLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] zLowerIdxs = self.pyAtmos.zLowerBc.indexVector             # <<<<<<<<<<<<<<
 *         self.atmos.zLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.zLowerBc),
 *                                                            self.Nwave, Nrays, Nbcz,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_zLowerBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 755, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 755, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_5numpy_int32_t(__pyx_t_3, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 755, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_zLowerIdxs = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":756
 *                                                                   yLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] zLowerIdxs = self.pyAtmos.zLowerBc.indexVector
 *         self.atmos.zLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.zLowerBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcz,
 *                                                            BcIdxs(&zLowerIdxs[0,0],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BC_to_enum); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_zLowerBc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_9 = ((enum RadiationBc)__Pyx_PyInt_As_enum__RadiationBc(__pyx_t_3)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 756, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":758
 *         self.atmos.zLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.zLowerBc),
 *                                                            self.Nwave, Nrays, Nbcz,
 *                                                            BcIdxs(&zLowerIdxs[0,0],             # <<<<<<<<<<<<<<
 *                                                                   zLowerIdxs.shape[0],
 *                                                                   zLowerIdxs.shape[1]))
 */
  __pyx_t_10 = 0;
  __pyx_t_11 = 0;
  __pyx_t_7 = -1;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_v_zLowerIdxs.shape[0];
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_7 = 0;
  } else if (unlikely(__pyx_t_10 >= __pyx_v_zLowerIdxs.shape[0])) __pyx_t_7 = 0;
  if (__pyx_t_11 < 0) {
    __pyx_t_11 += __pyx_v_zLowerIdxs.shape[1];
    if (unlikely(__pyx_t_11 < 0)) __pyx_t_7 = 1;
  } else if (unlikely(__pyx_t_11 >= __pyx_v_zLowerIdxs.shape[1])) __pyx_t_7 = 1;
  if (unlikely(__pyx_t_7 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_7);
    __PYX_ERR(0, 758, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":756
 *                                                                   yLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] zLowerIdxs = self.pyAtmos.zLowerBc.indexVector
 *         self.atmos.zLowerBc = AtmosphericBoundaryCondition(BC_to_enum(s.zLowerBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcz,
 *                                                            BcIdxs(&zLowerIdxs[0,0],
 */
  __pyx_v_self->atmos.zLowerBc = AtmosphericBoundaryCondition(__pyx_t_9, __pyx_v_self->Nwave, __pyx_v_Nrays, __pyx_v_Nbcz, __pyx_t_11lightweaver_10LwCompiled_BcIdxs((&(*((__pyx_t_5numpy_int32_t *) ( /* dim=1 */ ((char *) (((__pyx_t_5numpy_int32_t *) ( /* dim=0 */ (__pyx_v_zLowerIdxs.data + __pyx_t_10 * __pyx_v_zLowerIdxs.strides[0]) )) + __pyx_t_11)) )))), (__pyx_v_zLowerIdxs.shape[0]), (__pyx_v_zLowerIdxs.shape[1])));

  /* "Source/LwMiddleLayer.pyx":761
 *                                                                   zLowerIdxs.shape[0],
 *                                                                   zLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] zUpperIdxs = self.pyAtmos.zUpperBc.indexVector             # <<<<<<<<<<<<<<
 *         self.atmos.zUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.zUpperBc),
 *                                                            self.Nwave, Nrays, Nbcz,
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_zUpperBc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_5numpy_int32_t(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 761, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_zUpperIdxs = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":762
 *                                                                   zLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] zUpperIdxs = self.pyAtmos.zUpperBc.indexVector
 *         self.atmos.zUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.zUpperBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcz,
 *                                                            BcIdxs(&zUpperIdxs[0,0],
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_BC_to_enum); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_zUpperBc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_9 = ((enum RadiationBc)__Pyx_PyInt_As_enum__RadiationBc(__pyx_t_2)); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":764
 *         self.atmos.zUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.zUpperBc),
 *                                                            self.Nwave, Nrays, Nbcz,
 *                                                            BcIdxs(&zUpperIdxs[0,0],             # <<<<<<<<<<<<<<
 *                                                                   zUpperIdxs.shape[0],
 *                                                                   zUpperIdxs.shape[1]))
 */
  __pyx_t_11 = 0;
  __pyx_t_10 = 0;
  __pyx_t_7 = -1;
  if (__pyx_t_11 < 0) {
    __pyx_t_11 += __pyx_v_zUpperIdxs.shape[0];
    if (unlikely(__pyx_t_11 < 0)) __pyx_t_7 = 0;
  } else if (unlikely(__pyx_t_11 >= __pyx_v_zUpperIdxs.shape[0])) __pyx_t_7 = 0;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_v_zUpperIdxs.shape[1];
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_7 = 1;
  } else if (unlikely(__pyx_t_10 >= __pyx_v_zUpperIdxs.shape[1])) __pyx_t_7 = 1;
  if (unlikely(__pyx_t_7 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_7);
    __PYX_ERR(0, 764, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":762
 *                                                                   zLowerIdxs.shape[1]))
 *         cdef np.int32_t[:,::1] zUpperIdxs = self.pyAtmos.zUpperBc.indexVector
 *         self.atmos.zUpperBc = AtmosphericBoundaryCondition(BC_to_enum(s.zUpperBc),             # <<<<<<<<<<<<<<
 *                                                            self.Nwave, Nrays, Nbcz,
 *                                                            BcIdxs(&zUpperIdxs[0,0],
 */
  __pyx_v_self->atmos.zUpperBc = AtmosphericBoundaryCondition(__pyx_t_9, __pyx_v_self->Nwave, __pyx_v_Nrays, __pyx_v_Nbcz, __pyx_t_11lightweaver_10LwCompiled_BcIdxs((&(*((__pyx_t_5numpy_int32_t *) ( /* dim=1 */ ((char *) (((__pyx_t_5numpy_int32_t *) ( /* dim=0 */ (__pyx_v_zUpperIdxs.data + __pyx_t_11 * __pyx_v_zUpperIdxs.strides[0]) )) + __pyx_t_10)) )))), (__pyx_v_zUpperIdxs.shape[0]), (__pyx_v_zUpperIdxs.shape[1])));

  /* "Source/LwMiddleLayer.pyx":720
 *         self.update_projections()
 * 
 *     def configure_bcs(self, atmos):             # <<<<<<<<<<<<<<
 *         cdef int Nx = max(atmos.Nx, 1)
 *         cdef int Ny = max(atmos.Ny, 1)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.configure_bcs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __PYX_XDEC_MEMVIEW(&__pyx_v_xLowerIdxs, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_xUpperIdxs, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_yLowerIdxs, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_yUpperIdxs, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_zLowerIdxs, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_zUpperIdxs, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":768
 *                                                                   zUpperIdxs.shape[1]))
 * 
 *     def compute_bcs(self, LwSpectrum spect):             # <<<<<<<<<<<<<<
 *         cdef f64[:,:,::1] bc
 *         cdef int mu, la
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5compute_bcs(PyObject *__pyx_v_self, PyObject *__pyx_v_spect); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5compute_bcs(PyObject *__pyx_v_self, PyObject *__pyx_v_spect) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_bcs (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_spect), __pyx_ptype_11lightweaver_10LwCompiled_LwSpectrum, 1, "spect", 0))) __PYX_ERR(0, 768, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4compute_bcs(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self), ((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_spect));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4compute_bcs(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_spect) {
  __Pyx_memviewslice __pyx_v_bc = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View3D __pyx_v_data;
  AtmosphericBoundaryCondition *__pyx_v_abc;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_t_9;
  __pyx_t_8CmoArray_F64View3D __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_bcs", 0);

  /* "Source/LwMiddleLayer.pyx":774
 *         cdef AtmosphericBoundaryCondition* abc
 * 
 *         if self.atmos.zLowerBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.zLowerBc.indexVector == -1):
 *                 abc = &self.atmos.zLowerBc
 */
  __pyx_t_1 = ((__pyx_v_self->atmos.zLowerBc.type == CALLABLE) != 0);
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":775
 * 
 *         if self.atmos.zLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.zLowerBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.zLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_all); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_zLowerBc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 775, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 775, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "Source/LwMiddleLayer.pyx":776
 *         if self.atmos.zLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.zLowerBc.indexVector == -1):
 *                 abc = &self.atmos.zLowerBc             # <<<<<<<<<<<<<<
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 */
      __pyx_v_abc = (&__pyx_v_self->atmos.zLowerBc);

      /* "Source/LwMiddleLayer.pyx":777
 *             if np.all(self.pyAtmos.zLowerBc.indexVector == -1):
 *                 abc = &self.atmos.zLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))             # <<<<<<<<<<<<<<
 *             else:
 *                 bc = self.pyAtmos.zLowerBc.compute_bc(self.pyAtmos, spect)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->Nwave); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(2)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_6);
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;

      /* "Source/LwMiddleLayer.pyx":775
 * 
 *         if self.atmos.zLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.zLowerBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.zLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
      goto __pyx_L4;
    }

    /* "Source/LwMiddleLayer.pyx":779
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 *                 bc = self.pyAtmos.zLowerBc.compute_bc(self.pyAtmos, spect)             # <<<<<<<<<<<<<<
 *             verify_bc_array_sizes(&self.atmos.zLowerBc, bc, 'zLowerBc')
 *             data = f64_view_3(bc)
 */
    /*else*/ {
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_zLowerBc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_compute_bc); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_9 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_7)) {
        PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 779, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
        PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 779, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_6 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 779, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (__pyx_t_3) {
          __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
        }
        __Pyx_INCREF(__pyx_v_self->pyAtmos);
        __Pyx_GIVEREF(__pyx_v_self->pyAtmos);
        PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_9, __pyx_v_self->pyAtmos);
        __Pyx_INCREF(((PyObject *)__pyx_v_spect));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_spect));
        PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_9, ((PyObject *)__pyx_v_spect));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 779, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 779, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;
    }
    __pyx_L4:;

    /* "Source/LwMiddleLayer.pyx":780
 *             else:
 *                 bc = self.pyAtmos.zLowerBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.zLowerBc, bc, 'zLowerBc')             # <<<<<<<<<<<<<<
 *             data = f64_view_3(bc)
 *             self.atmos.zLowerBc.set_bc_data(data)
 */
    __pyx_t_2 = __pyx_f_11lightweaver_10LwCompiled_verify_bc_array_sizes((&__pyx_v_self->atmos.zLowerBc), __pyx_v_bc, __pyx_n_u_zLowerBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 780, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":781
 *                 bc = self.pyAtmos.zLowerBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.zLowerBc, bc, 'zLowerBc')
 *             data = f64_view_3(bc)             # <<<<<<<<<<<<<<
 *             self.atmos.zLowerBc.set_bc_data(data)
 * 
 */
    try {
      __pyx_t_10 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_bc);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 781, __pyx_L1_error)
    }
    __pyx_v_data = __pyx_t_10;

    /* "Source/LwMiddleLayer.pyx":782
 *             verify_bc_array_sizes(&self.atmos.zLowerBc, bc, 'zLowerBc')
 *             data = f64_view_3(bc)
 *             self.atmos.zLowerBc.set_bc_data(data)             # <<<<<<<<<<<<<<
 * 
 *         if self.atmos.zUpperBc.type == CALLABLE:
 */
    __pyx_v_self->atmos.zLowerBc.set_bc_data(__pyx_v_data);

    /* "Source/LwMiddleLayer.pyx":774
 *         cdef AtmosphericBoundaryCondition* abc
 * 
 *         if self.atmos.zLowerBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.zLowerBc.indexVector == -1):
 *                 abc = &self.atmos.zLowerBc
 */
  }

  /* "Source/LwMiddleLayer.pyx":784
 *             self.atmos.zLowerBc.set_bc_data(data)
 * 
 *         if self.atmos.zUpperBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.zUpperBc.indexVector == -1):
 *                 abc = &self.atmos.zUpperBc
 */
  __pyx_t_1 = ((__pyx_v_self->atmos.zUpperBc.type == CALLABLE) != 0);
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":785
 * 
 *         if self.atmos.zUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.zUpperBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.zUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_all); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_zUpperBc); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyInt_EqObjC(__pyx_t_3, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 785, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "Source/LwMiddleLayer.pyx":786
 *         if self.atmos.zUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.zUpperBc.indexVector == -1):
 *                 abc = &self.atmos.zUpperBc             # <<<<<<<<<<<<<<
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 */
      __pyx_v_abc = (&__pyx_v_self->atmos.zUpperBc);

      /* "Source/LwMiddleLayer.pyx":787
 *             if np.all(self.pyAtmos.zUpperBc.indexVector == -1):
 *                 abc = &self.atmos.zUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))             # <<<<<<<<<<<<<<
 *             else:
 *                 bc = self.pyAtmos.zUpperBc.compute_bc(self.pyAtmos, spect)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 787, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 787, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_self->Nwave); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 787, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(1)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 787, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(2)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 787, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 787, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_5);
      __pyx_t_6 = 0;
      __pyx_t_3 = 0;
      __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
        }
      }
      __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 787, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 787, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;

      /* "Source/LwMiddleLayer.pyx":785
 * 
 *         if self.atmos.zUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.zUpperBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.zUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
      goto __pyx_L6;
    }

    /* "Source/LwMiddleLayer.pyx":789
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 *                 bc = self.pyAtmos.zUpperBc.compute_bc(self.pyAtmos, spect)             # <<<<<<<<<<<<<<
 *             verify_bc_array_sizes(&self.atmos.zUpperBc, bc, 'zUpperBc')
 *             data = f64_view_3(bc)
 */
    /*else*/ {
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_zUpperBc); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 789, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_compute_bc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 789, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_9 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 789, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
        PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 789, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_5 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 789, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (__pyx_t_7) {
          __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7); __pyx_t_7 = NULL;
        }
        __Pyx_INCREF(__pyx_v_self->pyAtmos);
        __Pyx_GIVEREF(__pyx_v_self->pyAtmos);
        PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_9, __pyx_v_self->pyAtmos);
        __Pyx_INCREF(((PyObject *)__pyx_v_spect));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_spect));
        PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_9, ((PyObject *)__pyx_v_spect));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 789, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 789, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;
    }
    __pyx_L6:;

    /* "Source/LwMiddleLayer.pyx":790
 *             else:
 *                 bc = self.pyAtmos.zUpperBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.zUpperBc, bc, 'zUpperBc')             # <<<<<<<<<<<<<<
 *             data = f64_view_3(bc)
 *             self.atmos.zUpperBc.set_bc_data(data)
 */
    __pyx_t_2 = __pyx_f_11lightweaver_10LwCompiled_verify_bc_array_sizes((&__pyx_v_self->atmos.zUpperBc), __pyx_v_bc, __pyx_n_u_zUpperBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 790, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":791
 *                 bc = self.pyAtmos.zUpperBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.zUpperBc, bc, 'zUpperBc')
 *             data = f64_view_3(bc)             # <<<<<<<<<<<<<<
 *             self.atmos.zUpperBc.set_bc_data(data)
 * 
 */
    try {
      __pyx_t_10 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_bc);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 791, __pyx_L1_error)
    }
    __pyx_v_data = __pyx_t_10;

    /* "Source/LwMiddleLayer.pyx":792
 *             verify_bc_array_sizes(&self.atmos.zUpperBc, bc, 'zUpperBc')
 *             data = f64_view_3(bc)
 *             self.atmos.zUpperBc.set_bc_data(data)             # <<<<<<<<<<<<<<
 * 
 *         if self.atmos.xLowerBc.type == CALLABLE:
 */
    __pyx_v_self->atmos.zUpperBc.set_bc_data(__pyx_v_data);

    /* "Source/LwMiddleLayer.pyx":784
 *             self.atmos.zLowerBc.set_bc_data(data)
 * 
 *         if self.atmos.zUpperBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.zUpperBc.indexVector == -1):
 *                 abc = &self.atmos.zUpperBc
 */
  }

  /* "Source/LwMiddleLayer.pyx":794
 *             self.atmos.zUpperBc.set_bc_data(data)
 * 
 *         if self.atmos.xLowerBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.xLowerBc.indexVector == -1):
 *                 abc = &self.atmos.xLowerBc
 */
  __pyx_t_1 = ((__pyx_v_self->atmos.xLowerBc.type == CALLABLE) != 0);
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":795
 * 
 *         if self.atmos.xLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.xLowerBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.xLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_all); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_xLowerBc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyInt_EqObjC(__pyx_t_7, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 795, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "Source/LwMiddleLayer.pyx":796
 *         if self.atmos.xLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.xLowerBc.indexVector == -1):
 *                 abc = &self.atmos.xLowerBc             # <<<<<<<<<<<<<<
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 */
      __pyx_v_abc = (&__pyx_v_self->atmos.xLowerBc);

      /* "Source/LwMiddleLayer.pyx":797
 *             if np.all(self.pyAtmos.xLowerBc.indexVector == -1):
 *                 abc = &self.atmos.xLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))             # <<<<<<<<<<<<<<
 *             else:
 *                 bc = self.pyAtmos.xLowerBc.compute_bc(self.pyAtmos, spect)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 797, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_zeros); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 797, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->Nwave); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 797, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(1)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 797, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(2)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 797, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 797, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_3);
      __pyx_t_5 = 0;
      __pyx_t_7 = 0;
      __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 797, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 797, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;

      /* "Source/LwMiddleLayer.pyx":795
 * 
 *         if self.atmos.xLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.xLowerBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.xLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
      goto __pyx_L8;
    }

    /* "Source/LwMiddleLayer.pyx":799
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 *                 bc = self.pyAtmos.xLowerBc.compute_bc(self.pyAtmos, spect)             # <<<<<<<<<<<<<<
 *             verify_bc_array_sizes(&self.atmos.xLowerBc, bc, 'xLowerBc')
 *             data = f64_view_3(bc)
 */
    /*else*/ {
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_xLowerBc); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 799, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_compute_bc); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 799, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_9 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_6)) {
        PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 799, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
        PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 799, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_3 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 799, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (__pyx_t_4) {
          __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4); __pyx_t_4 = NULL;
        }
        __Pyx_INCREF(__pyx_v_self->pyAtmos);
        __Pyx_GIVEREF(__pyx_v_self->pyAtmos);
        PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_9, __pyx_v_self->pyAtmos);
        __Pyx_INCREF(((PyObject *)__pyx_v_spect));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_spect));
        PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_9, ((PyObject *)__pyx_v_spect));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 799, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 799, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;
    }
    __pyx_L8:;

    /* "Source/LwMiddleLayer.pyx":800
 *             else:
 *                 bc = self.pyAtmos.xLowerBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.xLowerBc, bc, 'xLowerBc')             # <<<<<<<<<<<<<<
 *             data = f64_view_3(bc)
 *             self.atmos.xLowerBc.set_bc_data(data)
 */
    __pyx_t_2 = __pyx_f_11lightweaver_10LwCompiled_verify_bc_array_sizes((&__pyx_v_self->atmos.xLowerBc), __pyx_v_bc, __pyx_n_u_xLowerBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":801
 *                 bc = self.pyAtmos.xLowerBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.xLowerBc, bc, 'xLowerBc')
 *             data = f64_view_3(bc)             # <<<<<<<<<<<<<<
 *             self.atmos.xLowerBc.set_bc_data(data)
 * 
 */
    try {
      __pyx_t_10 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_bc);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 801, __pyx_L1_error)
    }
    __pyx_v_data = __pyx_t_10;

    /* "Source/LwMiddleLayer.pyx":802
 *             verify_bc_array_sizes(&self.atmos.xLowerBc, bc, 'xLowerBc')
 *             data = f64_view_3(bc)
 *             self.atmos.xLowerBc.set_bc_data(data)             # <<<<<<<<<<<<<<
 * 
 *         if self.atmos.xUpperBc.type == CALLABLE:
 */
    __pyx_v_self->atmos.xLowerBc.set_bc_data(__pyx_v_data);

    /* "Source/LwMiddleLayer.pyx":794
 *             self.atmos.zUpperBc.set_bc_data(data)
 * 
 *         if self.atmos.xLowerBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.xLowerBc.indexVector == -1):
 *                 abc = &self.atmos.xLowerBc
 */
  }

  /* "Source/LwMiddleLayer.pyx":804
 *             self.atmos.xLowerBc.set_bc_data(data)
 * 
 *         if self.atmos.xUpperBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.xUpperBc.indexVector == -1):
 *                 abc = &self.atmos.xUpperBc
 */
  __pyx_t_1 = ((__pyx_v_self->atmos.xUpperBc.type == CALLABLE) != 0);
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":805
 * 
 *         if self.atmos.xUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.xUpperBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.xUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_all); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_xUpperBc); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyInt_EqObjC(__pyx_t_4, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 805, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "Source/LwMiddleLayer.pyx":806
 *         if self.atmos.xUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.xUpperBc.indexVector == -1):
 *                 abc = &self.atmos.xUpperBc             # <<<<<<<<<<<<<<
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 */
      __pyx_v_abc = (&__pyx_v_self->atmos.xUpperBc);

      /* "Source/LwMiddleLayer.pyx":807
 *             if np.all(self.pyAtmos.xUpperBc.indexVector == -1):
 *                 abc = &self.atmos.xUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))             # <<<<<<<<<<<<<<
 *             else:
 *                 bc = self.pyAtmos.xUpperBc.compute_bc(self.pyAtmos, spect)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->Nwave); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(1)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(2)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_7);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 807, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;

      /* "Source/LwMiddleLayer.pyx":805
 * 
 *         if self.atmos.xUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.xUpperBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.xUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
      goto __pyx_L10;
    }

    /* "Source/LwMiddleLayer.pyx":809
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 *                 bc = self.pyAtmos.xUpperBc.compute_bc(self.pyAtmos, spect)             # <<<<<<<<<<<<<<
 *             verify_bc_array_sizes(&self.atmos.xUpperBc, bc, 'xUpperBc')
 *             data = f64_view_3(bc)
 */
    /*else*/ {
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_xUpperBc); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 809, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_compute_bc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 809, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_9 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 809, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 809, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_7 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 809, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        if (__pyx_t_6) {
          __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_6); __pyx_t_6 = NULL;
        }
        __Pyx_INCREF(__pyx_v_self->pyAtmos);
        __Pyx_GIVEREF(__pyx_v_self->pyAtmos);
        PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_9, __pyx_v_self->pyAtmos);
        __Pyx_INCREF(((PyObject *)__pyx_v_spect));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_spect));
        PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_9, ((PyObject *)__pyx_v_spect));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 809, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 809, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;
    }
    __pyx_L10:;

    /* "Source/LwMiddleLayer.pyx":810
 *             else:
 *                 bc = self.pyAtmos.xUpperBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.xUpperBc, bc, 'xUpperBc')             # <<<<<<<<<<<<<<
 *             data = f64_view_3(bc)
 *             self.atmos.xUpperBc.set_bc_data(data)
 */
    __pyx_t_2 = __pyx_f_11lightweaver_10LwCompiled_verify_bc_array_sizes((&__pyx_v_self->atmos.xUpperBc), __pyx_v_bc, __pyx_n_u_xUpperBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":811
 *                 bc = self.pyAtmos.xUpperBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.xUpperBc, bc, 'xUpperBc')
 *             data = f64_view_3(bc)             # <<<<<<<<<<<<<<
 *             self.atmos.xUpperBc.set_bc_data(data)
 * 
 */
    try {
      __pyx_t_10 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_bc);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 811, __pyx_L1_error)
    }
    __pyx_v_data = __pyx_t_10;

    /* "Source/LwMiddleLayer.pyx":812
 *             verify_bc_array_sizes(&self.atmos.xUpperBc, bc, 'xUpperBc')
 *             data = f64_view_3(bc)
 *             self.atmos.xUpperBc.set_bc_data(data)             # <<<<<<<<<<<<<<
 * 
 *         if self.atmos.yLowerBc.type == CALLABLE:
 */
    __pyx_v_self->atmos.xUpperBc.set_bc_data(__pyx_v_data);

    /* "Source/LwMiddleLayer.pyx":804
 *             self.atmos.xLowerBc.set_bc_data(data)
 * 
 *         if self.atmos.xUpperBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.xUpperBc.indexVector == -1):
 *                 abc = &self.atmos.xUpperBc
 */
  }

  /* "Source/LwMiddleLayer.pyx":814
 *             self.atmos.xUpperBc.set_bc_data(data)
 * 
 *         if self.atmos.yLowerBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.yLowerBc.indexVector == -1):
 *                 abc = &self.atmos.yLowerBc
 */
  __pyx_t_1 = ((__pyx_v_self->atmos.yLowerBc.type == CALLABLE) != 0);
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":815
 * 
 *         if self.atmos.yLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.yLowerBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.yLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_all); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_yLowerBc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyInt_EqObjC(__pyx_t_6, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 815, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "Source/LwMiddleLayer.pyx":816
 *         if self.atmos.yLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.yLowerBc.indexVector == -1):
 *                 abc = &self.atmos.yLowerBc             # <<<<<<<<<<<<<<
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 */
      __pyx_v_abc = (&__pyx_v_self->atmos.yLowerBc);

      /* "Source/LwMiddleLayer.pyx":817
 *             if np.all(self.pyAtmos.yLowerBc.indexVector == -1):
 *                 abc = &self.atmos.yLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))             # <<<<<<<<<<<<<<
 *             else:
 *                 bc = self.pyAtmos.yLowerBc.compute_bc(self.pyAtmos, spect)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 817, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 817, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_self->Nwave); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 817, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(1)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 817, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(2)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 817, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 817, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_4);
      __pyx_t_7 = 0;
      __pyx_t_6 = 0;
      __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 817, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 817, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;

      /* "Source/LwMiddleLayer.pyx":815
 * 
 *         if self.atmos.yLowerBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.yLowerBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.yLowerBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
      goto __pyx_L12;
    }

    /* "Source/LwMiddleLayer.pyx":819
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 *                 bc = self.pyAtmos.yLowerBc.compute_bc(self.pyAtmos, spect)             # <<<<<<<<<<<<<<
 *             verify_bc_array_sizes(&self.atmos.yLowerBc, bc, 'yLowerBc')
 *             data = f64_view_3(bc)
 */
    /*else*/ {
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_yLowerBc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 819, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_compute_bc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 819, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_9 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 819, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
        PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 819, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_4 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 819, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (__pyx_t_5) {
          __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5); __pyx_t_5 = NULL;
        }
        __Pyx_INCREF(__pyx_v_self->pyAtmos);
        __Pyx_GIVEREF(__pyx_v_self->pyAtmos);
        PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_9, __pyx_v_self->pyAtmos);
        __Pyx_INCREF(((PyObject *)__pyx_v_spect));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_spect));
        PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_9, ((PyObject *)__pyx_v_spect));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 819, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 819, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;
    }
    __pyx_L12:;

    /* "Source/LwMiddleLayer.pyx":820
 *             else:
 *                 bc = self.pyAtmos.yLowerBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.yLowerBc, bc, 'yLowerBc')             # <<<<<<<<<<<<<<
 *             data = f64_view_3(bc)
 *             self.atmos.yLowerBc.set_bc_data(data)
 */
    __pyx_t_2 = __pyx_f_11lightweaver_10LwCompiled_verify_bc_array_sizes((&__pyx_v_self->atmos.yLowerBc), __pyx_v_bc, __pyx_n_u_yLowerBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 820, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":821
 *                 bc = self.pyAtmos.yLowerBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.yLowerBc, bc, 'yLowerBc')
 *             data = f64_view_3(bc)             # <<<<<<<<<<<<<<
 *             self.atmos.yLowerBc.set_bc_data(data)
 * 
 */
    try {
      __pyx_t_10 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_bc);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 821, __pyx_L1_error)
    }
    __pyx_v_data = __pyx_t_10;

    /* "Source/LwMiddleLayer.pyx":822
 *             verify_bc_array_sizes(&self.atmos.yLowerBc, bc, 'yLowerBc')
 *             data = f64_view_3(bc)
 *             self.atmos.yLowerBc.set_bc_data(data)             # <<<<<<<<<<<<<<
 * 
 *         if self.atmos.yUpperBc.type == CALLABLE:
 */
    __pyx_v_self->atmos.yLowerBc.set_bc_data(__pyx_v_data);

    /* "Source/LwMiddleLayer.pyx":814
 *             self.atmos.xUpperBc.set_bc_data(data)
 * 
 *         if self.atmos.yLowerBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.yLowerBc.indexVector == -1):
 *                 abc = &self.atmos.yLowerBc
 */
  }

  /* "Source/LwMiddleLayer.pyx":824
 *             self.atmos.yLowerBc.set_bc_data(data)
 * 
 *         if self.atmos.yUpperBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.yUpperBc.indexVector == -1):
 *                 abc = &self.atmos.yUpperBc
 */
  __pyx_t_1 = ((__pyx_v_self->atmos.yUpperBc.type == CALLABLE) != 0);
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":825
 * 
 *         if self.atmos.yUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.yUpperBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.yUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_all); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_yUpperBc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_indexVector); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyInt_EqObjC(__pyx_t_5, __pyx_int_neg_1, -1L, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 825, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_1) {

      /* "Source/LwMiddleLayer.pyx":826
 *         if self.atmos.yUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.yUpperBc.indexVector == -1):
 *                 abc = &self.atmos.yUpperBc             # <<<<<<<<<<<<<<
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 */
      __pyx_v_abc = (&__pyx_v_self->atmos.yUpperBc);

      /* "Source/LwMiddleLayer.pyx":827
 *             if np.all(self.pyAtmos.yUpperBc.indexVector == -1):
 *                 abc = &self.atmos.yUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))             # <<<<<<<<<<<<<<
 *             else:
 *                 bc = self.pyAtmos.yUpperBc.compute_bc(self.pyAtmos, spect)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->Nwave); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_v_abc->bcData.shape(2)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_6);
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 827, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 827, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;

      /* "Source/LwMiddleLayer.pyx":825
 * 
 *         if self.atmos.yUpperBc.type == CALLABLE:
 *             if np.all(self.pyAtmos.yUpperBc.indexVector == -1):             # <<<<<<<<<<<<<<
 *                 abc = &self.atmos.yUpperBc
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 */
      goto __pyx_L14;
    }

    /* "Source/LwMiddleLayer.pyx":829
 *                 bc = np.zeros((self.Nwave, abc.bcData.shape(1), abc.bcData.shape(2)))
 *             else:
 *                 bc = self.pyAtmos.yUpperBc.compute_bc(self.pyAtmos, spect)             # <<<<<<<<<<<<<<
 *             verify_bc_array_sizes(&self.atmos.yUpperBc, bc, 'yUpperBc')
 *             data = f64_view_3(bc)
 */
    /*else*/ {
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_yUpperBc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 829, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_compute_bc); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 829, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_9 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_7)) {
        PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 829, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_7)) {
        PyObject *__pyx_temp[3] = {__pyx_t_3, __pyx_v_self->pyAtmos, ((PyObject *)__pyx_v_spect)};
        __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_7, __pyx_temp+1-__pyx_t_9, 2+__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 829, __pyx_L1_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_GOTREF(__pyx_t_2);
      } else
      #endif
      {
        __pyx_t_6 = PyTuple_New(2+__pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 829, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (__pyx_t_3) {
          __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3); __pyx_t_3 = NULL;
        }
        __Pyx_INCREF(__pyx_v_self->pyAtmos);
        __Pyx_GIVEREF(__pyx_v_self->pyAtmos);
        PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_9, __pyx_v_self->pyAtmos);
        __Pyx_INCREF(((PyObject *)__pyx_v_spect));
        __Pyx_GIVEREF(((PyObject *)__pyx_v_spect));
        PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_9, ((PyObject *)__pyx_v_spect));
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 829, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 829, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
      __pyx_v_bc = __pyx_t_8;
      __pyx_t_8.memview = NULL;
      __pyx_t_8.data = NULL;
    }
    __pyx_L14:;

    /* "Source/LwMiddleLayer.pyx":830
 *             else:
 *                 bc = self.pyAtmos.yUpperBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.yUpperBc, bc, 'yUpperBc')             # <<<<<<<<<<<<<<
 *             data = f64_view_3(bc)
 *             self.atmos.yUpperBc.set_bc_data(data)
 */
    __pyx_t_2 = __pyx_f_11lightweaver_10LwCompiled_verify_bc_array_sizes((&__pyx_v_self->atmos.yUpperBc), __pyx_v_bc, __pyx_n_u_yUpperBc); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":831
 *                 bc = self.pyAtmos.yUpperBc.compute_bc(self.pyAtmos, spect)
 *             verify_bc_array_sizes(&self.atmos.yUpperBc, bc, 'yUpperBc')
 *             data = f64_view_3(bc)             # <<<<<<<<<<<<<<
 *             self.atmos.yUpperBc.set_bc_data(data)
 * 
 */
    try {
      __pyx_t_10 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_bc);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 831, __pyx_L1_error)
    }
    __pyx_v_data = __pyx_t_10;

    /* "Source/LwMiddleLayer.pyx":832
 *             verify_bc_array_sizes(&self.atmos.yUpperBc, bc, 'yUpperBc')
 *             data = f64_view_3(bc)
 *             self.atmos.yUpperBc.set_bc_data(data)             # <<<<<<<<<<<<<<
 * 
 *     def update_projections(self):
 */
    __pyx_v_self->atmos.yUpperBc.set_bc_data(__pyx_v_data);

    /* "Source/LwMiddleLayer.pyx":824
 *             self.atmos.yLowerBc.set_bc_data(data)
 * 
 *         if self.atmos.yUpperBc.type == CALLABLE:             # <<<<<<<<<<<<<<
 *             if np.all(self.pyAtmos.yUpperBc.indexVector == -1):
 *                 abc = &self.atmos.yUpperBc
 */
  }

  /* "Source/LwMiddleLayer.pyx":768
 *                                                                   zUpperIdxs.shape[1]))
 * 
 *     def compute_bcs(self, LwSpectrum spect):             # <<<<<<<<<<<<<<
 *         cdef f64[:,:,::1] bc
 *         cdef int mu, la
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.compute_bcs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_bc, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":834
 *             self.atmos.yUpperBc.set_bc_data(data)
 * 
 *     def update_projections(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Update all arrays of projected terms in the atmospheric model.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7update_projections(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_12LwAtmosphere_6update_projections[] = "\n        Update all arrays of projected terms in the atmospheric model.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7update_projections(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_projections (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6update_projections(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6update_projections(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_projections", 0);

  /* "Source/LwMiddleLayer.pyx":838
 *         Update all arrays of projected terms in the atmospheric model.
 *         '''
 *         self.atmos.update_projections()             # <<<<<<<<<<<<<<
 *         build_intersection_list(&self.atmos)
 * 
 */
  __pyx_v_self->atmos.update_projections();

  /* "Source/LwMiddleLayer.pyx":839
 *         '''
 *         self.atmos.update_projections()
 *         build_intersection_list(&self.atmos)             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
  build_intersection_list((&__pyx_v_self->atmos));

  /* "Source/LwMiddleLayer.pyx":834
 *             self.atmos.yUpperBc.set_bc_data(data)
 * 
 *     def update_projections(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Update all arrays of projected terms in the atmospheric model.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":841
 *         build_intersection_list(&self.atmos)
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['pyAtmos'] = self.pyAtmos
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_9__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_9__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_8__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_8__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":842
 * 
 *     def __getstate__(self):
 *         state = {}             # <<<<<<<<<<<<<<
 *         state['pyAtmos'] = self.pyAtmos
 *         state['x'] = self.pyAtmos.x
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":843
 *     def __getstate__(self):
 *         state = {}
 *         state['pyAtmos'] = self.pyAtmos             # <<<<<<<<<<<<<<
 *         state['x'] = self.pyAtmos.x
 *         state['y'] = self.pyAtmos.y
 */
  __pyx_t_1 = __pyx_v_self->pyAtmos;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_pyAtmos, __pyx_t_1) < 0)) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":844
 *         state = {}
 *         state['pyAtmos'] = self.pyAtmos
 *         state['x'] = self.pyAtmos.x             # <<<<<<<<<<<<<<
 *         state['y'] = self.pyAtmos.y
 *         state['z'] = self.pyAtmos.z
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 844, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_x, __pyx_t_1) < 0)) __PYX_ERR(0, 844, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":845
 *         state['pyAtmos'] = self.pyAtmos
 *         state['x'] = self.pyAtmos.x
 *         state['y'] = self.pyAtmos.y             # <<<<<<<<<<<<<<
 *         state['z'] = self.pyAtmos.z
 *         state['temperature'] = self.pyAtmos.temperature
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_y, __pyx_t_1) < 0)) __PYX_ERR(0, 845, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":846
 *         state['x'] = self.pyAtmos.x
 *         state['y'] = self.pyAtmos.y
 *         state['z'] = self.pyAtmos.z             # <<<<<<<<<<<<<<
 *         state['temperature'] = self.pyAtmos.temperature
 *         state['ne'] = self.pyAtmos.ne
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_z, __pyx_t_1) < 0)) __PYX_ERR(0, 846, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":847
 *         state['y'] = self.pyAtmos.y
 *         state['z'] = self.pyAtmos.z
 *         state['temperature'] = self.pyAtmos.temperature             # <<<<<<<<<<<<<<
 *         state['ne'] = self.pyAtmos.ne
 *         state['vx'] = self.pyAtmos.vx
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_temperature); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_temperature, __pyx_t_1) < 0)) __PYX_ERR(0, 847, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":848
 *         state['z'] = self.pyAtmos.z
 *         state['temperature'] = self.pyAtmos.temperature
 *         state['ne'] = self.pyAtmos.ne             # <<<<<<<<<<<<<<
 *         state['vx'] = self.pyAtmos.vx
 *         state['vy'] = self.pyAtmos.vy
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_ne); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_ne, __pyx_t_1) < 0)) __PYX_ERR(0, 848, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":849
 *         state['temperature'] = self.pyAtmos.temperature
 *         state['ne'] = self.pyAtmos.ne
 *         state['vx'] = self.pyAtmos.vx             # <<<<<<<<<<<<<<
 *         state['vy'] = self.pyAtmos.vy
 *         state['vz'] = self.pyAtmos.vz
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_vx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 849, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_vx, __pyx_t_1) < 0)) __PYX_ERR(0, 849, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":850
 *         state['ne'] = self.pyAtmos.ne
 *         state['vx'] = self.pyAtmos.vx
 *         state['vy'] = self.pyAtmos.vy             # <<<<<<<<<<<<<<
 *         state['vz'] = self.pyAtmos.vz
 *         state['vlosMu'] = np.asarray(self.vlosMu)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_vy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 850, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_vy, __pyx_t_1) < 0)) __PYX_ERR(0, 850, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":851
 *         state['vx'] = self.pyAtmos.vx
 *         state['vy'] = self.pyAtmos.vy
 *         state['vz'] = self.pyAtmos.vz             # <<<<<<<<<<<<<<
 *         state['vlosMu'] = np.asarray(self.vlosMu)
 *         try:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_vz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_vz, __pyx_t_1) < 0)) __PYX_ERR(0, 851, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":852
 *         state['vy'] = self.pyAtmos.vy
 *         state['vz'] = self.pyAtmos.vz
 *         state['vlosMu'] = np.asarray(self.vlosMu)             # <<<<<<<<<<<<<<
 *         try:
 *             state['B'] = self.pyAtmos.B
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->vlosMu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 852, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vlosMu, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 852, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_vlosMu, __pyx_t_1) < 0)) __PYX_ERR(0, 852, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":853
 *         state['vz'] = self.pyAtmos.vz
 *         state['vlosMu'] = np.asarray(self.vlosMu)
 *         try:             # <<<<<<<<<<<<<<
 *             state['B'] = self.pyAtmos.B
 *             state['gammaB'] = self.pyAtmos.gammaB
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":854
 *         state['vlosMu'] = np.asarray(self.vlosMu)
 *         try:
 *             state['B'] = self.pyAtmos.B             # <<<<<<<<<<<<<<
 *             state['gammaB'] = self.pyAtmos.gammaB
 *             state['chiB'] = self.pyAtmos.chiB
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_B); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 854, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_B, __pyx_t_1) < 0)) __PYX_ERR(0, 854, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":855
 *         try:
 *             state['B'] = self.pyAtmos.B
 *             state['gammaB'] = self.pyAtmos.gammaB             # <<<<<<<<<<<<<<
 *             state['chiB'] = self.pyAtmos.chiB
 *             state['cosGamma'] = np.asarray(self.cosGamma)
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_gammaB); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 855, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_gammaB, __pyx_t_1) < 0)) __PYX_ERR(0, 855, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":856
 *             state['B'] = self.pyAtmos.B
 *             state['gammaB'] = self.pyAtmos.gammaB
 *             state['chiB'] = self.pyAtmos.chiB             # <<<<<<<<<<<<<<
 *             state['cosGamma'] = np.asarray(self.cosGamma)
 *             state['cos2chi'] = np.asarray(self.cos2chi)
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_chiB); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 856, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_chiB, __pyx_t_1) < 0)) __PYX_ERR(0, 856, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":857
 *             state['gammaB'] = self.pyAtmos.gammaB
 *             state['chiB'] = self.pyAtmos.chiB
 *             state['cosGamma'] = np.asarray(self.cosGamma)             # <<<<<<<<<<<<<<
 *             state['cos2chi'] = np.asarray(self.cos2chi)
 *             state['sin2chi'] = np.asarray(self.sin2chi)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 857, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 857, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_v_self->cosGamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 857, __pyx_L3_error)}
      __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->cosGamma, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 857, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 857, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_cosGamma, __pyx_t_1) < 0)) __PYX_ERR(0, 857, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":858
 *             state['chiB'] = self.pyAtmos.chiB
 *             state['cosGamma'] = np.asarray(self.cosGamma)
 *             state['cos2chi'] = np.asarray(self.cos2chi)             # <<<<<<<<<<<<<<
 *             state['sin2chi'] = np.asarray(self.sin2chi)
 *         except AttributeError:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 858, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 858, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_v_self->cos2chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 858, __pyx_L3_error)}
      __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->cos2chi, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 858, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 858, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_cos2chi, __pyx_t_1) < 0)) __PYX_ERR(0, 858, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":859
 *             state['cosGamma'] = np.asarray(self.cosGamma)
 *             state['cos2chi'] = np.asarray(self.cos2chi)
 *             state['sin2chi'] = np.asarray(self.sin2chi)             # <<<<<<<<<<<<<<
 *         except AttributeError:
 *             state['B'] = None
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 859, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 859, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_v_self->sin2chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 859, __pyx_L3_error)}
      __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->sin2chi, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 859, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 859, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_sin2chi, __pyx_t_1) < 0)) __PYX_ERR(0, 859, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":853
 *         state['vz'] = self.pyAtmos.vz
 *         state['vlosMu'] = np.asarray(self.vlosMu)
 *         try:             # <<<<<<<<<<<<<<
 *             state['B'] = self.pyAtmos.B
 *             state['gammaB'] = self.pyAtmos.gammaB
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":860
 *             state['cos2chi'] = np.asarray(self.cos2chi)
 *             state['sin2chi'] = np.asarray(self.sin2chi)
 *         except AttributeError:             # <<<<<<<<<<<<<<
 *             state['B'] = None
 *             state['gammaB'] = None
 */
    __pyx_t_8 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_8) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 860, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "Source/LwMiddleLayer.pyx":861
 *             state['sin2chi'] = np.asarray(self.sin2chi)
 *         except AttributeError:
 *             state['B'] = None             # <<<<<<<<<<<<<<
 *             state['gammaB'] = None
 *             state['chiB'] = None
 */
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_B, Py_None) < 0)) __PYX_ERR(0, 861, __pyx_L5_except_error)

      /* "Source/LwMiddleLayer.pyx":862
 *         except AttributeError:
 *             state['B'] = None
 *             state['gammaB'] = None             # <<<<<<<<<<<<<<
 *             state['chiB'] = None
 *             state['cosGamma'] = None
 */
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_gammaB, Py_None) < 0)) __PYX_ERR(0, 862, __pyx_L5_except_error)

      /* "Source/LwMiddleLayer.pyx":863
 *             state['B'] = None
 *             state['gammaB'] = None
 *             state['chiB'] = None             # <<<<<<<<<<<<<<
 *             state['cosGamma'] = None
 *             state['cos2chi'] = None
 */
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_chiB, Py_None) < 0)) __PYX_ERR(0, 863, __pyx_L5_except_error)

      /* "Source/LwMiddleLayer.pyx":864
 *             state['gammaB'] = None
 *             state['chiB'] = None
 *             state['cosGamma'] = None             # <<<<<<<<<<<<<<
 *             state['cos2chi'] = None
 *             state['sin2chi'] = None
 */
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_cosGamma, Py_None) < 0)) __PYX_ERR(0, 864, __pyx_L5_except_error)

      /* "Source/LwMiddleLayer.pyx":865
 *             state['chiB'] = None
 *             state['cosGamma'] = None
 *             state['cos2chi'] = None             # <<<<<<<<<<<<<<
 *             state['sin2chi'] = None
 *         state['vturb'] = self.pyAtmos.vturb
 */
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_cos2chi, Py_None) < 0)) __PYX_ERR(0, 865, __pyx_L5_except_error)

      /* "Source/LwMiddleLayer.pyx":866
 *             state['cosGamma'] = None
 *             state['cos2chi'] = None
 *             state['sin2chi'] = None             # <<<<<<<<<<<<<<
 *         state['vturb'] = self.pyAtmos.vturb
 *         state['nHTot'] = self.pyAtmos.nHTot
 */
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_sin2chi, Py_None) < 0)) __PYX_ERR(0, 866, __pyx_L5_except_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "Source/LwMiddleLayer.pyx":853
 *         state['vz'] = self.pyAtmos.vz
 *         state['vlosMu'] = np.asarray(self.vlosMu)
 *         try:             # <<<<<<<<<<<<<<
 *             state['B'] = self.pyAtmos.B
 *             state['gammaB'] = self.pyAtmos.gammaB
 */
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L8_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":867
 *             state['cos2chi'] = None
 *             state['sin2chi'] = None
 *         state['vturb'] = self.pyAtmos.vturb             # <<<<<<<<<<<<<<
 *         state['nHTot'] = self.pyAtmos.nHTot
 *         state['muz'] = np.asarray(self.pyAtmos.muz)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_vturb); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 867, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_vturb, __pyx_t_3) < 0)) __PYX_ERR(0, 867, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":868
 *             state['sin2chi'] = None
 *         state['vturb'] = self.pyAtmos.vturb
 *         state['nHTot'] = self.pyAtmos.nHTot             # <<<<<<<<<<<<<<
 *         state['muz'] = np.asarray(self.pyAtmos.muz)
 *         state['muy'] = np.asarray(self.pyAtmos.muy)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_nHTot); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_nHTot, __pyx_t_3) < 0)) __PYX_ERR(0, 868, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":869
 *         state['vturb'] = self.pyAtmos.vturb
 *         state['nHTot'] = self.pyAtmos.nHTot
 *         state['muz'] = np.asarray(self.pyAtmos.muz)             # <<<<<<<<<<<<<<
 *         state['muy'] = np.asarray(self.pyAtmos.muy)
 *         state['mux'] = np.asarray(self.pyAtmos.mux)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_muz); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 869, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_muz, __pyx_t_3) < 0)) __PYX_ERR(0, 869, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":870
 *         state['nHTot'] = self.pyAtmos.nHTot
 *         state['muz'] = np.asarray(self.pyAtmos.muz)
 *         state['muy'] = np.asarray(self.pyAtmos.muy)             # <<<<<<<<<<<<<<
 *         state['mux'] = np.asarray(self.pyAtmos.mux)
 *         state['wmu'] = np.asarray(self.pyAtmos.wmu)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 870, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 870, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_muy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 870, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 870, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_muy, __pyx_t_3) < 0)) __PYX_ERR(0, 870, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":871
 *         state['muz'] = np.asarray(self.pyAtmos.muz)
 *         state['muy'] = np.asarray(self.pyAtmos.muy)
 *         state['mux'] = np.asarray(self.pyAtmos.mux)             # <<<<<<<<<<<<<<
 *         state['wmu'] = np.asarray(self.pyAtmos.wmu)
 *         state['Nwave'] = self.Nwave
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_mux); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_mux, __pyx_t_3) < 0)) __PYX_ERR(0, 871, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":872
 *         state['muy'] = np.asarray(self.pyAtmos.muy)
 *         state['mux'] = np.asarray(self.pyAtmos.mux)
 *         state['wmu'] = np.asarray(self.pyAtmos.wmu)             # <<<<<<<<<<<<<<
 *         state['Nwave'] = self.Nwave
 *         state['Ndim'] = self.Ndim
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_wmu); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_wmu, __pyx_t_3) < 0)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":873
 *         state['mux'] = np.asarray(self.pyAtmos.mux)
 *         state['wmu'] = np.asarray(self.pyAtmos.wmu)
 *         state['Nwave'] = self.Nwave             # <<<<<<<<<<<<<<
 *         state['Ndim'] = self.Ndim
 *         state['Nx'] = self.Nx
 */
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->Nwave); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 873, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Nwave, __pyx_t_3) < 0)) __PYX_ERR(0, 873, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":874
 *         state['wmu'] = np.asarray(self.pyAtmos.wmu)
 *         state['Nwave'] = self.Nwave
 *         state['Ndim'] = self.Ndim             # <<<<<<<<<<<<<<
 *         state['Nx'] = self.Nx
 *         state['Ny'] = self.Ny
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Ndim); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 874, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Ndim, __pyx_t_3) < 0)) __PYX_ERR(0, 874, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":875
 *         state['Nwave'] = self.Nwave
 *         state['Ndim'] = self.Ndim
 *         state['Nx'] = self.Nx             # <<<<<<<<<<<<<<
 *         state['Ny'] = self.Ny
 *         state['Nz'] = self.Nz
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Nx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Nx, __pyx_t_3) < 0)) __PYX_ERR(0, 875, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":876
 *         state['Ndim'] = self.Ndim
 *         state['Nx'] = self.Nx
 *         state['Ny'] = self.Ny             # <<<<<<<<<<<<<<
 *         state['Nz'] = self.Nz
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Ny); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Ny, __pyx_t_3) < 0)) __PYX_ERR(0, 876, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":877
 *         state['Nx'] = self.Nx
 *         state['Ny'] = self.Ny
 *         state['Nz'] = self.Nz             # <<<<<<<<<<<<<<
 * 
 *         return state
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Nz); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Nz, __pyx_t_3) < 0)) __PYX_ERR(0, 877, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":879
 *         state['Nz'] = self.Nz
 * 
 *         return state             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, state):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_state);
  __pyx_r = __pyx_v_state;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":841
 *         build_intersection_list(&self.atmos)
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['pyAtmos'] = self.pyAtmos
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":881
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.pyAtmos = state['pyAtmos']
 *         self.x = state['x']
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_11__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_11__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_10__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_10__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, PyObject *__pyx_v_state) {
  int __pyx_v_Nspace;
  int __pyx_v_Nrays;
  int __pyx_v_Nwave;
  int __pyx_v_Ndim;
  int __pyx_v_Nx;
  int __pyx_v_Ny;
  int __pyx_v_Nz;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_memviewslice __pyx_t_2 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_3;
  __Pyx_memviewslice __pyx_t_4 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View3D __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_9;
  bool __pyx_t_10;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":882
 * 
 *     def __setstate__(self, state):
 *         self.pyAtmos = state['pyAtmos']             # <<<<<<<<<<<<<<
 *         self.x = state['x']
 *         self.atmos.x = f64_view(self.x)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_pyAtmos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->pyAtmos);
  __Pyx_DECREF(__pyx_v_self->pyAtmos);
  __pyx_v_self->pyAtmos = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":883
 *     def __setstate__(self, state):
 *         self.pyAtmos = state['pyAtmos']
 *         self.x = state['x']             # <<<<<<<<<<<<<<
 *         self.atmos.x = f64_view(self.x)
 *         self.y = state['y']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_x); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 883, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->x, 0);
  __pyx_v_self->x = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":884
 *         self.pyAtmos = state['pyAtmos']
 *         self.x = state['x']
 *         self.atmos.x = f64_view(self.x)             # <<<<<<<<<<<<<<
 *         self.y = state['y']
 *         self.atmos.y = f64_view(self.y)
 */
  if (unlikely(!__pyx_v_self->x.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 884, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->x);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 884, __pyx_L1_error)
  }
  __pyx_v_self->atmos.x = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":885
 *         self.x = state['x']
 *         self.atmos.x = f64_view(self.x)
 *         self.y = state['y']             # <<<<<<<<<<<<<<
 *         self.atmos.y = f64_view(self.y)
 *         self.z = state['z']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_y); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 885, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 885, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->y, 0);
  __pyx_v_self->y = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":886
 *         self.atmos.x = f64_view(self.x)
 *         self.y = state['y']
 *         self.atmos.y = f64_view(self.y)             # <<<<<<<<<<<<<<
 *         self.z = state['z']
 *         self.atmos.z = f64_view(self.z)
 */
  if (unlikely(!__pyx_v_self->y.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 886, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->y);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 886, __pyx_L1_error)
  }
  __pyx_v_self->atmos.y = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":887
 *         self.y = state['y']
 *         self.atmos.y = f64_view(self.y)
 *         self.z = state['z']             # <<<<<<<<<<<<<<
 *         self.atmos.z = f64_view(self.z)
 *         self.atmos.height = f64_view(self.z)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_z); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 887, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 887, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->z, 0);
  __pyx_v_self->z = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":888
 *         self.atmos.y = f64_view(self.y)
 *         self.z = state['z']
 *         self.atmos.z = f64_view(self.z)             # <<<<<<<<<<<<<<
 *         self.atmos.height = f64_view(self.z)
 *         self.temperature = state['temperature']
 */
  if (unlikely(!__pyx_v_self->z.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 888, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->z);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 888, __pyx_L1_error)
  }
  __pyx_v_self->atmos.z = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":889
 *         self.z = state['z']
 *         self.atmos.z = f64_view(self.z)
 *         self.atmos.height = f64_view(self.z)             # <<<<<<<<<<<<<<
 *         self.temperature = state['temperature']
 *         self.atmos.temperature = f64_view(self.temperature)
 */
  if (unlikely(!__pyx_v_self->z.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 889, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->z);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 889, __pyx_L1_error)
  }
  __pyx_v_self->atmos.height = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":890
 *         self.atmos.z = f64_view(self.z)
 *         self.atmos.height = f64_view(self.z)
 *         self.temperature = state['temperature']             # <<<<<<<<<<<<<<
 *         self.atmos.temperature = f64_view(self.temperature)
 *         self.ne = state['ne']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_temperature); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 890, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->temperature, 0);
  __pyx_v_self->temperature = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":891
 *         self.atmos.height = f64_view(self.z)
 *         self.temperature = state['temperature']
 *         self.atmos.temperature = f64_view(self.temperature)             # <<<<<<<<<<<<<<
 *         self.ne = state['ne']
 *         self.atmos.ne = f64_view(self.ne)
 */
  if (unlikely(!__pyx_v_self->temperature.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 891, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->temperature);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 891, __pyx_L1_error)
  }
  __pyx_v_self->atmos.temperature = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":892
 *         self.temperature = state['temperature']
 *         self.atmos.temperature = f64_view(self.temperature)
 *         self.ne = state['ne']             # <<<<<<<<<<<<<<
 *         self.atmos.ne = f64_view(self.ne)
 *         self.vx = state['vx']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_ne); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 892, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->ne, 0);
  __pyx_v_self->ne = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":893
 *         self.atmos.temperature = f64_view(self.temperature)
 *         self.ne = state['ne']
 *         self.atmos.ne = f64_view(self.ne)             # <<<<<<<<<<<<<<
 *         self.vx = state['vx']
 *         self.atmos.vx = f64_view(self.vx)
 */
  if (unlikely(!__pyx_v_self->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 893, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->ne);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 893, __pyx_L1_error)
  }
  __pyx_v_self->atmos.ne = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":894
 *         self.ne = state['ne']
 *         self.atmos.ne = f64_view(self.ne)
 *         self.vx = state['vx']             # <<<<<<<<<<<<<<
 *         self.atmos.vx = f64_view(self.vx)
 *         self.vy = state['vy']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_vx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 894, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 894, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vx, 0);
  __pyx_v_self->vx = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":895
 *         self.atmos.ne = f64_view(self.ne)
 *         self.vx = state['vx']
 *         self.atmos.vx = f64_view(self.vx)             # <<<<<<<<<<<<<<
 *         self.vy = state['vy']
 *         self.atmos.vy = f64_view(self.vy)
 */
  if (unlikely(!__pyx_v_self->vx.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 895, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vx);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 895, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vx = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":896
 *         self.vx = state['vx']
 *         self.atmos.vx = f64_view(self.vx)
 *         self.vy = state['vy']             # <<<<<<<<<<<<<<
 *         self.atmos.vy = f64_view(self.vy)
 *         self.vz = state['vz']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_vy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 896, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 896, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vy, 0);
  __pyx_v_self->vy = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":897
 *         self.atmos.vx = f64_view(self.vx)
 *         self.vy = state['vy']
 *         self.atmos.vy = f64_view(self.vy)             # <<<<<<<<<<<<<<
 *         self.vz = state['vz']
 *         self.atmos.vz = f64_view(self.vz)
 */
  if (unlikely(!__pyx_v_self->vy.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 897, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vy);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 897, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vy = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":898
 *         self.vy = state['vy']
 *         self.atmos.vy = f64_view(self.vy)
 *         self.vz = state['vz']             # <<<<<<<<<<<<<<
 *         self.atmos.vz = f64_view(self.vz)
 *         self.vlosMu = state['vlosMu']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_vz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 898, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vz, 0);
  __pyx_v_self->vz = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":899
 *         self.atmos.vy = f64_view(self.vy)
 *         self.vz = state['vz']
 *         self.atmos.vz = f64_view(self.vz)             # <<<<<<<<<<<<<<
 *         self.vlosMu = state['vlosMu']
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)
 */
  if (unlikely(!__pyx_v_self->vz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 899, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vz);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 899, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vz = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":900
 *         self.vz = state['vz']
 *         self.atmos.vz = f64_view(self.vz)
 *         self.vlosMu = state['vlosMu']             # <<<<<<<<<<<<<<
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)
 *         if state['B'] is not None:
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_vlosMu); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 900, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 900, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vlosMu, 0);
  __pyx_v_self->vlosMu = __pyx_t_4;
  __pyx_t_4.memview = NULL;
  __pyx_t_4.data = NULL;

  /* "Source/LwMiddleLayer.pyx":901
 *         self.atmos.vz = f64_view(self.vz)
 *         self.vlosMu = state['vlosMu']
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)             # <<<<<<<<<<<<<<
 *         if state['B'] is not None:
 *             self.B = state['B']
 */
  if (unlikely(!__pyx_v_self->vlosMu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 901, __pyx_L1_error)}
  try {
    __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->vlosMu);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 901, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vlosMu = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":902
 *         self.vlosMu = state['vlosMu']
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)
 *         if state['B'] is not None:             # <<<<<<<<<<<<<<
 *             self.B = state['B']
 *             self.atmos.B = f64_view(self.B)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_B); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":903
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)
 *         if state['B'] is not None:
 *             self.B = state['B']             # <<<<<<<<<<<<<<
 *             self.atmos.B = f64_view(self.B)
 *             self.gammaB = state['gammaB']
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_B); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 903, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 903, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->B, 0);
    __pyx_v_self->B = __pyx_t_2;
    __pyx_t_2.memview = NULL;
    __pyx_t_2.data = NULL;

    /* "Source/LwMiddleLayer.pyx":904
 *         if state['B'] is not None:
 *             self.B = state['B']
 *             self.atmos.B = f64_view(self.B)             # <<<<<<<<<<<<<<
 *             self.gammaB = state['gammaB']
 *             self.atmos.gammaB = f64_view(self.gammaB)
 */
    if (unlikely(!__pyx_v_self->B.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 904, __pyx_L1_error)}
    try {
      __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->B);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 904, __pyx_L1_error)
    }
    __pyx_v_self->atmos.B = __pyx_t_3;

    /* "Source/LwMiddleLayer.pyx":905
 *             self.B = state['B']
 *             self.atmos.B = f64_view(self.B)
 *             self.gammaB = state['gammaB']             # <<<<<<<<<<<<<<
 *             self.atmos.gammaB = f64_view(self.gammaB)
 *             self.chiB = state['chiB']
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_gammaB); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 905, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 905, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->gammaB, 0);
    __pyx_v_self->gammaB = __pyx_t_2;
    __pyx_t_2.memview = NULL;
    __pyx_t_2.data = NULL;

    /* "Source/LwMiddleLayer.pyx":906
 *             self.atmos.B = f64_view(self.B)
 *             self.gammaB = state['gammaB']
 *             self.atmos.gammaB = f64_view(self.gammaB)             # <<<<<<<<<<<<<<
 *             self.chiB = state['chiB']
 *             self.atmos.chiB = f64_view(self.chiB)
 */
    if (unlikely(!__pyx_v_self->gammaB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 906, __pyx_L1_error)}
    try {
      __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->gammaB);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 906, __pyx_L1_error)
    }
    __pyx_v_self->atmos.gammaB = __pyx_t_3;

    /* "Source/LwMiddleLayer.pyx":907
 *             self.gammaB = state['gammaB']
 *             self.atmos.gammaB = f64_view(self.gammaB)
 *             self.chiB = state['chiB']             # <<<<<<<<<<<<<<
 *             self.atmos.chiB = f64_view(self.chiB)
 *             self.cosGamma = state['cosGamma']
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_chiB); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 907, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 907, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->chiB, 0);
    __pyx_v_self->chiB = __pyx_t_2;
    __pyx_t_2.memview = NULL;
    __pyx_t_2.data = NULL;

    /* "Source/LwMiddleLayer.pyx":908
 *             self.atmos.gammaB = f64_view(self.gammaB)
 *             self.chiB = state['chiB']
 *             self.atmos.chiB = f64_view(self.chiB)             # <<<<<<<<<<<<<<
 *             self.cosGamma = state['cosGamma']
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)
 */
    if (unlikely(!__pyx_v_self->chiB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 908, __pyx_L1_error)}
    try {
      __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->chiB);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 908, __pyx_L1_error)
    }
    __pyx_v_self->atmos.chiB = __pyx_t_3;

    /* "Source/LwMiddleLayer.pyx":909
 *             self.chiB = state['chiB']
 *             self.atmos.chiB = f64_view(self.chiB)
 *             self.cosGamma = state['cosGamma']             # <<<<<<<<<<<<<<
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)
 *             self.cos2chi = state['cos2chi']
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_cosGamma); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 909, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->cosGamma, 0);
    __pyx_v_self->cosGamma = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":910
 *             self.atmos.chiB = f64_view(self.chiB)
 *             self.cosGamma = state['cosGamma']
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)             # <<<<<<<<<<<<<<
 *             self.cos2chi = state['cos2chi']
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)
 */
    if (unlikely(!__pyx_v_self->cosGamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 910, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->cosGamma);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 910, __pyx_L1_error)
    }
    __pyx_v_self->atmos.cosGamma = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":911
 *             self.cosGamma = state['cosGamma']
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)
 *             self.cos2chi = state['cos2chi']             # <<<<<<<<<<<<<<
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)
 *             self.sin2chi = state['sin2chi']
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_cos2chi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 911, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 911, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->cos2chi, 0);
    __pyx_v_self->cos2chi = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":912
 *             self.atmos.cosGamma = f64_view_3(self.cosGamma)
 *             self.cos2chi = state['cos2chi']
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)             # <<<<<<<<<<<<<<
 *             self.sin2chi = state['sin2chi']
 *             self.atmos.sin2chi = f64_view_3(self.sin2chi)
 */
    if (unlikely(!__pyx_v_self->cos2chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 912, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->cos2chi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 912, __pyx_L1_error)
    }
    __pyx_v_self->atmos.cos2chi = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":913
 *             self.cos2chi = state['cos2chi']
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)
 *             self.sin2chi = state['sin2chi']             # <<<<<<<<<<<<<<
 *             self.atmos.sin2chi = f64_view_3(self.sin2chi)
 *         self.vturb = state['vturb']
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_sin2chi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 913, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->sin2chi, 0);
    __pyx_v_self->sin2chi = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":914
 *             self.atmos.cos2chi = f64_view_3(self.cos2chi)
 *             self.sin2chi = state['sin2chi']
 *             self.atmos.sin2chi = f64_view_3(self.sin2chi)             # <<<<<<<<<<<<<<
 *         self.vturb = state['vturb']
 *         self.atmos.vturb = f64_view(self.vturb)
 */
    if (unlikely(!__pyx_v_self->sin2chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 914, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->sin2chi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 914, __pyx_L1_error)
    }
    __pyx_v_self->atmos.sin2chi = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":902
 *         self.vlosMu = state['vlosMu']
 *         self.atmos.vlosMu = f64_view_3(self.vlosMu)
 *         if state['B'] is not None:             # <<<<<<<<<<<<<<
 *             self.B = state['B']
 *             self.atmos.B = f64_view(self.B)
 */
  }

  /* "Source/LwMiddleLayer.pyx":915
 *             self.sin2chi = state['sin2chi']
 *             self.atmos.sin2chi = f64_view_3(self.sin2chi)
 *         self.vturb = state['vturb']             # <<<<<<<<<<<<<<
 *         self.atmos.vturb = f64_view(self.vturb)
 *         self.nHTot = state['nHTot']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_vturb); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 915, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vturb, 0);
  __pyx_v_self->vturb = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":916
 *             self.atmos.sin2chi = f64_view_3(self.sin2chi)
 *         self.vturb = state['vturb']
 *         self.atmos.vturb = f64_view(self.vturb)             # <<<<<<<<<<<<<<
 *         self.nHTot = state['nHTot']
 *         self.atmos.nHTot = f64_view(self.nHTot)
 */
  if (unlikely(!__pyx_v_self->vturb.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 916, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vturb);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 916, __pyx_L1_error)
  }
  __pyx_v_self->atmos.vturb = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":917
 *         self.vturb = state['vturb']
 *         self.atmos.vturb = f64_view(self.vturb)
 *         self.nHTot = state['nHTot']             # <<<<<<<<<<<<<<
 *         self.atmos.nHTot = f64_view(self.nHTot)
 *         self.muz = state['muz']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_nHTot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 917, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 917, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->nHTot, 0);
  __pyx_v_self->nHTot = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":918
 *         self.atmos.vturb = f64_view(self.vturb)
 *         self.nHTot = state['nHTot']
 *         self.atmos.nHTot = f64_view(self.nHTot)             # <<<<<<<<<<<<<<
 *         self.muz = state['muz']
 *         self.atmos.muz = f64_view_2(self.muz)
 */
  if (unlikely(!__pyx_v_self->nHTot.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 918, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->nHTot);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 918, __pyx_L1_error)
  }
  __pyx_v_self->atmos.nHTot = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":919
 *         self.nHTot = state['nHTot']
 *         self.atmos.nHTot = f64_view(self.nHTot)
 *         self.muz = state['muz']             # <<<<<<<<<<<<<<
 *         self.atmos.muz = f64_view_2(self.muz)
 *         self.muy = state['muy']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_muz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 919, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 919, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->muz, 0);
  __pyx_v_self->muz = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":920
 *         self.atmos.nHTot = f64_view(self.nHTot)
 *         self.muz = state['muz']
 *         self.atmos.muz = f64_view_2(self.muz)             # <<<<<<<<<<<<<<
 *         self.muy = state['muy']
 *         self.atmos.muy = f64_view_2(self.muy)
 */
  if (unlikely(!__pyx_v_self->muz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 920, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->muz);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 920, __pyx_L1_error)
  }
  __pyx_v_self->atmos.muz = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":921
 *         self.muz = state['muz']
 *         self.atmos.muz = f64_view_2(self.muz)
 *         self.muy = state['muy']             # <<<<<<<<<<<<<<
 *         self.atmos.muy = f64_view_2(self.muy)
 *         self.mux = state['mux']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_muy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 921, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->muy, 0);
  __pyx_v_self->muy = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":922
 *         self.atmos.muz = f64_view_2(self.muz)
 *         self.muy = state['muy']
 *         self.atmos.muy = f64_view_2(self.muy)             # <<<<<<<<<<<<<<
 *         self.mux = state['mux']
 *         self.atmos.mux = f64_view_2(self.mux)
 */
  if (unlikely(!__pyx_v_self->muy.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 922, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->muy);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 922, __pyx_L1_error)
  }
  __pyx_v_self->atmos.muy = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":923
 *         self.muy = state['muy']
 *         self.atmos.muy = f64_view_2(self.muy)
 *         self.mux = state['mux']             # <<<<<<<<<<<<<<
 *         self.atmos.mux = f64_view_2(self.mux)
 *         self.wmu = state['wmu']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_mux); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 923, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 923, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->mux, 0);
  __pyx_v_self->mux = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":924
 *         self.atmos.muy = f64_view_2(self.muy)
 *         self.mux = state['mux']
 *         self.atmos.mux = f64_view_2(self.mux)             # <<<<<<<<<<<<<<
 *         self.wmu = state['wmu']
 *         self.atmos.wmu = f64_view_2(self.wmu)
 */
  if (unlikely(!__pyx_v_self->mux.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 924, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->mux);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 924, __pyx_L1_error)
  }
  __pyx_v_self->atmos.mux = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":925
 *         self.mux = state['mux']
 *         self.atmos.mux = f64_view_2(self.mux)
 *         self.wmu = state['wmu']             # <<<<<<<<<<<<<<
 *         self.atmos.wmu = f64_view_2(self.wmu)
 *         self.quadSymm = state['quadSymm']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_wmu); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 925, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 925, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wmu, 0);
  __pyx_v_self->wmu = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":926
 *         self.atmos.mux = f64_view_2(self.mux)
 *         self.wmu = state['wmu']
 *         self.atmos.wmu = f64_view_2(self.wmu)             # <<<<<<<<<<<<<<
 *         self.quadSymm = state['quadSymm']
 *         self.atmos.quadSymm = self.quadSymm
 */
  if (unlikely(!__pyx_v_self->wmu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 926, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->wmu);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 926, __pyx_L1_error)
  }
  __pyx_v_self->atmos.wmu = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":927
 *         self.wmu = state['wmu']
 *         self.atmos.wmu = f64_view_2(self.wmu)
 *         self.quadSymm = state['quadSymm']             # <<<<<<<<<<<<<<
 *         self.atmos.quadSymm = self.quadSymm
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_quadSymm); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 927, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_10 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 927, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->quadSymm = __pyx_t_10;

  /* "Source/LwMiddleLayer.pyx":928
 *         self.atmos.wmu = f64_view_2(self.wmu)
 *         self.quadSymm = state['quadSymm']
 *         self.atmos.quadSymm = self.quadSymm             # <<<<<<<<<<<<<<
 * 
 *         cdef int Nspace = self.temperature.shape[0]
 */
  __pyx_t_10 = __pyx_v_self->quadSymm;
  __pyx_v_self->atmos.quadSymm = __pyx_t_10;

  /* "Source/LwMiddleLayer.pyx":930
 *         self.atmos.quadSymm = self.quadSymm
 * 
 *         cdef int Nspace = self.temperature.shape[0]             # <<<<<<<<<<<<<<
 *         self.atmos.Nspace = Nspace
 *         cdef int Nrays = self.vlosMu.shape[0]
 */
  if (unlikely(!__pyx_v_self->temperature.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 930, __pyx_L1_error)}
  __pyx_v_Nspace = (__pyx_v_self->temperature.shape[0]);

  /* "Source/LwMiddleLayer.pyx":931
 * 
 *         cdef int Nspace = self.temperature.shape[0]
 *         self.atmos.Nspace = Nspace             # <<<<<<<<<<<<<<
 *         cdef int Nrays = self.vlosMu.shape[0]
 *         self.atmos.Nrays = Nrays
 */
  __pyx_v_self->atmos.Nspace = __pyx_v_Nspace;

  /* "Source/LwMiddleLayer.pyx":932
 *         cdef int Nspace = self.temperature.shape[0]
 *         self.atmos.Nspace = Nspace
 *         cdef int Nrays = self.vlosMu.shape[0]             # <<<<<<<<<<<<<<
 *         self.atmos.Nrays = Nrays
 *         cdef int Nwave = state['Nwave']
 */
  if (unlikely(!__pyx_v_self->vlosMu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 932, __pyx_L1_error)}
  __pyx_v_Nrays = (__pyx_v_self->vlosMu.shape[0]);

  /* "Source/LwMiddleLayer.pyx":933
 *         self.atmos.Nspace = Nspace
 *         cdef int Nrays = self.vlosMu.shape[0]
 *         self.atmos.Nrays = Nrays             # <<<<<<<<<<<<<<
 *         cdef int Nwave = state['Nwave']
 *         self.Nwave = Nwave
 */
  __pyx_v_self->atmos.Nrays = __pyx_v_Nrays;

  /* "Source/LwMiddleLayer.pyx":934
 *         cdef int Nrays = self.vlosMu.shape[0]
 *         self.atmos.Nrays = Nrays
 *         cdef int Nwave = state['Nwave']             # <<<<<<<<<<<<<<
 *         self.Nwave = Nwave
 *         cdef int Ndim = state['Ndim']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Nwave); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 934, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nwave = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":935
 *         self.atmos.Nrays = Nrays
 *         cdef int Nwave = state['Nwave']
 *         self.Nwave = Nwave             # <<<<<<<<<<<<<<
 *         cdef int Ndim = state['Ndim']
 *         self.atmos.Ndim = Ndim
 */
  __pyx_v_self->Nwave = __pyx_v_Nwave;

  /* "Source/LwMiddleLayer.pyx":936
 *         cdef int Nwave = state['Nwave']
 *         self.Nwave = Nwave
 *         cdef int Ndim = state['Ndim']             # <<<<<<<<<<<<<<
 *         self.atmos.Ndim = Ndim
 *         cdef int Nx = state['Nx']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 936, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Ndim = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":937
 *         self.Nwave = Nwave
 *         cdef int Ndim = state['Ndim']
 *         self.atmos.Ndim = Ndim             # <<<<<<<<<<<<<<
 *         cdef int Nx = state['Nx']
 *         self.atmos.Nx = Nx
 */
  __pyx_v_self->atmos.Ndim = __pyx_v_Ndim;

  /* "Source/LwMiddleLayer.pyx":938
 *         cdef int Ndim = state['Ndim']
 *         self.atmos.Ndim = Ndim
 *         cdef int Nx = state['Nx']             # <<<<<<<<<<<<<<
 *         self.atmos.Nx = Nx
 *         cdef int Ny = state['Ny']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Nx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 938, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nx = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":939
 *         self.atmos.Ndim = Ndim
 *         cdef int Nx = state['Nx']
 *         self.atmos.Nx = Nx             # <<<<<<<<<<<<<<
 *         cdef int Ny = state['Ny']
 *         self.atmos.Ny = Ny
 */
  __pyx_v_self->atmos.Nx = __pyx_v_Nx;

  /* "Source/LwMiddleLayer.pyx":940
 *         cdef int Nx = state['Nx']
 *         self.atmos.Nx = Nx
 *         cdef int Ny = state['Ny']             # <<<<<<<<<<<<<<
 *         self.atmos.Ny = Ny
 *         cdef int Nz = state['Nz']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Ny); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Ny = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":941
 *         self.atmos.Nx = Nx
 *         cdef int Ny = state['Ny']
 *         self.atmos.Ny = Ny             # <<<<<<<<<<<<<<
 *         cdef int Nz = state['Nz']
 *         self.atmos.Nz = Nz
 */
  __pyx_v_self->atmos.Ny = __pyx_v_Ny;

  /* "Source/LwMiddleLayer.pyx":942
 *         cdef int Ny = state['Ny']
 *         self.atmos.Ny = Ny
 *         cdef int Nz = state['Nz']             # <<<<<<<<<<<<<<
 *         self.atmos.Nz = Nz
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Nz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_11 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nz = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":943
 *         self.atmos.Ny = Ny
 *         cdef int Nz = state['Nz']
 *         self.atmos.Nz = Nz             # <<<<<<<<<<<<<<
 * 
 *         self.configure_bcs(self.pyAtmos)
 */
  __pyx_v_self->atmos.Nz = __pyx_v_Nz;

  /* "Source/LwMiddleLayer.pyx":945
 *         self.atmos.Nz = Nz
 * 
 *         self.configure_bcs(self.pyAtmos)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_configure_bcs); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 945, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_13 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
    __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
    if (likely(__pyx_t_13)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
      __Pyx_INCREF(__pyx_t_13);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_12, function);
    }
  }
  __pyx_t_1 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_13, __pyx_v_self->pyAtmos) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_v_self->pyAtmos);
  __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 945, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":881
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.pyAtmos = state['pyAtmos']
 *         self.x = state['x']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_2, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_4, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":948
 * 
 *     @property
 *     def Nspace(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of points in the atmosphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6Nspace_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6Nspace_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6Nspace___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6Nspace___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":952
 *         The number of points in the atmosphere.
 *         '''
 *         return self.atmos.Nspace             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atmos.Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":948
 * 
 *     @property
 *     def Nspace(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of points in the atmosphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.Nspace.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":955
 * 
 *     @property
 *     def Nrays(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of rays in the angular quadrature.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5Nrays_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5Nrays_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5Nrays___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5Nrays___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":959
 *         The number of rays in the angular quadrature.
 *         '''
 *         return self.atmos.Nrays             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atmos.Nrays); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":955
 * 
 *     @property
 *     def Nrays(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of rays in the angular quadrature.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.Nrays.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":962
 * 
 *     @property
 *     def Ndim(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The dimensionality of the atmosphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4Ndim_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4Ndim_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4Ndim___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4Ndim___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":966
 *         The dimensionality of the atmosphere.
 *         '''
 *         return self.atmos.Ndim             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atmos.Ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":962
 * 
 *     @property
 *     def Ndim(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The dimensionality of the atmosphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.Ndim.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":969
 * 
 *     @property
 *     def Nx(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of points along the x dimension.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Nx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Nx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Nx___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Nx___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":973
 *         The number of points along the x dimension.
 *         '''
 *         return self.atmos.Nx             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atmos.Nx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 973, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":969
 * 
 *     @property
 *     def Nx(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of points along the x dimension.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.Nx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":976
 * 
 *     @property
 *     def Ny(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of points along the y dimension.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Ny_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Ny_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Ny___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Ny___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":980
 *         The number of points along the y dimension.
 *         '''
 *         return self.atmos.Ny             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atmos.Ny); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 980, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":976
 * 
 *     @property
 *     def Ny(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of points along the y dimension.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.Ny.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":983
 * 
 *     @property
 *     def Nz(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of points along the z dimension.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Nz_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Nz_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Nz___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2Nz___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":987
 *         The number of points along the z dimension.
 *         '''
 *         return self.atmos.Nz             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atmos.Nz); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 987, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":983
 * 
 *     @property
 *     def Nz(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of points along the z dimension.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.Nz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":990
 * 
 *     @property
 *     def x(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The x grid.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1x_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1x_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1x___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1x___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":994
 *         The x grid.
 *         '''
 *         return np.asarray(self.x)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 994, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 994, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->x.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 994, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->x, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 994, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 994, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":990
 * 
 *     @property
 *     def x(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The x grid.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.x.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":997
 * 
 *     @property
 *     def y(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The y grid.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1y_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1y___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1y___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1001
 *         The y grid.
 *         '''
 *         return np.asarray(self.y)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->y.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1001, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->y, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":997
 * 
 *     @property
 *     def y(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The y grid.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1004
 * 
 *     @property
 *     def z(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The z grid.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1z_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1z_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1z___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1z___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1008
 *         The z grid.
 *         '''
 *         return np.asarray(self.z)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1008, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1008, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->z.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1008, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->z, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1008, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1008, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1004
 * 
 *     @property
 *     def z(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The z grid.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.z.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1011
 * 
 *     @property
 *     def height(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The z (altitude) grid.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6height_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6height_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6height___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6height___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1015
 *         The z (altitude) grid.
 *         '''
 *         return np.asarray(self.z)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->z.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1015, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->z, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1011
 * 
 *     @property
 *     def height(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The z (altitude) grid.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.height.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1018
 * 
 *     @property
 *     def temperature(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The temperature structure of the atmospheric model (flat array).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_11temperature_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_11temperature_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_11temperature___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_11temperature___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1022
 *         The temperature structure of the atmospheric model (flat array).
 *         '''
 *         return np.asarray(self.temperature)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->temperature.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1022, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->temperature, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1018
 * 
 *     @property
 *     def temperature(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The temperature structure of the atmospheric model (flat array).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.temperature.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1025
 * 
 *     @property
 *     def ne(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The electron density structure of the atmospheric model (flat array).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2ne_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2ne_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2ne___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2ne___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1029
 *         The electron density structure of the atmospheric model (flat array).
 *         '''
 *         return np.asarray(self.ne)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1029, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->ne, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1029, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1025
 * 
 *     @property
 *     def ne(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The electron density structure of the atmospheric model (flat array).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.ne.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1032
 * 
 *     @property
 *     def vx(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The x-velocity structure of the atmospheric model (flat array).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vx_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vx_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vx___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vx___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1036
 *         The x-velocity structure of the atmospheric model (flat array).
 *         '''
 *         return np.asarray(self.vx)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->vx.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1036, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vx, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1032
 * 
 *     @property
 *     def vx(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The x-velocity structure of the atmospheric model (flat array).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.vx.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1039
 * 
 *     @property
 *     def vy(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The y-velocity structure of the atmospheric model (flat array).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vy___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vy___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1043
 *         The y-velocity structure of the atmospheric model (flat array).
 *         '''
 *         return np.asarray(self.vy)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->vy.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1043, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vy, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1043, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1039
 * 
 *     @property
 *     def vy(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The y-velocity structure of the atmospheric model (flat array).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.vy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1046
 * 
 *     @property
 *     def vz(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The z-velocity structure of the atmospheric model (flat array).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vz_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vz_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vz___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_2vz___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1050
 *         The z-velocity structure of the atmospheric model (flat array).
 *         '''
 *         return np.asarray(self.vz)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->vz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1050, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vz, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1046
 * 
 *     @property
 *     def vz(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The z-velocity structure of the atmospheric model (flat array).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.vz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1053
 * 
 *     @property
 *     def vlos(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The z-velocity structure of the atmospheric model for 1D atmospheres
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4vlos_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4vlos_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4vlos___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4vlos___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1058
 *         (flat array).
 *         '''
 *         if self.pyAtmos.Ndim > 1:             # <<<<<<<<<<<<<<
 *             raise ValueError('vlos is ambiguous when Ndim > 1, use vx, vy, or vz instead.')
 *         return np.asarray(self.vz)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->pyAtmos, __pyx_n_s_Ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_int_1, Py_GT); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1058, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(__pyx_t_3)) {

    /* "Source/LwMiddleLayer.pyx":1059
 *         '''
 *         if self.pyAtmos.Ndim > 1:
 *             raise ValueError('vlos is ambiguous when Ndim > 1, use vx, vy, or vz instead.')             # <<<<<<<<<<<<<<
 *         return np.asarray(self.vz)
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1059, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1059, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":1058
 *         (flat array).
 *         '''
 *         if self.pyAtmos.Ndim > 1:             # <<<<<<<<<<<<<<
 *             raise ValueError('vlos is ambiguous when Ndim > 1, use vx, vy, or vz instead.')
 *         return np.asarray(self.vz)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1060
 *         if self.pyAtmos.Ndim > 1:
 *             raise ValueError('vlos is ambiguous when Ndim > 1, use vx, vy, or vz instead.')
 *         return np.asarray(self.vz)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_v_self->vz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1060, __pyx_L1_error)}
  __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->vz, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1053
 * 
 *     @property
 *     def vlos(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The z-velocity structure of the atmospheric model for 1D atmospheres
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.vlos.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1063
 * 
 *     @property
 *     def vlosMu(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The projected line of sight veloctity for each ray in the atmosphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6vlosMu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6vlosMu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6vlosMu___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6vlosMu___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1067
 *         The projected line of sight veloctity for each ray in the atmosphere.
 *         '''
 *         return np.asarray(self.vlosMu)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->vlosMu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1067, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vlosMu, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1067, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1063
 * 
 *     @property
 *     def vlosMu(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The projected line of sight veloctity for each ray in the atmosphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.vlosMu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1070
 * 
 *     @property
 *     def B(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The magnetic field structure for the atmosphereic model (flat array).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1B_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1B_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1B___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_1B___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1074
 *         The magnetic field structure for the atmosphereic model (flat array).
 *         '''
 *         return np.asarray(self.B)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->B.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1074, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->B, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1070
 * 
 *     @property
 *     def B(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The magnetic field structure for the atmosphereic model (flat array).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.B.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1077
 * 
 *     @property
 *     def gammaB(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Magnetic field co-altitude.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6gammaB_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6gammaB_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6gammaB___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_6gammaB___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1081
 *         Magnetic field co-altitude.
 *         '''
 *         return np.asarray(self.gammaB)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->gammaB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1081, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->gammaB, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1077
 * 
 *     @property
 *     def gammaB(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Magnetic field co-altitude.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.gammaB.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1084
 * 
 *     @property
 *     def chiB(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Magnetic field azimuth
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4chiB_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4chiB_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4chiB___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_4chiB___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1088
 *         Magnetic field azimuth
 *         '''
 *         return np.asarray(self.chiB)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->chiB.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1088, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->chiB, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1088, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1084
 * 
 *     @property
 *     def chiB(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Magnetic field azimuth
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.chiB.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1091
 * 
 *     @property
 *     def cosGamma(self):             # <<<<<<<<<<<<<<
 *         '''
 *         cosine of gammaB
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_8cosGamma_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_8cosGamma_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_8cosGamma___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_8cosGamma___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1095
 *         cosine of gammaB
 *         '''
 *         return np.asarray(self.cosGamma)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->cosGamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1095, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->cosGamma, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1095, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1091
 * 
 *     @property
 *     def cosGamma(self):             # <<<<<<<<<<<<<<
 *         '''
 *         cosine of gammaB
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.cosGamma.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1098
 * 
 *     @property
 *     def cos2chi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         cosine of 2*chi
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7cos2chi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7cos2chi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7cos2chi___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7cos2chi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1102
 *         cosine of 2*chi
 *         '''
 *         return np.asarray(self.cos2chi)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->cos2chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1102, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->cos2chi, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1098
 * 
 *     @property
 *     def cos2chi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         cosine of 2*chi
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.cos2chi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1105
 * 
 *     @property
 *     def sin2chi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         sine of 2*chi
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7sin2chi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7sin2chi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7sin2chi___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7sin2chi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1109
 *         sine of 2*chi
 *         '''
 *         return np.asarray(self.sin2chi)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->sin2chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1109, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->sin2chi, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1105
 * 
 *     @property
 *     def sin2chi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         sine of 2*chi
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.sin2chi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1112
 * 
 *     @property
 *     def vturb(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Microturbelent velocity structure of the atmospheric model.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5vturb_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5vturb_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5vturb___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5vturb___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1116
 *         Microturbelent velocity structure of the atmospheric model.
 *         '''
 *         return np.asarray(self.vturb)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->vturb.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1116, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vturb, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1112
 * 
 *     @property
 *     def vturb(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Microturbelent velocity structure of the atmospheric model.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.vturb.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1119
 * 
 *     @property
 *     def nHTot(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Total hydrogen number density strucutre.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5nHTot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5nHTot_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5nHTot___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_5nHTot___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1123
 *         Total hydrogen number density strucutre.
 *         '''
 *         return np.asarray(self.nHTot)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->nHTot.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1123, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->nHTot, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1119
 * 
 *     @property
 *     def nHTot(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Total hydrogen number density strucutre.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.nHTot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1126
 * 
 *     @property
 *     def muz(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Cosine of angle with z-axis for each ray.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3muz_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3muz_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3muz___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3muz___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1130
 *         Cosine of angle with z-axis for each ray.
 *         '''
 *         return np.asarray(self.muz)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->muz.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1130, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->muz, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1126
 * 
 *     @property
 *     def muz(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Cosine of angle with z-axis for each ray.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.muz.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1133
 * 
 *     @property
 *     def muy(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Cosine of angle with y-axis for each ray.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3muy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3muy_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3muy___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3muy___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1137
 *         Cosine of angle with y-axis for each ray.
 *         '''
 *         return np.asarray(self.muy)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->muy.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1137, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->muy, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1133
 * 
 *     @property
 *     def muy(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Cosine of angle with y-axis for each ray.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.muy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1140
 * 
 *     @property
 *     def mux(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Cosine of angle with x-axis for each ray.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3mux_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3mux_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3mux___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3mux___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1144
 *         Cosine of angle with x-axis for each ray.
 *         '''
 *         return np.asarray(self.mux)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->mux.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1144, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->mux, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1140
 * 
 *     @property
 *     def mux(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Cosine of angle with x-axis for each ray.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.mux.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1147
 * 
 *     @property
 *     def wmu(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Integration weights for angular quadrature.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3wmu_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3wmu_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3wmu___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_3wmu___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1151
 *         Integration weights for angular quadrature.
 *         '''
 *         return np.asarray(self.wmu)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->wmu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1151, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->wmu, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1147
 * 
 *     @property
 *     def wmu(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Integration weights for angular quadrature.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.wmu.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":619
 *     cdef int Nwave
 * 
 *     cdef public object pyAtmos             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, atmos, Nwavelengths):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->pyAtmos);
  __pyx_r = __pyx_v_self->pyAtmos;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->pyAtmos);
  __Pyx_DECREF(__pyx_v_self->pyAtmos);
  __pyx_v_self->pyAtmos = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->pyAtmos);
  __Pyx_DECREF(__pyx_v_self->pyAtmos);
  __pyx_v_self->pyAtmos = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_13__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_13__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_12__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_12__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_15__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_15__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_14__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwAtmosphere_14__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtmosphere.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1169
 * 
 *     '''
 *     def __init__(self, eqPops, radSet, wavelength):             # <<<<<<<<<<<<<<
 *         pass
 * 
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_eqPops = 0;
  CYTHON_UNUSED PyObject *__pyx_v_radSet = 0;
  CYTHON_UNUSED PyObject *__pyx_v_wavelength = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_eqPops,&__pyx_n_s_radSet,&__pyx_n_s_wavelength,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eqPops)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_radSet)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 1169, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wavelength)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 1169, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1169, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_eqPops = values[0];
    __pyx_v_radSet = values[1];
    __pyx_v_wavelength = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1169, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.BackgroundProvider.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_v_self), __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider___init__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_eqPops, CYTHON_UNUSED PyObject *__pyx_v_radSet, CYTHON_UNUSED PyObject *__pyx_v_wavelength) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1173
 * 
 *     # cpdef compute_background(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta, f64[:,::1] sca):
 *     cpdef compute_background(self, LwAtmosphere atmos, chi, eta, sca):             # <<<<<<<<<<<<<<
 *         '''
 *         The function called by the backend to compute the background.
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_18BackgroundProvider_compute_background(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, CYTHON_UNUSED PyObject *__pyx_v_chi, CYTHON_UNUSED PyObject *__pyx_v_eta, CYTHON_UNUSED PyObject *__pyx_v_sca, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_background", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_compute_background); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1173, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_3compute_background)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, ((PyObject *)__pyx_v_atmos), __pyx_v_chi, __pyx_v_eta, __pyx_v_sca};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1173, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, ((PyObject *)__pyx_v_atmos), __pyx_v_chi, __pyx_v_eta, __pyx_v_sca};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1173, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(4+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1173, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_atmos));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_atmos));
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, ((PyObject *)__pyx_v_atmos));
          __Pyx_INCREF(__pyx_v_chi);
          __Pyx_GIVEREF(__pyx_v_chi);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_chi);
          __Pyx_INCREF(__pyx_v_eta);
          __Pyx_GIVEREF(__pyx_v_eta);
          PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_eta);
          __Pyx_INCREF(__pyx_v_sca);
          __Pyx_GIVEREF(__pyx_v_sca);
          PyTuple_SET_ITEM(__pyx_t_6, 3+__pyx_t_5, __pyx_v_sca);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1173, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":1190
 *             Nspace].
 *         '''
 *         raise NotImplementedError             # <<<<<<<<<<<<<<
 * 
 * cdef class BasicBackground(BackgroundProvider):
 */
  __Pyx_Raise(__pyx_builtin_NotImplementedError, 0, 0, 0);
  __PYX_ERR(0, 1190, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":1173
 * 
 *     # cpdef compute_background(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta, f64[:,::1] sca):
 *     cpdef compute_background(self, LwAtmosphere atmos, chi, eta, sca):             # <<<<<<<<<<<<<<
 *         '''
 *         The function called by the backend to compute the background.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BackgroundProvider.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_18BackgroundProvider_2compute_background[] = "\n        The function called by the backend to compute the background.\n\n        Parameters\n        ----------\n        atmos : LwAtmosphere\n            The atmospheric model.\n        chi : np.ndarray\n            Array in which to store the background opacity [Nlambda, Nspace].\n        eta : np.ndarray\n            Array in which to store the background emissivity [Nlambda,\n            Nspace].\n        sca : np.ndarray\n            Array in which to store the background scattering [Nlambda,\n            Nspace].\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos = 0;
  PyObject *__pyx_v_chi = 0;
  PyObject *__pyx_v_eta = 0;
  PyObject *__pyx_v_sca = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_background (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmos,&__pyx_n_s_chi,&__pyx_n_s_eta,&__pyx_n_s_sca,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 1); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 2); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sca)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 3); __PYX_ERR(0, 1173, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_background") < 0)) __PYX_ERR(0, 1173, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)values[0]);
    __pyx_v_chi = values[1];
    __pyx_v_eta = values[2];
    __pyx_v_sca = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1173, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.BackgroundProvider.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_atmos), __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere, 1, "atmos", 0))) __PYX_ERR(0, 1173, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_2compute_background(((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_v_self), __pyx_v_atmos, __pyx_v_chi, __pyx_v_eta, __pyx_v_sca);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_2compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chi, PyObject *__pyx_v_eta, PyObject *__pyx_v_sca) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_background", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_18BackgroundProvider_compute_background(__pyx_v_self, __pyx_v_atmos, __pyx_v_chi, __pyx_v_eta, __pyx_v_sca, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BackgroundProvider.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_4__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_4__reduce_cython__(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = ()             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __pyx_v_state = __pyx_empty_tuple;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = False
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = ()
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = False             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, None), state
 */
  /*else*/ {
    __pyx_v_use_setstate = 0;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, None), state
 *     else:
 */
  __pyx_t_3 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":13
 *         use_setstate = False
 *     if use_setstate:
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_BackgroundProvide); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_222419149);
    __Pyx_GIVEREF(__pyx_int_222419149);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_222419149);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = False
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, None), state
 *     else:
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_BackgroundProvider__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_BackgroundProvide); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_222419149);
    __Pyx_GIVEREF(__pyx_int_222419149);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_222419149);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __pyx_t_5 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BackgroundProvider.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_BackgroundProvider__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_6__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18BackgroundProvider_6__setstate_cython__(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_BackgroundProvider__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(2, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled___pyx_unpickle_BackgroundProvider__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_BackgroundProvider, (type(self), 0xd41d8cd, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_BackgroundProvider__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BackgroundProvider.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1211
 *     cdef f64[::1] wavelength
 * 
 *     def __init__(self, eqPops, radSet, wavelength):             # <<<<<<<<<<<<<<
 *         super().__init__(eqPops, radSet, wavelength)
 *         self.eqPops = eqPops
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_eqPops = 0;
  PyObject *__pyx_v_radSet = 0;
  PyObject *__pyx_v_wavelength = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_eqPops,&__pyx_n_s_radSet,&__pyx_n_s_wavelength,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eqPops)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_radSet)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 1211, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wavelength)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 1211, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1211, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_eqPops = values[0];
    __pyx_v_radSet = values[1];
    __pyx_v_wavelength = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1211, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self), __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground___init__(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_radSet, PyObject *__pyx_v_wavelength) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_9;
  __Pyx_memviewslice __pyx_t_10 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":1212
 * 
 *     def __init__(self, eqPops, radSet, wavelength):
 *         super().__init__(eqPops, radSet, wavelength)             # <<<<<<<<<<<<<<
 *         self.eqPops = eqPops
 *         self.radSet = radSet
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_BasicBackground));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_BasicBackground));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_BasicBackground));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 3+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1212, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 3+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1212, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(3+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1212, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(__pyx_v_eqPops);
    __Pyx_GIVEREF(__pyx_v_eqPops);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_eqPops);
    __Pyx_INCREF(__pyx_v_radSet);
    __Pyx_GIVEREF(__pyx_v_radSet);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_radSet);
    __Pyx_INCREF(__pyx_v_wavelength);
    __Pyx_GIVEREF(__pyx_v_wavelength);
    PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_4, __pyx_v_wavelength);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1212, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1213
 *     def __init__(self, eqPops, radSet, wavelength):
 *         super().__init__(eqPops, radSet, wavelength)
 *         self.eqPops = eqPops             # <<<<<<<<<<<<<<
 *         self.radSet = radSet
 * 
 */
  __Pyx_INCREF(__pyx_v_eqPops);
  __Pyx_GIVEREF(__pyx_v_eqPops);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_v_eqPops;

  /* "Source/LwMiddleLayer.pyx":1214
 *         super().__init__(eqPops, radSet, wavelength)
 *         self.eqPops = eqPops
 *         self.radSet = radSet             # <<<<<<<<<<<<<<
 * 
 *         if 'CH' in eqPops:
 */
  __Pyx_INCREF(__pyx_v_radSet);
  __Pyx_GIVEREF(__pyx_v_radSet);
  __Pyx_GOTREF(__pyx_v_self->radSet);
  __Pyx_DECREF(__pyx_v_self->radSet);
  __pyx_v_self->radSet = __pyx_v_radSet;

  /* "Source/LwMiddleLayer.pyx":1216
 *         self.radSet = radSet
 * 
 *         if 'CH' in eqPops:             # <<<<<<<<<<<<<<
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)
 */
  __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_CH, __pyx_v_eqPops, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1216, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":1217
 * 
 *         if 'CH' in eqPops:
 *             self.chPops = eqPops['CH']             # <<<<<<<<<<<<<<
 *             self.bd.chPops = f64_view(self.chPops)
 *         if 'OH' in eqPops:
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_n_u_CH); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1217, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1217, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->chPops, 0);
    __pyx_v_self->chPops = __pyx_t_8;
    __pyx_t_8.memview = NULL;
    __pyx_t_8.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1218
 *         if 'CH' in eqPops:
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)             # <<<<<<<<<<<<<<
 *         if 'OH' in eqPops:
 *             self.ohPops = eqPops['OH']
 */
    if (unlikely(!__pyx_v_self->chPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1218, __pyx_L1_error)}
    try {
      __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->chPops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1218, __pyx_L1_error)
    }
    __pyx_v_self->bd.chPops = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":1216
 *         self.radSet = radSet
 * 
 *         if 'CH' in eqPops:             # <<<<<<<<<<<<<<
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1219
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)
 *         if 'OH' in eqPops:             # <<<<<<<<<<<<<<
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)
 */
  __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_OH, __pyx_v_eqPops, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1219, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_7 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":1220
 *             self.bd.chPops = f64_view(self.chPops)
 *         if 'OH' in eqPops:
 *             self.ohPops = eqPops['OH']             # <<<<<<<<<<<<<<
 *             self.bd.ohPops = f64_view(self.ohPops)
 *         if 'H2' in eqPops:
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_n_u_OH); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1220, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1220, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->ohPops, 0);
    __pyx_v_self->ohPops = __pyx_t_8;
    __pyx_t_8.memview = NULL;
    __pyx_t_8.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1221
 *         if 'OH' in eqPops:
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)             # <<<<<<<<<<<<<<
 *         if 'H2' in eqPops:
 *             self.h2Pops = eqPops['H2']
 */
    if (unlikely(!__pyx_v_self->ohPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1221, __pyx_L1_error)}
    try {
      __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->ohPops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1221, __pyx_L1_error)
    }
    __pyx_v_self->bd.ohPops = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":1219
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)
 *         if 'OH' in eqPops:             # <<<<<<<<<<<<<<
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1222
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)
 *         if 'H2' in eqPops:             # <<<<<<<<<<<<<<
 *             self.h2Pops = eqPops['H2']
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 */
  __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_H2, __pyx_v_eqPops, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1222, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":1223
 *             self.bd.ohPops = f64_view(self.ohPops)
 *         if 'H2' in eqPops:
 *             self.h2Pops = eqPops['H2']             # <<<<<<<<<<<<<<
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_n_u_H2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1223, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1223, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->h2Pops, 0);
    __pyx_v_self->h2Pops = __pyx_t_8;
    __pyx_t_8.memview = NULL;
    __pyx_t_8.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1224
 *         if 'H2' in eqPops:
 *             self.h2Pops = eqPops['H2']
 *             self.bd.h2Pops = f64_view(self.h2Pops)             # <<<<<<<<<<<<<<
 * 
 *         self.hMinusPops = eqPops['H-']
 */
    if (unlikely(!__pyx_v_self->h2Pops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1224, __pyx_L1_error)}
    try {
      __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->h2Pops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1224, __pyx_L1_error)
    }
    __pyx_v_self->bd.h2Pops = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":1222
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)
 *         if 'H2' in eqPops:             # <<<<<<<<<<<<<<
 *             self.h2Pops = eqPops['H2']
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1226
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 * 
 *         self.hMinusPops = eqPops['H-']             # <<<<<<<<<<<<<<
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = eqPops['H']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_kp_u_H); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1226, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hMinusPops, 0);
  __pyx_v_self->hMinusPops = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1227
 * 
 *         self.hMinusPops = eqPops['H-']
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)             # <<<<<<<<<<<<<<
 *         self.hPops = eqPops['H']
 *         self.bd.hPops = f64_view_2(self.hPops)
 */
  if (unlikely(!__pyx_v_self->hMinusPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1227, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->hMinusPops);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1227, __pyx_L1_error)
  }
  __pyx_v_self->bd.hMinusPops = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":1228
 *         self.hMinusPops = eqPops['H-']
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = eqPops['H']             # <<<<<<<<<<<<<<
 *         self.bd.hPops = f64_view_2(self.hPops)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_n_u_H_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hPops, 0);
  __pyx_v_self->hPops = __pyx_t_10;
  __pyx_t_10.memview = NULL;
  __pyx_t_10.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1229
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = eqPops['H']
 *         self.bd.hPops = f64_view_2(self.hPops)             # <<<<<<<<<<<<<<
 * 
 *         self.wavelength = wavelength
 */
  if (unlikely(!__pyx_v_self->hPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1229, __pyx_L1_error)}
  try {
    __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->hPops);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1229, __pyx_L1_error)
  }
  __pyx_v_self->bd.hPops = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":1231
 *         self.bd.hPops = f64_view_2(self.hPops)
 * 
 *         self.wavelength = wavelength             # <<<<<<<<<<<<<<
 *         self.bd.wavelength = f64_view(self.wavelength)
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_wavelength, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1231, __pyx_L1_error)
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1232
 * 
 *         self.wavelength = wavelength
 *         self.bd.wavelength = f64_view(self.wavelength)             # <<<<<<<<<<<<<<
 * 
 *     # cpdef compute_background(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta, f64[:,::1] sca):
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1232, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wavelength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1232, __pyx_L1_error)
  }
  __pyx_v_self->bd.wavelength = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":1211
 *     cdef f64[::1] wavelength
 * 
 *     def __init__(self, eqPops, radSet, wavelength):             # <<<<<<<<<<<<<<
 *         super().__init__(eqPops, radSet, wavelength)
 *         self.eqPops = eqPops
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_10, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1235
 * 
 *     # cpdef compute_background(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta, f64[:,::1] sca):
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):             # <<<<<<<<<<<<<<
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chiIn, PyObject *__pyx_v_etaIn, PyObject *__pyx_v_scaIn, int __pyx_skip_dispatch) {
  int __pyx_v_Nlambda;
  int __pyx_v_Nspace;
  __Pyx_memviewslice __pyx_v_chi = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_eta = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_sca = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_v_la;
  int __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_memviewslice __pyx_t_7 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  int __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_background", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_compute_background); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_3compute_background)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, ((PyObject *)__pyx_v_atmos), __pyx_v_chiIn, __pyx_v_etaIn, __pyx_v_scaIn};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1235, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, ((PyObject *)__pyx_v_atmos), __pyx_v_chiIn, __pyx_v_etaIn, __pyx_v_scaIn};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1235, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(4+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1235, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_atmos));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_atmos));
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, ((PyObject *)__pyx_v_atmos));
          __Pyx_INCREF(__pyx_v_chiIn);
          __Pyx_GIVEREF(__pyx_v_chiIn);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_chiIn);
          __Pyx_INCREF(__pyx_v_etaIn);
          __Pyx_GIVEREF(__pyx_v_etaIn);
          PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_etaIn);
          __Pyx_INCREF(__pyx_v_scaIn);
          __Pyx_GIVEREF(__pyx_v_scaIn);
          PyTuple_SET_ITEM(__pyx_t_6, 3+__pyx_t_5, __pyx_v_scaIn);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1235, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":1236
 *     # cpdef compute_background(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta, f64[:,::1] sca):
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):
 *         cdef int Nlambda = self.wavelength.shape[0]             # <<<<<<<<<<<<<<
 *         cdef int Nspace = atmos.Nspace
 *         cdef f64[:,::1] chi = chiIn
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1236, __pyx_L1_error)}
  __pyx_v_Nlambda = (__pyx_v_self->wavelength.shape[0]);

  /* "Source/LwMiddleLayer.pyx":1237
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace             # <<<<<<<<<<<<<<
 *         cdef f64[:,::1] chi = chiIn
 *         cdef f64[:,::1] eta = etaIn
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1237, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nspace = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1238
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace
 *         cdef f64[:,::1] chi = chiIn             # <<<<<<<<<<<<<<
 *         cdef f64[:,::1] eta = etaIn
 *         cdef f64[:,::1] sca = scaIn
 */
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_chiIn, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1238, __pyx_L1_error)
  __pyx_v_chi = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1239
 *         cdef int Nspace = atmos.Nspace
 *         cdef f64[:,::1] chi = chiIn
 *         cdef f64[:,::1] eta = etaIn             # <<<<<<<<<<<<<<
 *         cdef f64[:,::1] sca = scaIn
 * 
 */
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_etaIn, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1239, __pyx_L1_error)
  __pyx_v_eta = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1240
 *         cdef f64[:,::1] chi = chiIn
 *         cdef f64[:,::1] eta = etaIn
 *         cdef f64[:,::1] sca = scaIn             # <<<<<<<<<<<<<<
 * 
 *         # NOTE(cmo): Update hPops in case it changed LTE<->NLTE
 */
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_scaIn, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1240, __pyx_L1_error)
  __pyx_v_sca = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1243
 * 
 *         # NOTE(cmo): Update hPops in case it changed LTE<->NLTE
 *         self.hPops = self.eqPops['H']             # <<<<<<<<<<<<<<
 * 
 *         self.bd.chi = f64_view_2(chi)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_H_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1243, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hPops, 0);
  __pyx_v_self->hPops = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1245
 *         self.hPops = self.eqPops['H']
 * 
 *         self.bd.chi = f64_view_2(chi)             # <<<<<<<<<<<<<<
 *         self.bd.eta = f64_view_2(eta)
 *         self.bd.scatt = f64_view_2(sca)
 */
  try {
    __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_chi);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1245, __pyx_L1_error)
  }
  __pyx_v_self->bd.chi = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":1246
 * 
 *         self.bd.chi = f64_view_2(chi)
 *         self.bd.eta = f64_view_2(eta)             # <<<<<<<<<<<<<<
 *         self.bd.scatt = f64_view_2(sca)
 * 
 */
  try {
    __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_eta);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1246, __pyx_L1_error)
  }
  __pyx_v_self->bd.eta = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":1247
 *         self.bd.chi = f64_view_2(chi)
 *         self.bd.eta = f64_view_2(eta)
 *         self.bd.scatt = f64_view_2(sca)             # <<<<<<<<<<<<<<
 * 
 *         basic_background(&self.bd, &atmos.atmos)
 */
  try {
    __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_sca);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1247, __pyx_L1_error)
  }
  __pyx_v_self->bd.scatt = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":1249
 *         self.bd.scatt = f64_view_2(sca)
 * 
 *         basic_background(&self.bd, &atmos.atmos)             # <<<<<<<<<<<<<<
 *         self.rayleigh_scattering(atmos, sca)
 *         self.bf_opacities(atmos, chi, eta)
 */
  basic_background((&__pyx_v_self->bd), (&__pyx_v_atmos->atmos));

  /* "Source/LwMiddleLayer.pyx":1250
 * 
 *         basic_background(&self.bd, &atmos.atmos)
 *         self.rayleigh_scattering(atmos, sca)             # <<<<<<<<<<<<<<
 *         self.bf_opacities(atmos, chi, eta)
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self->__pyx_base.__pyx_vtab)->rayleigh_scattering(__pyx_v_self, __pyx_v_atmos, __pyx_v_sca, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1251
 *         basic_background(&self.bd, &atmos.atmos)
 *         self.rayleigh_scattering(atmos, sca)
 *         self.bf_opacities(atmos, chi, eta)             # <<<<<<<<<<<<<<
 * 
 *         cdef int la, k
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self->__pyx_base.__pyx_vtab)->bf_opacities(__pyx_v_self, __pyx_v_atmos, __pyx_v_chi, __pyx_v_eta, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1254
 * 
 *         cdef int la, k
 *         for la in range(Nlambda):             # <<<<<<<<<<<<<<
 *             for k in range(Nspace):
 *                 chi[la, k] += sca[la, k]
 */
  __pyx_t_5 = __pyx_v_Nlambda;
  __pyx_t_9 = __pyx_t_5;
  for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
    __pyx_v_la = __pyx_t_10;

    /* "Source/LwMiddleLayer.pyx":1255
 *         cdef int la, k
 *         for la in range(Nlambda):
 *             for k in range(Nspace):             # <<<<<<<<<<<<<<
 *                 chi[la, k] += sca[la, k]
 * 
 */
    __pyx_t_11 = __pyx_v_Nspace;
    __pyx_t_12 = __pyx_t_11;
    for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
      __pyx_v_k = __pyx_t_13;

      /* "Source/LwMiddleLayer.pyx":1256
 *         for la in range(Nlambda):
 *             for k in range(Nspace):
 *                 chi[la, k] += sca[la, k]             # <<<<<<<<<<<<<<
 * 
 *     cpdef rayleigh_scattering(self, LwAtmosphere atmos, f64[:,::1] sca):
 */
      __pyx_t_14 = __pyx_v_la;
      __pyx_t_15 = __pyx_v_k;
      __pyx_t_16 = -1;
      if (__pyx_t_14 < 0) {
        __pyx_t_14 += __pyx_v_sca.shape[0];
        if (unlikely(__pyx_t_14 < 0)) __pyx_t_16 = 0;
      } else if (unlikely(__pyx_t_14 >= __pyx_v_sca.shape[0])) __pyx_t_16 = 0;
      if (__pyx_t_15 < 0) {
        __pyx_t_15 += __pyx_v_sca.shape[1];
        if (unlikely(__pyx_t_15 < 0)) __pyx_t_16 = 1;
      } else if (unlikely(__pyx_t_15 >= __pyx_v_sca.shape[1])) __pyx_t_16 = 1;
      if (unlikely(__pyx_t_16 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_16);
        __PYX_ERR(0, 1256, __pyx_L1_error)
      }
      __pyx_t_17 = __pyx_v_la;
      __pyx_t_18 = __pyx_v_k;
      __pyx_t_16 = -1;
      if (__pyx_t_17 < 0) {
        __pyx_t_17 += __pyx_v_chi.shape[0];
        if (unlikely(__pyx_t_17 < 0)) __pyx_t_16 = 0;
      } else if (unlikely(__pyx_t_17 >= __pyx_v_chi.shape[0])) __pyx_t_16 = 0;
      if (__pyx_t_18 < 0) {
        __pyx_t_18 += __pyx_v_chi.shape[1];
        if (unlikely(__pyx_t_18 < 0)) __pyx_t_16 = 1;
      } else if (unlikely(__pyx_t_18 >= __pyx_v_chi.shape[1])) __pyx_t_16 = 1;
      if (unlikely(__pyx_t_16 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_16);
        __PYX_ERR(0, 1256, __pyx_L1_error)
      }
      *((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_chi.data + __pyx_t_17 * __pyx_v_chi.strides[0]) )) + __pyx_t_18)) )) += (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_sca.data + __pyx_t_14 * __pyx_v_sca.strides[0]) )) + __pyx_t_15)) )));
    }
  }

  /* "Source/LwMiddleLayer.pyx":1235
 * 
 *     # cpdef compute_background(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta, f64[:,::1] sca):
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):             # <<<<<<<<<<<<<<
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __PYX_XDEC_MEMVIEW(&__pyx_t_7, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_chi, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_eta, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_sca, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos = 0;
  PyObject *__pyx_v_chiIn = 0;
  PyObject *__pyx_v_etaIn = 0;
  PyObject *__pyx_v_scaIn = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_background (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmos,&__pyx_n_s_chiIn,&__pyx_n_s_etaIn,&__pyx_n_s_scaIn,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chiIn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 1); __PYX_ERR(0, 1235, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_etaIn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 2); __PYX_ERR(0, 1235, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_scaIn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 3); __PYX_ERR(0, 1235, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_background") < 0)) __PYX_ERR(0, 1235, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)values[0]);
    __pyx_v_chiIn = values[1];
    __pyx_v_etaIn = values[2];
    __pyx_v_scaIn = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1235, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_atmos), __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere, 1, "atmos", 0))) __PYX_ERR(0, 1235, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_2compute_background(((struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self), __pyx_v_atmos, __pyx_v_chiIn, __pyx_v_etaIn, __pyx_v_scaIn);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_2compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chiIn, PyObject *__pyx_v_etaIn, PyObject *__pyx_v_scaIn) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_background", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_15BasicBackground_compute_background(__pyx_v_self, __pyx_v_atmos, __pyx_v_chiIn, __pyx_v_etaIn, __pyx_v_scaIn, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1258
 *                 chi[la, k] += sca[la, k]
 * 
 *     cpdef rayleigh_scattering(self, LwAtmosphere atmos, f64[:,::1] sca):             # <<<<<<<<<<<<<<
 *         cdef f64[::1] scaLine = np.zeros(atmos.Nspace)
 *         cdef int k, la
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_5rayleigh_scattering(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_rayleigh_scattering(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, __Pyx_memviewslice __pyx_v_sca, int __pyx_skip_dispatch) {
  __Pyx_memviewslice __pyx_v_scaLine = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_v_k;
  int __pyx_v_la;
  struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_rayH = 0;
  struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_rayHe = 0;
  PyObject *__pyx_v_hPops = NULL;
  PyObject *__pyx_v_hePops = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_t_9;
  int __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  long __pyx_t_15;
  long __pyx_t_16;
  int __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rayleigh_scattering", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rayleigh_scattering); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1258, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_5rayleigh_scattering)) {
        __Pyx_XDECREF(__pyx_r);
        if (unlikely(!__pyx_v_sca.memview)) { __Pyx_RaiseUnboundLocalError("sca"); __PYX_ERR(0, 1258, __pyx_L1_error) }
        __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_sca, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1258, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[3] = {__pyx_t_5, ((PyObject *)__pyx_v_atmos), __pyx_t_3};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[3] = {__pyx_t_5, ((PyObject *)__pyx_v_atmos), __pyx_t_3};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 2+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        {
          __pyx_t_7 = PyTuple_New(2+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (__pyx_t_5) {
            __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_atmos));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_atmos));
          PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, ((PyObject *)__pyx_v_atmos));
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1258, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":1259
 * 
 *     cpdef rayleigh_scattering(self, LwAtmosphere atmos, f64[:,::1] sca):
 *         cdef f64[::1] scaLine = np.zeros(atmos.Nspace)             # <<<<<<<<<<<<<<
 *         cdef int k, la
 *         cdef RayleighScatterer rayH, rayHe
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1259, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_scaLine = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1263
 *         cdef RayleighScatterer rayH, rayHe
 * 
 *         if 'H' in self.radSet:             # <<<<<<<<<<<<<<
 *             hPops = self.eqPops['H']
 *             rayH = RayleighScatterer(atmos, self.radSet['H'], hPops)
 */
  __pyx_t_9 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_H_2, __pyx_v_self->radSet, Py_EQ)); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1263, __pyx_L1_error)
  __pyx_t_10 = (__pyx_t_9 != 0);
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":1264
 * 
 *         if 'H' in self.radSet:
 *             hPops = self.eqPops['H']             # <<<<<<<<<<<<<<
 *             rayH = RayleighScatterer(atmos, self.radSet['H'], hPops)
 *             for la in range(self.wavelength.shape[0]):
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_H_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1264, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_hPops = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1265
 *         if 'H' in self.radSet:
 *             hPops = self.eqPops['H']
 *             rayH = RayleighScatterer(atmos, self.radSet['H'], hPops)             # <<<<<<<<<<<<<<
 *             for la in range(self.wavelength.shape[0]):
 *                 if rayH.scatter(self.wavelength[la], scaLine):
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->radSet, __pyx_n_u_H_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_v_atmos));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_atmos));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_v_atmos));
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_hPops);
    __Pyx_GIVEREF(__pyx_v_hPops);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_hPops);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_RayleighScatterer), __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_rayH = ((struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1266
 *             hPops = self.eqPops['H']
 *             rayH = RayleighScatterer(atmos, self.radSet['H'], hPops)
 *             for la in range(self.wavelength.shape[0]):             # <<<<<<<<<<<<<<
 *                 if rayH.scatter(self.wavelength[la], scaLine):
 *                     for k in range(atmos.Nspace):
 */
    if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1266, __pyx_L1_error)}
    __pyx_t_11 = (__pyx_v_self->wavelength.shape[0]);
    __pyx_t_12 = __pyx_t_11;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_12; __pyx_t_6+=1) {
      __pyx_v_la = __pyx_t_6;

      /* "Source/LwMiddleLayer.pyx":1267
 *             rayH = RayleighScatterer(atmos, self.radSet['H'], hPops)
 *             for la in range(self.wavelength.shape[0]):
 *                 if rayH.scatter(self.wavelength[la], scaLine):             # <<<<<<<<<<<<<<
 *                     for k in range(atmos.Nspace):
 *                         sca[la, k] += scaLine[k]
 */
      if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1267, __pyx_L1_error)}
      __pyx_t_13 = __pyx_v_la;
      __pyx_t_14 = -1;
      if (__pyx_t_13 < 0) {
        __pyx_t_13 += __pyx_v_self->wavelength.shape[0];
        if (unlikely(__pyx_t_13 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_13 >= __pyx_v_self->wavelength.shape[0])) __pyx_t_14 = 0;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        __PYX_ERR(0, 1267, __pyx_L1_error)
      }
      __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_v_rayH->__pyx_vtab)->scatter(__pyx_v_rayH, (*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->wavelength.data) + __pyx_t_13)) ))), __pyx_v_scaLine, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1267, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 1267, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_10) {

        /* "Source/LwMiddleLayer.pyx":1268
 *             for la in range(self.wavelength.shape[0]):
 *                 if rayH.scatter(self.wavelength[la], scaLine):
 *                     for k in range(atmos.Nspace):             # <<<<<<<<<<<<<<
 *                         sca[la, k] += scaLine[k]
 * 
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1268, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_15 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_15 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1268, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_16 = __pyx_t_15;
        for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_16; __pyx_t_14+=1) {
          __pyx_v_k = __pyx_t_14;

          /* "Source/LwMiddleLayer.pyx":1269
 *                 if rayH.scatter(self.wavelength[la], scaLine):
 *                     for k in range(atmos.Nspace):
 *                         sca[la, k] += scaLine[k]             # <<<<<<<<<<<<<<
 * 
 *         if 'He' in self.radSet:
 */
          __pyx_t_13 = __pyx_v_k;
          __pyx_t_17 = -1;
          if (__pyx_t_13 < 0) {
            __pyx_t_13 += __pyx_v_scaLine.shape[0];
            if (unlikely(__pyx_t_13 < 0)) __pyx_t_17 = 0;
          } else if (unlikely(__pyx_t_13 >= __pyx_v_scaLine.shape[0])) __pyx_t_17 = 0;
          if (unlikely(__pyx_t_17 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_17);
            __PYX_ERR(0, 1269, __pyx_L1_error)
          }
          __pyx_t_18 = __pyx_v_la;
          __pyx_t_19 = __pyx_v_k;
          __pyx_t_17 = -1;
          if (__pyx_t_18 < 0) {
            __pyx_t_18 += __pyx_v_sca.shape[0];
            if (unlikely(__pyx_t_18 < 0)) __pyx_t_17 = 0;
          } else if (unlikely(__pyx_t_18 >= __pyx_v_sca.shape[0])) __pyx_t_17 = 0;
          if (__pyx_t_19 < 0) {
            __pyx_t_19 += __pyx_v_sca.shape[1];
            if (unlikely(__pyx_t_19 < 0)) __pyx_t_17 = 1;
          } else if (unlikely(__pyx_t_19 >= __pyx_v_sca.shape[1])) __pyx_t_17 = 1;
          if (unlikely(__pyx_t_17 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_17);
            __PYX_ERR(0, 1269, __pyx_L1_error)
          }
          *((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_sca.data + __pyx_t_18 * __pyx_v_sca.strides[0]) )) + __pyx_t_19)) )) += (*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_scaLine.data) + __pyx_t_13)) )));
        }

        /* "Source/LwMiddleLayer.pyx":1267
 *             rayH = RayleighScatterer(atmos, self.radSet['H'], hPops)
 *             for la in range(self.wavelength.shape[0]):
 *                 if rayH.scatter(self.wavelength[la], scaLine):             # <<<<<<<<<<<<<<
 *                     for k in range(atmos.Nspace):
 *                         sca[la, k] += scaLine[k]
 */
      }
    }

    /* "Source/LwMiddleLayer.pyx":1263
 *         cdef RayleighScatterer rayH, rayHe
 * 
 *         if 'H' in self.radSet:             # <<<<<<<<<<<<<<
 *             hPops = self.eqPops['H']
 *             rayH = RayleighScatterer(atmos, self.radSet['H'], hPops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1271
 *                         sca[la, k] += scaLine[k]
 * 
 *         if 'He' in self.radSet:             # <<<<<<<<<<<<<<
 *             hePops = self.eqPops['He']
 *             rayHe = RayleighScatterer(atmos, self.radSet['He'], hePops)
 */
  __pyx_t_10 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_He, __pyx_v_self->radSet, Py_EQ)); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 1271, __pyx_L1_error)
  __pyx_t_9 = (__pyx_t_10 != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":1272
 * 
 *         if 'He' in self.radSet:
 *             hePops = self.eqPops['He']             # <<<<<<<<<<<<<<
 *             rayHe = RayleighScatterer(atmos, self.radSet['He'], hePops)
 *             for la in range(self.wavelength.shape[0]):
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_He); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_hePops = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1273
 *         if 'He' in self.radSet:
 *             hePops = self.eqPops['He']
 *             rayHe = RayleighScatterer(atmos, self.radSet['He'], hePops)             # <<<<<<<<<<<<<<
 *             for la in range(self.wavelength.shape[0]):
 *                 if rayHe.scatter(self.wavelength[la], scaLine):
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->radSet, __pyx_n_u_He); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_v_atmos));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_atmos));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_v_atmos));
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_hePops);
    __Pyx_GIVEREF(__pyx_v_hePops);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_hePops);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_RayleighScatterer), __pyx_t_4, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_rayHe = ((struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1274
 *             hePops = self.eqPops['He']
 *             rayHe = RayleighScatterer(atmos, self.radSet['He'], hePops)
 *             for la in range(self.wavelength.shape[0]):             # <<<<<<<<<<<<<<
 *                 if rayHe.scatter(self.wavelength[la], scaLine):
 *                     for k in range(atmos.Nspace):
 */
    if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1274, __pyx_L1_error)}
    __pyx_t_11 = (__pyx_v_self->wavelength.shape[0]);
    __pyx_t_12 = __pyx_t_11;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_12; __pyx_t_6+=1) {
      __pyx_v_la = __pyx_t_6;

      /* "Source/LwMiddleLayer.pyx":1275
 *             rayHe = RayleighScatterer(atmos, self.radSet['He'], hePops)
 *             for la in range(self.wavelength.shape[0]):
 *                 if rayHe.scatter(self.wavelength[la], scaLine):             # <<<<<<<<<<<<<<
 *                     for k in range(atmos.Nspace):
 *                         sca[la, k] += scaLine[k]
 */
      if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1275, __pyx_L1_error)}
      __pyx_t_13 = __pyx_v_la;
      __pyx_t_14 = -1;
      if (__pyx_t_13 < 0) {
        __pyx_t_13 += __pyx_v_self->wavelength.shape[0];
        if (unlikely(__pyx_t_13 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_13 >= __pyx_v_self->wavelength.shape[0])) __pyx_t_14 = 0;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        __PYX_ERR(0, 1275, __pyx_L1_error)
      }
      __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_v_rayHe->__pyx_vtab)->scatter(__pyx_v_rayHe, (*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->wavelength.data) + __pyx_t_13)) ))), __pyx_v_scaLine, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1275, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1275, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_9) {

        /* "Source/LwMiddleLayer.pyx":1276
 *             for la in range(self.wavelength.shape[0]):
 *                 if rayHe.scatter(self.wavelength[la], scaLine):
 *                     for k in range(atmos.Nspace):             # <<<<<<<<<<<<<<
 *                         sca[la, k] += scaLine[k]
 * 
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1276, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_15 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_15 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1276, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_16 = __pyx_t_15;
        for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_16; __pyx_t_14+=1) {
          __pyx_v_k = __pyx_t_14;

          /* "Source/LwMiddleLayer.pyx":1277
 *                 if rayHe.scatter(self.wavelength[la], scaLine):
 *                     for k in range(atmos.Nspace):
 *                         sca[la, k] += scaLine[k]             # <<<<<<<<<<<<<<
 * 
 *     cpdef bf_opacities(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta):
 */
          __pyx_t_13 = __pyx_v_k;
          __pyx_t_17 = -1;
          if (__pyx_t_13 < 0) {
            __pyx_t_13 += __pyx_v_scaLine.shape[0];
            if (unlikely(__pyx_t_13 < 0)) __pyx_t_17 = 0;
          } else if (unlikely(__pyx_t_13 >= __pyx_v_scaLine.shape[0])) __pyx_t_17 = 0;
          if (unlikely(__pyx_t_17 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_17);
            __PYX_ERR(0, 1277, __pyx_L1_error)
          }
          __pyx_t_19 = __pyx_v_la;
          __pyx_t_18 = __pyx_v_k;
          __pyx_t_17 = -1;
          if (__pyx_t_19 < 0) {
            __pyx_t_19 += __pyx_v_sca.shape[0];
            if (unlikely(__pyx_t_19 < 0)) __pyx_t_17 = 0;
          } else if (unlikely(__pyx_t_19 >= __pyx_v_sca.shape[0])) __pyx_t_17 = 0;
          if (__pyx_t_18 < 0) {
            __pyx_t_18 += __pyx_v_sca.shape[1];
            if (unlikely(__pyx_t_18 < 0)) __pyx_t_17 = 1;
          } else if (unlikely(__pyx_t_18 >= __pyx_v_sca.shape[1])) __pyx_t_17 = 1;
          if (unlikely(__pyx_t_17 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_17);
            __PYX_ERR(0, 1277, __pyx_L1_error)
          }
          *((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_sca.data + __pyx_t_19 * __pyx_v_sca.strides[0]) )) + __pyx_t_18)) )) += (*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_scaLine.data) + __pyx_t_13)) )));
        }

        /* "Source/LwMiddleLayer.pyx":1275
 *             rayHe = RayleighScatterer(atmos, self.radSet['He'], hePops)
 *             for la in range(self.wavelength.shape[0]):
 *                 if rayHe.scatter(self.wavelength[la], scaLine):             # <<<<<<<<<<<<<<
 *                     for k in range(atmos.Nspace):
 *                         sca[la, k] += scaLine[k]
 */
      }
    }

    /* "Source/LwMiddleLayer.pyx":1271
 *                         sca[la, k] += scaLine[k]
 * 
 *         if 'He' in self.radSet:             # <<<<<<<<<<<<<<
 *             hePops = self.eqPops['He']
 *             rayHe = RayleighScatterer(atmos, self.radSet['He'], hePops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1258
 *                 chi[la, k] += sca[la, k]
 * 
 *     cpdef rayleigh_scattering(self, LwAtmosphere atmos, f64[:,::1] sca):             # <<<<<<<<<<<<<<
 *         cdef f64[::1] scaLine = np.zeros(atmos.Nspace)
 *         cdef int k, la
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.rayleigh_scattering", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_scaLine, 1);
  __Pyx_XDECREF((PyObject *)__pyx_v_rayH);
  __Pyx_XDECREF((PyObject *)__pyx_v_rayHe);
  __Pyx_XDECREF(__pyx_v_hPops);
  __Pyx_XDECREF(__pyx_v_hePops);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_5rayleigh_scattering(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_5rayleigh_scattering(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos = 0;
  __Pyx_memviewslice __pyx_v_sca = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rayleigh_scattering (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmos,&__pyx_n_s_sca,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sca)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("rayleigh_scattering", 1, 2, 2, 1); __PYX_ERR(0, 1258, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rayleigh_scattering") < 0)) __PYX_ERR(0, 1258, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)values[0]);
    __pyx_v_sca = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(values[1], PyBUF_WRITABLE); if (unlikely(!__pyx_v_sca.memview)) __PYX_ERR(0, 1258, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rayleigh_scattering", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1258, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.rayleigh_scattering", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_atmos), __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere, 1, "atmos", 0))) __PYX_ERR(0, 1258, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_4rayleigh_scattering(((struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self), __pyx_v_atmos, __pyx_v_sca);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_4rayleigh_scattering(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, __Pyx_memviewslice __pyx_v_sca) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rayleigh_scattering", 0);
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_sca.memview)) { __Pyx_RaiseUnboundLocalError("sca"); __PYX_ERR(0, 1258, __pyx_L1_error) }
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_15BasicBackground_rayleigh_scattering(__pyx_v_self, __pyx_v_atmos, __pyx_v_sca, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.rayleigh_scattering", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_sca, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1279
 *                         sca[la, k] += scaLine[k]
 * 
 *     cpdef bf_opacities(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta):             # <<<<<<<<<<<<<<
 *         atoms = self.radSet.passiveAtoms
 *         if len(atoms) == 0:
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_7bf_opacities(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_bf_opacities(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, __Pyx_memviewslice __pyx_v_chi, __Pyx_memviewslice __pyx_v_eta, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_atoms = NULL;
  PyObject *__pyx_v_continua = NULL;
  CYTHON_UNUSED __pyx_t_8CmoArray_f64 __pyx_v_sigma0;
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_c = NULL;
  __Pyx_memviewslice __pyx_v_alpha = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_v_i;
  int __pyx_v_la;
  int __pyx_v_k;
  PyObject *__pyx_v_alphaLa = NULL;
  __Pyx_memviewslice __pyx_v_expla = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_f64 __pyx_v_hc_k;
  __pyx_t_8CmoArray_f64 __pyx_v_twohc;
  __pyx_t_8CmoArray_f64 __pyx_v_hc_kla;
  __pyx_t_8CmoArray_f64 __pyx_v_twohnu3_c2;
  __pyx_t_8CmoArray_f64 __pyx_v_gijk;
  int __pyx_v_ci;
  int __pyx_v_cj;
  __Pyx_memviewslice __pyx_v_nStar = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_n = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  double __pyx_t_11;
  __pyx_t_8CmoArray_f64 __pyx_t_12;
  PyObject *(*__pyx_t_13)(PyObject *);
  Py_ssize_t __pyx_t_14;
  PyObject *(*__pyx_t_15)(PyObject *);
  int __pyx_t_16;
  __Pyx_memviewslice __pyx_t_17 = { 0, 0, { 0 }, { 0 }, { 0 } };
  Py_ssize_t __pyx_t_18;
  int __pyx_t_19;
  Py_ssize_t __pyx_t_20;
  Py_ssize_t __pyx_t_21;
  int __pyx_t_22;
  long __pyx_t_23;
  long __pyx_t_24;
  __pyx_t_8CmoArray_f64 __pyx_t_25;
  int __pyx_t_26;
  Py_ssize_t __pyx_t_27;
  Py_ssize_t __pyx_t_28;
  Py_ssize_t __pyx_t_29;
  Py_ssize_t __pyx_t_30;
  Py_ssize_t __pyx_t_31;
  Py_ssize_t __pyx_t_32;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bf_opacities", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_bf_opacities); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1279, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_7bf_opacities)) {
        __Pyx_XDECREF(__pyx_r);
        if (unlikely(!__pyx_v_chi.memview)) { __Pyx_RaiseUnboundLocalError("chi"); __PYX_ERR(0, 1279, __pyx_L1_error) }
        __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_chi, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1279, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (unlikely(!__pyx_v_eta.memview)) { __Pyx_RaiseUnboundLocalError("eta"); __PYX_ERR(0, 1279, __pyx_L1_error) }
        __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_eta, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1279, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[4] = {__pyx_t_6, ((PyObject *)__pyx_v_atmos), __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1279, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[4] = {__pyx_t_6, ((PyObject *)__pyx_v_atmos), __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 3+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1279, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(3+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1279, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_atmos));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_atmos));
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, ((PyObject *)__pyx_v_atmos));
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_t_4);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1279, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":1280
 * 
 *     cpdef bf_opacities(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta):
 *         atoms = self.radSet.passiveAtoms             # <<<<<<<<<<<<<<
 *         if len(atoms) == 0:
 *             return
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->radSet, __pyx_n_s_passiveAtoms); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_atoms = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1281
 *     cpdef bf_opacities(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta):
 *         atoms = self.radSet.passiveAtoms
 *         if len(atoms) == 0:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_9 = PyObject_Length(__pyx_v_atoms); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1281, __pyx_L1_error)
  __pyx_t_10 = ((__pyx_t_9 == 0) != 0);
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":1282
 *         atoms = self.radSet.passiveAtoms
 *         if len(atoms) == 0:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         continua = []
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":1281
 *     cpdef bf_opacities(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta):
 *         atoms = self.radSet.passiveAtoms
 *         if len(atoms) == 0:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":1284
 *             return
 * 
 *         continua = []             # <<<<<<<<<<<<<<
 *         cdef f64 sigma0 = 32.0 / (3.0 * sqrt(3.0)) * Const.QElectron**2 / (4.0 * np.pi * Const.Epsilon0) / (Const.MElectron * Const.CLight) * Const.HPlanck / (2.0 * Const.ERydberg)
 *         for a in atoms:
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_continua = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1285
 * 
 *         continua = []
 *         cdef f64 sigma0 = 32.0 / (3.0 * sqrt(3.0)) * Const.QElectron**2 / (4.0 * np.pi * Const.Epsilon0) / (Const.MElectron * Const.CLight) * Const.HPlanck / (2.0 * Const.ERydberg)             # <<<<<<<<<<<<<<
 *         for a in atoms:
 *             for c in a.continua:
 */
  __pyx_t_11 = (3.0 * sqrt(3.0));
  if (unlikely(__pyx_t_11 == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1285, __pyx_L1_error)
  }
  __pyx_t_1 = PyFloat_FromDouble((32.0 / __pyx_t_11)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Const); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_QElectron); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Power(__pyx_t_5, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_pi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_float_4_0, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Const); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_Epsilon0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Const); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_MElectron); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Const); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_CLight); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_8, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Const); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_HPlanck); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_Const); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_ERydberg); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyNumber_Multiply(__pyx_float_2_0, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_sigma0 = __pyx_t_12;

  /* "Source/LwMiddleLayer.pyx":1286
 *         continua = []
 *         cdef f64 sigma0 = 32.0 / (3.0 * sqrt(3.0)) * Const.QElectron**2 / (4.0 * np.pi * Const.Epsilon0) / (Const.MElectron * Const.CLight) * Const.HPlanck / (2.0 * Const.ERydberg)
 *         for a in atoms:             # <<<<<<<<<<<<<<
 *             for c in a.continua:
 *                 continua.append(c)
 */
  if (likely(PyList_CheckExact(__pyx_v_atoms)) || PyTuple_CheckExact(__pyx_v_atoms)) {
    __pyx_t_2 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
    __pyx_t_13 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_atoms); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1286, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_13 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1286, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_13)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1286, __pyx_L1_error)
        #else
        __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1286, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1286, __pyx_L1_error)
        #else
        __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1286, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_8);
        #endif
      }
    } else {
      __pyx_t_8 = __pyx_t_13(__pyx_t_2);
      if (unlikely(!__pyx_t_8)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1286, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_8);
    }
    __Pyx_XDECREF_SET(__pyx_v_a, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "Source/LwMiddleLayer.pyx":1287
 *         cdef f64 sigma0 = 32.0 / (3.0 * sqrt(3.0)) * Const.QElectron**2 / (4.0 * np.pi * Const.Epsilon0) / (Const.MElectron * Const.CLight) * Const.HPlanck / (2.0 * Const.ERydberg)
 *         for a in atoms:
 *             for c in a.continua:             # <<<<<<<<<<<<<<
 *                 continua.append(c)
 * 
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_continua); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1287, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    if (likely(PyList_CheckExact(__pyx_t_8)) || PyTuple_CheckExact(__pyx_t_8)) {
      __pyx_t_1 = __pyx_t_8; __Pyx_INCREF(__pyx_t_1); __pyx_t_14 = 0;
      __pyx_t_15 = NULL;
    } else {
      __pyx_t_14 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1287, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_15 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1287, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    for (;;) {
      if (likely(!__pyx_t_15)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          if (__pyx_t_14 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_8 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_14); __Pyx_INCREF(__pyx_t_8); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 1287, __pyx_L1_error)
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_1, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1287, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          #endif
        } else {
          if (__pyx_t_14 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_8 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_14); __Pyx_INCREF(__pyx_t_8); __pyx_t_14++; if (unlikely(0 < 0)) __PYX_ERR(0, 1287, __pyx_L1_error)
          #else
          __pyx_t_8 = PySequence_ITEM(__pyx_t_1, __pyx_t_14); __pyx_t_14++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1287, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          #endif
        }
      } else {
        __pyx_t_8 = __pyx_t_15(__pyx_t_1);
        if (unlikely(!__pyx_t_8)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1287, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_8);
      }
      __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_8);
      __pyx_t_8 = 0;

      /* "Source/LwMiddleLayer.pyx":1288
 *         for a in atoms:
 *             for c in a.continua:
 *                 continua.append(c)             # <<<<<<<<<<<<<<
 * 
 *         cdef f64[:, ::1] alpha = np.zeros((self.wavelength.shape[0], len(continua)))
 */
      __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_continua, __pyx_v_c); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 1288, __pyx_L1_error)

      /* "Source/LwMiddleLayer.pyx":1287
 *         cdef f64 sigma0 = 32.0 / (3.0 * sqrt(3.0)) * Const.QElectron**2 / (4.0 * np.pi * Const.Epsilon0) / (Const.MElectron * Const.CLight) * Const.HPlanck / (2.0 * Const.ERydberg)
 *         for a in atoms:
 *             for c in a.continua:             # <<<<<<<<<<<<<<
 *                 continua.append(c)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1286
 *         continua = []
 *         cdef f64 sigma0 = 32.0 / (3.0 * sqrt(3.0)) * Const.QElectron**2 / (4.0 * np.pi * Const.Epsilon0) / (Const.MElectron * Const.CLight) * Const.HPlanck / (2.0 * Const.ERydberg)
 *         for a in atoms:             # <<<<<<<<<<<<<<
 *             for c in a.continua:
 *                 continua.append(c)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1290
 *                 continua.append(c)
 * 
 *         cdef f64[:, ::1] alpha = np.zeros((self.wavelength.shape[0], len(continua)))             # <<<<<<<<<<<<<<
 *         cdef int i, la, k, Z
 *         cdef f64 nEff, gbf_0, wav, edge, lambdaMin
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1290, __pyx_L1_error)}
  __pyx_t_1 = PyInt_FromSsize_t((__pyx_v_self->wavelength.shape[0])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_9 = PyList_GET_SIZE(__pyx_v_continua); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1290, __pyx_L1_error)
  __pyx_t_5 = PyInt_FromSsize_t(__pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_8);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_8, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_17 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_17.memview)) __PYX_ERR(0, 1290, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_alpha = __pyx_t_17;
  __pyx_t_17.memview = NULL;
  __pyx_t_17.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1293
 *         cdef int i, la, k, Z
 *         cdef f64 nEff, gbf_0, wav, edge, lambdaMin
 *         for i, c in enumerate(continua):             # <<<<<<<<<<<<<<
 *             alphaLa = c.alpha(np.asarray(self.wavelength))
 *             for la in range(self.wavelength.shape[0]):
 */
  __pyx_t_7 = 0;
  __pyx_t_2 = __pyx_v_continua; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
  for (;;) {
    if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_8 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_8); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1293, __pyx_L1_error)
    #else
    __pyx_t_8 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1293, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_8);
    __pyx_t_8 = 0;
    __pyx_v_i = __pyx_t_7;
    __pyx_t_7 = (__pyx_t_7 + 1);

    /* "Source/LwMiddleLayer.pyx":1294
 *         cdef f64 nEff, gbf_0, wav, edge, lambdaMin
 *         for i, c in enumerate(continua):
 *             alphaLa = c.alpha(np.asarray(self.wavelength))             # <<<<<<<<<<<<<<
 *             for la in range(self.wavelength.shape[0]):
 *                 alpha[la, i] = alphaLa[la]
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_alpha); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1294, __pyx_L1_error)}
    __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_5 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_6, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_8 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1294, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF_SET(__pyx_v_alphaLa, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "Source/LwMiddleLayer.pyx":1295
 *         for i, c in enumerate(continua):
 *             alphaLa = c.alpha(np.asarray(self.wavelength))
 *             for la in range(self.wavelength.shape[0]):             # <<<<<<<<<<<<<<
 *                 alpha[la, i] = alphaLa[la]
 * 
 */
    if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1295, __pyx_L1_error)}
    __pyx_t_14 = (__pyx_v_self->wavelength.shape[0]);
    __pyx_t_18 = __pyx_t_14;
    for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
      __pyx_v_la = __pyx_t_19;

      /* "Source/LwMiddleLayer.pyx":1296
 *             alphaLa = c.alpha(np.asarray(self.wavelength))
 *             for la in range(self.wavelength.shape[0]):
 *                 alpha[la, i] = alphaLa[la]             # <<<<<<<<<<<<<<
 * 
 *         cdef f64[:, ::1] expla = np.zeros((self.wavelength.shape[0], atmos.Nspace))
 */
      __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_alphaLa, __pyx_v_la, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1296, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_8); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1296, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_20 = __pyx_v_la;
      __pyx_t_21 = __pyx_v_i;
      __pyx_t_22 = -1;
      if (__pyx_t_20 < 0) {
        __pyx_t_20 += __pyx_v_alpha.shape[0];
        if (unlikely(__pyx_t_20 < 0)) __pyx_t_22 = 0;
      } else if (unlikely(__pyx_t_20 >= __pyx_v_alpha.shape[0])) __pyx_t_22 = 0;
      if (__pyx_t_21 < 0) {
        __pyx_t_21 += __pyx_v_alpha.shape[1];
        if (unlikely(__pyx_t_21 < 0)) __pyx_t_22 = 1;
      } else if (unlikely(__pyx_t_21 >= __pyx_v_alpha.shape[1])) __pyx_t_22 = 1;
      if (unlikely(__pyx_t_22 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_22);
        __PYX_ERR(0, 1296, __pyx_L1_error)
      }
      *((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_alpha.data + __pyx_t_20 * __pyx_v_alpha.strides[0]) )) + __pyx_t_21)) )) = __pyx_t_12;
    }

    /* "Source/LwMiddleLayer.pyx":1293
 *         cdef int i, la, k, Z
 *         cdef f64 nEff, gbf_0, wav, edge, lambdaMin
 *         for i, c in enumerate(continua):             # <<<<<<<<<<<<<<
 *             alphaLa = c.alpha(np.asarray(self.wavelength))
 *             for la in range(self.wavelength.shape[0]):
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1298
 *                 alpha[la, i] = alphaLa[la]
 * 
 *         cdef f64[:, ::1] expla = np.zeros((self.wavelength.shape[0], atmos.Nspace))             # <<<<<<<<<<<<<<
 *         cdef f64 hc_k = Const.HC / (Const.KBoltzmann * Const.NM_TO_M)
 *         cdef f64 twohc = (2.0 * Const.HC) / Const.NM_TO_M**3
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_zeros); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1298, __pyx_L1_error)}
  __pyx_t_8 = PyInt_FromSsize_t((__pyx_v_self->wavelength.shape[0])); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_5);
  __pyx_t_8 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_17 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_17.memview)) __PYX_ERR(0, 1298, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_expla = __pyx_t_17;
  __pyx_t_17.memview = NULL;
  __pyx_t_17.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1299
 * 
 *         cdef f64[:, ::1] expla = np.zeros((self.wavelength.shape[0], atmos.Nspace))
 *         cdef f64 hc_k = Const.HC / (Const.KBoltzmann * Const.NM_TO_M)             # <<<<<<<<<<<<<<
 *         cdef f64 twohc = (2.0 * Const.HC) / Const.NM_TO_M**3
 *         cdef f64 hc_kla
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Const); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_HC); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Const); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_KBoltzmann); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Const); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_NM_TO_M); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Multiply(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1299, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_hc_k = __pyx_t_12;

  /* "Source/LwMiddleLayer.pyx":1300
 *         cdef f64[:, ::1] expla = np.zeros((self.wavelength.shape[0], atmos.Nspace))
 *         cdef f64 hc_k = Const.HC / (Const.KBoltzmann * Const.NM_TO_M)
 *         cdef f64 twohc = (2.0 * Const.HC) / Const.NM_TO_M**3             # <<<<<<<<<<<<<<
 *         cdef f64 hc_kla
 *         for la in range(self.wavelength.shape[0]):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_Const); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_HC); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Multiply(__pyx_float_2_0, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Const); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_NM_TO_M); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Power(__pyx_t_4, __pyx_int_3, Py_None); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_12 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_12 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1300, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_twohc = __pyx_t_12;

  /* "Source/LwMiddleLayer.pyx":1302
 *         cdef f64 twohc = (2.0 * Const.HC) / Const.NM_TO_M**3
 *         cdef f64 hc_kla
 *         for la in range(self.wavelength.shape[0]):             # <<<<<<<<<<<<<<
 *             hc_kla = hc_k / self.wavelength[la]
 *             for k in range(atmos.Nspace):
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1302, __pyx_L1_error)}
  __pyx_t_9 = (__pyx_v_self->wavelength.shape[0]);
  __pyx_t_14 = __pyx_t_9;
  for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_14; __pyx_t_7+=1) {
    __pyx_v_la = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":1303
 *         cdef f64 hc_kla
 *         for la in range(self.wavelength.shape[0]):
 *             hc_kla = hc_k / self.wavelength[la]             # <<<<<<<<<<<<<<
 *             for k in range(atmos.Nspace):
 *                 expla[la, k] = exp(-hc_kla / atmos.temperature[k])
 */
    if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1303, __pyx_L1_error)}
    __pyx_t_21 = __pyx_v_la;
    __pyx_t_19 = -1;
    if (__pyx_t_21 < 0) {
      __pyx_t_21 += __pyx_v_self->wavelength.shape[0];
      if (unlikely(__pyx_t_21 < 0)) __pyx_t_19 = 0;
    } else if (unlikely(__pyx_t_21 >= __pyx_v_self->wavelength.shape[0])) __pyx_t_19 = 0;
    if (unlikely(__pyx_t_19 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_19);
      __PYX_ERR(0, 1303, __pyx_L1_error)
    }
    __pyx_t_12 = (*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->wavelength.data) + __pyx_t_21)) )));
    if (unlikely(__pyx_t_12 == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "float division");
      __PYX_ERR(0, 1303, __pyx_L1_error)
    }
    __pyx_v_hc_kla = (__pyx_v_hc_k / __pyx_t_12);

    /* "Source/LwMiddleLayer.pyx":1304
 *         for la in range(self.wavelength.shape[0]):
 *             hc_kla = hc_k / self.wavelength[la]
 *             for k in range(atmos.Nspace):             # <<<<<<<<<<<<<<
 *                 expla[la, k] = exp(-hc_kla / atmos.temperature[k])
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_4); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1304, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_24 = __pyx_t_23;
    for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_24; __pyx_t_19+=1) {
      __pyx_v_k = __pyx_t_19;

      /* "Source/LwMiddleLayer.pyx":1305
 *             hc_kla = hc_k / self.wavelength[la]
 *             for k in range(atmos.Nspace):
 *                 expla[la, k] = exp(-hc_kla / atmos.temperature[k])             # <<<<<<<<<<<<<<
 * 
 *         cdef f64 twohnu3_c2
 */
      __pyx_t_12 = (-__pyx_v_hc_kla);
      if (unlikely(!__pyx_v_atmos->temperature.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1305, __pyx_L1_error)}
      __pyx_t_21 = __pyx_v_k;
      __pyx_t_22 = -1;
      if (__pyx_t_21 < 0) {
        __pyx_t_21 += __pyx_v_atmos->temperature.shape[0];
        if (unlikely(__pyx_t_21 < 0)) __pyx_t_22 = 0;
      } else if (unlikely(__pyx_t_21 >= __pyx_v_atmos->temperature.shape[0])) __pyx_t_22 = 0;
      if (unlikely(__pyx_t_22 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_22);
        __PYX_ERR(0, 1305, __pyx_L1_error)
      }
      __pyx_t_25 = (*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_atmos->temperature.data) + __pyx_t_21)) )));
      if (unlikely(__pyx_t_25 == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1305, __pyx_L1_error)
      }
      __pyx_t_21 = __pyx_v_la;
      __pyx_t_20 = __pyx_v_k;
      __pyx_t_22 = -1;
      if (__pyx_t_21 < 0) {
        __pyx_t_21 += __pyx_v_expla.shape[0];
        if (unlikely(__pyx_t_21 < 0)) __pyx_t_22 = 0;
      } else if (unlikely(__pyx_t_21 >= __pyx_v_expla.shape[0])) __pyx_t_22 = 0;
      if (__pyx_t_20 < 0) {
        __pyx_t_20 += __pyx_v_expla.shape[1];
        if (unlikely(__pyx_t_20 < 0)) __pyx_t_22 = 1;
      } else if (unlikely(__pyx_t_20 >= __pyx_v_expla.shape[1])) __pyx_t_22 = 1;
      if (unlikely(__pyx_t_22 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_22);
        __PYX_ERR(0, 1305, __pyx_L1_error)
      }
      *((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_expla.data + __pyx_t_21 * __pyx_v_expla.strides[0]) )) + __pyx_t_20)) )) = exp((__pyx_t_12 / __pyx_t_25));
    }
  }

  /* "Source/LwMiddleLayer.pyx":1313
 *         cdef f64[:,::1] nStar
 *         cdef f64[:,::1] n
 *         for i, c in enumerate(continua):             # <<<<<<<<<<<<<<
 *             nStar = self.eqPops.atomicPops[c.atom.element].nStar
 *             n = self.eqPops.atomicPops[c.atom.element].n
 */
  __pyx_t_7 = 0;
  __pyx_t_4 = __pyx_v_continua; __Pyx_INCREF(__pyx_t_4); __pyx_t_9 = 0;
  for (;;) {
    if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1313, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1313, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_v_i = __pyx_t_7;
    __pyx_t_7 = (__pyx_t_7 + 1);

    /* "Source/LwMiddleLayer.pyx":1314
 *         cdef f64[:,::1] n
 *         for i, c in enumerate(continua):
 *             nStar = self.eqPops.atomicPops[c.atom.element].nStar             # <<<<<<<<<<<<<<
 *             n = self.eqPops.atomicPops[c.atom.element].n
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->eqPops, __pyx_n_s_atomicPops); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_atom); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_element); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_nStar); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_17 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_3, PyBUF_WRITABLE); if (unlikely(!__pyx_t_17.memview)) __PYX_ERR(0, 1314, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_nStar, 1);
    __pyx_v_nStar = __pyx_t_17;
    __pyx_t_17.memview = NULL;
    __pyx_t_17.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1315
 *         for i, c in enumerate(continua):
 *             nStar = self.eqPops.atomicPops[c.atom.element].nStar
 *             n = self.eqPops.atomicPops[c.atom.element].n             # <<<<<<<<<<<<<<
 * 
 *             ci = c.i
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->eqPops, __pyx_n_s_atomicPops); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_atom); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_element); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_n); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_17 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_17.memview)) __PYX_ERR(0, 1315, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_n, 1);
    __pyx_v_n = __pyx_t_17;
    __pyx_t_17.memview = NULL;
    __pyx_t_17.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1317
 *             n = self.eqPops.atomicPops[c.atom.element].n
 * 
 *             ci = c.i             # <<<<<<<<<<<<<<
 *             cj = c.j
 *             for la in range(self.wavelength.shape[0]):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1317, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_19 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_19 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1317, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_ci = __pyx_t_19;

    /* "Source/LwMiddleLayer.pyx":1318
 * 
 *             ci = c.i
 *             cj = c.j             # <<<<<<<<<<<<<<
 *             for la in range(self.wavelength.shape[0]):
 *                 twohnu3_c2 = twohc / self.wavelength[la]**3
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_j); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_19 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_19 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1318, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_cj = __pyx_t_19;

    /* "Source/LwMiddleLayer.pyx":1319
 *             ci = c.i
 *             cj = c.j
 *             for la in range(self.wavelength.shape[0]):             # <<<<<<<<<<<<<<
 *                 twohnu3_c2 = twohc / self.wavelength[la]**3
 *                 for k in range(atmos.Nspace):
 */
    if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1319, __pyx_L1_error)}
    __pyx_t_14 = (__pyx_v_self->wavelength.shape[0]);
    __pyx_t_18 = __pyx_t_14;
    for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
      __pyx_v_la = __pyx_t_19;

      /* "Source/LwMiddleLayer.pyx":1320
 *             cj = c.j
 *             for la in range(self.wavelength.shape[0]):
 *                 twohnu3_c2 = twohc / self.wavelength[la]**3             # <<<<<<<<<<<<<<
 *                 for k in range(atmos.Nspace):
 *                     gijk = nStar[ci, k] / nStar[cj, k] * expla[la, k]
 */
      if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1320, __pyx_L1_error)}
      __pyx_t_20 = __pyx_v_la;
      __pyx_t_22 = -1;
      if (__pyx_t_20 < 0) {
        __pyx_t_20 += __pyx_v_self->wavelength.shape[0];
        if (unlikely(__pyx_t_20 < 0)) __pyx_t_22 = 0;
      } else if (unlikely(__pyx_t_20 >= __pyx_v_self->wavelength.shape[0])) __pyx_t_22 = 0;
      if (unlikely(__pyx_t_22 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_22);
        __PYX_ERR(0, 1320, __pyx_L1_error)
      }
      __pyx_t_25 = pow((*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->wavelength.data) + __pyx_t_20)) ))), 3.0);
      if (unlikely(__pyx_t_25 == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "float division");
        __PYX_ERR(0, 1320, __pyx_L1_error)
      }
      __pyx_v_twohnu3_c2 = (__pyx_v_twohc / __pyx_t_25);

      /* "Source/LwMiddleLayer.pyx":1321
 *             for la in range(self.wavelength.shape[0]):
 *                 twohnu3_c2 = twohc / self.wavelength[la]**3
 *                 for k in range(atmos.Nspace):             # <<<<<<<<<<<<<<
 *                     gijk = nStar[ci, k] / nStar[cj, k] * expla[la, k]
 *                     chi[la, k] += alpha[la, i] * (1.0 - expla[la, k]) * n[ci, k]
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1321, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_23 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_23 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1321, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_24 = __pyx_t_23;
      for (__pyx_t_22 = 0; __pyx_t_22 < __pyx_t_24; __pyx_t_22+=1) {
        __pyx_v_k = __pyx_t_22;

        /* "Source/LwMiddleLayer.pyx":1322
 *                 twohnu3_c2 = twohc / self.wavelength[la]**3
 *                 for k in range(atmos.Nspace):
 *                     gijk = nStar[ci, k] / nStar[cj, k] * expla[la, k]             # <<<<<<<<<<<<<<
 *                     chi[la, k] += alpha[la, i] * (1.0 - expla[la, k]) * n[ci, k]
 *                     eta[la, k] += twohnu3_c2 * gijk * alpha[la, i] * n[cj, k]
 */
        __pyx_t_20 = __pyx_v_ci;
        __pyx_t_21 = __pyx_v_k;
        __pyx_t_26 = -1;
        if (__pyx_t_20 < 0) {
          __pyx_t_20 += __pyx_v_nStar.shape[0];
          if (unlikely(__pyx_t_20 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_20 >= __pyx_v_nStar.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_21 < 0) {
          __pyx_t_21 += __pyx_v_nStar.shape[1];
          if (unlikely(__pyx_t_21 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_21 >= __pyx_v_nStar.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1322, __pyx_L1_error)
        }
        __pyx_t_25 = (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_nStar.data + __pyx_t_20 * __pyx_v_nStar.strides[0]) )) + __pyx_t_21)) )));
        __pyx_t_21 = __pyx_v_cj;
        __pyx_t_20 = __pyx_v_k;
        __pyx_t_26 = -1;
        if (__pyx_t_21 < 0) {
          __pyx_t_21 += __pyx_v_nStar.shape[0];
          if (unlikely(__pyx_t_21 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_21 >= __pyx_v_nStar.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_20 < 0) {
          __pyx_t_20 += __pyx_v_nStar.shape[1];
          if (unlikely(__pyx_t_20 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_20 >= __pyx_v_nStar.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1322, __pyx_L1_error)
        }
        __pyx_t_12 = (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_nStar.data + __pyx_t_21 * __pyx_v_nStar.strides[0]) )) + __pyx_t_20)) )));
        if (unlikely(__pyx_t_12 == 0)) {
          PyErr_SetString(PyExc_ZeroDivisionError, "float division");
          __PYX_ERR(0, 1322, __pyx_L1_error)
        }
        __pyx_t_20 = __pyx_v_la;
        __pyx_t_21 = __pyx_v_k;
        __pyx_t_26 = -1;
        if (__pyx_t_20 < 0) {
          __pyx_t_20 += __pyx_v_expla.shape[0];
          if (unlikely(__pyx_t_20 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_20 >= __pyx_v_expla.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_21 < 0) {
          __pyx_t_21 += __pyx_v_expla.shape[1];
          if (unlikely(__pyx_t_21 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_21 >= __pyx_v_expla.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1322, __pyx_L1_error)
        }
        __pyx_v_gijk = ((__pyx_t_25 / __pyx_t_12) * (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_expla.data + __pyx_t_20 * __pyx_v_expla.strides[0]) )) + __pyx_t_21)) ))));

        /* "Source/LwMiddleLayer.pyx":1323
 *                 for k in range(atmos.Nspace):
 *                     gijk = nStar[ci, k] / nStar[cj, k] * expla[la, k]
 *                     chi[la, k] += alpha[la, i] * (1.0 - expla[la, k]) * n[ci, k]             # <<<<<<<<<<<<<<
 *                     eta[la, k] += twohnu3_c2 * gijk * alpha[la, i] * n[cj, k]
 * 
 */
        __pyx_t_21 = __pyx_v_la;
        __pyx_t_20 = __pyx_v_i;
        __pyx_t_26 = -1;
        if (__pyx_t_21 < 0) {
          __pyx_t_21 += __pyx_v_alpha.shape[0];
          if (unlikely(__pyx_t_21 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_21 >= __pyx_v_alpha.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_20 < 0) {
          __pyx_t_20 += __pyx_v_alpha.shape[1];
          if (unlikely(__pyx_t_20 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_20 >= __pyx_v_alpha.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1323, __pyx_L1_error)
        }
        __pyx_t_27 = __pyx_v_la;
        __pyx_t_28 = __pyx_v_k;
        __pyx_t_26 = -1;
        if (__pyx_t_27 < 0) {
          __pyx_t_27 += __pyx_v_expla.shape[0];
          if (unlikely(__pyx_t_27 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_27 >= __pyx_v_expla.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_28 < 0) {
          __pyx_t_28 += __pyx_v_expla.shape[1];
          if (unlikely(__pyx_t_28 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_28 >= __pyx_v_expla.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1323, __pyx_L1_error)
        }
        __pyx_t_29 = __pyx_v_ci;
        __pyx_t_30 = __pyx_v_k;
        __pyx_t_26 = -1;
        if (__pyx_t_29 < 0) {
          __pyx_t_29 += __pyx_v_n.shape[0];
          if (unlikely(__pyx_t_29 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_29 >= __pyx_v_n.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_30 < 0) {
          __pyx_t_30 += __pyx_v_n.shape[1];
          if (unlikely(__pyx_t_30 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_30 >= __pyx_v_n.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1323, __pyx_L1_error)
        }
        __pyx_t_31 = __pyx_v_la;
        __pyx_t_32 = __pyx_v_k;
        __pyx_t_26 = -1;
        if (__pyx_t_31 < 0) {
          __pyx_t_31 += __pyx_v_chi.shape[0];
          if (unlikely(__pyx_t_31 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_31 >= __pyx_v_chi.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_32 < 0) {
          __pyx_t_32 += __pyx_v_chi.shape[1];
          if (unlikely(__pyx_t_32 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_32 >= __pyx_v_chi.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1323, __pyx_L1_error)
        }
        *((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_chi.data + __pyx_t_31 * __pyx_v_chi.strides[0]) )) + __pyx_t_32)) )) += (((*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_alpha.data + __pyx_t_21 * __pyx_v_alpha.strides[0]) )) + __pyx_t_20)) ))) * (1.0 - (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_expla.data + __pyx_t_27 * __pyx_v_expla.strides[0]) )) + __pyx_t_28)) ))))) * (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_n.data + __pyx_t_29 * __pyx_v_n.strides[0]) )) + __pyx_t_30)) ))));

        /* "Source/LwMiddleLayer.pyx":1324
 *                     gijk = nStar[ci, k] / nStar[cj, k] * expla[la, k]
 *                     chi[la, k] += alpha[la, i] * (1.0 - expla[la, k]) * n[ci, k]
 *                     eta[la, k] += twohnu3_c2 * gijk * alpha[la, i] * n[cj, k]             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
        __pyx_t_30 = __pyx_v_la;
        __pyx_t_29 = __pyx_v_i;
        __pyx_t_26 = -1;
        if (__pyx_t_30 < 0) {
          __pyx_t_30 += __pyx_v_alpha.shape[0];
          if (unlikely(__pyx_t_30 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_30 >= __pyx_v_alpha.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_29 < 0) {
          __pyx_t_29 += __pyx_v_alpha.shape[1];
          if (unlikely(__pyx_t_29 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_29 >= __pyx_v_alpha.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1324, __pyx_L1_error)
        }
        __pyx_t_28 = __pyx_v_cj;
        __pyx_t_27 = __pyx_v_k;
        __pyx_t_26 = -1;
        if (__pyx_t_28 < 0) {
          __pyx_t_28 += __pyx_v_n.shape[0];
          if (unlikely(__pyx_t_28 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_28 >= __pyx_v_n.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_27 < 0) {
          __pyx_t_27 += __pyx_v_n.shape[1];
          if (unlikely(__pyx_t_27 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_27 >= __pyx_v_n.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1324, __pyx_L1_error)
        }
        __pyx_t_20 = __pyx_v_la;
        __pyx_t_21 = __pyx_v_k;
        __pyx_t_26 = -1;
        if (__pyx_t_20 < 0) {
          __pyx_t_20 += __pyx_v_eta.shape[0];
          if (unlikely(__pyx_t_20 < 0)) __pyx_t_26 = 0;
        } else if (unlikely(__pyx_t_20 >= __pyx_v_eta.shape[0])) __pyx_t_26 = 0;
        if (__pyx_t_21 < 0) {
          __pyx_t_21 += __pyx_v_eta.shape[1];
          if (unlikely(__pyx_t_21 < 0)) __pyx_t_26 = 1;
        } else if (unlikely(__pyx_t_21 >= __pyx_v_eta.shape[1])) __pyx_t_26 = 1;
        if (unlikely(__pyx_t_26 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_26);
          __PYX_ERR(0, 1324, __pyx_L1_error)
        }
        *((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_eta.data + __pyx_t_20 * __pyx_v_eta.strides[0]) )) + __pyx_t_21)) )) += (((__pyx_v_twohnu3_c2 * __pyx_v_gijk) * (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_alpha.data + __pyx_t_30 * __pyx_v_alpha.strides[0]) )) + __pyx_t_29)) )))) * (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_n.data + __pyx_t_28 * __pyx_v_n.strides[0]) )) + __pyx_t_27)) ))));
      }
    }

    /* "Source/LwMiddleLayer.pyx":1313
 *         cdef f64[:,::1] nStar
 *         cdef f64[:,::1] n
 *         for i, c in enumerate(continua):             # <<<<<<<<<<<<<<
 *             nStar = self.eqPops.atomicPops[c.atom.element].nStar
 *             n = self.eqPops.atomicPops[c.atom.element].n
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1279
 *                         sca[la, k] += scaLine[k]
 * 
 *     cpdef bf_opacities(self, LwAtmosphere atmos, f64[:,::1] chi, f64[:,::1] eta):             # <<<<<<<<<<<<<<
 *         atoms = self.radSet.passiveAtoms
 *         if len(atoms) == 0:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __PYX_XDEC_MEMVIEW(&__pyx_t_17, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.bf_opacities", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_atoms);
  __Pyx_XDECREF(__pyx_v_continua);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_c);
  __PYX_XDEC_MEMVIEW(&__pyx_v_alpha, 1);
  __Pyx_XDECREF(__pyx_v_alphaLa);
  __PYX_XDEC_MEMVIEW(&__pyx_v_expla, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_nStar, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_n, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_7bf_opacities(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_7bf_opacities(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos = 0;
  __Pyx_memviewslice __pyx_v_chi = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_eta = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bf_opacities (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmos,&__pyx_n_s_chi,&__pyx_n_s_eta,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chi)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("bf_opacities", 1, 3, 3, 1); __PYX_ERR(0, 1279, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eta)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("bf_opacities", 1, 3, 3, 2); __PYX_ERR(0, 1279, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "bf_opacities") < 0)) __PYX_ERR(0, 1279, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)values[0]);
    __pyx_v_chi = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(values[1], PyBUF_WRITABLE); if (unlikely(!__pyx_v_chi.memview)) __PYX_ERR(0, 1279, __pyx_L3_error)
    __pyx_v_eta = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(values[2], PyBUF_WRITABLE); if (unlikely(!__pyx_v_eta.memview)) __PYX_ERR(0, 1279, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("bf_opacities", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1279, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.bf_opacities", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_atmos), __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere, 1, "atmos", 0))) __PYX_ERR(0, 1279, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_6bf_opacities(((struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self), __pyx_v_atmos, __pyx_v_chi, __pyx_v_eta);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_6bf_opacities(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, __Pyx_memviewslice __pyx_v_chi, __Pyx_memviewslice __pyx_v_eta) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bf_opacities", 0);
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_chi.memview)) { __Pyx_RaiseUnboundLocalError("chi"); __PYX_ERR(0, 1279, __pyx_L1_error) }
  if (unlikely(!__pyx_v_eta.memview)) { __Pyx_RaiseUnboundLocalError("eta"); __PYX_ERR(0, 1279, __pyx_L1_error) }
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_15BasicBackground_bf_opacities(__pyx_v_self, __pyx_v_atmos, __pyx_v_chi, __pyx_v_eta, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.bf_opacities", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_chi, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_eta, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1326
 *                     eta[la, k] += twohnu3_c2 * gijk * alpha[la, i] * n[cj, k]
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['eqPops'] = self.eqPops
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_9__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_9__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_8__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_8__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":1327
 * 
 *     def __getstate__(self):
 *         state = {}             # <<<<<<<<<<<<<<
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1327, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1328
 *     def __getstate__(self):
 *         state = {}
 *         state['eqPops'] = self.eqPops             # <<<<<<<<<<<<<<
 *         state['radSet'] = self.radSet
 *         if 'CH' is self.eqPops:
 */
  __pyx_t_1 = __pyx_v_self->eqPops;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_eqPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1328, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1329
 *         state = {}
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet             # <<<<<<<<<<<<<<
 *         if 'CH' is self.eqPops:
 *             state['chPops'] = self.eqPops['CH']
 */
  __pyx_t_1 = __pyx_v_self->radSet;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_radSet, __pyx_t_1) < 0)) __PYX_ERR(0, 1329, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1330
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet
 *         if 'CH' is self.eqPops:             # <<<<<<<<<<<<<<
 *             state['chPops'] = self.eqPops['CH']
 *         else:
 */
  __pyx_t_2 = (__pyx_n_u_CH == ((PyObject*)__pyx_v_self->eqPops));
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1331
 *         state['radSet'] = self.radSet
 *         if 'CH' is self.eqPops:
 *             state['chPops'] = self.eqPops['CH']             # <<<<<<<<<<<<<<
 *         else:
 *             state['chPops'] = None
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_CH); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1331, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_chPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1331, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1330
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet
 *         if 'CH' is self.eqPops:             # <<<<<<<<<<<<<<
 *             state['chPops'] = self.eqPops['CH']
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":1333
 *             state['chPops'] = self.eqPops['CH']
 *         else:
 *             state['chPops'] = None             # <<<<<<<<<<<<<<
 * 
 *         if 'OH' in self.eqPops:
 */
  /*else*/ {
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_chPops, Py_None) < 0)) __PYX_ERR(0, 1333, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":1335
 *             state['chPops'] = None
 * 
 *         if 'OH' in self.eqPops:             # <<<<<<<<<<<<<<
 *             state['ohPops'] = self.eqPops['OH']
 *         else:
 */
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_OH, __pyx_v_self->eqPops, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1335, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":1336
 * 
 *         if 'OH' in self.eqPops:
 *             state['ohPops'] = self.eqPops['OH']             # <<<<<<<<<<<<<<
 *         else:
 *             state['ohPops'] = None
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_OH); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_ohPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1336, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1335
 *             state['chPops'] = None
 * 
 *         if 'OH' in self.eqPops:             # <<<<<<<<<<<<<<
 *             state['ohPops'] = self.eqPops['OH']
 *         else:
 */
    goto __pyx_L4;
  }

  /* "Source/LwMiddleLayer.pyx":1338
 *             state['ohPops'] = self.eqPops['OH']
 *         else:
 *             state['ohPops'] = None             # <<<<<<<<<<<<<<
 * 
 *         if 'H2' in self.eqPops:
 */
  /*else*/ {
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_ohPops, Py_None) < 0)) __PYX_ERR(0, 1338, __pyx_L1_error)
  }
  __pyx_L4:;

  /* "Source/LwMiddleLayer.pyx":1340
 *             state['ohPops'] = None
 * 
 *         if 'H2' in self.eqPops:             # <<<<<<<<<<<<<<
 *             state['h2Pops'] = self.eqPops['H2']
 *         else:
 */
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_H2, __pyx_v_self->eqPops, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1340, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1341
 * 
 *         if 'H2' in self.eqPops:
 *             state['h2Pops'] = self.eqPops['H2']             # <<<<<<<<<<<<<<
 *         else:
 *             state['h2Pops'] = None
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_H2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_h2Pops, __pyx_t_1) < 0)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1340
 *             state['ohPops'] = None
 * 
 *         if 'H2' in self.eqPops:             # <<<<<<<<<<<<<<
 *             state['h2Pops'] = self.eqPops['H2']
 *         else:
 */
    goto __pyx_L5;
  }

  /* "Source/LwMiddleLayer.pyx":1343
 *             state['h2Pops'] = self.eqPops['H2']
 *         else:
 *             state['h2Pops'] = None             # <<<<<<<<<<<<<<
 * 
 *         state['hMinusPops'] = self.eqPops['H-']
 */
  /*else*/ {
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_h2Pops, Py_None) < 0)) __PYX_ERR(0, 1343, __pyx_L1_error)
  }
  __pyx_L5:;

  /* "Source/LwMiddleLayer.pyx":1345
 *             state['h2Pops'] = None
 * 
 *         state['hMinusPops'] = self.eqPops['H-']             # <<<<<<<<<<<<<<
 *         state['hPops'] = self.eqPops['H']
 *         state['wavelength'] = np.asarray(self.wavelength)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_kp_u_H); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_hMinusPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1346
 * 
 *         state['hMinusPops'] = self.eqPops['H-']
 *         state['hPops'] = self.eqPops['H']             # <<<<<<<<<<<<<<
 *         state['wavelength'] = np.asarray(self.wavelength)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_H_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_hPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1346, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1347
 *         state['hMinusPops'] = self.eqPops['H-']
 *         state['hPops'] = self.eqPops['H']
 *         state['wavelength'] = np.asarray(self.wavelength)             # <<<<<<<<<<<<<<
 * 
 *         return state
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1347, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_wavelength, __pyx_t_1) < 0)) __PYX_ERR(0, 1347, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1349
 *         state['wavelength'] = np.asarray(self.wavelength)
 * 
 *         return state             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, state):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_state);
  __pyx_r = __pyx_v_state;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1326
 *                     eta[la, k] += twohnu3_c2 * gijk * alpha[la, i] * n[cj, k]
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['eqPops'] = self.eqPops
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1351
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_11__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_11__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_10__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_10__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_memviewslice __pyx_t_4 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_5;
  __Pyx_memviewslice __pyx_t_6 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":1352
 * 
 *     def __setstate__(self, state):
 *         self.eqPops = state['eqPops']             # <<<<<<<<<<<<<<
 *         self.radSet = state['radSet']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_eqPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1353
 *     def __setstate__(self, state):
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']             # <<<<<<<<<<<<<<
 * 
 *         if state['chPops'] is not None:
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_radSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->radSet);
  __Pyx_DECREF(__pyx_v_self->radSet);
  __pyx_v_self->radSet = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1355
 *         self.radSet = state['radSet']
 * 
 *         if state['chPops'] is not None:             # <<<<<<<<<<<<<<
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_chPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1356
 * 
 *         if state['chPops'] is not None:
 *             self.chPops = state['chPops']             # <<<<<<<<<<<<<<
 *             self.bd.chPops = f64_view(self.chPops)
 *         if state['ohPops'] is not None:
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_chPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1356, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1356, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->chPops, 0);
    __pyx_v_self->chPops = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1357
 *         if state['chPops'] is not None:
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)             # <<<<<<<<<<<<<<
 *         if state['ohPops'] is not None:
 *             self.ohPops = state['ohPops']
 */
    if (unlikely(!__pyx_v_self->chPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1357, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->chPops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1357, __pyx_L1_error)
    }
    __pyx_v_self->bd.chPops = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":1355
 *         self.radSet = state['radSet']
 * 
 *         if state['chPops'] is not None:             # <<<<<<<<<<<<<<
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1358
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)
 *         if state['ohPops'] is not None:             # <<<<<<<<<<<<<<
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_ohPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":1359
 *             self.bd.chPops = f64_view(self.chPops)
 *         if state['ohPops'] is not None:
 *             self.ohPops = state['ohPops']             # <<<<<<<<<<<<<<
 *             self.bd.ohPops = f64_view(self.h2Pops)
 *         if state['h2Pops'] is not None:
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_ohPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1359, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->ohPops, 0);
    __pyx_v_self->ohPops = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1360
 *         if state['ohPops'] is not None:
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)             # <<<<<<<<<<<<<<
 *         if state['h2Pops'] is not None:
 *             self.h2Pops = state['h2Pops']
 */
    if (unlikely(!__pyx_v_self->h2Pops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1360, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->h2Pops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1360, __pyx_L1_error)
    }
    __pyx_v_self->bd.ohPops = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":1358
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)
 *         if state['ohPops'] is not None:             # <<<<<<<<<<<<<<
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1361
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)
 *         if state['h2Pops'] is not None:             # <<<<<<<<<<<<<<
 *             self.h2Pops = state['h2Pops']
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_h2Pops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1362
 *             self.bd.ohPops = f64_view(self.h2Pops)
 *         if state['h2Pops'] is not None:
 *             self.h2Pops = state['h2Pops']             # <<<<<<<<<<<<<<
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_h2Pops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1362, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1362, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->h2Pops, 0);
    __pyx_v_self->h2Pops = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1363
 *         if state['h2Pops'] is not None:
 *             self.h2Pops = state['h2Pops']
 *             self.bd.h2Pops = f64_view(self.h2Pops)             # <<<<<<<<<<<<<<
 * 
 *         self.hMinusPops = state['hMinusPops']
 */
    if (unlikely(!__pyx_v_self->h2Pops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1363, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->h2Pops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1363, __pyx_L1_error)
    }
    __pyx_v_self->bd.h2Pops = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":1361
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)
 *         if state['h2Pops'] is not None:             # <<<<<<<<<<<<<<
 *             self.h2Pops = state['h2Pops']
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1365
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 * 
 *         self.hMinusPops = state['hMinusPops']             # <<<<<<<<<<<<<<
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = state['hPops']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_hMinusPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1365, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hMinusPops, 0);
  __pyx_v_self->hMinusPops = __pyx_t_4;
  __pyx_t_4.memview = NULL;
  __pyx_t_4.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1366
 * 
 *         self.hMinusPops = state['hMinusPops']
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)             # <<<<<<<<<<<<<<
 *         self.hPops = state['hPops']
 *         self.bd.hPops = f64_view_2(self.hPops)
 */
  if (unlikely(!__pyx_v_self->hMinusPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1366, __pyx_L1_error)}
  try {
    __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->hMinusPops);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1366, __pyx_L1_error)
  }
  __pyx_v_self->bd.hMinusPops = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1367
 *         self.hMinusPops = state['hMinusPops']
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = state['hPops']             # <<<<<<<<<<<<<<
 *         self.bd.hPops = f64_view_2(self.hPops)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_hPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_6.memview)) __PYX_ERR(0, 1367, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hPops, 0);
  __pyx_v_self->hPops = __pyx_t_6;
  __pyx_t_6.memview = NULL;
  __pyx_t_6.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1368
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = state['hPops']
 *         self.bd.hPops = f64_view_2(self.hPops)             # <<<<<<<<<<<<<<
 * 
 *         self.wavelength = state['wavelength']
 */
  if (unlikely(!__pyx_v_self->hPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1368, __pyx_L1_error)}
  try {
    __pyx_t_7 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->hPops);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1368, __pyx_L1_error)
  }
  __pyx_v_self->bd.hPops = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":1370
 *         self.bd.hPops = f64_view_2(self.hPops)
 * 
 *         self.wavelength = state['wavelength']             # <<<<<<<<<<<<<<
 *         self.bd.wavelength = f64_view(self.wavelength)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1370, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_4;
  __pyx_t_4.memview = NULL;
  __pyx_t_4.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1371
 * 
 *         self.wavelength = state['wavelength']
 *         self.bd.wavelength = f64_view(self.wavelength)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1371, __pyx_L1_error)}
  try {
    __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wavelength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1371, __pyx_L1_error)
  }
  __pyx_v_self->bd.wavelength = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1351
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_4, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_6, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1374
 * 
 *     @classmethod
 *     def _reconstruct(cls, state):             # <<<<<<<<<<<<<<
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_13_reconstruct(PyObject *__pyx_v_cls, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_13_reconstruct(PyObject *__pyx_v_cls, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_reconstruct (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_12_reconstruct(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_12_reconstruct(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_state) {
  PyObject *__pyx_v_o = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_reconstruct", 0);

  /* "Source/LwMiddleLayer.pyx":1375
 *     @classmethod
 *     def _reconstruct(cls, state):
 *         o = cls.__new__(cls)             # <<<<<<<<<<<<<<
 *         o.__setstate__(state)
 *         return o
 */
  if (unlikely(((PyObject *)__pyx_v_cls) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object.__new__(X): X is not a type object (NoneType)");
    __PYX_ERR(0, 1375, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_tp_new(((PyObject *)__pyx_v_cls), __pyx_empty_tuple); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1376
 *     def _reconstruct(cls, state):
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)             # <<<<<<<<<<<<<<
 *         return o
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_o, __pyx_n_s_setstate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_state) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_state);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1377
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)
 *         return o             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1374
 * 
 *     @classmethod
 *     def _reconstruct(cls, state):             # <<<<<<<<<<<<<<
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground._reconstruct", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1379
 *         return o
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return self._reconstruct, (self.__getstate__(),)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_15__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_15__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_14__reduce__(((struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_15BasicBackground_14__reduce__(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce__", 0);

  /* "Source/LwMiddleLayer.pyx":1380
 * 
 *     def __reduce__(self):
 *         return self._reconstruct, (self.__getstate__(),)             # <<<<<<<<<<<<<<
 * 
 * cdef class FastBackground(BackgroundProvider):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_reconstruct); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getstate); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1379
 *         return o
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return self._reconstruct, (self.__getstate__(),)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.BasicBackground.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1401
 *     cdef int Nthreads
 * 
 *     def __init__(self, eqPops, radSet, wavelength, Nthreads=1):             # <<<<<<<<<<<<<<
 *         super().__init__(eqPops, radSet, wavelength)
 *         self.eqPops = eqPops
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_14FastBackground_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_14FastBackground_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_eqPops = 0;
  PyObject *__pyx_v_radSet = 0;
  PyObject *__pyx_v_wavelength = 0;
  PyObject *__pyx_v_Nthreads = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_eqPops,&__pyx_n_s_radSet,&__pyx_n_s_wavelength,&__pyx_n_s_Nthreads,0};
    PyObject* values[4] = {0,0,0,0};
    values[3] = ((PyObject *)__pyx_int_1);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eqPops)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_radSet)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 4, 1); __PYX_ERR(0, 1401, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wavelength)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 4, 2); __PYX_ERR(0, 1401, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Nthreads);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1401, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_eqPops = values[0];
    __pyx_v_radSet = values[1];
    __pyx_v_wavelength = values[2];
    __pyx_v_Nthreads = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1401, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_14FastBackground___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)__pyx_v_self), __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength, __pyx_v_Nthreads);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_14FastBackground___init__(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_radSet, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_Nthreads) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_9;
  __Pyx_memviewslice __pyx_t_10 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":1402
 * 
 *     def __init__(self, eqPops, radSet, wavelength, Nthreads=1):
 *         super().__init__(eqPops, radSet, wavelength)             # <<<<<<<<<<<<<<
 *         self.eqPops = eqPops
 *         self.radSet = radSet
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_FastBackground));
  __Pyx_GIVEREF(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_FastBackground));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_FastBackground));
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1402, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength};
    __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 3+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1402, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[4] = {__pyx_t_3, __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength};
    __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_4, 3+__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1402, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GOTREF(__pyx_t_1);
  } else
  #endif
  {
    __pyx_t_5 = PyTuple_New(3+__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1402, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__pyx_t_3) {
      __Pyx_GIVEREF(__pyx_t_3); PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3); __pyx_t_3 = NULL;
    }
    __Pyx_INCREF(__pyx_v_eqPops);
    __Pyx_GIVEREF(__pyx_v_eqPops);
    PyTuple_SET_ITEM(__pyx_t_5, 0+__pyx_t_4, __pyx_v_eqPops);
    __Pyx_INCREF(__pyx_v_radSet);
    __Pyx_GIVEREF(__pyx_v_radSet);
    PyTuple_SET_ITEM(__pyx_t_5, 1+__pyx_t_4, __pyx_v_radSet);
    __Pyx_INCREF(__pyx_v_wavelength);
    __Pyx_GIVEREF(__pyx_v_wavelength);
    PyTuple_SET_ITEM(__pyx_t_5, 2+__pyx_t_4, __pyx_v_wavelength);
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_5, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1402, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1403
 *     def __init__(self, eqPops, radSet, wavelength, Nthreads=1):
 *         super().__init__(eqPops, radSet, wavelength)
 *         self.eqPops = eqPops             # <<<<<<<<<<<<<<
 *         self.radSet = radSet
 * 
 */
  __Pyx_INCREF(__pyx_v_eqPops);
  __Pyx_GIVEREF(__pyx_v_eqPops);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_v_eqPops;

  /* "Source/LwMiddleLayer.pyx":1404
 *         super().__init__(eqPops, radSet, wavelength)
 *         self.eqPops = eqPops
 *         self.radSet = radSet             # <<<<<<<<<<<<<<
 * 
 *         if 'CH' in eqPops:
 */
  __Pyx_INCREF(__pyx_v_radSet);
  __Pyx_GIVEREF(__pyx_v_radSet);
  __Pyx_GOTREF(__pyx_v_self->radSet);
  __Pyx_DECREF(__pyx_v_self->radSet);
  __pyx_v_self->radSet = __pyx_v_radSet;

  /* "Source/LwMiddleLayer.pyx":1406
 *         self.radSet = radSet
 * 
 *         if 'CH' in eqPops:             # <<<<<<<<<<<<<<
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)
 */
  __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_CH, __pyx_v_eqPops, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1406, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":1407
 * 
 *         if 'CH' in eqPops:
 *             self.chPops = eqPops['CH']             # <<<<<<<<<<<<<<
 *             self.bd.chPops = f64_view(self.chPops)
 *         if 'OH' in eqPops:
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_n_u_CH); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1407, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1407, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->chPops, 0);
    __pyx_v_self->chPops = __pyx_t_8;
    __pyx_t_8.memview = NULL;
    __pyx_t_8.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1408
 *         if 'CH' in eqPops:
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)             # <<<<<<<<<<<<<<
 *         if 'OH' in eqPops:
 *             self.ohPops = eqPops['OH']
 */
    if (unlikely(!__pyx_v_self->chPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1408, __pyx_L1_error)}
    try {
      __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->chPops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1408, __pyx_L1_error)
    }
    __pyx_v_self->bd.chPops = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":1406
 *         self.radSet = radSet
 * 
 *         if 'CH' in eqPops:             # <<<<<<<<<<<<<<
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1409
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)
 *         if 'OH' in eqPops:             # <<<<<<<<<<<<<<
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)
 */
  __pyx_t_7 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_OH, __pyx_v_eqPops, Py_EQ)); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1409, __pyx_L1_error)
  __pyx_t_6 = (__pyx_t_7 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":1410
 *             self.bd.chPops = f64_view(self.chPops)
 *         if 'OH' in eqPops:
 *             self.ohPops = eqPops['OH']             # <<<<<<<<<<<<<<
 *             self.bd.ohPops = f64_view(self.ohPops)
 *         if 'H2' in eqPops:
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_n_u_OH); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1410, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1410, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->ohPops, 0);
    __pyx_v_self->ohPops = __pyx_t_8;
    __pyx_t_8.memview = NULL;
    __pyx_t_8.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1411
 *         if 'OH' in eqPops:
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)             # <<<<<<<<<<<<<<
 *         if 'H2' in eqPops:
 *             self.h2Pops = eqPops['H2']
 */
    if (unlikely(!__pyx_v_self->ohPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1411, __pyx_L1_error)}
    try {
      __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->ohPops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1411, __pyx_L1_error)
    }
    __pyx_v_self->bd.ohPops = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":1409
 *             self.chPops = eqPops['CH']
 *             self.bd.chPops = f64_view(self.chPops)
 *         if 'OH' in eqPops:             # <<<<<<<<<<<<<<
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1412
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)
 *         if 'H2' in eqPops:             # <<<<<<<<<<<<<<
 *             self.h2Pops = eqPops['H2']
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 */
  __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_H2, __pyx_v_eqPops, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1412, __pyx_L1_error)
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":1413
 *             self.bd.ohPops = f64_view(self.ohPops)
 *         if 'H2' in eqPops:
 *             self.h2Pops = eqPops['H2']             # <<<<<<<<<<<<<<
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_n_u_H2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1413, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1413, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->h2Pops, 0);
    __pyx_v_self->h2Pops = __pyx_t_8;
    __pyx_t_8.memview = NULL;
    __pyx_t_8.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1414
 *         if 'H2' in eqPops:
 *             self.h2Pops = eqPops['H2']
 *             self.bd.h2Pops = f64_view(self.h2Pops)             # <<<<<<<<<<<<<<
 * 
 *         self.hMinusPops = eqPops['H-']
 */
    if (unlikely(!__pyx_v_self->h2Pops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1414, __pyx_L1_error)}
    try {
      __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->h2Pops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1414, __pyx_L1_error)
    }
    __pyx_v_self->bd.h2Pops = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":1412
 *             self.ohPops = eqPops['OH']
 *             self.bd.ohPops = f64_view(self.ohPops)
 *         if 'H2' in eqPops:             # <<<<<<<<<<<<<<
 *             self.h2Pops = eqPops['H2']
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1416
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 * 
 *         self.hMinusPops = eqPops['H-']             # <<<<<<<<<<<<<<
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = eqPops['H']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_kp_u_H); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hMinusPops, 0);
  __pyx_v_self->hMinusPops = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1417
 * 
 *         self.hMinusPops = eqPops['H-']
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)             # <<<<<<<<<<<<<<
 *         self.hPops = eqPops['H']
 *         self.bd.hPops = f64_view_2(self.hPops)
 */
  if (unlikely(!__pyx_v_self->hMinusPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1417, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->hMinusPops);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1417, __pyx_L1_error)
  }
  __pyx_v_self->bd.hMinusPops = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":1418
 *         self.hMinusPops = eqPops['H-']
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = eqPops['H']             # <<<<<<<<<<<<<<
 *         self.bd.hPops = f64_view_2(self.hPops)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_eqPops, __pyx_n_u_H_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1418, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1418, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hPops, 0);
  __pyx_v_self->hPops = __pyx_t_10;
  __pyx_t_10.memview = NULL;
  __pyx_t_10.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1419
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = eqPops['H']
 *         self.bd.hPops = f64_view_2(self.hPops)             # <<<<<<<<<<<<<<
 * 
 *         self.wavelength = wavelength
 */
  if (unlikely(!__pyx_v_self->hPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1419, __pyx_L1_error)}
  try {
    __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->hPops);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1419, __pyx_L1_error)
  }
  __pyx_v_self->bd.hPops = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":1421
 *         self.bd.hPops = f64_view_2(self.hPops)
 * 
 *         self.wavelength = wavelength             # <<<<<<<<<<<<<<
 *         self.bd.wavelength = f64_view(self.wavelength)
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_wavelength, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1421, __pyx_L1_error)
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1422
 * 
 *         self.wavelength = wavelength
 *         self.bd.wavelength = f64_view(self.wavelength)             # <<<<<<<<<<<<<<
 * 
 *         self.Nthreads = Nthreads
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1422, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wavelength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1422, __pyx_L1_error)
  }
  __pyx_v_self->bd.wavelength = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":1424
 *         self.bd.wavelength = f64_view(self.wavelength)
 * 
 *         self.Nthreads = Nthreads             # <<<<<<<<<<<<<<
 *         self.ctx.initialise(self.Nthreads)
 * 
 */
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_v_Nthreads); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1424, __pyx_L1_error)
  __pyx_v_self->Nthreads = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1425
 * 
 *         self.Nthreads = Nthreads
 *         self.ctx.initialise(self.Nthreads)             # <<<<<<<<<<<<<<
 * 
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):
 */
  __pyx_v_self->ctx.initialise(__pyx_v_self->Nthreads);

  /* "Source/LwMiddleLayer.pyx":1401
 *     cdef int Nthreads
 * 
 *     def __init__(self, eqPops, radSet, wavelength, Nthreads=1):             # <<<<<<<<<<<<<<
 *         super().__init__(eqPops, radSet, wavelength)
 *         self.eqPops = eqPops
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_10, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1427
 *         self.ctx.initialise(self.Nthreads)
 * 
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):             # <<<<<<<<<<<<<<
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_14FastBackground_compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chiIn, PyObject *__pyx_v_etaIn, PyObject *__pyx_v_scaIn, int __pyx_skip_dispatch) {
  int __pyx_v_Nlambda;
  int __pyx_v_Nspace;
  __Pyx_memviewslice __pyx_v_chi = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_eta = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_sca = { 0, 0, { 0 }, { 0 }, { 0 } };
  std::vector<BackgroundAtom>  __pyx_v_atoms;
  BackgroundAtom *__pyx_v_atom;
  PyObject *__pyx_v_passiveAtoms = NULL;
  PyObject *__pyx_v_storage = NULL;
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_alpha = NULL;
  PyObject *__pyx_v_l = NULL;
  int __pyx_v_la;
  int __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_memviewslice __pyx_t_7 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_t_16;
  int __pyx_t_17;
  __pyx_t_8CmoArray_f64 __pyx_t_18;
  __pyx_t_8CmoArray_f64 __pyx_t_19;
  __Pyx_memviewslice __pyx_t_20 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  __pyx_t_8CmoArray_f64 __pyx_t_24;
  __pyx_t_8CmoArray_f64 __pyx_t_25;
  int __pyx_t_26;
  int __pyx_t_27;
  int __pyx_t_28;
  int __pyx_t_29;
  Py_ssize_t __pyx_t_30;
  Py_ssize_t __pyx_t_31;
  int __pyx_t_32;
  Py_ssize_t __pyx_t_33;
  Py_ssize_t __pyx_t_34;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_background", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_compute_background); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1427, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_3compute_background)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, ((PyObject *)__pyx_v_atmos), __pyx_v_chiIn, __pyx_v_etaIn, __pyx_v_scaIn};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1427, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, ((PyObject *)__pyx_v_atmos), __pyx_v_chiIn, __pyx_v_etaIn, __pyx_v_scaIn};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1427, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(4+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1427, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_atmos));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_atmos));
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, ((PyObject *)__pyx_v_atmos));
          __Pyx_INCREF(__pyx_v_chiIn);
          __Pyx_GIVEREF(__pyx_v_chiIn);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_chiIn);
          __Pyx_INCREF(__pyx_v_etaIn);
          __Pyx_GIVEREF(__pyx_v_etaIn);
          PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_etaIn);
          __Pyx_INCREF(__pyx_v_scaIn);
          __Pyx_GIVEREF(__pyx_v_scaIn);
          PyTuple_SET_ITEM(__pyx_t_6, 3+__pyx_t_5, __pyx_v_scaIn);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1427, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":1428
 * 
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):
 *         cdef int Nlambda = self.wavelength.shape[0]             # <<<<<<<<<<<<<<
 *         cdef int Nspace = atmos.Nspace
 *         cdef f64[:,::1] chi = chiIn
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1428, __pyx_L1_error)}
  __pyx_v_Nlambda = (__pyx_v_self->wavelength.shape[0]);

  /* "Source/LwMiddleLayer.pyx":1429
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace             # <<<<<<<<<<<<<<
 *         cdef f64[:,::1] chi = chiIn
 *         cdef f64[:,::1] eta = etaIn
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1429, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1429, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nspace = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1430
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace
 *         cdef f64[:,::1] chi = chiIn             # <<<<<<<<<<<<<<
 *         cdef f64[:,::1] eta = etaIn
 *         cdef f64[:,::1] sca = scaIn
 */
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_chiIn, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1430, __pyx_L1_error)
  __pyx_v_chi = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1431
 *         cdef int Nspace = atmos.Nspace
 *         cdef f64[:,::1] chi = chiIn
 *         cdef f64[:,::1] eta = etaIn             # <<<<<<<<<<<<<<
 *         cdef f64[:,::1] sca = scaIn
 * 
 */
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_etaIn, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1431, __pyx_L1_error)
  __pyx_v_eta = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1432
 *         cdef f64[:,::1] chi = chiIn
 *         cdef f64[:,::1] eta = etaIn
 *         cdef f64[:,::1] sca = scaIn             # <<<<<<<<<<<<<<
 * 
 *         # NOTE(cmo): Update hPops in case it changed LTE<->NLTE
 */
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_scaIn, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1432, __pyx_L1_error)
  __pyx_v_sca = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1435
 * 
 *         # NOTE(cmo): Update hPops in case it changed LTE<->NLTE
 *         self.hPops = self.eqPops['H']             # <<<<<<<<<<<<<<
 * 
 *         # TODO(cmo): How UV fudge works here is a problem for future me.
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_H_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1435, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hPops, 0);
  __pyx_v_self->hPops = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1439
 *         # TODO(cmo): How UV fudge works here is a problem for future me.
 * 
 *         self.bd.chi = f64_view_2(chi)             # <<<<<<<<<<<<<<
 *         self.bd.eta = f64_view_2(eta)
 *         self.bd.scatt = f64_view_2(sca)
 */
  try {
    __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_chi);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1439, __pyx_L1_error)
  }
  __pyx_v_self->bd.chi = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":1440
 * 
 *         self.bd.chi = f64_view_2(chi)
 *         self.bd.eta = f64_view_2(eta)             # <<<<<<<<<<<<<<
 *         self.bd.scatt = f64_view_2(sca)
 * 
 */
  try {
    __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_eta);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1440, __pyx_L1_error)
  }
  __pyx_v_self->bd.eta = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":1441
 *         self.bd.chi = f64_view_2(chi)
 *         self.bd.eta = f64_view_2(eta)
 *         self.bd.scatt = f64_view_2(sca)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[BackgroundAtom] atoms
 */
  try {
    __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_sca);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1441, __pyx_L1_error)
  }
  __pyx_v_self->bd.scatt = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":1445
 *         cdef vector[BackgroundAtom] atoms
 *         cdef BackgroundAtom* atom
 *         passiveAtoms = self.radSet.passiveAtoms             # <<<<<<<<<<<<<<
 *         # NOTE(cmo): This length should always be enough, but it's a tiny
 *         # amount of memory
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->radSet, __pyx_n_s_passiveAtoms); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1445, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_passiveAtoms = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1448
 *         # NOTE(cmo): This length should always be enough, but it's a tiny
 *         # amount of memory
 *         atoms.reserve(len(passiveAtoms) + 2)             # <<<<<<<<<<<<<<
 *         # NOTE(cmo): Make sure all arrays remain backed by memory
 *         storage = []
 */
  __pyx_t_9 = PyObject_Length(__pyx_v_passiveAtoms); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1448, __pyx_L1_error)
  __pyx_v_atoms.reserve((__pyx_t_9 + 2));

  /* "Source/LwMiddleLayer.pyx":1450
 *         atoms.reserve(len(passiveAtoms) + 2)
 *         # NOTE(cmo): Make sure all arrays remain backed by memory
 *         storage = []             # <<<<<<<<<<<<<<
 *         for a in passiveAtoms:
 *             atoms.push_back(BackgroundAtom())
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_storage = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1451
 *         # NOTE(cmo): Make sure all arrays remain backed by memory
 *         storage = []
 *         for a in passiveAtoms:             # <<<<<<<<<<<<<<
 *             atoms.push_back(BackgroundAtom())
 *             atom = &atoms.back();
 */
  if (likely(PyList_CheckExact(__pyx_v_passiveAtoms)) || PyTuple_CheckExact(__pyx_v_passiveAtoms)) {
    __pyx_t_1 = __pyx_v_passiveAtoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_passiveAtoms); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1451, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1451, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1451, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1451, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1451, __pyx_L1_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1451, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_10(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1451, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_a, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":1452
 *         storage = []
 *         for a in passiveAtoms:
 *             atoms.push_back(BackgroundAtom())             # <<<<<<<<<<<<<<
 *             atom = &atoms.back();
 *             atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)
 */
    try {
      __pyx_v_atoms.push_back(BackgroundAtom());
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1452, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":1453
 *         for a in passiveAtoms:
 *             atoms.push_back(BackgroundAtom())
 *             atom = &atoms.back();             # <<<<<<<<<<<<<<
 *             atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)
 *             atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 */
    __pyx_v_atom = (&__pyx_v_atoms.back());

    /* "Source/LwMiddleLayer.pyx":1454
 *             atoms.push_back(BackgroundAtom())
 *             atom = &atoms.back();
 *             atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)             # <<<<<<<<<<<<<<
 *             atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 *             atom.continua.reserve(len(a.continua))
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->eqPops, __pyx_n_s_atomicPops); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_element); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_n); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1454, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_3, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1454, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    try {
      __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_t_7);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1454, __pyx_L1_error)
    }
    __PYX_XDEC_MEMVIEW(&__pyx_t_7, 1);
    __pyx_t_7.memview = NULL;
    __pyx_t_7.data = NULL;
    __pyx_v_atom->n = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":1455
 *             atom = &atoms.back();
 *             atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)
 *             atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)             # <<<<<<<<<<<<<<
 *             atom.continua.reserve(len(a.continua))
 *             for c in a.continua:
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->eqPops, __pyx_n_s_atomicPops); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_element); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_nStar); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_6, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1455, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    try {
      __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_t_7);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1455, __pyx_L1_error)
    }
    __PYX_XDEC_MEMVIEW(&__pyx_t_7, 1);
    __pyx_t_7.memview = NULL;
    __pyx_t_7.data = NULL;
    __pyx_v_atom->nStar = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":1456
 *             atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)
 *             atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 *             atom.continua.reserve(len(a.continua))             # <<<<<<<<<<<<<<
 *             for c in a.continua:
 *                 alpha = c.alpha(np.asarray(self.wavelength))
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_continua); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1456, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_11 = PyObject_Length(__pyx_t_6); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1456, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_atom->continua.reserve(__pyx_t_11);

    /* "Source/LwMiddleLayer.pyx":1457
 *             atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 *             atom.continua.reserve(len(a.continua))
 *             for c in a.continua:             # <<<<<<<<<<<<<<
 *                 alpha = c.alpha(np.asarray(self.wavelength))
 *                 storage.append(alpha)
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_continua); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1457, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
      __pyx_t_2 = __pyx_t_6; __Pyx_INCREF(__pyx_t_2); __pyx_t_11 = 0;
      __pyx_t_12 = NULL;
    } else {
      __pyx_t_11 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1457, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_12 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1457, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    for (;;) {
      if (likely(!__pyx_t_12)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_6); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1457, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1457, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        } else {
          if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_6); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1457, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1457, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        }
      } else {
        __pyx_t_6 = __pyx_t_12(__pyx_t_2);
        if (unlikely(!__pyx_t_6)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1457, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_6);
      }
      __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "Source/LwMiddleLayer.pyx":1458
 *             atom.continua.reserve(len(a.continua))
 *             for c in a.continua:
 *                 alpha = c.alpha(np.asarray(self.wavelength))             # <<<<<<<<<<<<<<
 *                 storage.append(alpha)
 *                 atom.continua.push_back(BackgroundContinuum(c.i, c.j, c.minLambda, c.lambdaEdge,
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_alpha); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_np); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_asarray); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1458, __pyx_L1_error)}
      __pyx_t_13 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_15 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_14);
        if (likely(__pyx_t_15)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
          __Pyx_INCREF(__pyx_t_15);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_14, function);
        }
      }
      __pyx_t_4 = (__pyx_t_15) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_15, __pyx_t_13) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_t_13);
      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __pyx_t_14 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_6 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_14, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF_SET(__pyx_v_alpha, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "Source/LwMiddleLayer.pyx":1459
 *             for c in a.continua:
 *                 alpha = c.alpha(np.asarray(self.wavelength))
 *                 storage.append(alpha)             # <<<<<<<<<<<<<<
 *                 atom.continua.push_back(BackgroundContinuum(c.i, c.j, c.minLambda, c.lambdaEdge,
 *                                                             f64_view(alpha),
 */
      __pyx_t_16 = __Pyx_PyList_Append(__pyx_v_storage, __pyx_v_alpha); if (unlikely(__pyx_t_16 == ((int)-1))) __PYX_ERR(0, 1459, __pyx_L1_error)

      /* "Source/LwMiddleLayer.pyx":1460
 *                 alpha = c.alpha(np.asarray(self.wavelength))
 *                 storage.append(alpha)
 *                 atom.continua.push_back(BackgroundContinuum(c.i, c.j, c.minLambda, c.lambdaEdge,             # <<<<<<<<<<<<<<
 *                                                             f64_view(alpha),
 *                                                             self.bd.wavelength))
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_i); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_j); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_17 = __Pyx_PyInt_As_int(__pyx_t_6); if (unlikely((__pyx_t_17 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_minLambda); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_18 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_18 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_lambdaEdge); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_19 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_19 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1460, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Source/LwMiddleLayer.pyx":1461
 *                 storage.append(alpha)
 *                 atom.continua.push_back(BackgroundContinuum(c.i, c.j, c.minLambda, c.lambdaEdge,
 *                                                             f64_view(alpha),             # <<<<<<<<<<<<<<
 *                                                             self.bd.wavelength))
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:
 */
      __pyx_t_20 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_alpha, PyBUF_WRITABLE); if (unlikely(!__pyx_t_20.memview)) __PYX_ERR(0, 1461, __pyx_L1_error)
      try {
        __pyx_t_21 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_t_20);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1461, __pyx_L1_error)
      }
      __PYX_XDEC_MEMVIEW(&__pyx_t_20, 1);
      __pyx_t_20.memview = NULL;
      __pyx_t_20.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1460
 *                 alpha = c.alpha(np.asarray(self.wavelength))
 *                 storage.append(alpha)
 *                 atom.continua.push_back(BackgroundContinuum(c.i, c.j, c.minLambda, c.lambdaEdge,             # <<<<<<<<<<<<<<
 *                                                             f64_view(alpha),
 *                                                             self.bd.wavelength))
 */
      try {
        __pyx_v_atom->continua.push_back(BackgroundContinuum(__pyx_t_5, __pyx_t_17, __pyx_t_18, __pyx_t_19, __pyx_t_21, __pyx_v_self->bd.wavelength));
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1460, __pyx_L1_error)
      }

      /* "Source/LwMiddleLayer.pyx":1457
 *             atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 *             atom.continua.reserve(len(a.continua))
 *             for c in a.continua:             # <<<<<<<<<<<<<<
 *                 alpha = c.alpha(np.asarray(self.wavelength))
 *                 storage.append(alpha)
 */
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":1463
 *                                                             f64_view(alpha),
 *                                                             self.bd.wavelength))
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:             # <<<<<<<<<<<<<<
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_element); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_PeriodicTable); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_6, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_23 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_23 < 0)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (!__pyx_t_23) {
    } else {
      __pyx_t_22 = __pyx_t_23;
      goto __pyx_L8_bool_binop_done;
    }
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_element); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_PeriodicTable); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_3, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_6, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_23 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_23 < 0)) __PYX_ERR(0, 1463, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_22 = __pyx_t_23;
    __pyx_L8_bool_binop_done:;
    if (__pyx_t_22) {

      /* "Source/LwMiddleLayer.pyx":1464
 *                                                             self.bd.wavelength))
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:
 *                 atom.resonanceScatterers.reserve(len(a.lines))             # <<<<<<<<<<<<<<
 *                 for l in a.lines:
 *                     if l.i == 0:
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_lines); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1464, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_11 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1464, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_v_atom->resonanceScatterers.reserve(__pyx_t_11);

      /* "Source/LwMiddleLayer.pyx":1465
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:             # <<<<<<<<<<<<<<
 *                     if l.i == 0:
 *                         atom.resonanceScatterers.push_back(
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_lines); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1465, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
        __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_11 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1465, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_12 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1465, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_2))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1465, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1465, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1465, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1465, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          }
        } else {
          __pyx_t_3 = __pyx_t_12(__pyx_t_2);
          if (unlikely(!__pyx_t_3)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 1465, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_3);
        }
        __Pyx_XDECREF_SET(__pyx_v_l, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "Source/LwMiddleLayer.pyx":1466
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:
 *                     if l.i == 0:             # <<<<<<<<<<<<<<
 *                         atom.resonanceScatterers.push_back(
 *                             ResonantRayleighLine(l.Aji,
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1466, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_6 = __Pyx_PyInt_EqObjC(__pyx_t_3, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1466, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_22 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_22 < 0)) __PYX_ERR(0, 1466, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (__pyx_t_22) {

          /* "Source/LwMiddleLayer.pyx":1468
 *                     if l.i == 0:
 *                         atom.resonanceScatterers.push_back(
 *                             ResonantRayleighLine(l.Aji,             # <<<<<<<<<<<<<<
 *                                                  l.jLevel.g / l.iLevel.g,
 *                                                  l.lambda0,
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_Aji); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1468, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_19 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_19 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "Source/LwMiddleLayer.pyx":1469
 *                         atom.resonanceScatterers.push_back(
 *                             ResonantRayleighLine(l.Aji,
 *                                                  l.jLevel.g / l.iLevel.g,             # <<<<<<<<<<<<<<
 *                                                  l.lambda0,
 *                                                  l.wavelength()[-1])
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_jLevel); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_g); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_iLevel); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_g); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1469, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_18 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_18 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1469, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "Source/LwMiddleLayer.pyx":1470
 *                             ResonantRayleighLine(l.Aji,
 *                                                  l.jLevel.g / l.iLevel.g,
 *                                                  l.lambda0,             # <<<<<<<<<<<<<<
 *                                                  l.wavelength()[-1])
 *                                                  )
 */
          __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_lambda0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1470, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_24 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_24 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1470, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "Source/LwMiddleLayer.pyx":1471
 *                                                  l.jLevel.g / l.iLevel.g,
 *                                                  l.lambda0,
 *                                                  l.wavelength()[-1])             # <<<<<<<<<<<<<<
 *                                                  )
 *         for a in self.radSet.activeAtoms + self.radSet.detailedAtoms:
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
            }
          }
          __pyx_t_6 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1471, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_25 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_25 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1471, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "Source/LwMiddleLayer.pyx":1467
 *                 for l in a.lines:
 *                     if l.i == 0:
 *                         atom.resonanceScatterers.push_back(             # <<<<<<<<<<<<<<
 *                             ResonantRayleighLine(l.Aji,
 *                                                  l.jLevel.g / l.iLevel.g,
 */
          try {
            __pyx_v_atom->resonanceScatterers.push_back(ResonantRayleighLine(__pyx_t_19, __pyx_t_18, __pyx_t_24, __pyx_t_25));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1467, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":1466
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:
 *                     if l.i == 0:             # <<<<<<<<<<<<<<
 *                         atom.resonanceScatterers.push_back(
 *                             ResonantRayleighLine(l.Aji,
 */
        }

        /* "Source/LwMiddleLayer.pyx":1465
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:             # <<<<<<<<<<<<<<
 *                     if l.i == 0:
 *                         atom.resonanceScatterers.push_back(
 */
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":1463
 *                                                             f64_view(alpha),
 *                                                             self.bd.wavelength))
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:             # <<<<<<<<<<<<<<
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:
 */
    }

    /* "Source/LwMiddleLayer.pyx":1451
 *         # NOTE(cmo): Make sure all arrays remain backed by memory
 *         storage = []
 *         for a in passiveAtoms:             # <<<<<<<<<<<<<<
 *             atoms.push_back(BackgroundAtom())
 *             atom = &atoms.back();
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1473
 *                                                  l.wavelength()[-1])
 *                                                  )
 *         for a in self.radSet.activeAtoms + self.radSet.detailedAtoms:             # <<<<<<<<<<<<<<
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:
 *                 atoms.push_back(BackgroundAtom())
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->radSet, __pyx_n_s_activeAtoms); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->radSet, __pyx_n_s_detailedAtoms); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1473, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
    __pyx_t_2 = __pyx_t_4; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1473, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_10 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1473, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1473, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1473, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_4); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 1473, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1473, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_10(__pyx_t_2);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1473, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_a, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":1474
 *                                                  )
 *         for a in self.radSet.activeAtoms + self.radSet.detailedAtoms:
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:             # <<<<<<<<<<<<<<
 *                 atoms.push_back(BackgroundAtom())
 *                 atom = &atoms.back();
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_element); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_PeriodicTable); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_4, __pyx_t_6, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_23 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_23 < 0)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!__pyx_t_23) {
    } else {
      __pyx_t_22 = __pyx_t_23;
      goto __pyx_L16_bool_binop_done;
    }
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_element); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_PeriodicTable); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_6, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_23 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_23 < 0)) __PYX_ERR(0, 1474, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_22 = __pyx_t_23;
    __pyx_L16_bool_binop_done:;
    if (__pyx_t_22) {

      /* "Source/LwMiddleLayer.pyx":1475
 *         for a in self.radSet.activeAtoms + self.radSet.detailedAtoms:
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:
 *                 atoms.push_back(BackgroundAtom())             # <<<<<<<<<<<<<<
 *                 atom = &atoms.back();
 *                 atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)
 */
      try {
        __pyx_v_atoms.push_back(BackgroundAtom());
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1475, __pyx_L1_error)
      }

      /* "Source/LwMiddleLayer.pyx":1476
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:
 *                 atoms.push_back(BackgroundAtom())
 *                 atom = &atoms.back();             # <<<<<<<<<<<<<<
 *                 atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)
 *                 atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 */
      __pyx_v_atom = (&__pyx_v_atoms.back());

      /* "Source/LwMiddleLayer.pyx":1477
 *                 atoms.push_back(BackgroundAtom())
 *                 atom = &atoms.back();
 *                 atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)             # <<<<<<<<<<<<<<
 *                 atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->eqPops, __pyx_n_s_atomicPops); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1477, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_element); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1477, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_6, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1477, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_n); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1477, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1477, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      try {
        __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_t_7);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1477, __pyx_L1_error)
      }
      __PYX_XDEC_MEMVIEW(&__pyx_t_7, 1);
      __pyx_t_7.memview = NULL;
      __pyx_t_7.data = NULL;
      __pyx_v_atom->n = __pyx_t_8;

      /* "Source/LwMiddleLayer.pyx":1478
 *                 atom = &atoms.back();
 *                 atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)
 *                 atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)             # <<<<<<<<<<<<<<
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->eqPops, __pyx_n_s_atomicPops); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1478, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_element); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1478, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = __Pyx_PyObject_GetItem(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1478, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_nStar); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1478, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 1478, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      try {
        __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_t_7);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1478, __pyx_L1_error)
      }
      __PYX_XDEC_MEMVIEW(&__pyx_t_7, 1);
      __pyx_t_7.memview = NULL;
      __pyx_t_7.data = NULL;
      __pyx_v_atom->nStar = __pyx_t_8;

      /* "Source/LwMiddleLayer.pyx":1479
 *                 atom.n = f64_view_2(self.eqPops.atomicPops[a.element].n)
 *                 atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 *                 atom.resonanceScatterers.reserve(len(a.lines))             # <<<<<<<<<<<<<<
 *                 for l in a.lines:
 *                     if l.i == 0:
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_lines); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1479, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_11 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_11 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1479, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_atom->resonanceScatterers.reserve(__pyx_t_11);

      /* "Source/LwMiddleLayer.pyx":1480
 *                 atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:             # <<<<<<<<<<<<<<
 *                     if l.i == 0:
 *                         atom.resonanceScatterers.push_back(
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_a, __pyx_n_s_lines); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1480, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
        __pyx_t_6 = __pyx_t_1; __Pyx_INCREF(__pyx_t_6); __pyx_t_11 = 0;
        __pyx_t_12 = NULL;
      } else {
        __pyx_t_11 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1480, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_12 = Py_TYPE(__pyx_t_6)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1480, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      for (;;) {
        if (likely(!__pyx_t_12)) {
          if (likely(PyList_CheckExact(__pyx_t_6))) {
            if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_6)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_11); __Pyx_INCREF(__pyx_t_1); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1480, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1480, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          } else {
            if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_11); __Pyx_INCREF(__pyx_t_1); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1480, __pyx_L1_error)
            #else
            __pyx_t_1 = PySequence_ITEM(__pyx_t_6, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1480, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_1);
            #endif
          }
        } else {
          __pyx_t_1 = __pyx_t_12(__pyx_t_6);
          if (unlikely(!__pyx_t_1)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 1480, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_1);
        }
        __Pyx_XDECREF_SET(__pyx_v_l, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "Source/LwMiddleLayer.pyx":1481
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:
 *                     if l.i == 0:             # <<<<<<<<<<<<<<
 *                         atom.resonanceScatterers.push_back(
 *                             ResonantRayleighLine(l.Aji,
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1481, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_4 = __Pyx_PyInt_EqObjC(__pyx_t_1, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1481, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_22 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_22 < 0)) __PYX_ERR(0, 1481, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_22) {

          /* "Source/LwMiddleLayer.pyx":1483
 *                     if l.i == 0:
 *                         atom.resonanceScatterers.push_back(
 *                             ResonantRayleighLine(l.Aji,             # <<<<<<<<<<<<<<
 *                                                  l.jLevel.g / l.iLevel.g,
 *                                                  l.lambda0,
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_Aji); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1483, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_25 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_25 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1483, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "Source/LwMiddleLayer.pyx":1484
 *                         atom.resonanceScatterers.push_back(
 *                             ResonantRayleighLine(l.Aji,
 *                                                  l.jLevel.g / l.iLevel.g,             # <<<<<<<<<<<<<<
 *                                                  l.lambda0,
 *                                                  l.wavelength()[-1])
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_jLevel); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1484, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_g); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1484, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_iLevel); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1484, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_g); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1484, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1484, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_24 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_24 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1484, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "Source/LwMiddleLayer.pyx":1485
 *                             ResonantRayleighLine(l.Aji,
 *                                                  l.jLevel.g / l.iLevel.g,
 *                                                  l.lambda0,             # <<<<<<<<<<<<<<
 *                                                  l.wavelength()[-1])
 *                                                  )
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_lambda0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1485, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_18 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_18 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1485, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "Source/LwMiddleLayer.pyx":1486
 *                                                  l.jLevel.g / l.iLevel.g,
 *                                                  l.lambda0,
 *                                                  l.wavelength()[-1])             # <<<<<<<<<<<<<<
 *                                                  )
 * 
 */
          __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = NULL;
          if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
            __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
            if (likely(__pyx_t_1)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
              __Pyx_INCREF(__pyx_t_1);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_3, function);
            }
          }
          __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_4, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1486, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_19 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_19 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1486, __pyx_L1_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "Source/LwMiddleLayer.pyx":1482
 *                 for l in a.lines:
 *                     if l.i == 0:
 *                         atom.resonanceScatterers.push_back(             # <<<<<<<<<<<<<<
 *                             ResonantRayleighLine(l.Aji,
 *                                                  l.jLevel.g / l.iLevel.g,
 */
          try {
            __pyx_v_atom->resonanceScatterers.push_back(ResonantRayleighLine(__pyx_t_25, __pyx_t_24, __pyx_t_18, __pyx_t_19));
          } catch(...) {
            __Pyx_CppExn2PyErr();
            __PYX_ERR(0, 1482, __pyx_L1_error)
          }

          /* "Source/LwMiddleLayer.pyx":1481
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:
 *                     if l.i == 0:             # <<<<<<<<<<<<<<
 *                         atom.resonanceScatterers.push_back(
 *                             ResonantRayleighLine(l.Aji,
 */
        }

        /* "Source/LwMiddleLayer.pyx":1480
 *                 atom.nStar = f64_view_2(self.eqPops.atomicPops[a.element].nStar)
 *                 atom.resonanceScatterers.reserve(len(a.lines))
 *                 for l in a.lines:             # <<<<<<<<<<<<<<
 *                     if l.i == 0:
 *                         atom.resonanceScatterers.push_back(
 */
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "Source/LwMiddleLayer.pyx":1474
 *                                                  )
 *         for a in self.radSet.activeAtoms + self.radSet.detailedAtoms:
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:             # <<<<<<<<<<<<<<
 *                 atoms.push_back(BackgroundAtom())
 *                 atom = &atoms.back();
 */
    }

    /* "Source/LwMiddleLayer.pyx":1473
 *                                                  l.wavelength()[-1])
 *                                                  )
 *         for a in self.radSet.activeAtoms + self.radSet.detailedAtoms:             # <<<<<<<<<<<<<<
 *             if a.element == PeriodicTable[1] or a.element == PeriodicTable[2]:
 *                 atoms.push_back(BackgroundAtom())
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1489
 *                                                  )
 * 
 *         self.ctx.basic_background(&self.bd, &atmos.atmos)             # <<<<<<<<<<<<<<
 *         self.ctx.rayleigh_scatter(&self.bd, &atoms, &atmos.atmos)
 *         self.ctx.bf_opacities(&self.bd, &atoms, &atmos.atmos)
 */
  __pyx_v_self->ctx.basic_background((&__pyx_v_self->bd), (&__pyx_v_atmos->atmos));

  /* "Source/LwMiddleLayer.pyx":1490
 * 
 *         self.ctx.basic_background(&self.bd, &atmos.atmos)
 *         self.ctx.rayleigh_scatter(&self.bd, &atoms, &atmos.atmos)             # <<<<<<<<<<<<<<
 *         self.ctx.bf_opacities(&self.bd, &atoms, &atmos.atmos)
 * 
 */
  __pyx_v_self->ctx.rayleigh_scatter((&__pyx_v_self->bd), (&__pyx_v_atoms), (&__pyx_v_atmos->atmos));

  /* "Source/LwMiddleLayer.pyx":1491
 *         self.ctx.basic_background(&self.bd, &atmos.atmos)
 *         self.ctx.rayleigh_scatter(&self.bd, &atoms, &atmos.atmos)
 *         self.ctx.bf_opacities(&self.bd, &atoms, &atmos.atmos)             # <<<<<<<<<<<<<<
 * 
 *         cdef int la, k
 */
  __pyx_v_self->ctx.bf_opacities((&__pyx_v_self->bd), (&__pyx_v_atoms), (&__pyx_v_atmos->atmos));

  /* "Source/LwMiddleLayer.pyx":1494
 * 
 *         cdef int la, k
 *         for la in range(Nlambda):             # <<<<<<<<<<<<<<
 *             for k in range(Nspace):
 *                 chi[la, k] += sca[la, k]
 */
  __pyx_t_17 = __pyx_v_Nlambda;
  __pyx_t_5 = __pyx_t_17;
  for (__pyx_t_26 = 0; __pyx_t_26 < __pyx_t_5; __pyx_t_26+=1) {
    __pyx_v_la = __pyx_t_26;

    /* "Source/LwMiddleLayer.pyx":1495
 *         cdef int la, k
 *         for la in range(Nlambda):
 *             for k in range(Nspace):             # <<<<<<<<<<<<<<
 *                 chi[la, k] += sca[la, k]
 * 
 */
    __pyx_t_27 = __pyx_v_Nspace;
    __pyx_t_28 = __pyx_t_27;
    for (__pyx_t_29 = 0; __pyx_t_29 < __pyx_t_28; __pyx_t_29+=1) {
      __pyx_v_k = __pyx_t_29;

      /* "Source/LwMiddleLayer.pyx":1496
 *         for la in range(Nlambda):
 *             for k in range(Nspace):
 *                 chi[la, k] += sca[la, k]             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
      __pyx_t_30 = __pyx_v_la;
      __pyx_t_31 = __pyx_v_k;
      __pyx_t_32 = -1;
      if (__pyx_t_30 < 0) {
        __pyx_t_30 += __pyx_v_sca.shape[0];
        if (unlikely(__pyx_t_30 < 0)) __pyx_t_32 = 0;
      } else if (unlikely(__pyx_t_30 >= __pyx_v_sca.shape[0])) __pyx_t_32 = 0;
      if (__pyx_t_31 < 0) {
        __pyx_t_31 += __pyx_v_sca.shape[1];
        if (unlikely(__pyx_t_31 < 0)) __pyx_t_32 = 1;
      } else if (unlikely(__pyx_t_31 >= __pyx_v_sca.shape[1])) __pyx_t_32 = 1;
      if (unlikely(__pyx_t_32 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_32);
        __PYX_ERR(0, 1496, __pyx_L1_error)
      }
      __pyx_t_33 = __pyx_v_la;
      __pyx_t_34 = __pyx_v_k;
      __pyx_t_32 = -1;
      if (__pyx_t_33 < 0) {
        __pyx_t_33 += __pyx_v_chi.shape[0];
        if (unlikely(__pyx_t_33 < 0)) __pyx_t_32 = 0;
      } else if (unlikely(__pyx_t_33 >= __pyx_v_chi.shape[0])) __pyx_t_32 = 0;
      if (__pyx_t_34 < 0) {
        __pyx_t_34 += __pyx_v_chi.shape[1];
        if (unlikely(__pyx_t_34 < 0)) __pyx_t_32 = 1;
      } else if (unlikely(__pyx_t_34 >= __pyx_v_chi.shape[1])) __pyx_t_32 = 1;
      if (unlikely(__pyx_t_32 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_32);
        __PYX_ERR(0, 1496, __pyx_L1_error)
      }
      *((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_chi.data + __pyx_t_33 * __pyx_v_chi.strides[0]) )) + __pyx_t_34)) )) += (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_sca.data + __pyx_t_30 * __pyx_v_sca.strides[0]) )) + __pyx_t_31)) )));
    }
  }

  /* "Source/LwMiddleLayer.pyx":1427
 *         self.ctx.initialise(self.Nthreads)
 * 
 *     cpdef compute_background(self, LwAtmosphere atmos, chiIn, etaIn, scaIn):             # <<<<<<<<<<<<<<
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __PYX_XDEC_MEMVIEW(&__pyx_t_7, 1);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __PYX_XDEC_MEMVIEW(&__pyx_t_20, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_chi, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_eta, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_sca, 1);
  __Pyx_XDECREF(__pyx_v_passiveAtoms);
  __Pyx_XDECREF(__pyx_v_storage);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_alpha);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_3compute_background(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos = 0;
  PyObject *__pyx_v_chiIn = 0;
  PyObject *__pyx_v_etaIn = 0;
  PyObject *__pyx_v_scaIn = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_background (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmos,&__pyx_n_s_chiIn,&__pyx_n_s_etaIn,&__pyx_n_s_scaIn,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chiIn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 1); __PYX_ERR(0, 1427, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_etaIn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 2); __PYX_ERR(0, 1427, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_scaIn)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, 3); __PYX_ERR(0, 1427, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_background") < 0)) __PYX_ERR(0, 1427, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)values[0]);
    __pyx_v_chiIn = values[1];
    __pyx_v_etaIn = values[2];
    __pyx_v_scaIn = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_background", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1427, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_atmos), __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere, 1, "atmos", 0))) __PYX_ERR(0, 1427, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_14FastBackground_2compute_background(((struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)__pyx_v_self), __pyx_v_atmos, __pyx_v_chiIn, __pyx_v_etaIn, __pyx_v_scaIn);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_2compute_background(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, PyObject *__pyx_v_chiIn, PyObject *__pyx_v_etaIn, PyObject *__pyx_v_scaIn) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_background", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_14FastBackground_compute_background(__pyx_v_self, __pyx_v_atmos, __pyx_v_chiIn, __pyx_v_etaIn, __pyx_v_scaIn, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground.compute_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1498
 *                 chi[la, k] += sca[la, k]
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['eqPops'] = self.eqPops
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_5__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_5__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_14FastBackground_4__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_4__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":1499
 * 
 *     def __getstate__(self):
 *         state = {}             # <<<<<<<<<<<<<<
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1500
 *     def __getstate__(self):
 *         state = {}
 *         state['eqPops'] = self.eqPops             # <<<<<<<<<<<<<<
 *         state['radSet'] = self.radSet
 *         if 'CH' is self.eqPops:
 */
  __pyx_t_1 = __pyx_v_self->eqPops;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_eqPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1500, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1501
 *         state = {}
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet             # <<<<<<<<<<<<<<
 *         if 'CH' is self.eqPops:
 *             state['chPops'] = self.eqPops['CH']
 */
  __pyx_t_1 = __pyx_v_self->radSet;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_radSet, __pyx_t_1) < 0)) __PYX_ERR(0, 1501, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1502
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet
 *         if 'CH' is self.eqPops:             # <<<<<<<<<<<<<<
 *             state['chPops'] = self.eqPops['CH']
 *         else:
 */
  __pyx_t_2 = (__pyx_n_u_CH == ((PyObject*)__pyx_v_self->eqPops));
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1503
 *         state['radSet'] = self.radSet
 *         if 'CH' is self.eqPops:
 *             state['chPops'] = self.eqPops['CH']             # <<<<<<<<<<<<<<
 *         else:
 *             state['chPops'] = None
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_CH); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1503, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_chPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1503, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1502
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet
 *         if 'CH' is self.eqPops:             # <<<<<<<<<<<<<<
 *             state['chPops'] = self.eqPops['CH']
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":1505
 *             state['chPops'] = self.eqPops['CH']
 *         else:
 *             state['chPops'] = None             # <<<<<<<<<<<<<<
 * 
 *         if 'OH' in self.eqPops:
 */
  /*else*/ {
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_chPops, Py_None) < 0)) __PYX_ERR(0, 1505, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":1507
 *             state['chPops'] = None
 * 
 *         if 'OH' in self.eqPops:             # <<<<<<<<<<<<<<
 *             state['ohPops'] = self.eqPops['OH']
 *         else:
 */
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_OH, __pyx_v_self->eqPops, Py_EQ)); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1507, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":1508
 * 
 *         if 'OH' in self.eqPops:
 *             state['ohPops'] = self.eqPops['OH']             # <<<<<<<<<<<<<<
 *         else:
 *             state['ohPops'] = None
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_OH); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_ohPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1508, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1507
 *             state['chPops'] = None
 * 
 *         if 'OH' in self.eqPops:             # <<<<<<<<<<<<<<
 *             state['ohPops'] = self.eqPops['OH']
 *         else:
 */
    goto __pyx_L4;
  }

  /* "Source/LwMiddleLayer.pyx":1510
 *             state['ohPops'] = self.eqPops['OH']
 *         else:
 *             state['ohPops'] = None             # <<<<<<<<<<<<<<
 * 
 *         if 'H2' in self.eqPops:
 */
  /*else*/ {
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_ohPops, Py_None) < 0)) __PYX_ERR(0, 1510, __pyx_L1_error)
  }
  __pyx_L4:;

  /* "Source/LwMiddleLayer.pyx":1512
 *             state['ohPops'] = None
 * 
 *         if 'H2' in self.eqPops:             # <<<<<<<<<<<<<<
 *             state['h2Pops'] = self.eqPops['H2']
 *         else:
 */
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_H2, __pyx_v_self->eqPops, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1512, __pyx_L1_error)
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1513
 * 
 *         if 'H2' in self.eqPops:
 *             state['h2Pops'] = self.eqPops['H2']             # <<<<<<<<<<<<<<
 *         else:
 *             state['h2Pops'] = None
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_H2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_h2Pops, __pyx_t_1) < 0)) __PYX_ERR(0, 1513, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1512
 *             state['ohPops'] = None
 * 
 *         if 'H2' in self.eqPops:             # <<<<<<<<<<<<<<
 *             state['h2Pops'] = self.eqPops['H2']
 *         else:
 */
    goto __pyx_L5;
  }

  /* "Source/LwMiddleLayer.pyx":1515
 *             state['h2Pops'] = self.eqPops['H2']
 *         else:
 *             state['h2Pops'] = None             # <<<<<<<<<<<<<<
 * 
 *         state['hMinusPops'] = self.eqPops['H-']
 */
  /*else*/ {
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_h2Pops, Py_None) < 0)) __PYX_ERR(0, 1515, __pyx_L1_error)
  }
  __pyx_L5:;

  /* "Source/LwMiddleLayer.pyx":1517
 *             state['h2Pops'] = None
 * 
 *         state['hMinusPops'] = self.eqPops['H-']             # <<<<<<<<<<<<<<
 *         state['hPops'] = self.eqPops['H']
 *         state['wavelength'] = np.asarray(self.wavelength)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_kp_u_H); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_hMinusPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1517, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1518
 * 
 *         state['hMinusPops'] = self.eqPops['H-']
 *         state['hPops'] = self.eqPops['H']             # <<<<<<<<<<<<<<
 *         state['wavelength'] = np.asarray(self.wavelength)
 *         state['Nthreads'] = self.Nthreads
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_self->eqPops, __pyx_n_u_H_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1518, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_hPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1518, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1519
 *         state['hMinusPops'] = self.eqPops['H-']
 *         state['hPops'] = self.eqPops['H']
 *         state['wavelength'] = np.asarray(self.wavelength)             # <<<<<<<<<<<<<<
 *         state['Nthreads'] = self.Nthreads
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1519, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_wavelength, __pyx_t_1) < 0)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1520
 *         state['hPops'] = self.eqPops['H']
 *         state['wavelength'] = np.asarray(self.wavelength)
 *         state['Nthreads'] = self.Nthreads             # <<<<<<<<<<<<<<
 * 
 *         return state
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->Nthreads); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Nthreads, __pyx_t_1) < 0)) __PYX_ERR(0, 1520, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1522
 *         state['Nthreads'] = self.Nthreads
 * 
 *         return state             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, state):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_state);
  __pyx_r = __pyx_v_state;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1498
 *                 chi[la, k] += sca[la, k]
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['eqPops'] = self.eqPops
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1524
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_7__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_7__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_14FastBackground_6__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)__pyx_v_self), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_6__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  __Pyx_memviewslice __pyx_t_4 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_5;
  __Pyx_memviewslice __pyx_t_6 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":1525
 * 
 *     def __setstate__(self, state):
 *         self.eqPops = state['eqPops']             # <<<<<<<<<<<<<<
 *         self.radSet = state['radSet']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_eqPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1526
 *     def __setstate__(self, state):
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']             # <<<<<<<<<<<<<<
 * 
 *         if state['chPops'] is not None:
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_radSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1526, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->radSet);
  __Pyx_DECREF(__pyx_v_self->radSet);
  __pyx_v_self->radSet = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1528
 *         self.radSet = state['radSet']
 * 
 *         if state['chPops'] is not None:             # <<<<<<<<<<<<<<
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_chPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1528, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1529
 * 
 *         if state['chPops'] is not None:
 *             self.chPops = state['chPops']             # <<<<<<<<<<<<<<
 *             self.bd.chPops = f64_view(self.chPops)
 *         if state['ohPops'] is not None:
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_chPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1529, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1529, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->chPops, 0);
    __pyx_v_self->chPops = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1530
 *         if state['chPops'] is not None:
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)             # <<<<<<<<<<<<<<
 *         if state['ohPops'] is not None:
 *             self.ohPops = state['ohPops']
 */
    if (unlikely(!__pyx_v_self->chPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1530, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->chPops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1530, __pyx_L1_error)
    }
    __pyx_v_self->bd.chPops = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":1528
 *         self.radSet = state['radSet']
 * 
 *         if state['chPops'] is not None:             # <<<<<<<<<<<<<<
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1531
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)
 *         if state['ohPops'] is not None:             # <<<<<<<<<<<<<<
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_ohPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":1532
 *             self.bd.chPops = f64_view(self.chPops)
 *         if state['ohPops'] is not None:
 *             self.ohPops = state['ohPops']             # <<<<<<<<<<<<<<
 *             self.bd.ohPops = f64_view(self.h2Pops)
 *         if state['h2Pops'] is not None:
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_ohPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1532, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->ohPops, 0);
    __pyx_v_self->ohPops = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1533
 *         if state['ohPops'] is not None:
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)             # <<<<<<<<<<<<<<
 *         if state['h2Pops'] is not None:
 *             self.h2Pops = state['h2Pops']
 */
    if (unlikely(!__pyx_v_self->h2Pops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1533, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->h2Pops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1533, __pyx_L1_error)
    }
    __pyx_v_self->bd.ohPops = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":1531
 *             self.chPops = state['chPops']
 *             self.bd.chPops = f64_view(self.chPops)
 *         if state['ohPops'] is not None:             # <<<<<<<<<<<<<<
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1534
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)
 *         if state['h2Pops'] is not None:             # <<<<<<<<<<<<<<
 *             self.h2Pops = state['h2Pops']
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_h2Pops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1535
 *             self.bd.ohPops = f64_view(self.h2Pops)
 *         if state['h2Pops'] is not None:
 *             self.h2Pops = state['h2Pops']             # <<<<<<<<<<<<<<
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_h2Pops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1535, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1535, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->h2Pops, 0);
    __pyx_v_self->h2Pops = __pyx_t_4;
    __pyx_t_4.memview = NULL;
    __pyx_t_4.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1536
 *         if state['h2Pops'] is not None:
 *             self.h2Pops = state['h2Pops']
 *             self.bd.h2Pops = f64_view(self.h2Pops)             # <<<<<<<<<<<<<<
 * 
 *         self.hMinusPops = state['hMinusPops']
 */
    if (unlikely(!__pyx_v_self->h2Pops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1536, __pyx_L1_error)}
    try {
      __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->h2Pops);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1536, __pyx_L1_error)
    }
    __pyx_v_self->bd.h2Pops = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":1534
 *             self.ohPops = state['ohPops']
 *             self.bd.ohPops = f64_view(self.h2Pops)
 *         if state['h2Pops'] is not None:             # <<<<<<<<<<<<<<
 *             self.h2Pops = state['h2Pops']
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 */
  }

  /* "Source/LwMiddleLayer.pyx":1538
 *             self.bd.h2Pops = f64_view(self.h2Pops)
 * 
 *         self.hMinusPops = state['hMinusPops']             # <<<<<<<<<<<<<<
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = state['hPops']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_hMinusPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1538, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1538, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hMinusPops, 0);
  __pyx_v_self->hMinusPops = __pyx_t_4;
  __pyx_t_4.memview = NULL;
  __pyx_t_4.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1539
 * 
 *         self.hMinusPops = state['hMinusPops']
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)             # <<<<<<<<<<<<<<
 *         self.hPops = state['hPops']
 *         self.bd.hPops = f64_view_2(self.hPops)
 */
  if (unlikely(!__pyx_v_self->hMinusPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1539, __pyx_L1_error)}
  try {
    __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->hMinusPops);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1539, __pyx_L1_error)
  }
  __pyx_v_self->bd.hMinusPops = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1540
 *         self.hMinusPops = state['hMinusPops']
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = state['hPops']             # <<<<<<<<<<<<<<
 *         self.bd.hPops = f64_view_2(self.hPops)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_hPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1540, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_6.memview)) __PYX_ERR(0, 1540, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->hPops, 0);
  __pyx_v_self->hPops = __pyx_t_6;
  __pyx_t_6.memview = NULL;
  __pyx_t_6.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1541
 *         self.bd.hMinusPops = f64_view(self.hMinusPops)
 *         self.hPops = state['hPops']
 *         self.bd.hPops = f64_view_2(self.hPops)             # <<<<<<<<<<<<<<
 * 
 *         self.wavelength = state['wavelength']
 */
  if (unlikely(!__pyx_v_self->hPops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1541, __pyx_L1_error)}
  try {
    __pyx_t_7 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->hPops);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1541, __pyx_L1_error)
  }
  __pyx_v_self->bd.hPops = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":1543
 *         self.bd.hPops = f64_view_2(self.hPops)
 * 
 *         self.wavelength = state['wavelength']             # <<<<<<<<<<<<<<
 *         self.bd.wavelength = f64_view(self.wavelength)
 *         self.Nthreads = state['Nthreads']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1543, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 1543, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_4;
  __pyx_t_4.memview = NULL;
  __pyx_t_4.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1544
 * 
 *         self.wavelength = state['wavelength']
 *         self.bd.wavelength = f64_view(self.wavelength)             # <<<<<<<<<<<<<<
 *         self.Nthreads = state['Nthreads']
 *         self.ctx.initialise(self.Nthreads)
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1544, __pyx_L1_error)}
  try {
    __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wavelength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1544, __pyx_L1_error)
  }
  __pyx_v_self->bd.wavelength = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1545
 *         self.wavelength = state['wavelength']
 *         self.bd.wavelength = f64_view(self.wavelength)
 *         self.Nthreads = state['Nthreads']             # <<<<<<<<<<<<<<
 *         self.ctx.initialise(self.Nthreads)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Nthreads); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1545, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->Nthreads = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":1546
 *         self.bd.wavelength = f64_view(self.wavelength)
 *         self.Nthreads = state['Nthreads']
 *         self.ctx.initialise(self.Nthreads)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_v_self->ctx.initialise(__pyx_v_self->Nthreads);

  /* "Source/LwMiddleLayer.pyx":1524
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_4, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_6, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1549
 * 
 *     @classmethod
 *     def _reconstruct(cls, state):             # <<<<<<<<<<<<<<
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_9_reconstruct(PyObject *__pyx_v_cls, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_9_reconstruct(PyObject *__pyx_v_cls, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_reconstruct (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_14FastBackground_8_reconstruct(((PyTypeObject*)__pyx_v_cls), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_8_reconstruct(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_state) {
  PyObject *__pyx_v_o = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_reconstruct", 0);

  /* "Source/LwMiddleLayer.pyx":1550
 *     @classmethod
 *     def _reconstruct(cls, state):
 *         o = cls.__new__(cls)             # <<<<<<<<<<<<<<
 *         o.__setstate__(state)
 *         return o
 */
  if (unlikely(((PyObject *)__pyx_v_cls) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object.__new__(X): X is not a type object (NoneType)");
    __PYX_ERR(0, 1550, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_tp_new(((PyObject *)__pyx_v_cls), __pyx_empty_tuple); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1551
 *     def _reconstruct(cls, state):
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)             # <<<<<<<<<<<<<<
 *         return o
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_o, __pyx_n_s_setstate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_state) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_state);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1552
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)
 *         return o             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1549
 * 
 *     @classmethod
 *     def _reconstruct(cls, state):             # <<<<<<<<<<<<<<
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground._reconstruct", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1554
 *         return o
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return self._reconstruct, (self.__getstate__(),)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_11__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_11__reduce__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_14FastBackground_10__reduce__(((struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_14FastBackground_10__reduce__(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce__", 0);

  /* "Source/LwMiddleLayer.pyx":1555
 * 
 *     def __reduce__(self):
 *         return self._reconstruct, (self.__getstate__(),)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_reconstruct); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getstate); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1554
 *         return o
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         return self._reconstruct, (self.__getstate__(),)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.FastBackground.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1576
 *     cdef f64[:,::1] sca
 * 
 *     def __init__(self, atmosphere, eqPops, radSet, wavelength, provider=None):             # <<<<<<<<<<<<<<
 *         cdef LwAtmosphere atmos = atmosphere
 *         self.eqPops = eqPops
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwBackground_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwBackground_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_atmosphere = 0;
  PyObject *__pyx_v_eqPops = 0;
  PyObject *__pyx_v_radSet = 0;
  PyObject *__pyx_v_wavelength = 0;
  PyObject *__pyx_v_provider = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmosphere,&__pyx_n_s_eqPops,&__pyx_n_s_radSet,&__pyx_n_s_wavelength,&__pyx_n_s_provider,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[4] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmosphere)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eqPops)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 4, 5, 1); __PYX_ERR(0, 1576, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_radSet)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 4, 5, 2); __PYX_ERR(0, 1576, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wavelength)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 4, 5, 3); __PYX_ERR(0, 1576, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_provider);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1576, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_atmosphere = values[0];
    __pyx_v_eqPops = values[1];
    __pyx_v_radSet = values[2];
    __pyx_v_wavelength = values[3];
    __pyx_v_provider = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 4, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1576, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self), __pyx_v_atmosphere, __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength, __pyx_v_provider);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwBackground___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, PyObject *__pyx_v_atmosphere, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_radSet, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_provider) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos = 0;
  int __pyx_v_Nlambda;
  int __pyx_v_Nspace;
  PyObject *__pyx_v_chiPy = NULL;
  PyObject *__pyx_v_etaPy = NULL;
  PyObject *__pyx_v_scaPy = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_memviewslice __pyx_t_2 = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_t_9;
  int __pyx_t_10;
  __pyx_t_8CmoArray_F64View2D __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":1577
 * 
 *     def __init__(self, atmosphere, eqPops, radSet, wavelength, provider=None):
 *         cdef LwAtmosphere atmos = atmosphere             # <<<<<<<<<<<<<<
 *         self.eqPops = eqPops
 *         self.radSet = radSet
 */
  if (!(likely(((__pyx_v_atmosphere) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_atmosphere, __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere))))) __PYX_ERR(0, 1577, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_atmosphere;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1578
 *     def __init__(self, atmosphere, eqPops, radSet, wavelength, provider=None):
 *         cdef LwAtmosphere atmos = atmosphere
 *         self.eqPops = eqPops             # <<<<<<<<<<<<<<
 *         self.radSet = radSet
 * 
 */
  __Pyx_INCREF(__pyx_v_eqPops);
  __Pyx_GIVEREF(__pyx_v_eqPops);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_v_eqPops;

  /* "Source/LwMiddleLayer.pyx":1579
 *         cdef LwAtmosphere atmos = atmosphere
 *         self.eqPops = eqPops
 *         self.radSet = radSet             # <<<<<<<<<<<<<<
 * 
 *         self.wavelength = wavelength
 */
  __Pyx_INCREF(__pyx_v_radSet);
  __Pyx_GIVEREF(__pyx_v_radSet);
  __Pyx_GOTREF(__pyx_v_self->radSet);
  __Pyx_DECREF(__pyx_v_self->radSet);
  __pyx_v_self->radSet = __pyx_v_radSet;

  /* "Source/LwMiddleLayer.pyx":1581
 *         self.radSet = radSet
 * 
 *         self.wavelength = wavelength             # <<<<<<<<<<<<<<
 * 
 *         cdef int Nlambda = self.wavelength.shape[0]
 */
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_wavelength, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1581, __pyx_L1_error)
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1583
 *         self.wavelength = wavelength
 * 
 *         cdef int Nlambda = self.wavelength.shape[0]             # <<<<<<<<<<<<<<
 *         cdef int Nspace = atmos.Nspace
 * 
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1583, __pyx_L1_error)}
  __pyx_v_Nlambda = (__pyx_v_self->wavelength.shape[0]);

  /* "Source/LwMiddleLayer.pyx":1584
 * 
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = atmos.Nspace             # <<<<<<<<<<<<<<
 * 
 *         self.chi = np.zeros((Nlambda, Nspace))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1584, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1584, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nspace = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":1586
 *         cdef int Nspace = atmos.Nspace
 * 
 *         self.chi = np.zeros((Nlambda, Nspace))             # <<<<<<<<<<<<<<
 *         self.eta = np.zeros((Nlambda, Nspace))
 *         self.sca = np.zeros((Nlambda, Nspace))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
  __pyx_t_4 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_7);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1586, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->chi, 0);
  __pyx_v_self->chi = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1587
 * 
 *         self.chi = np.zeros((Nlambda, Nspace))
 *         self.eta = np.zeros((Nlambda, Nspace))             # <<<<<<<<<<<<<<
 *         self.sca = np.zeros((Nlambda, Nspace))
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_zeros); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1587, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->eta, 0);
  __pyx_v_self->eta = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1588
 *         self.chi = np.zeros((Nlambda, Nspace))
 *         self.eta = np.zeros((Nlambda, Nspace))
 *         self.sca = np.zeros((Nlambda, Nspace))             # <<<<<<<<<<<<<<
 * 
 *         if provider is None:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_zeros); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
  __pyx_t_7 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1588, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->sca, 0);
  __pyx_v_self->sca = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1590
 *         self.sca = np.zeros((Nlambda, Nspace))
 * 
 *         if provider is None:             # <<<<<<<<<<<<<<
 *             self.provider = FastBackground(eqPops, radSet, wavelength, Nthreads=1)
 *         else:
 */
  __pyx_t_9 = (__pyx_v_provider == Py_None);
  __pyx_t_10 = (__pyx_t_9 != 0);
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":1591
 * 
 *         if provider is None:
 *             self.provider = FastBackground(eqPops, radSet, wavelength, Nthreads=1)             # <<<<<<<<<<<<<<
 *         else:
 *             self.provider = provider(eqPops, radSet, wavelength)
 */
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1591, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_eqPops);
    __Pyx_GIVEREF(__pyx_v_eqPops);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_eqPops);
    __Pyx_INCREF(__pyx_v_radSet);
    __Pyx_GIVEREF(__pyx_v_radSet);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_radSet);
    __Pyx_INCREF(__pyx_v_wavelength);
    __Pyx_GIVEREF(__pyx_v_wavelength);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_wavelength);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1591, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_Nthreads, __pyx_int_1) < 0) __PYX_ERR(0, 1591, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_FastBackground), __pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1591, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_GIVEREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_v_self->provider);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->provider));
    __pyx_v_self->provider = ((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_t_5);
    __pyx_t_5 = 0;

    /* "Source/LwMiddleLayer.pyx":1590
 *         self.sca = np.zeros((Nlambda, Nspace))
 * 
 *         if provider is None:             # <<<<<<<<<<<<<<
 *             self.provider = FastBackground(eqPops, radSet, wavelength, Nthreads=1)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":1593
 *             self.provider = FastBackground(eqPops, radSet, wavelength, Nthreads=1)
 *         else:
 *             self.provider = provider(eqPops, radSet, wavelength)             # <<<<<<<<<<<<<<
 * 
 *         chiPy = np.asarray(self.chi)
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_v_provider);
    __pyx_t_4 = __pyx_v_provider; __pyx_t_1 = NULL;
    __pyx_t_3 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_3 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength};
      __pyx_t_5 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_3, 3+__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1593, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
      PyObject *__pyx_temp[4] = {__pyx_t_1, __pyx_v_eqPops, __pyx_v_radSet, __pyx_v_wavelength};
      __pyx_t_5 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_3, 3+__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1593, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_GOTREF(__pyx_t_5);
    } else
    #endif
    {
      __pyx_t_6 = PyTuple_New(3+__pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (__pyx_t_1) {
        __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1); __pyx_t_1 = NULL;
      }
      __Pyx_INCREF(__pyx_v_eqPops);
      __Pyx_GIVEREF(__pyx_v_eqPops);
      PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_3, __pyx_v_eqPops);
      __Pyx_INCREF(__pyx_v_radSet);
      __Pyx_GIVEREF(__pyx_v_radSet);
      PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_3, __pyx_v_radSet);
      __Pyx_INCREF(__pyx_v_wavelength);
      __Pyx_GIVEREF(__pyx_v_wavelength);
      PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_3, __pyx_v_wavelength);
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_6, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider))))) __PYX_ERR(0, 1593, __pyx_L1_error)
    __Pyx_GIVEREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_v_self->provider);
    __Pyx_DECREF(((PyObject *)__pyx_v_self->provider));
    __pyx_v_self->provider = ((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_t_5);
    __pyx_t_5 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":1595
 *             self.provider = provider(eqPops, radSet, wavelength)
 * 
 *         chiPy = np.asarray(self.chi)             # <<<<<<<<<<<<<<
 *         etaPy = np.asarray(self.eta)
 *         scaPy = np.asarray(self.sca)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1595, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->chi, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_1, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1595, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_v_chiPy = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":1596
 * 
 *         chiPy = np.asarray(self.chi)
 *         etaPy = np.asarray(self.eta)             # <<<<<<<<<<<<<<
 *         scaPy = np.asarray(self.sca)
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1596, __pyx_L1_error)}
  __pyx_t_6 = __pyx_memoryview_fromslice(__pyx_v_self->eta, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_1, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_6);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_etaPy = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":1597
 *         chiPy = np.asarray(self.chi)
 *         etaPy = np.asarray(self.eta)
 *         scaPy = np.asarray(self.sca)             # <<<<<<<<<<<<<<
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->sca.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1597, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->sca, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_5 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_1, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1597, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_v_scaPy = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":1598
 *         etaPy = np.asarray(self.eta)
 *         scaPy = np.asarray(self.sca)
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)             # <<<<<<<<<<<<<<
 * 
 *         self.background.chi = f64_view_2(self.chi)
 */
  __pyx_t_5 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_v_self->provider->__pyx_vtab)->compute_background(__pyx_v_self->provider, __pyx_v_atmos, __pyx_v_chiPy, __pyx_v_etaPy, __pyx_v_scaPy, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1598, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":1600
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)
 * 
 *         self.background.chi = f64_view_2(self.chi)             # <<<<<<<<<<<<<<
 *         self.background.eta = f64_view_2(self.eta)
 *         self.background.sca = f64_view_2(self.sca)
 */
  if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1600, __pyx_L1_error)}
  try {
    __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->chi);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1600, __pyx_L1_error)
  }
  __pyx_v_self->background.chi = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":1601
 * 
 *         self.background.chi = f64_view_2(self.chi)
 *         self.background.eta = f64_view_2(self.eta)             # <<<<<<<<<<<<<<
 *         self.background.sca = f64_view_2(self.sca)
 * 
 */
  if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1601, __pyx_L1_error)}
  try {
    __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->eta);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1601, __pyx_L1_error)
  }
  __pyx_v_self->background.eta = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":1602
 *         self.background.chi = f64_view_2(self.chi)
 *         self.background.eta = f64_view_2(self.eta)
 *         self.background.sca = f64_view_2(self.sca)             # <<<<<<<<<<<<<<
 * 
 *     cpdef update_background(self, LwAtmosphere atmos):
 */
  if (unlikely(!__pyx_v_self->sca.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1602, __pyx_L1_error)}
  try {
    __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->sca);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1602, __pyx_L1_error)
  }
  __pyx_v_self->background.sca = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":1576
 *     cdef f64[:,::1] sca
 * 
 *     def __init__(self, atmosphere, eqPops, radSet, wavelength, provider=None):             # <<<<<<<<<<<<<<
 *         cdef LwAtmosphere atmos = atmosphere
 *         self.eqPops = eqPops
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_2, 1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_atmos);
  __Pyx_XDECREF(__pyx_v_chiPy);
  __Pyx_XDECREF(__pyx_v_etaPy);
  __Pyx_XDECREF(__pyx_v_scaPy);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1604
 *         self.background.sca = f64_view_2(self.sca)
 * 
 *     cpdef update_background(self, LwAtmosphere atmos):             # <<<<<<<<<<<<<<
 *         '''
 *         Recompute the background opacities, perhaps in the case where, for
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3update_background(PyObject *__pyx_v_self, PyObject *__pyx_v_atmos); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_12LwBackground_update_background(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_chiPy = NULL;
  PyObject *__pyx_v_etaPy = NULL;
  PyObject *__pyx_v_scaPy = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_background", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_background); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1604, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3update_background)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, ((PyObject *)__pyx_v_atmos)) : __Pyx_PyObject_CallOneArg(__pyx_t_3, ((PyObject *)__pyx_v_atmos));
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1604, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":1615
 *             emissivities.
 *         '''
 *         chiPy = np.asarray(self.chi)             # <<<<<<<<<<<<<<
 *         etaPy = np.asarray(self.eta)
 *         scaPy = np.asarray(self.sca)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1615, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->chi, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_chiPy = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1616
 *         '''
 *         chiPy = np.asarray(self.chi)
 *         etaPy = np.asarray(self.eta)             # <<<<<<<<<<<<<<
 *         scaPy = np.asarray(self.sca)
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1616, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->eta, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1616, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_etaPy = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1617
 *         chiPy = np.asarray(self.chi)
 *         etaPy = np.asarray(self.eta)
 *         scaPy = np.asarray(self.sca)             # <<<<<<<<<<<<<<
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->sca.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1617, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->sca, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1617, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_scaPy = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1618
 *         etaPy = np.asarray(self.eta)
 *         scaPy = np.asarray(self.sca)
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_v_self->provider->__pyx_vtab)->compute_background(__pyx_v_self->provider, __pyx_v_atmos, __pyx_v_chiPy, __pyx_v_etaPy, __pyx_v_scaPy, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1604
 *         self.background.sca = f64_view_2(self.sca)
 * 
 *     cpdef update_background(self, LwAtmosphere atmos):             # <<<<<<<<<<<<<<
 *         '''
 *         Recompute the background opacities, perhaps in the case where, for
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.update_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_chiPy);
  __Pyx_XDECREF(__pyx_v_etaPy);
  __Pyx_XDECREF(__pyx_v_scaPy);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3update_background(PyObject *__pyx_v_self, PyObject *__pyx_v_atmos); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_12LwBackground_2update_background[] = "\n        Recompute the background opacities, perhaps in the case where, for\n        example, the atmospheric parameters have been updated.\n\n        Parameters\n        ----------\n        atmos : LwAtmosphere\n            The atmosphere in which to compute the background opacities and\n            emissivities.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3update_background(PyObject *__pyx_v_self, PyObject *__pyx_v_atmos) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_background (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_atmos), __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere, 1, "atmos", 0))) __PYX_ERR(0, 1604, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground_2update_background(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self), ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_v_atmos));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_2update_background(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_atmos) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_background", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_12LwBackground_update_background(__pyx_v_self, __pyx_v_atmos, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.update_background", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1620
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['eqPops'] = self.eqPops
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_5__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_5__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground_4__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_4__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":1621
 * 
 *     def __getstate__(self):
 *         state = {}             # <<<<<<<<<<<<<<
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1621, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1622
 *     def __getstate__(self):
 *         state = {}
 *         state['eqPops'] = self.eqPops             # <<<<<<<<<<<<<<
 *         state['radSet'] = self.radSet
 *         state['provider'] = self.provider
 */
  __pyx_t_1 = __pyx_v_self->eqPops;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_eqPops, __pyx_t_1) < 0)) __PYX_ERR(0, 1622, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1623
 *         state = {}
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet             # <<<<<<<<<<<<<<
 *         state['provider'] = self.provider
 *         state['wavelength'] = np.asarray(self.wavelength)
 */
  __pyx_t_1 = __pyx_v_self->radSet;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_radSet, __pyx_t_1) < 0)) __PYX_ERR(0, 1623, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1624
 *         state['eqPops'] = self.eqPops
 *         state['radSet'] = self.radSet
 *         state['provider'] = self.provider             # <<<<<<<<<<<<<<
 *         state['wavelength'] = np.asarray(self.wavelength)
 *         state['chi'] = np.asarray(self.chi)
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->provider);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_provider, __pyx_t_1) < 0)) __PYX_ERR(0, 1624, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1625
 *         state['radSet'] = self.radSet
 *         state['provider'] = self.provider
 *         state['wavelength'] = np.asarray(self.wavelength)             # <<<<<<<<<<<<<<
 *         state['chi'] = np.asarray(self.chi)
 *         state['eta'] = np.asarray(self.eta)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1625, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_wavelength, __pyx_t_1) < 0)) __PYX_ERR(0, 1625, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1626
 *         state['provider'] = self.provider
 *         state['wavelength'] = np.asarray(self.wavelength)
 *         state['chi'] = np.asarray(self.chi)             # <<<<<<<<<<<<<<
 *         state['eta'] = np.asarray(self.eta)
 *         state['sca'] = np.asarray(self.sca)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1626, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->chi, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_chi, __pyx_t_1) < 0)) __PYX_ERR(0, 1626, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1627
 *         state['wavelength'] = np.asarray(self.wavelength)
 *         state['chi'] = np.asarray(self.chi)
 *         state['eta'] = np.asarray(self.eta)             # <<<<<<<<<<<<<<
 *         state['sca'] = np.asarray(self.sca)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1627, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->eta, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_eta, __pyx_t_1) < 0)) __PYX_ERR(0, 1627, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1628
 *         state['chi'] = np.asarray(self.chi)
 *         state['eta'] = np.asarray(self.eta)
 *         state['sca'] = np.asarray(self.sca)             # <<<<<<<<<<<<<<
 * 
 *         return state
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->sca.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1628, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->sca, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1628, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_sca, __pyx_t_1) < 0)) __PYX_ERR(0, 1628, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1630
 *         state['sca'] = np.asarray(self.sca)
 * 
 *         return state             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, state):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_state);
  __pyx_r = __pyx_v_state;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1620
 *         self.provider.compute_background(atmos, chiPy, etaPy, scaPy)
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['eqPops'] = self.eqPops
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1632
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_7__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_7__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground_6__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_6__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_memviewslice __pyx_t_2 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_t_3 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":1633
 * 
 *     def __setstate__(self, state):
 *         self.eqPops = state['eqPops']             # <<<<<<<<<<<<<<
 *         self.radSet = state['radSet']
 *         self.provider = state['provider']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_eqPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1634
 *     def __setstate__(self, state):
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']             # <<<<<<<<<<<<<<
 *         self.provider = state['provider']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_radSet); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->radSet);
  __Pyx_DECREF(__pyx_v_self->radSet);
  __pyx_v_self->radSet = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1635
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']
 *         self.provider = state['provider']             # <<<<<<<<<<<<<<
 * 
 *         self.wavelength = state['wavelength']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_provider); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider))))) __PYX_ERR(0, 1635, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->provider);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->provider));
  __pyx_v_self->provider = ((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1637
 *         self.provider = state['provider']
 * 
 *         self.wavelength = state['wavelength']             # <<<<<<<<<<<<<<
 *         self.chi = state['chi']
 *         self.eta = state['eta']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1637, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1637, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1638
 * 
 *         self.wavelength = state['wavelength']
 *         self.chi = state['chi']             # <<<<<<<<<<<<<<
 *         self.eta = state['eta']
 *         self.sca = state['sca']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_chi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1638, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1638, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->chi, 0);
  __pyx_v_self->chi = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1639
 *         self.wavelength = state['wavelength']
 *         self.chi = state['chi']
 *         self.eta = state['eta']             # <<<<<<<<<<<<<<
 *         self.sca = state['sca']
 *         self.background.chi = f64_view_2(self.chi)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_eta); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1639, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->eta, 0);
  __pyx_v_self->eta = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1640
 *         self.chi = state['chi']
 *         self.eta = state['eta']
 *         self.sca = state['sca']             # <<<<<<<<<<<<<<
 *         self.background.chi = f64_view_2(self.chi)
 *         self.background.eta = f64_view_2(self.eta)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_sca); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1640, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->sca, 0);
  __pyx_v_self->sca = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1641
 *         self.eta = state['eta']
 *         self.sca = state['sca']
 *         self.background.chi = f64_view_2(self.chi)             # <<<<<<<<<<<<<<
 *         self.background.eta = f64_view_2(self.eta)
 *         self.background.sca = f64_view_2(self.sca)
 */
  if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1641, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->chi);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1641, __pyx_L1_error)
  }
  __pyx_v_self->background.chi = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1642
 *         self.sca = state['sca']
 *         self.background.chi = f64_view_2(self.chi)
 *         self.background.eta = f64_view_2(self.eta)             # <<<<<<<<<<<<<<
 *         self.background.sca = f64_view_2(self.sca)
 * 
 */
  if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1642, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->eta);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1642, __pyx_L1_error)
  }
  __pyx_v_self->background.eta = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1643
 *         self.background.chi = f64_view_2(self.chi)
 *         self.background.eta = f64_view_2(self.eta)
 *         self.background.sca = f64_view_2(self.sca)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  if (unlikely(!__pyx_v_self->sca.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1643, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->sca);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1643, __pyx_L1_error)
  }
  __pyx_v_self->background.sca = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1632
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.eqPops = state['eqPops']
 *         self.radSet = state['radSet']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_2, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_3, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1646
 * 
 *     @property
 *     def chi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The background opacity [Nlambda, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3chi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3chi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3chi___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3chi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1650
 *         The background opacity [Nlambda, Nspace].
 *         '''
 *         return np.asarray(self.chi)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->chi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1650, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->chi, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1650, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1646
 * 
 *     @property
 *     def chi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The background opacity [Nlambda, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.chi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1653
 * 
 *     @property
 *     def eta(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The background eta [Nlambda, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3eta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3eta_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3eta___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3eta___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1657
 *         The background eta [Nlambda, Nspace].
 *         '''
 *         return np.asarray(self.eta)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->eta.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1657, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->eta, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1653
 * 
 *     @property
 *     def eta(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The background eta [Nlambda, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.eta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1660
 * 
 *     @property
 *     def sca(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The background scattering [Nlambda, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3sca_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3sca_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3sca___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_3sca___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":1664
 *         The background scattering [Nlambda, Nspace].
 *         '''
 *         return np.asarray(self.sca)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->sca.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1664, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->sca, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1660
 * 
 *     @property
 *     def sca(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The background scattering [Nlambda, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.sca.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_9__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground_8__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_11__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwBackground_10__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwBackground_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwBackground.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1680
 *     cdef list lambdaRed
 * 
 *     def __init__(self, atmos, atom, pops):             # <<<<<<<<<<<<<<
 *         if len(atom.lines) == 0:
 *             self.lines = False
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_atmos = 0;
  PyObject *__pyx_v_atom = 0;
  PyObject *__pyx_v_pops = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmos,&__pyx_n_s_atom,&__pyx_n_s_pops,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atom)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 1); __PYX_ERR(0, 1680, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pops)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, 2); __PYX_ERR(0, 1680, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1680, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_atmos = values[0];
    __pyx_v_atom = values[1];
    __pyx_v_pops = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1680, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.RayleighScatterer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_v_self), __pyx_v_atmos, __pyx_v_atom, __pyx_v_pops);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer___init__(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self, PyObject *__pyx_v_atmos, PyObject *__pyx_v_atom, PyObject *__pyx_v_pops) {
  __pyx_t_8CmoArray_f64 __pyx_v_lambdaLimit;
  __pyx_t_8CmoArray_f64 __pyx_v_lambdaRed;
  PyObject *__pyx_v_l = NULL;
  PyObject *__pyx_v_C = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __pyx_t_8CmoArray_f64 __pyx_t_8;
  int __pyx_t_9;
  __pyx_t_8CmoArray_f64 __pyx_t_10;
  __pyx_t_8CmoArray_f64 __pyx_t_11;
  __Pyx_memviewslice __pyx_t_12 = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":1681
 * 
 *     def __init__(self, atmos, atom, pops):
 *         if len(atom.lines) == 0:             # <<<<<<<<<<<<<<
 *             self.lines = False
 *             return
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_lines); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = ((__pyx_t_2 == 0) != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":1682
 *     def __init__(self, atmos, atom, pops):
 *         if len(atom.lines) == 0:
 *             self.lines = False             # <<<<<<<<<<<<<<
 *             return
 * 
 */
    __pyx_v_self->lines = 0;

    /* "Source/LwMiddleLayer.pyx":1683
 *         if len(atom.lines) == 0:
 *             self.lines = False
 *             return             # <<<<<<<<<<<<<<
 * 
 *         self.lines = True
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":1681
 * 
 *     def __init__(self, atmos, atom, pops):
 *         if len(atom.lines) == 0:             # <<<<<<<<<<<<<<
 *             self.lines = False
 *             return
 */
  }

  /* "Source/LwMiddleLayer.pyx":1685
 *             return
 * 
 *         self.lines = True             # <<<<<<<<<<<<<<
 *         self.lambdaRed = []
 *         cdef f64 lambdaLimit = 1e6
 */
  __pyx_v_self->lines = 1;

  /* "Source/LwMiddleLayer.pyx":1686
 * 
 *         self.lines = True
 *         self.lambdaRed = []             # <<<<<<<<<<<<<<
 *         cdef f64 lambdaLimit = 1e6
 *         cdef f64 lambdaRed
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1686, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->lambdaRed);
  __Pyx_DECREF(__pyx_v_self->lambdaRed);
  __pyx_v_self->lambdaRed = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1687
 *         self.lines = True
 *         self.lambdaRed = []
 *         cdef f64 lambdaLimit = 1e6             # <<<<<<<<<<<<<<
 *         cdef f64 lambdaRed
 *         for l in atom.lines:
 */
  __pyx_v_lambdaLimit = 1e6;

  /* "Source/LwMiddleLayer.pyx":1689
 *         cdef f64 lambdaLimit = 1e6
 *         cdef f64 lambdaRed
 *         for l in atom.lines:             # <<<<<<<<<<<<<<
 *             lambdaRed = l.wavelength()[-1]
 *             self.lambdaRed.append(lambdaRed)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_lines); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_4 = __pyx_t_1; __Pyx_INCREF(__pyx_t_4); __pyx_t_2 = 0;
    __pyx_t_5 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1689, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1689, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_5)) {
      if (likely(PyList_CheckExact(__pyx_t_4))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1689, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1689, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_2); __Pyx_INCREF(__pyx_t_1); __pyx_t_2++; if (unlikely(0 < 0)) __PYX_ERR(0, 1689, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1689, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_5(__pyx_t_4);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1689, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_l, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":1690
 *         cdef f64 lambdaRed
 *         for l in atom.lines:
 *             lambdaRed = l.wavelength()[-1]             # <<<<<<<<<<<<<<
 *             self.lambdaRed.append(lambdaRed)
 *             if l.i == 0:
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1690, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1690, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_t_1, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1690, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1690, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_lambdaRed = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":1691
 *         for l in atom.lines:
 *             lambdaRed = l.wavelength()[-1]
 *             self.lambdaRed.append(lambdaRed)             # <<<<<<<<<<<<<<
 *             if l.i == 0:
 *                 lambdaLimit = min(lambdaLimit, lambdaRed)
 */
    if (unlikely(__pyx_v_self->lambdaRed == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 1691, __pyx_L1_error)
    }
    __pyx_t_6 = PyFloat_FromDouble(__pyx_v_lambdaRed); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_self->lambdaRed, __pyx_t_6); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(0, 1691, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":1692
 *             lambdaRed = l.wavelength()[-1]
 *             self.lambdaRed.append(lambdaRed)
 *             if l.i == 0:             # <<<<<<<<<<<<<<
 *                 lambdaLimit = min(lambdaLimit, lambdaRed)
 * 
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_i); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1692, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_t_6, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1692, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 1692, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_3) {

      /* "Source/LwMiddleLayer.pyx":1693
 *             self.lambdaRed.append(lambdaRed)
 *             if l.i == 0:
 *                 lambdaLimit = min(lambdaLimit, lambdaRed)             # <<<<<<<<<<<<<<
 * 
 *         self.lambdaLimit = lambdaLimit
 */
      __pyx_t_8 = __pyx_v_lambdaRed;
      __pyx_t_10 = __pyx_v_lambdaLimit;
      if (((__pyx_t_8 < __pyx_t_10) != 0)) {
        __pyx_t_11 = __pyx_t_8;
      } else {
        __pyx_t_11 = __pyx_t_10;
      }
      __pyx_v_lambdaLimit = __pyx_t_11;

      /* "Source/LwMiddleLayer.pyx":1692
 *             lambdaRed = l.wavelength()[-1]
 *             self.lambdaRed.append(lambdaRed)
 *             if l.i == 0:             # <<<<<<<<<<<<<<
 *                 lambdaLimit = min(lambdaLimit, lambdaRed)
 * 
 */
    }

    /* "Source/LwMiddleLayer.pyx":1689
 *         cdef f64 lambdaLimit = 1e6
 *         cdef f64 lambdaRed
 *         for l in atom.lines:             # <<<<<<<<<<<<<<
 *             lambdaRed = l.wavelength()[-1]
 *             self.lambdaRed.append(lambdaRed)
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1695
 *                 lambdaLimit = min(lambdaLimit, lambdaRed)
 * 
 *         self.lambdaLimit = lambdaLimit             # <<<<<<<<<<<<<<
 *         self.atom = atom
 *         self.atmos = atmos
 */
  __pyx_v_self->lambdaLimit = __pyx_v_lambdaLimit;

  /* "Source/LwMiddleLayer.pyx":1696
 * 
 *         self.lambdaLimit = lambdaLimit
 *         self.atom = atom             # <<<<<<<<<<<<<<
 *         self.atmos = atmos
 *         self.pops = pops
 */
  __Pyx_INCREF(__pyx_v_atom);
  __Pyx_GIVEREF(__pyx_v_atom);
  __Pyx_GOTREF(__pyx_v_self->atom);
  __Pyx_DECREF(__pyx_v_self->atom);
  __pyx_v_self->atom = __pyx_v_atom;

  /* "Source/LwMiddleLayer.pyx":1697
 *         self.lambdaLimit = lambdaLimit
 *         self.atom = atom
 *         self.atmos = atmos             # <<<<<<<<<<<<<<
 *         self.pops = pops
 * 
 */
  if (!(likely(((__pyx_v_atmos) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_atmos, __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere))))) __PYX_ERR(0, 1697, __pyx_L1_error)
  __pyx_t_4 = __pyx_v_atmos;
  __Pyx_INCREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->atmos);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atmos));
  __pyx_v_self->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1698
 *         self.atom = atom
 *         self.atmos = atmos
 *         self.pops = pops             # <<<<<<<<<<<<<<
 * 
 *         C = Const
 */
  __pyx_t_12 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_pops, PyBUF_WRITABLE); if (unlikely(!__pyx_t_12.memview)) __PYX_ERR(0, 1698, __pyx_L1_error)
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->pops, 0);
  __pyx_v_self->pops = __pyx_t_12;
  __pyx_t_12.memview = NULL;
  __pyx_t_12.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1700
 *         self.pops = pops
 * 
 *         C = Const             # <<<<<<<<<<<<<<
 *         self.C = 2.0 * np.pi * (C.QElectron / C.Epsilon0) * C.QElectron / C.MElectron / C.CLight
 *         self.sigmaE = 8.0 * np.pi / 3.0 * (C.QElectron / (np.sqrt(4.0 * np.pi * C.Epsilon0) * (np.sqrt(C.MElectron) * C.CLight)))**4
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_Const); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_C = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1701
 * 
 *         C = Const
 *         self.C = 2.0 * np.pi * (C.QElectron / C.Epsilon0) * C.QElectron / C.MElectron / C.CLight             # <<<<<<<<<<<<<<
 *         self.sigmaE = 8.0 * np.pi / 3.0 * (C.QElectron / (np.sqrt(4.0 * np.pi * C.Epsilon0) * (np.sqrt(C.MElectron) * C.CLight)))**4
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_pi); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Multiply(__pyx_float_2_0, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_QElectron); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_Epsilon0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_6 = PyNumber_Multiply(__pyx_t_4, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_QElectron); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = PyNumber_Multiply(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_MElectron); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_6 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_CLight); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1701, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_self->C = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":1702
 *         C = Const
 *         self.C = 2.0 * np.pi * (C.QElectron / C.Epsilon0) * C.QElectron / C.MElectron / C.CLight
 *         self.sigmaE = 8.0 * np.pi / 3.0 * (C.QElectron / (np.sqrt(4.0 * np.pi * C.Epsilon0) * (np.sqrt(C.MElectron) * C.CLight)))**4             # <<<<<<<<<<<<<<
 * 
 *     cpdef scatter(self, f64 wavelength, f64[::1] sca):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_pi); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Multiply(__pyx_float_8_0, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyFloat_TrueDivideObjC(__pyx_t_4, __pyx_float_3_0, 3.0, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_QElectron); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_pi); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Multiply(__pyx_float_4_0, __pyx_t_14); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_Epsilon0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_15 = PyNumber_Multiply(__pyx_t_1, __pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
    __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_13);
    if (likely(__pyx_t_14)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
      __Pyx_INCREF(__pyx_t_14);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_13, function);
    }
  }
  __pyx_t_6 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_13, __pyx_t_14, __pyx_t_15) : __Pyx_PyObject_CallOneArg(__pyx_t_13, __pyx_t_15);
  __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_np); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_sqrt); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_MElectron); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_14);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_14, function);
    }
  }
  __pyx_t_13 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_1, __pyx_t_15) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_t_15);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_v_C, __pyx_n_s_CLight); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_15 = PyNumber_Multiply(__pyx_t_13, __pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = PyNumber_Multiply(__pyx_t_6, __pyx_t_15); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  __pyx_t_15 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = PyNumber_Power(__pyx_t_15, __pyx_int_4, Py_None); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  __pyx_t_15 = PyNumber_Multiply(__pyx_t_7, __pyx_t_14); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_15);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_15); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1702, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
  __pyx_v_self->sigmaE = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":1680
 *     cdef list lambdaRed
 * 
 *     def __init__(self, atmos, atom, pops):             # <<<<<<<<<<<<<<
 *         if len(atom.lines) == 0:
 *             self.lines = False
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __PYX_XDEC_MEMVIEW(&__pyx_t_12, 1);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("lightweaver.LwCompiled.RayleighScatterer.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_C);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1704
 *         self.sigmaE = 8.0 * np.pi / 3.0 * (C.QElectron / (np.sqrt(4.0 * np.pi * C.Epsilon0) * (np.sqrt(C.MElectron) * C.CLight)))**4
 * 
 *     cpdef scatter(self, f64 wavelength, f64[::1] sca):             # <<<<<<<<<<<<<<
 *         if wavelength <= self.lambdaLimit:
 *             return False
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_3scatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_17RayleighScatterer_scatter(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self, __pyx_t_8CmoArray_f64 __pyx_v_wavelength, __Pyx_memviewslice __pyx_v_sca, int __pyx_skip_dispatch) {
  __pyx_t_8CmoArray_f64 __pyx_v_fomega;
  __pyx_t_8CmoArray_f64 __pyx_v_g0;
  __pyx_t_8CmoArray_f64 __pyx_v_lambdaRed;
  __pyx_t_8CmoArray_f64 __pyx_v_f;
  int __pyx_v_i;
  PyObject *__pyx_v_l = NULL;
  PyObject *__pyx_v_lambda2 = NULL;
  __pyx_t_8CmoArray_f64 __pyx_v_sigmaRayleigh;
  int __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  __pyx_t_8CmoArray_f64 __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  Py_ssize_t __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  Py_ssize_t __pyx_t_15;
  int __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scatter", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_scatter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1704, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_3scatter)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_wavelength); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1704, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (unlikely(!__pyx_v_sca.memview)) { __Pyx_RaiseUnboundLocalError("sca"); __PYX_ERR(0, 1704, __pyx_L1_error) }
        __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_sca, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1704, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1704, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[3] = {__pyx_t_6, __pyx_t_3, __pyx_t_4};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1704, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1704, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1704, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":1705
 * 
 *     cpdef scatter(self, f64 wavelength, f64[::1] sca):
 *         if wavelength <= self.lambdaLimit:             # <<<<<<<<<<<<<<
 *             return False
 *         if not self.lines:
 */
  __pyx_t_9 = ((__pyx_v_wavelength <= __pyx_v_self->lambdaLimit) != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":1706
 *     cpdef scatter(self, f64 wavelength, f64[::1] sca):
 *         if wavelength <= self.lambdaLimit:
 *             return False             # <<<<<<<<<<<<<<
 *         if not self.lines:
 *             return False
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":1705
 * 
 *     cpdef scatter(self, f64 wavelength, f64[::1] sca):
 *         if wavelength <= self.lambdaLimit:             # <<<<<<<<<<<<<<
 *             return False
 *         if not self.lines:
 */
  }

  /* "Source/LwMiddleLayer.pyx":1707
 *         if wavelength <= self.lambdaLimit:
 *             return False
 *         if not self.lines:             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  __pyx_t_9 = ((!(__pyx_v_self->lines != 0)) != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":1708
 *             return False
 *         if not self.lines:
 *             return False             # <<<<<<<<<<<<<<
 * 
 *         cdef f64 fomega = 0.0
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":1707
 *         if wavelength <= self.lambdaLimit:
 *             return False
 *         if not self.lines:             # <<<<<<<<<<<<<<
 *             return False
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":1710
 *             return False
 * 
 *         cdef f64 fomega = 0.0             # <<<<<<<<<<<<<<
 *         cdef f64 g0 = self.atom.levels[0].g
 *         cdef f64 lambdaRed
 */
  __pyx_v_fomega = 0.0;

  /* "Source/LwMiddleLayer.pyx":1711
 * 
 *         cdef f64 fomega = 0.0
 *         cdef f64 g0 = self.atom.levels[0].g             # <<<<<<<<<<<<<<
 *         cdef f64 lambdaRed
 *         cdef f64 f
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->atom, __pyx_n_s_levels); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1711, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1711, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_g); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1711, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1711, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_g0 = __pyx_t_10;

  /* "Source/LwMiddleLayer.pyx":1715
 *         cdef f64 f
 *         cdef int i
 *         for i, l in enumerate(self.atom.lines):             # <<<<<<<<<<<<<<
 *             if l.i != 0:
 *                 continue
 */
  __pyx_t_7 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->atom, __pyx_n_s_lines); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1715, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_11 = 0;
    __pyx_t_12 = NULL;
  } else {
    __pyx_t_11 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1715, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_12 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1715, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_12)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_1); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1715, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1715, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_1); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 1715, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1715, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_12(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1715, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_l, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_v_i = __pyx_t_7;
    __pyx_t_7 = (__pyx_t_7 + 1);

    /* "Source/LwMiddleLayer.pyx":1716
 *         cdef int i
 *         for i, l in enumerate(self.atom.lines):
 *             if l.i != 0:             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1716, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyInt_NeObjC(__pyx_t_1, __pyx_int_0, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1716, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 1716, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_9) {

      /* "Source/LwMiddleLayer.pyx":1717
 *         for i, l in enumerate(self.atom.lines):
 *             if l.i != 0:
 *                 continue             # <<<<<<<<<<<<<<
 * 
 *             lambdaRed = self.lambdaRed[i]
 */
      goto __pyx_L5_continue;

      /* "Source/LwMiddleLayer.pyx":1716
 *         cdef int i
 *         for i, l in enumerate(self.atom.lines):
 *             if l.i != 0:             # <<<<<<<<<<<<<<
 *                 continue
 * 
 */
    }

    /* "Source/LwMiddleLayer.pyx":1719
 *                 continue
 * 
 *             lambdaRed = self.lambdaRed[i]             # <<<<<<<<<<<<<<
 *             if wavelength > lambdaRed:
 *                 lambda2 = 1.0 / ((wavelength / l.lambda0)**2 - 1.0)
 */
    if (unlikely(__pyx_v_self->lambdaRed == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 1719, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_List(__pyx_v_self->lambdaRed, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 1, 1, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1719, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_5); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1719, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_lambdaRed = __pyx_t_10;

    /* "Source/LwMiddleLayer.pyx":1720
 * 
 *             lambdaRed = self.lambdaRed[i]
 *             if wavelength > lambdaRed:             # <<<<<<<<<<<<<<
 *                 lambda2 = 1.0 / ((wavelength / l.lambda0)**2 - 1.0)
 *                 f = l.Aji * (l.jLevel.g / g0) * (l.lambda0 * Const.NM_TO_M)**2 / self.C
 */
    __pyx_t_9 = ((__pyx_v_wavelength > __pyx_v_lambdaRed) != 0);
    if (__pyx_t_9) {

      /* "Source/LwMiddleLayer.pyx":1721
 *             lambdaRed = self.lambdaRed[i]
 *             if wavelength > lambdaRed:
 *                 lambda2 = 1.0 / ((wavelength / l.lambda0)**2 - 1.0)             # <<<<<<<<<<<<<<
 *                 f = l.Aji * (l.jLevel.g / g0) * (l.lambda0 * Const.NM_TO_M)**2 / self.C
 *                 fomega += f * lambda2**2
 */
      __pyx_t_5 = PyFloat_FromDouble(__pyx_v_wavelength); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1721, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_lambda0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1721, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1721, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Power(__pyx_t_8, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1721, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyFloat_SubtractObjC(__pyx_t_1, __pyx_float_1_0, 1.0, 0, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1721, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyFloat_TrueDivideCObj(__pyx_float_1_0, __pyx_t_8, 1.0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1721, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF_SET(__pyx_v_lambda2, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":1722
 *             if wavelength > lambdaRed:
 *                 lambda2 = 1.0 / ((wavelength / l.lambda0)**2 - 1.0)
 *                 f = l.Aji * (l.jLevel.g / g0) * (l.lambda0 * Const.NM_TO_M)**2 / self.C             # <<<<<<<<<<<<<<
 *                 fomega += f * lambda2**2
 * 
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_Aji); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_jLevel); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_g); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_g0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_4 = __Pyx_PyNumber_Divide(__pyx_t_5, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = PyNumber_Multiply(__pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_l, __pyx_n_s_lambda0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Const); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_NM_TO_M); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyNumber_Power(__pyx_t_1, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Multiply(__pyx_t_8, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->C); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_8 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_8); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1722, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_v_f = __pyx_t_10;

      /* "Source/LwMiddleLayer.pyx":1723
 *                 lambda2 = 1.0 / ((wavelength / l.lambda0)**2 - 1.0)
 *                 f = l.Aji * (l.jLevel.g / g0) * (l.lambda0 * Const.NM_TO_M)**2 / self.C
 *                 fomega += f * lambda2**2             # <<<<<<<<<<<<<<
 * 
 *         cdef f64 sigmaRayleigh = self.sigmaE * fomega
 */
      __pyx_t_8 = PyFloat_FromDouble(__pyx_v_fomega); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_5 = PyFloat_FromDouble(__pyx_v_f); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyNumber_Power(__pyx_v_lambda2, __pyx_int_2, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = PyNumber_Multiply(__pyx_t_5, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_t_8, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1723, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1723, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_fomega = __pyx_t_10;

      /* "Source/LwMiddleLayer.pyx":1720
 * 
 *             lambdaRed = self.lambdaRed[i]
 *             if wavelength > lambdaRed:             # <<<<<<<<<<<<<<
 *                 lambda2 = 1.0 / ((wavelength / l.lambda0)**2 - 1.0)
 *                 f = l.Aji * (l.jLevel.g / g0) * (l.lambda0 * Const.NM_TO_M)**2 / self.C
 */
    }

    /* "Source/LwMiddleLayer.pyx":1715
 *         cdef f64 f
 *         cdef int i
 *         for i, l in enumerate(self.atom.lines):             # <<<<<<<<<<<<<<
 *             if l.i != 0:
 *                 continue
 */
    __pyx_L5_continue:;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1725
 *                 fomega += f * lambda2**2
 * 
 *         cdef f64 sigmaRayleigh = self.sigmaE * fomega             # <<<<<<<<<<<<<<
 * 
 *         cdef int k
 */
  __pyx_v_sigmaRayleigh = (__pyx_v_self->sigmaE * __pyx_v_fomega);

  /* "Source/LwMiddleLayer.pyx":1728
 * 
 *         cdef int k
 *         for k in range(sca.shape[0]):             # <<<<<<<<<<<<<<
 *             sca[k] = sigmaRayleigh * self.pops[0, k]
 * 
 */
  __pyx_t_11 = (__pyx_v_sca.shape[0]);
  __pyx_t_13 = __pyx_t_11;
  for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_13; __pyx_t_7+=1) {
    __pyx_v_k = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":1729
 *         cdef int k
 *         for k in range(sca.shape[0]):
 *             sca[k] = sigmaRayleigh * self.pops[0, k]             # <<<<<<<<<<<<<<
 * 
 *         return True
 */
    if (unlikely(!__pyx_v_self->pops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1729, __pyx_L1_error)}
    __pyx_t_14 = 0;
    __pyx_t_15 = __pyx_v_k;
    __pyx_t_16 = -1;
    if (__pyx_t_14 < 0) {
      __pyx_t_14 += __pyx_v_self->pops.shape[0];
      if (unlikely(__pyx_t_14 < 0)) __pyx_t_16 = 0;
    } else if (unlikely(__pyx_t_14 >= __pyx_v_self->pops.shape[0])) __pyx_t_16 = 0;
    if (__pyx_t_15 < 0) {
      __pyx_t_15 += __pyx_v_self->pops.shape[1];
      if (unlikely(__pyx_t_15 < 0)) __pyx_t_16 = 1;
    } else if (unlikely(__pyx_t_15 >= __pyx_v_self->pops.shape[1])) __pyx_t_16 = 1;
    if (unlikely(__pyx_t_16 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_16);
      __PYX_ERR(0, 1729, __pyx_L1_error)
    }
    __pyx_t_17 = __pyx_v_k;
    __pyx_t_16 = -1;
    if (__pyx_t_17 < 0) {
      __pyx_t_17 += __pyx_v_sca.shape[0];
      if (unlikely(__pyx_t_17 < 0)) __pyx_t_16 = 0;
    } else if (unlikely(__pyx_t_17 >= __pyx_v_sca.shape[0])) __pyx_t_16 = 0;
    if (unlikely(__pyx_t_16 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_16);
      __PYX_ERR(0, 1729, __pyx_L1_error)
    }
    *((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_sca.data) + __pyx_t_17)) )) = (__pyx_v_sigmaRayleigh * (*((__pyx_t_8CmoArray_f64 *) ( /* dim=1 */ ((char *) (((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ (__pyx_v_self->pops.data + __pyx_t_14 * __pyx_v_self->pops.strides[0]) )) + __pyx_t_15)) ))));
  }

  /* "Source/LwMiddleLayer.pyx":1731
 *             sca[k] = sigmaRayleigh * self.pops[0, k]
 * 
 *         return True             # <<<<<<<<<<<<<<
 * 
 * cdef class LwTransition:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_True);
  __pyx_r = Py_True;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1704
 *         self.sigmaE = 8.0 * np.pi / 3.0 * (C.QElectron / (np.sqrt(4.0 * np.pi * C.Epsilon0) * (np.sqrt(C.MElectron) * C.CLight)))**4
 * 
 *     cpdef scatter(self, f64 wavelength, f64[::1] sca):             # <<<<<<<<<<<<<<
 *         if wavelength <= self.lambdaLimit:
 *             return False
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("lightweaver.LwCompiled.RayleighScatterer.scatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_lambda2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_3scatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_3scatter(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  __pyx_t_8CmoArray_f64 __pyx_v_wavelength;
  __Pyx_memviewslice __pyx_v_sca = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scatter (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_wavelength,&__pyx_n_s_sca,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wavelength)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sca)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("scatter", 1, 2, 2, 1); __PYX_ERR(0, 1704, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "scatter") < 0)) __PYX_ERR(0, 1704, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_wavelength = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_wavelength == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1704, __pyx_L3_error)
    __pyx_v_sca = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(values[1], PyBUF_WRITABLE); if (unlikely(!__pyx_v_sca.memview)) __PYX_ERR(0, 1704, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("scatter", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1704, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.RayleighScatterer.scatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_2scatter(((struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_v_self), __pyx_v_wavelength, __pyx_v_sca);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_2scatter(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self, __pyx_t_8CmoArray_f64 __pyx_v_wavelength, __Pyx_memviewslice __pyx_v_sca) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scatter", 0);
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(!__pyx_v_sca.memview)) { __Pyx_RaiseUnboundLocalError("sca"); __PYX_ERR(0, 1704, __pyx_L1_error) }
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_17RayleighScatterer_scatter(__pyx_v_self, __pyx_v_wavelength, __pyx_v_sca, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1704, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.RayleighScatterer.scatter", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_sca, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_5__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_4__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_4__reduce_cython__(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.C, self.atmos, self.atom, self.lambdaLimit, self.lambdaRed, self.lines, self.pops, self.sigmaE)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->C); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->lambdaLimit); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_self->lines); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (unlikely(!__pyx_v_self->pops.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(2, 5, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->pops, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyFloat_FromDouble(__pyx_v_self->sigmaE); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(8); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->atmos));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->atmos));
  PyTuple_SET_ITEM(__pyx_t_6, 1, ((PyObject *)__pyx_v_self->atmos));
  __Pyx_INCREF(__pyx_v_self->atom);
  __Pyx_GIVEREF(__pyx_v_self->atom);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_self->atom);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_2);
  __Pyx_INCREF(__pyx_v_self->lambdaRed);
  __Pyx_GIVEREF(__pyx_v_self->lambdaRed);
  PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_v_self->lambdaRed);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_6, 5, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 6, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 7, __pyx_t_5);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_v_state = ((PyObject*)__pyx_t_6);
  __pyx_t_6 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.C, self.atmos, self.atom, self.lambdaLimit, self.lambdaRed, self.lines, self.pops, self.sigmaE)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_6 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_v__dict = __pyx_t_6;
  __pyx_t_6 = 0;

  /* "(tree fragment)":7
 *     state = (self.C, self.atmos, self.atom, self.lambdaLimit, self.lambdaRed, self.lines, self.pops, self.sigmaE)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_7 = (__pyx_v__dict != Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v__dict);
    __pyx_t_5 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.atmos is not None or self.atom is not None or self.lambdaRed is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.C, self.atmos, self.atom, self.lambdaLimit, self.lambdaRed, self.lines, self.pops, self.sigmaE)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.atmos is not None or self.atom is not None or self.lambdaRed is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, None), state
 */
  /*else*/ {
    __pyx_t_7 = (((PyObject *)__pyx_v_self->atmos) != Py_None);
    __pyx_t_9 = (__pyx_t_7 != 0);
    if (!__pyx_t_9) {
    } else {
      __pyx_t_8 = __pyx_t_9;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_self->atom != Py_None);
    __pyx_t_7 = (__pyx_t_9 != 0);
    if (!__pyx_t_7) {
    } else {
      __pyx_t_8 = __pyx_t_7;
      goto __pyx_L4_bool_binop_done;
    }
    __pyx_t_7 = (__pyx_v_self->lambdaRed != ((PyObject*)Py_None));
    __pyx_t_9 = (__pyx_t_7 != 0);
    __pyx_t_8 = __pyx_t_9;
    __pyx_L4_bool_binop_done:;
    __pyx_v_use_setstate = __pyx_t_8;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.atmos is not None or self.atom is not None or self.lambdaRed is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, None), state
 *     else:
 */
  __pyx_t_8 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_8) {

    /* "(tree fragment)":13
 *         use_setstate = self.atmos is not None or self.atom is not None or self.lambdaRed is not None
 *     if use_setstate:
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_RayleighScatterer); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_120250498);
    __Pyx_GIVEREF(__pyx_int_120250498);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_120250498);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_6, 2, Py_None);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_5 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.atmos is not None or self.atom is not None or self.lambdaRed is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, None), state
 *     else:
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_RayleighScatterer__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_RayleighScatterer); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_120250498);
    __Pyx_GIVEREF(__pyx_int_120250498);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_int_120250498);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_v_state);
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
    __pyx_t_4 = 0;
    __pyx_t_6 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.RayleighScatterer.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_RayleighScatterer__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_7__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_6__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17RayleighScatterer_6__setstate_cython__(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_RayleighScatterer__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(2, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled___pyx_unpickle_RayleighScatterer__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_RayleighScatterer, (type(self), 0x72ae082, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_RayleighScatterer__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.RayleighScatterer.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1777
 *     cdef public LwAtom atom
 * 
 *     def __init__(self, trans, compAtom, atmos, spect):             # <<<<<<<<<<<<<<
 *         self.transModel = trans
 *         cdef LwAtom atom = compAtom
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_trans = 0;
  PyObject *__pyx_v_compAtom = 0;
  PyObject *__pyx_v_atmos = 0;
  PyObject *__pyx_v_spect = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_trans,&__pyx_n_s_compAtom,&__pyx_n_s_atmos,&__pyx_n_s_spect,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_trans)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_compAtom)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 1); __PYX_ERR(0, 1777, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 2); __PYX_ERR(0, 1777, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_spect)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 3); __PYX_ERR(0, 1777, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 1777, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_trans = values[0];
    __pyx_v_compAtom = values[1];
    __pyx_v_atmos = values[2];
    __pyx_v_spect = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1777, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self), __pyx_v_trans, __pyx_v_compAtom, __pyx_v_atmos, __pyx_v_spect);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_trans, PyObject *__pyx_v_compAtom, PyObject *__pyx_v_atmos, PyObject *__pyx_v_spect) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a = 0;
  PyObject *__pyx_v_transId = NULL;
  PyObject *__pyx_v_Nblue = NULL;
  PyObject *__pyx_v_Nred = NULL;
  int __pyx_v_Nlambda;
  int __pyx_v_Nspace;
  int __pyx_v_Nrays;
  PyObject *__pyx_v_atomicState = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_memviewslice __pyx_t_3 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  __pyx_t_8CmoArray_f64 __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  __Pyx_memviewslice __pyx_t_13 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View4D __pyx_t_14;
  __Pyx_memviewslice __pyx_t_15 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_16;
  __Pyx_memviewslice __pyx_t_17 = { 0, 0, { 0 }, { 0 }, { 0 } };
  Py_ssize_t __pyx_t_18;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":1778
 * 
 *     def __init__(self, trans, compAtom, atmos, spect):
 *         self.transModel = trans             # <<<<<<<<<<<<<<
 *         cdef LwAtom atom = compAtom
 *         self.atom = atom
 */
  __Pyx_INCREF(__pyx_v_trans);
  __Pyx_GIVEREF(__pyx_v_trans);
  __Pyx_GOTREF(__pyx_v_self->transModel);
  __Pyx_DECREF(__pyx_v_self->transModel);
  __pyx_v_self->transModel = __pyx_v_trans;

  /* "Source/LwMiddleLayer.pyx":1779
 *     def __init__(self, trans, compAtom, atmos, spect):
 *         self.transModel = trans
 *         cdef LwAtom atom = compAtom             # <<<<<<<<<<<<<<
 *         self.atom = atom
 *         cdef LwAtmosphere a = atmos
 */
  if (!(likely(((__pyx_v_compAtom) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_compAtom, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 1779, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_compAtom;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_atom = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1780
 *         self.transModel = trans
 *         cdef LwAtom atom = compAtom
 *         self.atom = atom             # <<<<<<<<<<<<<<
 *         cdef LwAtmosphere a = atmos
 *         self.atmos = a
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_atom));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_atom));
  __Pyx_GOTREF(__pyx_v_self->atom);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atom));
  __pyx_v_self->atom = __pyx_v_atom;

  /* "Source/LwMiddleLayer.pyx":1781
 *         cdef LwAtom atom = compAtom
 *         self.atom = atom
 *         cdef LwAtmosphere a = atmos             # <<<<<<<<<<<<<<
 *         self.atmos = a
 *         self.spect = spect
 */
  if (!(likely(((__pyx_v_atmos) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_atmos, __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere))))) __PYX_ERR(0, 1781, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_atmos;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_a = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1782
 *         self.atom = atom
 *         cdef LwAtmosphere a = atmos
 *         self.atmos = a             # <<<<<<<<<<<<<<
 *         self.spect = spect
 *         transId = trans.transId
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_a));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_a));
  __Pyx_GOTREF(__pyx_v_self->atmos);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atmos));
  __pyx_v_self->atmos = __pyx_v_a;

  /* "Source/LwMiddleLayer.pyx":1783
 *         cdef LwAtmosphere a = atmos
 *         self.atmos = a
 *         self.spect = spect             # <<<<<<<<<<<<<<
 *         transId = trans.transId
 *         self.wavelength = spect.transWavelengths[transId]
 */
  __Pyx_INCREF(__pyx_v_spect);
  __Pyx_GIVEREF(__pyx_v_spect);
  __Pyx_GOTREF(__pyx_v_self->spect);
  __Pyx_DECREF(__pyx_v_self->spect);
  __pyx_v_self->spect = __pyx_v_spect;

  /* "Source/LwMiddleLayer.pyx":1784
 *         self.atmos = a
 *         self.spect = spect
 *         transId = trans.transId             # <<<<<<<<<<<<<<
 *         self.wavelength = spect.transWavelengths[transId]
 *         self.trans.wavelength = f64_view(self.wavelength)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_transId); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_transId = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1785
 *         self.spect = spect
 *         transId = trans.transId
 *         self.wavelength = spect.transWavelengths[transId]             # <<<<<<<<<<<<<<
 *         self.trans.wavelength = f64_view(self.wavelength)
 *         self.trans.i = trans.i
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_transWavelengths); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_transId); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1785, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1786
 *         transId = trans.transId
 *         self.wavelength = spect.transWavelengths[transId]
 *         self.trans.wavelength = f64_view(self.wavelength)             # <<<<<<<<<<<<<<
 *         self.trans.i = trans.i
 *         self.trans.j = trans.j
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1786, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wavelength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1786, __pyx_L1_error)
  }
  __pyx_v_self->trans.wavelength = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1787
 *         self.wavelength = spect.transWavelengths[transId]
 *         self.trans.wavelength = f64_view(self.wavelength)
 *         self.trans.i = trans.i             # <<<<<<<<<<<<<<
 *         self.trans.j = trans.j
 *         self.trans.polarised = False
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1787, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->trans.i = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1788
 *         self.trans.wavelength = f64_view(self.wavelength)
 *         self.trans.i = trans.i
 *         self.trans.j = trans.j             # <<<<<<<<<<<<<<
 *         self.trans.polarised = False
 *         Nblue = spect.blueIdx[transId]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_j); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1788, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->trans.j = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1789
 *         self.trans.i = trans.i
 *         self.trans.j = trans.j
 *         self.trans.polarised = False             # <<<<<<<<<<<<<<
 *         Nblue = spect.blueIdx[transId]
 *         self.trans.Nblue = Nblue
 */
  __pyx_v_self->trans.polarised = 0;

  /* "Source/LwMiddleLayer.pyx":1790
 *         self.trans.j = trans.j
 *         self.trans.polarised = False
 *         Nblue = spect.blueIdx[transId]             # <<<<<<<<<<<<<<
 *         self.trans.Nblue = Nblue
 *         Nred = spect.redIdx[transId]
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_blueIdx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_v_transId); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nblue = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1791
 *         self.trans.polarised = False
 *         Nblue = spect.blueIdx[transId]
 *         self.trans.Nblue = Nblue             # <<<<<<<<<<<<<<
 *         Nred = spect.redIdx[transId]
 *         self.trans.Nred = Nred
 */
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_Nblue); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1791, __pyx_L1_error)
  __pyx_v_self->trans.Nblue = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1792
 *         Nblue = spect.blueIdx[transId]
 *         self.trans.Nblue = Nblue
 *         Nred = spect.redIdx[transId]             # <<<<<<<<<<<<<<
 *         self.trans.Nred = Nred
 *         cdef int Nlambda = self.wavelength.shape[0]
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_redIdx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_transId); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1792, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nred = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1793
 *         self.trans.Nblue = Nblue
 *         Nred = spect.redIdx[transId]
 *         self.trans.Nred = Nred             # <<<<<<<<<<<<<<
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = self.atmos.Nspace
 */
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_Nred); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1793, __pyx_L1_error)
  __pyx_v_self->trans.Nred = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1794
 *         Nred = spect.redIdx[transId]
 *         self.trans.Nred = Nred
 *         cdef int Nlambda = self.wavelength.shape[0]             # <<<<<<<<<<<<<<
 *         cdef int Nspace = self.atmos.Nspace
 *         cdef int Nrays = self.atmos.Nrays
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1794, __pyx_L1_error)}
  __pyx_v_Nlambda = (__pyx_v_self->wavelength.shape[0]);

  /* "Source/LwMiddleLayer.pyx":1795
 *         self.trans.Nred = Nred
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = self.atmos.Nspace             # <<<<<<<<<<<<<<
 *         cdef int Nrays = self.atmos.Nrays
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1795, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1795, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nspace = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1796
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nspace = self.atmos.Nspace
 *         cdef int Nrays = self.atmos.Nrays             # <<<<<<<<<<<<<<
 * 
 *         if isinstance(trans, AtomicLine):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1796, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1796, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_Nrays = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1798
 *         cdef int Nrays = self.atmos.Nrays
 * 
 *         if isinstance(trans, AtomicLine):             # <<<<<<<<<<<<<<
 *             self.trans.type = LINE
 *             self.trans.Aji = trans.Aji
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_AtomicLine); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = PyObject_IsInstance(__pyx_v_trans, __pyx_t_2); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 1798, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":1799
 * 
 *         if isinstance(trans, AtomicLine):
 *             self.trans.type = LINE             # <<<<<<<<<<<<<<
 *             self.trans.Aji = trans.Aji
 *             self.trans.Bji = trans.Bji
 */
    __pyx_v_self->trans.type = LINE;

    /* "Source/LwMiddleLayer.pyx":1800
 *         if isinstance(trans, AtomicLine):
 *             self.trans.type = LINE
 *             self.trans.Aji = trans.Aji             # <<<<<<<<<<<<<<
 *             self.trans.Bji = trans.Bji
 *             self.trans.Bij = trans.Bij
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_Aji); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1800, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->trans.Aji = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":1801
 *             self.trans.type = LINE
 *             self.trans.Aji = trans.Aji
 *             self.trans.Bji = trans.Bji             # <<<<<<<<<<<<<<
 *             self.trans.Bij = trans.Bij
 *             self.trans.lambda0 = trans.lambda0
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_Bji); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1801, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1801, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->trans.Bji = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":1802
 *             self.trans.Aji = trans.Aji
 *             self.trans.Bji = trans.Bji
 *             self.trans.Bij = trans.Bij             # <<<<<<<<<<<<<<
 *             self.trans.lambda0 = trans.lambda0
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_Bij); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1802, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1802, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->trans.Bij = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":1803
 *             self.trans.Bji = trans.Bji
 *             self.trans.Bij = trans.Bij
 *             self.trans.lambda0 = trans.lambda0             # <<<<<<<<<<<<<<
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0
 *             self.Qelast = np.zeros(Nspace)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_lambda0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1803, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1803, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->trans.lambda0 = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":1804
 *             self.trans.Bij = trans.Bij
 *             self.trans.lambda0 = trans.lambda0
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0             # <<<<<<<<<<<<<<
 *             self.Qelast = np.zeros(Nspace)
 *             self.aDamp = np.zeros(Nspace)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_Const); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_CLight); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->trans.lambda0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyNumber_Divide(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_9); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1804, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_self->trans.dopplerWidth = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":1805
 *             self.trans.lambda0 = trans.lambda0
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0
 *             self.Qelast = np.zeros(Nspace)             # <<<<<<<<<<<<<<
 *             self.aDamp = np.zeros(Nspace)
 *             self.trans.Qelast = f64_view(self.Qelast)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_9 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_10, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1805, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->Qelast, 0);
    __pyx_v_self->Qelast = __pyx_t_3;
    __pyx_t_3.memview = NULL;
    __pyx_t_3.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1806
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0
 *             self.Qelast = np.zeros(Nspace)
 *             self.aDamp = np.zeros(Nspace)             # <<<<<<<<<<<<<<
 *             self.trans.Qelast = f64_view(self.Qelast)
 *             self.trans.aDamp = f64_view(self.aDamp)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_9 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_10, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1806, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1806, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->aDamp, 0);
    __pyx_v_self->aDamp = __pyx_t_3;
    __pyx_t_3.memview = NULL;
    __pyx_t_3.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1807
 *             self.Qelast = np.zeros(Nspace)
 *             self.aDamp = np.zeros(Nspace)
 *             self.trans.Qelast = f64_view(self.Qelast)             # <<<<<<<<<<<<<<
 *             self.trans.aDamp = f64_view(self.aDamp)
 *             self.phi = np.zeros((Nlambda, Nrays, 2, Nspace))
 */
    if (unlikely(!__pyx_v_self->Qelast.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1807, __pyx_L1_error)}
    try {
      __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->Qelast);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1807, __pyx_L1_error)
    }
    __pyx_v_self->trans.Qelast = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":1808
 *             self.aDamp = np.zeros(Nspace)
 *             self.trans.Qelast = f64_view(self.Qelast)
 *             self.trans.aDamp = f64_view(self.aDamp)             # <<<<<<<<<<<<<<
 *             self.phi = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.wphi = np.zeros(Nspace)
 */
    if (unlikely(!__pyx_v_self->aDamp.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1808, __pyx_L1_error)}
    try {
      __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->aDamp);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1808, __pyx_L1_error)
    }
    __pyx_v_self->trans.aDamp = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":1809
 *             self.trans.Qelast = f64_view(self.Qelast)
 *             self.trans.aDamp = f64_view(self.aDamp)
 *             self.phi = np.zeros((Nlambda, Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.wphi = np.zeros(Nspace)
 *             self.trans.phi = f64_view_4(self.phi)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_10 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_12 = PyTuple_New(4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_10);
    __Pyx_INCREF(__pyx_int_2);
    __Pyx_GIVEREF(__pyx_int_2);
    PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_int_2);
    __Pyx_GIVEREF(__pyx_t_11);
    PyTuple_SET_ITEM(__pyx_t_12, 3, __pyx_t_11);
    __pyx_t_2 = 0;
    __pyx_t_10 = 0;
    __pyx_t_11 = 0;
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_9 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_11, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_12);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_13 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_13.memview)) __PYX_ERR(0, 1809, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->phi, 0);
    __pyx_v_self->phi = __pyx_t_13;
    __pyx_t_13.memview = NULL;
    __pyx_t_13.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1810
 *             self.trans.aDamp = f64_view(self.aDamp)
 *             self.phi = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.wphi = np.zeros(Nspace)             # <<<<<<<<<<<<<<
 *             self.trans.phi = f64_view_4(self.phi)
 *             self.trans.wphi = f64_view(self.wphi)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
      }
    }
    __pyx_t_9 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_11, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1810, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1810, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->wphi, 0);
    __pyx_v_self->wphi = __pyx_t_3;
    __pyx_t_3.memview = NULL;
    __pyx_t_3.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1811
 *             self.phi = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.wphi = np.zeros(Nspace)
 *             self.trans.phi = f64_view_4(self.phi)             # <<<<<<<<<<<<<<
 *             self.trans.wphi = f64_view(self.wphi)
 *             if trans.type == LineType.PRD:
 */
    if (unlikely(!__pyx_v_self->phi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1811, __pyx_L1_error)}
    try {
      __pyx_t_14 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->phi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1811, __pyx_L1_error)
    }
    __pyx_v_self->trans.phi = __pyx_t_14;

    /* "Source/LwMiddleLayer.pyx":1812
 *             self.wphi = np.zeros(Nspace)
 *             self.trans.phi = f64_view_4(self.phi)
 *             self.trans.wphi = f64_view(self.wphi)             # <<<<<<<<<<<<<<
 *             if trans.type == LineType.PRD:
 *                 self.rhoPrd = np.ones((Nlambda, Nspace))
 */
    if (unlikely(!__pyx_v_self->wphi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1812, __pyx_L1_error)}
    try {
      __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wphi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1812, __pyx_L1_error)
    }
    __pyx_v_self->trans.wphi = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":1813
 *             self.trans.phi = f64_view_4(self.phi)
 *             self.trans.wphi = f64_view(self.wphi)
 *             if trans.type == LineType.PRD:             # <<<<<<<<<<<<<<
 *                 self.rhoPrd = np.ones((Nlambda, Nspace))
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_type); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_LineType); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_PRD); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1813, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_t_12 = PyObject_RichCompare(__pyx_t_9, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_12); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1813, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_12); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1813, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":1814
 *             self.trans.wphi = f64_view(self.wphi)
 *             if trans.type == LineType.PRD:
 *                 self.rhoPrd = np.ones((Nlambda, Nspace))             # <<<<<<<<<<<<<<
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 *         else:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1814, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_ones); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1814, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1814, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1814, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1814, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_11);
      __pyx_t_1 = 0;
      __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
        }
      }
      __pyx_t_12 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_11, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_10);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1814, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_15 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_12, PyBUF_WRITABLE); if (unlikely(!__pyx_t_15.memview)) __PYX_ERR(0, 1814, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->rhoPrd, 0);
      __pyx_v_self->rhoPrd = __pyx_t_15;
      __pyx_t_15.memview = NULL;
      __pyx_t_15.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1815
 *             if trans.type == LineType.PRD:
 *                 self.rhoPrd = np.ones((Nlambda, Nspace))
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)             # <<<<<<<<<<<<<<
 *         else:
 *             self.trans.type = CONTINUUM
 */
      if (unlikely(!__pyx_v_self->rhoPrd.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1815, __pyx_L1_error)}
      try {
        __pyx_t_16 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->rhoPrd);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1815, __pyx_L1_error)
      }
      __pyx_v_self->trans.rhoPrd = __pyx_t_16;

      /* "Source/LwMiddleLayer.pyx":1813
 *             self.trans.phi = f64_view_4(self.phi)
 *             self.trans.wphi = f64_view(self.wphi)
 *             if trans.type == LineType.PRD:             # <<<<<<<<<<<<<<
 *                 self.rhoPrd = np.ones((Nlambda, Nspace))
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 */
    }

    /* "Source/LwMiddleLayer.pyx":1798
 *         cdef int Nrays = self.atmos.Nrays
 * 
 *         if isinstance(trans, AtomicLine):             # <<<<<<<<<<<<<<
 *             self.trans.type = LINE
 *             self.trans.Aji = trans.Aji
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":1817
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 *         else:
 *             self.trans.type = CONTINUUM             # <<<<<<<<<<<<<<
 *             self.alpha = trans.alpha(np.asarray(self.wavelength))
 *             self.trans.alpha = f64_view(self.alpha)
 */
  /*else*/ {
    __pyx_v_self->trans.type = CONTINUUM;

    /* "Source/LwMiddleLayer.pyx":1818
 *         else:
 *             self.trans.type = CONTINUUM
 *             self.alpha = trans.alpha(np.asarray(self.wavelength))             # <<<<<<<<<<<<<<
 *             self.trans.alpha = f64_view(self.alpha)
 *             self.trans.dopplerWidth = 1.0
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_alpha); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1818, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1818, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1818, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1818, __pyx_L1_error)}
    __pyx_t_11 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1818, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_10 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_11);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1818, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_12 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_1, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_10);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1818, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_12, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1818, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->alpha, 0);
    __pyx_v_self->alpha = __pyx_t_3;
    __pyx_t_3.memview = NULL;
    __pyx_t_3.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1819
 *             self.trans.type = CONTINUUM
 *             self.alpha = trans.alpha(np.asarray(self.wavelength))
 *             self.trans.alpha = f64_view(self.alpha)             # <<<<<<<<<<<<<<
 *             self.trans.dopplerWidth = 1.0
 *             self.trans.lambda0 = trans.lambda0
 */
    if (unlikely(!__pyx_v_self->alpha.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1819, __pyx_L1_error)}
    try {
      __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->alpha);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1819, __pyx_L1_error)
    }
    __pyx_v_self->trans.alpha = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":1820
 *             self.alpha = trans.alpha(np.asarray(self.wavelength))
 *             self.trans.alpha = f64_view(self.alpha)
 *             self.trans.dopplerWidth = 1.0             # <<<<<<<<<<<<<<
 *             self.trans.lambda0 = trans.lambda0
 * 
 */
    __pyx_v_self->trans.dopplerWidth = 1.0;

    /* "Source/LwMiddleLayer.pyx":1821
 *             self.trans.alpha = f64_view(self.alpha)
 *             self.trans.dopplerWidth = 1.0
 *             self.trans.lambda0 = trans.lambda0             # <<<<<<<<<<<<<<
 * 
 *         self.active = spect.activeWavelengths[transId].astype(np.int8)
 */
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_lambda0); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1821, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_12); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1821, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    __pyx_v_self->trans.lambda0 = __pyx_t_8;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":1823
 *             self.trans.lambda0 = trans.lambda0
 * 
 *         self.active = spect.activeWavelengths[transId].astype(np.int8)             # <<<<<<<<<<<<<<
 *         self.trans.active = BoolView(<bool_t*>&self.active[0], self.active.shape[0])
 * 
 */
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_activeWavelengths); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_t_9, __pyx_v_transId); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_astype); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_np); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_int8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_9))) {
    __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
    if (likely(__pyx_t_10)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_9, function);
    }
  }
  __pyx_t_12 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_10, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_17 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_11lightweaver_10LwCompiled_i8(__pyx_t_12, PyBUF_WRITABLE); if (unlikely(!__pyx_t_17.memview)) __PYX_ERR(0, 1823, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->active, 0);
  __pyx_v_self->active = __pyx_t_17;
  __pyx_t_17.memview = NULL;
  __pyx_t_17.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1824
 * 
 *         self.active = spect.activeWavelengths[transId].astype(np.int8)
 *         self.trans.active = BoolView(<bool_t*>&self.active[0], self.active.shape[0])             # <<<<<<<<<<<<<<
 * 
 *         atomicState = self.atom.modelPops
 */
  if (unlikely(!__pyx_v_self->active.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1824, __pyx_L1_error)}
  __pyx_t_18 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_18 < 0) {
    __pyx_t_18 += __pyx_v_self->active.shape[0];
    if (unlikely(__pyx_t_18 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_18 >= __pyx_v_self->active.shape[0])) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(0, 1824, __pyx_L1_error)
  }
  if (unlikely(!__pyx_v_self->active.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1824, __pyx_L1_error)}
  __pyx_v_self->trans.active = __pyx_t_11lightweaver_10LwCompiled_BoolView(((bool *)(&(*((__pyx_t_11lightweaver_10LwCompiled_i8 *) ( /* dim=0 */ ((char *) (((__pyx_t_11lightweaver_10LwCompiled_i8 *) __pyx_v_self->active.data) + __pyx_t_18)) ))))), (__pyx_v_self->active.shape[0]));

  /* "Source/LwMiddleLayer.pyx":1826
 *         self.trans.active = BoolView(<bool_t*>&self.active[0], self.active.shape[0])
 * 
 *         atomicState = self.atom.modelPops             # <<<<<<<<<<<<<<
 *         self.Rij = atomicState.radiativeRates[(self.trans.i, self.trans.j)]
 *         self.Rji = atomicState.radiativeRates[(self.trans.j, self.trans.i)]
 */
  __pyx_t_12 = __pyx_v_self->atom->modelPops;
  __Pyx_INCREF(__pyx_t_12);
  __pyx_v_atomicState = __pyx_t_12;
  __pyx_t_12 = 0;

  /* "Source/LwMiddleLayer.pyx":1827
 * 
 *         atomicState = self.atom.modelPops
 *         self.Rij = atomicState.radiativeRates[(self.trans.i, self.trans.j)]             # <<<<<<<<<<<<<<
 *         self.Rji = atomicState.radiativeRates[(self.trans.j, self.trans.i)]
 *         self.trans.Rij = f64_view(self.Rij)
 */
  __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_atomicState, __pyx_n_s_radiativeRates); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_9 = __Pyx_PyInt_From_int(__pyx_v_self->trans.i); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->trans.j); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_9);
  PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_1);
  __pyx_t_9 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_12, __pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1827, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->Rij, 0);
  __pyx_v_self->Rij = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1828
 *         atomicState = self.atom.modelPops
 *         self.Rij = atomicState.radiativeRates[(self.trans.i, self.trans.j)]
 *         self.Rji = atomicState.radiativeRates[(self.trans.j, self.trans.i)]             # <<<<<<<<<<<<<<
 *         self.trans.Rij = f64_view(self.Rij)
 *         self.trans.Rji = f64_view(self.Rji)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_atomicState, __pyx_n_s_radiativeRates); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyInt_From_int(__pyx_v_self->trans.j); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_self->trans.i); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_GIVEREF(__pyx_t_10);
  PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_10);
  __Pyx_GIVEREF(__pyx_t_12);
  PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_12);
  __pyx_t_10 = 0;
  __pyx_t_12 = 0;
  __pyx_t_12 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_12);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_12, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 1828, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->Rji, 0);
  __pyx_v_self->Rji = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1829
 *         self.Rij = atomicState.radiativeRates[(self.trans.i, self.trans.j)]
 *         self.Rji = atomicState.radiativeRates[(self.trans.j, self.trans.i)]
 *         self.trans.Rij = f64_view(self.Rij)             # <<<<<<<<<<<<<<
 *         self.trans.Rji = f64_view(self.Rji)
 * 
 */
  if (unlikely(!__pyx_v_self->Rij.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1829, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->Rij);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1829, __pyx_L1_error)
  }
  __pyx_v_self->trans.Rij = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1830
 *         self.Rji = atomicState.radiativeRates[(self.trans.j, self.trans.i)]
 *         self.trans.Rij = f64_view(self.Rij)
 *         self.trans.Rji = f64_view(self.Rji)             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
  if (unlikely(!__pyx_v_self->Rji.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1830, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->Rji);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1830, __pyx_L1_error)
  }
  __pyx_v_self->trans.Rji = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1777
 *     cdef public LwAtom atom
 * 
 *     def __init__(self, trans, compAtom, atmos, spect):             # <<<<<<<<<<<<<<
 *         self.transModel = trans
 *         cdef LwAtom atom = compAtom
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __PYX_XDEC_MEMVIEW(&__pyx_t_3, 1);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __PYX_XDEC_MEMVIEW(&__pyx_t_13, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_15, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_17, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_transId);
  __Pyx_XDECREF(__pyx_v_Nblue);
  __Pyx_XDECREF(__pyx_v_Nred);
  __Pyx_XDECREF(__pyx_v_atomicState);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1832
 *         self.trans.Rji = f64_view(self.Rji)
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['atmos'] = self.atmos
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_2__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_2__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_v_transId = NULL;
  PyObject *__pyx_v_modelPops = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":1833
 * 
 *     def __getstate__(self):
 *         state = {}             # <<<<<<<<<<<<<<
 *         state['atmos'] = self.atmos
 *         state['atom'] = self.atom
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1834
 *     def __getstate__(self):
 *         state = {}
 *         state['atmos'] = self.atmos             # <<<<<<<<<<<<<<
 *         state['atom'] = self.atom
 *         state['spect'] = self.spect
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->atmos);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_atmos, __pyx_t_1) < 0)) __PYX_ERR(0, 1834, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1835
 *         state = {}
 *         state['atmos'] = self.atmos
 *         state['atom'] = self.atom             # <<<<<<<<<<<<<<
 *         state['spect'] = self.spect
 *         state['transModel'] = self.transModel
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->atom);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_atom, __pyx_t_1) < 0)) __PYX_ERR(0, 1835, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1836
 *         state['atmos'] = self.atmos
 *         state['atom'] = self.atom
 *         state['spect'] = self.spect             # <<<<<<<<<<<<<<
 *         state['transModel'] = self.transModel
 *         state['type'] = self.type
 */
  __pyx_t_1 = __pyx_v_self->spect;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_spect, __pyx_t_1) < 0)) __PYX_ERR(0, 1836, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1837
 *         state['atom'] = self.atom
 *         state['spect'] = self.spect
 *         state['transModel'] = self.transModel             # <<<<<<<<<<<<<<
 *         state['type'] = self.type
 *         state['Nblue'] = self.trans.Nblue
 */
  __pyx_t_1 = __pyx_v_self->transModel;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_transModel, __pyx_t_1) < 0)) __PYX_ERR(0, 1837, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1838
 *         state['spect'] = self.spect
 *         state['transModel'] = self.transModel
 *         state['type'] = self.type             # <<<<<<<<<<<<<<
 *         state['Nblue'] = self.trans.Nblue
 *         state['Nred'] = self.trans.Nred
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_type, __pyx_t_1) < 0)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1839
 *         state['transModel'] = self.transModel
 *         state['type'] = self.type
 *         state['Nblue'] = self.trans.Nblue             # <<<<<<<<<<<<<<
 *         state['Nred'] = self.trans.Nred
 *         transId = self.transModel.transId
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->trans.Nblue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1839, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Nblue, __pyx_t_1) < 0)) __PYX_ERR(0, 1839, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1840
 *         state['type'] = self.type
 *         state['Nblue'] = self.trans.Nblue
 *         state['Nred'] = self.trans.Nred             # <<<<<<<<<<<<<<
 *         transId = self.transModel.transId
 *         state['wavelength'] = self.spect.transWavelengths[transId]
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->trans.Nred); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1840, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Nred, __pyx_t_1) < 0)) __PYX_ERR(0, 1840, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1841
 *         state['Nblue'] = self.trans.Nblue
 *         state['Nred'] = self.trans.Nred
 *         transId = self.transModel.transId             # <<<<<<<<<<<<<<
 *         state['wavelength'] = self.spect.transWavelengths[transId]
 *         state['active'] = np.asarray(self.active)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_transId); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1841, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_transId = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1842
 *         state['Nred'] = self.trans.Nred
 *         transId = self.transModel.transId
 *         state['wavelength'] = self.spect.transWavelengths[transId]             # <<<<<<<<<<<<<<
 *         state['active'] = np.asarray(self.active)
 *         modelPops = self.atom.modelPops
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->spect, __pyx_n_s_transWavelengths); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_transId); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_wavelength, __pyx_t_2) < 0)) __PYX_ERR(0, 1842, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1843
 *         transId = self.transModel.transId
 *         state['wavelength'] = self.spect.transWavelengths[transId]
 *         state['active'] = np.asarray(self.active)             # <<<<<<<<<<<<<<
 *         modelPops = self.atom.modelPops
 *         state['Rij'] = modelPops.radiativeRates[(self.trans.i, self.trans.j)]
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_v_self->active.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1843, __pyx_L1_error)}
  __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->active, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_11lightweaver_10LwCompiled_i8, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_11lightweaver_10LwCompiled_i8, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_active, __pyx_t_2) < 0)) __PYX_ERR(0, 1843, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1844
 *         state['wavelength'] = self.spect.transWavelengths[transId]
 *         state['active'] = np.asarray(self.active)
 *         modelPops = self.atom.modelPops             # <<<<<<<<<<<<<<
 *         state['Rij'] = modelPops.radiativeRates[(self.trans.i, self.trans.j)]
 *         state['Rji'] = modelPops.radiativeRates[(self.trans.j, self.trans.i)]
 */
  __pyx_t_2 = __pyx_v_self->atom->modelPops;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_modelPops = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1845
 *         state['active'] = np.asarray(self.active)
 *         modelPops = self.atom.modelPops
 *         state['Rij'] = modelPops.radiativeRates[(self.trans.i, self.trans.j)]             # <<<<<<<<<<<<<<
 *         state['Rji'] = modelPops.radiativeRates[(self.trans.j, self.trans.i)]
 *         state['polarised'] = False
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_modelPops, __pyx_n_s_radiativeRates); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->trans.i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->trans.j); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
  __pyx_t_3 = 0;
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Rij, __pyx_t_1) < 0)) __PYX_ERR(0, 1845, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1846
 *         modelPops = self.atom.modelPops
 *         state['Rij'] = modelPops.radiativeRates[(self.trans.i, self.trans.j)]
 *         state['Rji'] = modelPops.radiativeRates[(self.trans.j, self.trans.i)]             # <<<<<<<<<<<<<<
 *         state['polarised'] = False
 *         if self.type == 'Line':
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_modelPops, __pyx_n_s_radiativeRates); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_self->trans.j); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->trans.i); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_4 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Rji, __pyx_t_2) < 0)) __PYX_ERR(0, 1846, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1847
 *         state['Rij'] = modelPops.radiativeRates[(self.trans.i, self.trans.j)]
 *         state['Rji'] = modelPops.radiativeRates[(self.trans.j, self.trans.i)]
 *         state['polarised'] = False             # <<<<<<<<<<<<<<
 *         if self.type == 'Line':
 *             state['phi'] = np.asarray(self.phi)
 */
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_polarised, Py_False) < 0)) __PYX_ERR(0, 1847, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":1848
 *         state['Rji'] = modelPops.radiativeRates[(self.trans.j, self.trans.i)]
 *         state['polarised'] = False
 *         if self.type == 'Line':             # <<<<<<<<<<<<<<
 *             state['phi'] = np.asarray(self.phi)
 *             try:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_type); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1848, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_Line, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 1848, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_5) {

    /* "Source/LwMiddleLayer.pyx":1849
 *         state['polarised'] = False
 *         if self.type == 'Line':
 *             state['phi'] = np.asarray(self.phi)             # <<<<<<<<<<<<<<
 *             try:
 *                 state['phiQ'] = np.asarray(self.phiQ)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_v_self->phi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1849, __pyx_L1_error)}
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->phi, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1849, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_phi, __pyx_t_2) < 0)) __PYX_ERR(0, 1849, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":1850
 *         if self.type == 'Line':
 *             state['phi'] = np.asarray(self.phi)
 *             try:             # <<<<<<<<<<<<<<
 *                 state['phiQ'] = np.asarray(self.phiQ)
 *                 state['phiU'] = np.asarray(self.phiU)
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);
      /*try:*/ {

        /* "Source/LwMiddleLayer.pyx":1851
 *             state['phi'] = np.asarray(self.phi)
 *             try:
 *                 state['phiQ'] = np.asarray(self.phiQ)             # <<<<<<<<<<<<<<
 *                 state['phiU'] = np.asarray(self.phiU)
 *                 state['phiV'] = np.asarray(self.phiV)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1851, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1851, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_v_self->phiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1851, __pyx_L4_error)}
        __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->phiQ, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1851, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1851, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_phiQ, __pyx_t_2) < 0)) __PYX_ERR(0, 1851, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1852
 *             try:
 *                 state['phiQ'] = np.asarray(self.phiQ)
 *                 state['phiU'] = np.asarray(self.phiU)             # <<<<<<<<<<<<<<
 *                 state['phiV'] = np.asarray(self.phiV)
 *                 state['psiQ'] = np.asarray(self.psiQ)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1852, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1852, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_v_self->phiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1852, __pyx_L4_error)}
        __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->phiU, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1852, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1852, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_phiU, __pyx_t_2) < 0)) __PYX_ERR(0, 1852, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1853
 *                 state['phiQ'] = np.asarray(self.phiQ)
 *                 state['phiU'] = np.asarray(self.phiU)
 *                 state['phiV'] = np.asarray(self.phiV)             # <<<<<<<<<<<<<<
 *                 state['psiQ'] = np.asarray(self.psiQ)
 *                 state['psiU'] = np.asarray(self.psiU)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1853, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1853, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_v_self->phiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1853, __pyx_L4_error)}
        __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->phiV, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1853, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1853, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_phiV, __pyx_t_2) < 0)) __PYX_ERR(0, 1853, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1854
 *                 state['phiU'] = np.asarray(self.phiU)
 *                 state['phiV'] = np.asarray(self.phiV)
 *                 state['psiQ'] = np.asarray(self.psiQ)             # <<<<<<<<<<<<<<
 *                 state['psiU'] = np.asarray(self.psiU)
 *                 state['psiV'] = np.asarray(self.psiV)
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1854, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1854, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_v_self->psiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1854, __pyx_L4_error)}
        __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->psiQ, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1854, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1854, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_psiQ, __pyx_t_2) < 0)) __PYX_ERR(0, 1854, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1855
 *                 state['phiV'] = np.asarray(self.phiV)
 *                 state['psiQ'] = np.asarray(self.psiQ)
 *                 state['psiU'] = np.asarray(self.psiU)             # <<<<<<<<<<<<<<
 *                 state['psiV'] = np.asarray(self.psiV)
 *                 state['polarised'] = True
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1855, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1855, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_v_self->psiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1855, __pyx_L4_error)}
        __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->psiU, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1855, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1855, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_psiU, __pyx_t_2) < 0)) __PYX_ERR(0, 1855, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1856
 *                 state['psiQ'] = np.asarray(self.psiQ)
 *                 state['psiU'] = np.asarray(self.psiU)
 *                 state['psiV'] = np.asarray(self.psiV)             # <<<<<<<<<<<<<<
 *                 state['polarised'] = True
 *             except AttributeError:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1856, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1856, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_v_self->psiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1856, __pyx_L4_error)}
        __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->psiV, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1856, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1856, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_psiV, __pyx_t_2) < 0)) __PYX_ERR(0, 1856, __pyx_L4_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1857
 *                 state['psiU'] = np.asarray(self.psiU)
 *                 state['psiV'] = np.asarray(self.psiV)
 *                 state['polarised'] = True             # <<<<<<<<<<<<<<
 *             except AttributeError:
 *                 state['phiQ'] = None
 */
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_polarised, Py_True) < 0)) __PYX_ERR(0, 1857, __pyx_L4_error)

        /* "Source/LwMiddleLayer.pyx":1850
 *         if self.type == 'Line':
 *             state['phi'] = np.asarray(self.phi)
 *             try:             # <<<<<<<<<<<<<<
 *                 state['phiQ'] = np.asarray(self.phiQ)
 *                 state['phiU'] = np.asarray(self.phiU)
 */
      }
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L9_try_end;
      __pyx_L4_error:;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Source/LwMiddleLayer.pyx":1858
 *                 state['psiV'] = np.asarray(self.psiV)
 *                 state['polarised'] = True
 *             except AttributeError:             # <<<<<<<<<<<<<<
 *                 state['phiQ'] = None
 *                 state['phiU'] = None
 */
      __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
      if (__pyx_t_9) {
        __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) __PYX_ERR(0, 1858, __pyx_L6_except_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_3);

        /* "Source/LwMiddleLayer.pyx":1859
 *                 state['polarised'] = True
 *             except AttributeError:
 *                 state['phiQ'] = None             # <<<<<<<<<<<<<<
 *                 state['phiU'] = None
 *                 state['phiV'] = None
 */
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_phiQ, Py_None) < 0)) __PYX_ERR(0, 1859, __pyx_L6_except_error)

        /* "Source/LwMiddleLayer.pyx":1860
 *             except AttributeError:
 *                 state['phiQ'] = None
 *                 state['phiU'] = None             # <<<<<<<<<<<<<<
 *                 state['phiV'] = None
 *                 state['psiQ'] = None
 */
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_phiU, Py_None) < 0)) __PYX_ERR(0, 1860, __pyx_L6_except_error)

        /* "Source/LwMiddleLayer.pyx":1861
 *                 state['phiQ'] = None
 *                 state['phiU'] = None
 *                 state['phiV'] = None             # <<<<<<<<<<<<<<
 *                 state['psiQ'] = None
 *                 state['psiU'] = None
 */
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_phiV, Py_None) < 0)) __PYX_ERR(0, 1861, __pyx_L6_except_error)

        /* "Source/LwMiddleLayer.pyx":1862
 *                 state['phiU'] = None
 *                 state['phiV'] = None
 *                 state['psiQ'] = None             # <<<<<<<<<<<<<<
 *                 state['psiU'] = None
 *                 state['psiV'] = None
 */
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_psiQ, Py_None) < 0)) __PYX_ERR(0, 1862, __pyx_L6_except_error)

        /* "Source/LwMiddleLayer.pyx":1863
 *                 state['phiV'] = None
 *                 state['psiQ'] = None
 *                 state['psiU'] = None             # <<<<<<<<<<<<<<
 *                 state['psiV'] = None
 * 
 */
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_psiU, Py_None) < 0)) __PYX_ERR(0, 1863, __pyx_L6_except_error)

        /* "Source/LwMiddleLayer.pyx":1864
 *                 state['psiQ'] = None
 *                 state['psiU'] = None
 *                 state['psiV'] = None             # <<<<<<<<<<<<<<
 * 
 *             state['wphi'] = np.asarray(self.wphi)
 */
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_psiV, Py_None) < 0)) __PYX_ERR(0, 1864, __pyx_L6_except_error)
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        goto __pyx_L5_exception_handled;
      }
      goto __pyx_L6_except_error;
      __pyx_L6_except_error:;

      /* "Source/LwMiddleLayer.pyx":1850
 *         if self.type == 'Line':
 *             state['phi'] = np.asarray(self.phi)
 *             try:             # <<<<<<<<<<<<<<
 *                 state['phiQ'] = np.asarray(self.phiQ)
 *                 state['phiU'] = np.asarray(self.phiU)
 */
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
      goto __pyx_L1_error;
      __pyx_L5_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_7, __pyx_t_8);
      __pyx_L9_try_end:;
    }

    /* "Source/LwMiddleLayer.pyx":1866
 *                 state['psiV'] = None
 * 
 *             state['wphi'] = np.asarray(self.wphi)             # <<<<<<<<<<<<<<
 *             state['Qelast'] = np.asarray(self.Qelast)
 *             state['aDamp'] = np.asarray(self.aDamp)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_v_self->wphi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1866, __pyx_L1_error)}
    __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->wphi, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_wphi, __pyx_t_3) < 0)) __PYX_ERR(0, 1866, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":1867
 * 
 *             state['wphi'] = np.asarray(self.wphi)
 *             state['Qelast'] = np.asarray(self.Qelast)             # <<<<<<<<<<<<<<
 *             state['aDamp'] = np.asarray(self.aDamp)
 *             try:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1867, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1867, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_v_self->Qelast.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1867, __pyx_L1_error)}
    __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->Qelast, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1867, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1867, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Qelast, __pyx_t_3) < 0)) __PYX_ERR(0, 1867, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":1868
 *             state['wphi'] = np.asarray(self.wphi)
 *             state['Qelast'] = np.asarray(self.Qelast)
 *             state['aDamp'] = np.asarray(self.aDamp)             # <<<<<<<<<<<<<<
 *             try:
 *                 state['rhoPrd'] = np.asarray(self.rhoPrd)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1868, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1868, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_v_self->aDamp.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1868, __pyx_L1_error)}
    __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->aDamp, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1868, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1868, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_aDamp, __pyx_t_3) < 0)) __PYX_ERR(0, 1868, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":1869
 *             state['Qelast'] = np.asarray(self.Qelast)
 *             state['aDamp'] = np.asarray(self.aDamp)
 *             try:             # <<<<<<<<<<<<<<
 *                 state['rhoPrd'] = np.asarray(self.rhoPrd)
 *             except AttributeError:
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_6);
      /*try:*/ {

        /* "Source/LwMiddleLayer.pyx":1870
 *             state['aDamp'] = np.asarray(self.aDamp)
 *             try:
 *                 state['rhoPrd'] = np.asarray(self.rhoPrd)             # <<<<<<<<<<<<<<
 *             except AttributeError:
 *                 state['rhoPrd'] = None
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1870, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1870, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_v_self->rhoPrd.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1870, __pyx_L12_error)}
        __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->rhoPrd, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1870, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_1, function);
          }
        }
        __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1870, __pyx_L12_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_rhoPrd, __pyx_t_3) < 0)) __PYX_ERR(0, 1870, __pyx_L12_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "Source/LwMiddleLayer.pyx":1869
 *             state['Qelast'] = np.asarray(self.Qelast)
 *             state['aDamp'] = np.asarray(self.aDamp)
 *             try:             # <<<<<<<<<<<<<<
 *                 state['rhoPrd'] = np.asarray(self.rhoPrd)
 *             except AttributeError:
 */
      }
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      goto __pyx_L17_try_end;
      __pyx_L12_error:;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Source/LwMiddleLayer.pyx":1871
 *             try:
 *                 state['rhoPrd'] = np.asarray(self.rhoPrd)
 *             except AttributeError:             # <<<<<<<<<<<<<<
 *                 state['rhoPrd'] = None
 * 
 */
      __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
      if (__pyx_t_9) {
        __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_1, &__pyx_t_2) < 0) __PYX_ERR(0, 1871, __pyx_L14_except_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_2);

        /* "Source/LwMiddleLayer.pyx":1872
 *                 state['rhoPrd'] = np.asarray(self.rhoPrd)
 *             except AttributeError:
 *                 state['rhoPrd'] = None             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
        if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_rhoPrd, Py_None) < 0)) __PYX_ERR(0, 1872, __pyx_L14_except_error)
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        goto __pyx_L13_exception_handled;
      }
      goto __pyx_L14_except_error;
      __pyx_L14_except_error:;

      /* "Source/LwMiddleLayer.pyx":1869
 *             state['Qelast'] = np.asarray(self.Qelast)
 *             state['aDamp'] = np.asarray(self.aDamp)
 *             try:             # <<<<<<<<<<<<<<
 *                 state['rhoPrd'] = np.asarray(self.rhoPrd)
 *             except AttributeError:
 */
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_7, __pyx_t_6);
      goto __pyx_L1_error;
      __pyx_L13_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_XGIVEREF(__pyx_t_6);
      __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_7, __pyx_t_6);
      __pyx_L17_try_end:;
    }

    /* "Source/LwMiddleLayer.pyx":1848
 *         state['Rji'] = modelPops.radiativeRates[(self.trans.j, self.trans.i)]
 *         state['polarised'] = False
 *         if self.type == 'Line':             # <<<<<<<<<<<<<<
 *             state['phi'] = np.asarray(self.phi)
 *             try:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":1875
 * 
 *         else:
 *             state['alpha'] = np.asarray(self.alpha)             # <<<<<<<<<<<<<<
 *         return state
 * 
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1875, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1875, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_v_self->alpha.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1875, __pyx_L1_error)}
    __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->alpha, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1875, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1875, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_alpha, __pyx_t_2) < 0)) __PYX_ERR(0, 1875, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":1876
 *         else:
 *             state['alpha'] = np.asarray(self.alpha)
 *         return state             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, state):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_state);
  __pyx_r = __pyx_v_state;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1832
 *         self.trans.Rji = f64_view(self.Rji)
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['atmos'] = self.atmos
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_transId);
  __Pyx_XDECREF(__pyx_v_modelPops);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1878
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.transModel = state['transModel']
 *         trans = self.transModel
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_v_trans = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a = 0;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_memviewslice __pyx_t_2 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_3;
  int __pyx_t_4;
  bool __pyx_t_5;
  int __pyx_t_6;
  __pyx_t_8CmoArray_f64 __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  __Pyx_memviewslice __pyx_t_10 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View4D __pyx_t_11;
  int __pyx_t_12;
  __Pyx_memviewslice __pyx_t_13 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_14;
  __Pyx_memviewslice __pyx_t_15 = { 0, 0, { 0 }, { 0 }, { 0 } };
  Py_ssize_t __pyx_t_16;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":1879
 * 
 *     def __setstate__(self, state):
 *         self.transModel = state['transModel']             # <<<<<<<<<<<<<<
 *         trans = self.transModel
 *         cdef LwAtmosphere a = state['atmos']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_transModel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->transModel);
  __Pyx_DECREF(__pyx_v_self->transModel);
  __pyx_v_self->transModel = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1880
 *     def __setstate__(self, state):
 *         self.transModel = state['transModel']
 *         trans = self.transModel             # <<<<<<<<<<<<<<
 *         cdef LwAtmosphere a = state['atmos']
 *         self.atmos = a
 */
  __pyx_t_1 = __pyx_v_self->transModel;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_trans = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1881
 *         self.transModel = state['transModel']
 *         trans = self.transModel
 *         cdef LwAtmosphere a = state['atmos']             # <<<<<<<<<<<<<<
 *         self.atmos = a
 *         cdef LwAtom atom = state['atom']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_atmos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1881, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere))))) __PYX_ERR(0, 1881, __pyx_L1_error)
  __pyx_v_a = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1882
 *         trans = self.transModel
 *         cdef LwAtmosphere a = state['atmos']
 *         self.atmos = a             # <<<<<<<<<<<<<<
 *         cdef LwAtom atom = state['atom']
 *         self.atom = atom
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_a));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_a));
  __Pyx_GOTREF(__pyx_v_self->atmos);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atmos));
  __pyx_v_self->atmos = __pyx_v_a;

  /* "Source/LwMiddleLayer.pyx":1883
 *         cdef LwAtmosphere a = state['atmos']
 *         self.atmos = a
 *         cdef LwAtom atom = state['atom']             # <<<<<<<<<<<<<<
 *         self.atom = atom
 *         self.spect = state['spect']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_atom); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1883, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 1883, __pyx_L1_error)
  __pyx_v_atom = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1884
 *         self.atmos = a
 *         cdef LwAtom atom = state['atom']
 *         self.atom = atom             # <<<<<<<<<<<<<<
 *         self.spect = state['spect']
 *         self.wavelength = state['wavelength']
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_atom));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_atom));
  __Pyx_GOTREF(__pyx_v_self->atom);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atom));
  __pyx_v_self->atom = __pyx_v_atom;

  /* "Source/LwMiddleLayer.pyx":1885
 *         cdef LwAtom atom = state['atom']
 *         self.atom = atom
 *         self.spect = state['spect']             # <<<<<<<<<<<<<<
 *         self.wavelength = state['wavelength']
 *         self.trans.wavelength = f64_view(self.wavelength)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_spect); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1885, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->spect);
  __Pyx_DECREF(__pyx_v_self->spect);
  __pyx_v_self->spect = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1886
 *         self.atom = atom
 *         self.spect = state['spect']
 *         self.wavelength = state['wavelength']             # <<<<<<<<<<<<<<
 *         self.trans.wavelength = f64_view(self.wavelength)
 *         self.trans.i = trans.i
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1886, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1887
 *         self.spect = state['spect']
 *         self.wavelength = state['wavelength']
 *         self.trans.wavelength = f64_view(self.wavelength)             # <<<<<<<<<<<<<<
 *         self.trans.i = trans.i
 *         self.trans.j = trans.j
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1887, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wavelength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1887, __pyx_L1_error)
  }
  __pyx_v_self->trans.wavelength = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":1888
 *         self.wavelength = state['wavelength']
 *         self.trans.wavelength = f64_view(self.wavelength)
 *         self.trans.i = trans.i             # <<<<<<<<<<<<<<
 *         self.trans.j = trans.j
 *         self.trans.Nblue = state['Nblue']
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1888, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1888, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->trans.i = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1889
 *         self.trans.wavelength = f64_view(self.wavelength)
 *         self.trans.i = trans.i
 *         self.trans.j = trans.j             # <<<<<<<<<<<<<<
 *         self.trans.Nblue = state['Nblue']
 *         self.trans.Nred = state['Nred']
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_j); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1889, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1889, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->trans.j = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1890
 *         self.trans.i = trans.i
 *         self.trans.j = trans.j
 *         self.trans.Nblue = state['Nblue']             # <<<<<<<<<<<<<<
 *         self.trans.Nred = state['Nred']
 *         self.trans.polarised = state['polarised']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Nblue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1890, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->trans.Nblue = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1891
 *         self.trans.j = trans.j
 *         self.trans.Nblue = state['Nblue']
 *         self.trans.Nred = state['Nred']             # <<<<<<<<<<<<<<
 *         self.trans.polarised = state['polarised']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Nred); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1891, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1891, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->trans.Nred = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":1892
 *         self.trans.Nblue = state['Nblue']
 *         self.trans.Nred = state['Nred']
 *         self.trans.polarised = state['polarised']             # <<<<<<<<<<<<<<
 * 
 *         if state['type'] == 'Line':
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_polarised); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1892, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_5 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1892, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->trans.polarised = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":1894
 *         self.trans.polarised = state['polarised']
 * 
 *         if state['type'] == 'Line':             # <<<<<<<<<<<<<<
 *             self.trans.type = LINE
 *             self.trans.Aji = trans.Aji
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1894, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_Line, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1894, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":1895
 * 
 *         if state['type'] == 'Line':
 *             self.trans.type = LINE             # <<<<<<<<<<<<<<
 *             self.trans.Aji = trans.Aji
 *             self.trans.Bji = trans.Bji
 */
    __pyx_v_self->trans.type = LINE;

    /* "Source/LwMiddleLayer.pyx":1896
 *         if state['type'] == 'Line':
 *             self.trans.type = LINE
 *             self.trans.Aji = trans.Aji             # <<<<<<<<<<<<<<
 *             self.trans.Bji = trans.Bji
 *             self.trans.Bij = trans.Bij
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_Aji); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1896, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1896, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_self->trans.Aji = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":1897
 *             self.trans.type = LINE
 *             self.trans.Aji = trans.Aji
 *             self.trans.Bji = trans.Bji             # <<<<<<<<<<<<<<
 *             self.trans.Bij = trans.Bij
 *             self.trans.lambda0 = trans.lambda0
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_Bji); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1897, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_self->trans.Bji = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":1898
 *             self.trans.Aji = trans.Aji
 *             self.trans.Bji = trans.Bji
 *             self.trans.Bij = trans.Bij             # <<<<<<<<<<<<<<
 *             self.trans.lambda0 = trans.lambda0
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_Bij); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1898, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_self->trans.Bij = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":1899
 *             self.trans.Bji = trans.Bji
 *             self.trans.Bij = trans.Bij
 *             self.trans.lambda0 = trans.lambda0             # <<<<<<<<<<<<<<
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0
 *             self.Qelast = state['Qelast']
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_lambda0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1899, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_self->trans.lambda0 = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":1900
 *             self.trans.Bij = trans.Bij
 *             self.trans.lambda0 = trans.lambda0
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0             # <<<<<<<<<<<<<<
 *             self.Qelast = state['Qelast']
 *             self.aDamp = state['aDamp']
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_Const); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_CLight); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->trans.lambda0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_PyNumber_Divide(__pyx_t_8, __pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_9); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1900, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_self->trans.dopplerWidth = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":1901
 *             self.trans.lambda0 = trans.lambda0
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0
 *             self.Qelast = state['Qelast']             # <<<<<<<<<<<<<<
 *             self.aDamp = state['aDamp']
 *             self.trans.Qelast = f64_view(self.Qelast)
 */
    __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Qelast); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1901, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1901, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->Qelast, 0);
    __pyx_v_self->Qelast = __pyx_t_2;
    __pyx_t_2.memview = NULL;
    __pyx_t_2.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1902
 *             self.trans.dopplerWidth = Const.CLight / self.trans.lambda0
 *             self.Qelast = state['Qelast']
 *             self.aDamp = state['aDamp']             # <<<<<<<<<<<<<<
 *             self.trans.Qelast = f64_view(self.Qelast)
 *             self.trans.aDamp = f64_view(self.aDamp)
 */
    __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_aDamp); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1902, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1902, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->aDamp, 0);
    __pyx_v_self->aDamp = __pyx_t_2;
    __pyx_t_2.memview = NULL;
    __pyx_t_2.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1903
 *             self.Qelast = state['Qelast']
 *             self.aDamp = state['aDamp']
 *             self.trans.Qelast = f64_view(self.Qelast)             # <<<<<<<<<<<<<<
 *             self.trans.aDamp = f64_view(self.aDamp)
 *             self.phi = state['phi']
 */
    if (unlikely(!__pyx_v_self->Qelast.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1903, __pyx_L1_error)}
    try {
      __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->Qelast);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1903, __pyx_L1_error)
    }
    __pyx_v_self->trans.Qelast = __pyx_t_3;

    /* "Source/LwMiddleLayer.pyx":1904
 *             self.aDamp = state['aDamp']
 *             self.trans.Qelast = f64_view(self.Qelast)
 *             self.trans.aDamp = f64_view(self.aDamp)             # <<<<<<<<<<<<<<
 *             self.phi = state['phi']
 *             self.wphi = state['wphi']
 */
    if (unlikely(!__pyx_v_self->aDamp.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1904, __pyx_L1_error)}
    try {
      __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->aDamp);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1904, __pyx_L1_error)
    }
    __pyx_v_self->trans.aDamp = __pyx_t_3;

    /* "Source/LwMiddleLayer.pyx":1905
 *             self.trans.Qelast = f64_view(self.Qelast)
 *             self.trans.aDamp = f64_view(self.aDamp)
 *             self.phi = state['phi']             # <<<<<<<<<<<<<<
 *             self.wphi = state['wphi']
 *             self.trans.phi = f64_view_4(self.phi)
 */
    __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_phi); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1905, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1905, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->phi, 0);
    __pyx_v_self->phi = __pyx_t_10;
    __pyx_t_10.memview = NULL;
    __pyx_t_10.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1906
 *             self.trans.aDamp = f64_view(self.aDamp)
 *             self.phi = state['phi']
 *             self.wphi = state['wphi']             # <<<<<<<<<<<<<<
 *             self.trans.phi = f64_view_4(self.phi)
 *             self.trans.wphi = f64_view(self.wphi)
 */
    __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_wphi); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1906, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1906, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->wphi, 0);
    __pyx_v_self->wphi = __pyx_t_2;
    __pyx_t_2.memview = NULL;
    __pyx_t_2.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1907
 *             self.phi = state['phi']
 *             self.wphi = state['wphi']
 *             self.trans.phi = f64_view_4(self.phi)             # <<<<<<<<<<<<<<
 *             self.trans.wphi = f64_view(self.wphi)
 *             if state['rhoPrd'] is not None:
 */
    if (unlikely(!__pyx_v_self->phi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1907, __pyx_L1_error)}
    try {
      __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->phi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1907, __pyx_L1_error)
    }
    __pyx_v_self->trans.phi = __pyx_t_11;

    /* "Source/LwMiddleLayer.pyx":1908
 *             self.wphi = state['wphi']
 *             self.trans.phi = f64_view_4(self.phi)
 *             self.trans.wphi = f64_view(self.wphi)             # <<<<<<<<<<<<<<
 *             if state['rhoPrd'] is not None:
 *                 self.rhoPrd = state['rhoPrd']
 */
    if (unlikely(!__pyx_v_self->wphi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1908, __pyx_L1_error)}
    try {
      __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wphi);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1908, __pyx_L1_error)
    }
    __pyx_v_self->trans.wphi = __pyx_t_3;

    /* "Source/LwMiddleLayer.pyx":1909
 *             self.trans.phi = f64_view_4(self.phi)
 *             self.trans.wphi = f64_view(self.wphi)
 *             if state['rhoPrd'] is not None:             # <<<<<<<<<<<<<<
 *                 self.rhoPrd = state['rhoPrd']
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 */
    __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_rhoPrd); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1909, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_6 = (__pyx_t_9 != Py_None);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_12 = (__pyx_t_6 != 0);
    if (__pyx_t_12) {

      /* "Source/LwMiddleLayer.pyx":1910
 *             self.trans.wphi = f64_view(self.wphi)
 *             if state['rhoPrd'] is not None:
 *                 self.rhoPrd = state['rhoPrd']             # <<<<<<<<<<<<<<
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 * 
 */
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_rhoPrd); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1910, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_13 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_13.memview)) __PYX_ERR(0, 1910, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->rhoPrd, 0);
      __pyx_v_self->rhoPrd = __pyx_t_13;
      __pyx_t_13.memview = NULL;
      __pyx_t_13.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1911
 *             if state['rhoPrd'] is not None:
 *                 self.rhoPrd = state['rhoPrd']
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)             # <<<<<<<<<<<<<<
 * 
 *             if state['polarised']:
 */
      if (unlikely(!__pyx_v_self->rhoPrd.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1911, __pyx_L1_error)}
      try {
        __pyx_t_14 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->rhoPrd);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1911, __pyx_L1_error)
      }
      __pyx_v_self->trans.rhoPrd = __pyx_t_14;

      /* "Source/LwMiddleLayer.pyx":1909
 *             self.trans.phi = f64_view_4(self.phi)
 *             self.trans.wphi = f64_view(self.wphi)
 *             if state['rhoPrd'] is not None:             # <<<<<<<<<<<<<<
 *                 self.rhoPrd = state['rhoPrd']
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 */
    }

    /* "Source/LwMiddleLayer.pyx":1913
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 * 
 *             if state['polarised']:             # <<<<<<<<<<<<<<
 *                 self.phiQ = state['phiQ']
 *                 self.phiU = state['phiU']
 */
    __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_polarised); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1913, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 1913, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (__pyx_t_12) {

      /* "Source/LwMiddleLayer.pyx":1914
 * 
 *             if state['polarised']:
 *                 self.phiQ = state['phiQ']             # <<<<<<<<<<<<<<
 *                 self.phiU = state['phiU']
 *                 self.phiV = state['phiV']
 */
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_phiQ); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1914, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1914, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->phiQ, 0);
      __pyx_v_self->phiQ = __pyx_t_10;
      __pyx_t_10.memview = NULL;
      __pyx_t_10.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1915
 *             if state['polarised']:
 *                 self.phiQ = state['phiQ']
 *                 self.phiU = state['phiU']             # <<<<<<<<<<<<<<
 *                 self.phiV = state['phiV']
 *                 self.psiQ = state['psiQ']
 */
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_phiU); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1915, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1915, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->phiU, 0);
      __pyx_v_self->phiU = __pyx_t_10;
      __pyx_t_10.memview = NULL;
      __pyx_t_10.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1916
 *                 self.phiQ = state['phiQ']
 *                 self.phiU = state['phiU']
 *                 self.phiV = state['phiV']             # <<<<<<<<<<<<<<
 *                 self.psiQ = state['psiQ']
 *                 self.psiU = state['psiU']
 */
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_phiV); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1916, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1916, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->phiV, 0);
      __pyx_v_self->phiV = __pyx_t_10;
      __pyx_t_10.memview = NULL;
      __pyx_t_10.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1917
 *                 self.phiU = state['phiU']
 *                 self.phiV = state['phiV']
 *                 self.psiQ = state['psiQ']             # <<<<<<<<<<<<<<
 *                 self.psiU = state['psiU']
 *                 self.psiV = state['psiV']
 */
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_psiQ); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1917, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1917, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->psiQ, 0);
      __pyx_v_self->psiQ = __pyx_t_10;
      __pyx_t_10.memview = NULL;
      __pyx_t_10.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1918
 *                 self.phiV = state['phiV']
 *                 self.psiQ = state['psiQ']
 *                 self.psiU = state['psiU']             # <<<<<<<<<<<<<<
 *                 self.psiV = state['psiV']
 *                 self.trans.phiQ = f64_view_4(self.phiQ)
 */
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_psiU); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1918, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1918, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->psiU, 0);
      __pyx_v_self->psiU = __pyx_t_10;
      __pyx_t_10.memview = NULL;
      __pyx_t_10.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1919
 *                 self.psiQ = state['psiQ']
 *                 self.psiU = state['psiU']
 *                 self.psiV = state['psiV']             # <<<<<<<<<<<<<<
 *                 self.trans.phiQ = f64_view_4(self.phiQ)
 *                 self.trans.phiU = f64_view_4(self.phiU)
 */
      __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_psiV); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1919, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 1919, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->psiV, 0);
      __pyx_v_self->psiV = __pyx_t_10;
      __pyx_t_10.memview = NULL;
      __pyx_t_10.data = NULL;

      /* "Source/LwMiddleLayer.pyx":1920
 *                 self.psiU = state['psiU']
 *                 self.psiV = state['psiV']
 *                 self.trans.phiQ = f64_view_4(self.phiQ)             # <<<<<<<<<<<<<<
 *                 self.trans.phiU = f64_view_4(self.phiU)
 *                 self.trans.phiV = f64_view_4(self.phiV)
 */
      if (unlikely(!__pyx_v_self->phiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1920, __pyx_L1_error)}
      try {
        __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->phiQ);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1920, __pyx_L1_error)
      }
      __pyx_v_self->trans.phiQ = __pyx_t_11;

      /* "Source/LwMiddleLayer.pyx":1921
 *                 self.psiV = state['psiV']
 *                 self.trans.phiQ = f64_view_4(self.phiQ)
 *                 self.trans.phiU = f64_view_4(self.phiU)             # <<<<<<<<<<<<<<
 *                 self.trans.phiV = f64_view_4(self.phiV)
 *                 self.trans.psiQ = f64_view_4(self.psiQ)
 */
      if (unlikely(!__pyx_v_self->phiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1921, __pyx_L1_error)}
      try {
        __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->phiU);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1921, __pyx_L1_error)
      }
      __pyx_v_self->trans.phiU = __pyx_t_11;

      /* "Source/LwMiddleLayer.pyx":1922
 *                 self.trans.phiQ = f64_view_4(self.phiQ)
 *                 self.trans.phiU = f64_view_4(self.phiU)
 *                 self.trans.phiV = f64_view_4(self.phiV)             # <<<<<<<<<<<<<<
 *                 self.trans.psiQ = f64_view_4(self.psiQ)
 *                 self.trans.psiU = f64_view_4(self.psiU)
 */
      if (unlikely(!__pyx_v_self->phiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1922, __pyx_L1_error)}
      try {
        __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->phiV);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1922, __pyx_L1_error)
      }
      __pyx_v_self->trans.phiV = __pyx_t_11;

      /* "Source/LwMiddleLayer.pyx":1923
 *                 self.trans.phiU = f64_view_4(self.phiU)
 *                 self.trans.phiV = f64_view_4(self.phiV)
 *                 self.trans.psiQ = f64_view_4(self.psiQ)             # <<<<<<<<<<<<<<
 *                 self.trans.psiU = f64_view_4(self.psiU)
 *                 self.trans.psiV = f64_view_4(self.psiV)
 */
      if (unlikely(!__pyx_v_self->psiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1923, __pyx_L1_error)}
      try {
        __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->psiQ);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1923, __pyx_L1_error)
      }
      __pyx_v_self->trans.psiQ = __pyx_t_11;

      /* "Source/LwMiddleLayer.pyx":1924
 *                 self.trans.phiV = f64_view_4(self.phiV)
 *                 self.trans.psiQ = f64_view_4(self.psiQ)
 *                 self.trans.psiU = f64_view_4(self.psiU)             # <<<<<<<<<<<<<<
 *                 self.trans.psiV = f64_view_4(self.psiV)
 *         else:
 */
      if (unlikely(!__pyx_v_self->psiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1924, __pyx_L1_error)}
      try {
        __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->psiU);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1924, __pyx_L1_error)
      }
      __pyx_v_self->trans.psiU = __pyx_t_11;

      /* "Source/LwMiddleLayer.pyx":1925
 *                 self.trans.psiQ = f64_view_4(self.psiQ)
 *                 self.trans.psiU = f64_view_4(self.psiU)
 *                 self.trans.psiV = f64_view_4(self.psiV)             # <<<<<<<<<<<<<<
 *         else:
 *             self.trans.type = CONTINUUM
 */
      if (unlikely(!__pyx_v_self->psiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1925, __pyx_L1_error)}
      try {
        __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->psiV);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 1925, __pyx_L1_error)
      }
      __pyx_v_self->trans.psiV = __pyx_t_11;

      /* "Source/LwMiddleLayer.pyx":1913
 *                 self.trans.rhoPrd = f64_view_2(self.rhoPrd)
 * 
 *             if state['polarised']:             # <<<<<<<<<<<<<<
 *                 self.phiQ = state['phiQ']
 *                 self.phiU = state['phiU']
 */
    }

    /* "Source/LwMiddleLayer.pyx":1894
 *         self.trans.polarised = state['polarised']
 * 
 *         if state['type'] == 'Line':             # <<<<<<<<<<<<<<
 *             self.trans.type = LINE
 *             self.trans.Aji = trans.Aji
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":1927
 *                 self.trans.psiV = f64_view_4(self.psiV)
 *         else:
 *             self.trans.type = CONTINUUM             # <<<<<<<<<<<<<<
 *             self.alpha = state['alpha']
 *             self.trans.alpha = f64_view(self.alpha)
 */
  /*else*/ {
    __pyx_v_self->trans.type = CONTINUUM;

    /* "Source/LwMiddleLayer.pyx":1928
 *         else:
 *             self.trans.type = CONTINUUM
 *             self.alpha = state['alpha']             # <<<<<<<<<<<<<<
 *             self.trans.alpha = f64_view(self.alpha)
 *             self.trans.dopplerWidth = 1.0
 */
    __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_alpha); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1928, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->alpha, 0);
    __pyx_v_self->alpha = __pyx_t_2;
    __pyx_t_2.memview = NULL;
    __pyx_t_2.data = NULL;

    /* "Source/LwMiddleLayer.pyx":1929
 *             self.trans.type = CONTINUUM
 *             self.alpha = state['alpha']
 *             self.trans.alpha = f64_view(self.alpha)             # <<<<<<<<<<<<<<
 *             self.trans.dopplerWidth = 1.0
 *             self.trans.lambda0 = trans.lambda0
 */
    if (unlikely(!__pyx_v_self->alpha.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1929, __pyx_L1_error)}
    try {
      __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->alpha);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1929, __pyx_L1_error)
    }
    __pyx_v_self->trans.alpha = __pyx_t_3;

    /* "Source/LwMiddleLayer.pyx":1930
 *             self.alpha = state['alpha']
 *             self.trans.alpha = f64_view(self.alpha)
 *             self.trans.dopplerWidth = 1.0             # <<<<<<<<<<<<<<
 *             self.trans.lambda0 = trans.lambda0
 * 
 */
    __pyx_v_self->trans.dopplerWidth = 1.0;

    /* "Source/LwMiddleLayer.pyx":1931
 *             self.trans.alpha = f64_view(self.alpha)
 *             self.trans.dopplerWidth = 1.0
 *             self.trans.lambda0 = trans.lambda0             # <<<<<<<<<<<<<<
 * 
 *         self.active = state['active']
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_trans, __pyx_n_s_lambda0); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1931, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_9); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1931, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_v_self->trans.lambda0 = __pyx_t_7;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":1933
 *             self.trans.lambda0 = trans.lambda0
 * 
 *         self.active = state['active']             # <<<<<<<<<<<<<<
 *         self.trans.active = BoolView(<bool_t*>&self.active[0], self.active.shape[0])
 * 
 */
  __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_active); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1933, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_15 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_11lightweaver_10LwCompiled_i8(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_15.memview)) __PYX_ERR(0, 1933, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->active, 0);
  __pyx_v_self->active = __pyx_t_15;
  __pyx_t_15.memview = NULL;
  __pyx_t_15.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1934
 * 
 *         self.active = state['active']
 *         self.trans.active = BoolView(<bool_t*>&self.active[0], self.active.shape[0])             # <<<<<<<<<<<<<<
 * 
 *         self.Rij = state['Rij']
 */
  if (unlikely(!__pyx_v_self->active.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1934, __pyx_L1_error)}
  __pyx_t_16 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_16 < 0) {
    __pyx_t_16 += __pyx_v_self->active.shape[0];
    if (unlikely(__pyx_t_16 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_16 >= __pyx_v_self->active.shape[0])) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(0, 1934, __pyx_L1_error)
  }
  if (unlikely(!__pyx_v_self->active.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1934, __pyx_L1_error)}
  __pyx_v_self->trans.active = __pyx_t_11lightweaver_10LwCompiled_BoolView(((bool *)(&(*((__pyx_t_11lightweaver_10LwCompiled_i8 *) ( /* dim=0 */ ((char *) (((__pyx_t_11lightweaver_10LwCompiled_i8 *) __pyx_v_self->active.data) + __pyx_t_16)) ))))), (__pyx_v_self->active.shape[0]));

  /* "Source/LwMiddleLayer.pyx":1936
 *         self.trans.active = BoolView(<bool_t*>&self.active[0], self.active.shape[0])
 * 
 *         self.Rij = state['Rij']             # <<<<<<<<<<<<<<
 *         self.Rji = state['Rji']
 *         self.trans.Rij = f64_view(self.Rij)
 */
  __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Rij); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1936, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->Rij, 0);
  __pyx_v_self->Rij = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1937
 * 
 *         self.Rij = state['Rij']
 *         self.Rji = state['Rji']             # <<<<<<<<<<<<<<
 *         self.trans.Rij = f64_view(self.Rij)
 *         self.trans.Rji = f64_view(self.Rji)
 */
  __pyx_t_9 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Rji); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_9, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 1937, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->Rji, 0);
  __pyx_v_self->Rji = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":1938
 *         self.Rij = state['Rij']
 *         self.Rji = state['Rji']
 *         self.trans.Rij = f64_view(self.Rij)             # <<<<<<<<<<<<<<
 *         self.trans.Rji = f64_view(self.Rji)
 * 
 */
  if (unlikely(!__pyx_v_self->Rij.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1938, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->Rij);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1938, __pyx_L1_error)
  }
  __pyx_v_self->trans.Rij = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":1939
 *         self.Rji = state['Rji']
 *         self.trans.Rij = f64_view(self.Rij)
 *         self.trans.Rji = f64_view(self.Rji)             # <<<<<<<<<<<<<<
 * 
 *     def load_rates_prd_from_state(self, prevState, preserveProfiles=True):
 */
  if (unlikely(!__pyx_v_self->Rji.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1939, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->Rji);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1939, __pyx_L1_error)
  }
  __pyx_v_self->trans.Rji = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":1878
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.transModel = state['transModel']
 *         trans = self.transModel
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_2, 1);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __PYX_XDEC_MEMVIEW(&__pyx_t_10, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_13, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_15, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_trans);
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1941
 *         self.trans.Rji = f64_view(self.Rji)
 * 
 *     def load_rates_prd_from_state(self, prevState, preserveProfiles=True):             # <<<<<<<<<<<<<<
 * 
 *         np.asarray(self.Rij)[:] = prevState['Rij']
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_7load_rates_prd_from_state(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_7load_rates_prd_from_state(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_prevState = 0;
  PyObject *__pyx_v_preserveProfiles = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_rates_prd_from_state (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prevState,&__pyx_n_s_preserveProfiles,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_prevState)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_preserveProfiles);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "load_rates_prd_from_state") < 0)) __PYX_ERR(0, 1941, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prevState = values[0];
    __pyx_v_preserveProfiles = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_rates_prd_from_state", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1941, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.load_rates_prd_from_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6load_rates_prd_from_state(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self), __pyx_v_prevState, __pyx_v_preserveProfiles);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6load_rates_prd_from_state(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_prevState, PyObject *__pyx_v_preserveProfiles) {
  int __pyx_v_k;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  long __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_rates_prd_from_state", 0);

  /* "Source/LwMiddleLayer.pyx":1943
 *     def load_rates_prd_from_state(self, prevState, preserveProfiles=True):
 * 
 *         np.asarray(self.Rij)[:] = prevState['Rij']             # <<<<<<<<<<<<<<
 *         np.asarray(self.Rji)[:] = prevState['Rji']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_Rij); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->Rij.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1943, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->Rij, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_PyObject_SetSlice(__pyx_t_2, __pyx_t_1, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1944
 * 
 *         np.asarray(self.Rij)[:] = prevState['Rij']
 *         np.asarray(self.Rji)[:] = prevState['Rji']             # <<<<<<<<<<<<<<
 * 
 *         if self.type == 'Continuum':
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_Rji); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->Rji.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1944, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->Rji, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetSlice(__pyx_t_2, __pyx_t_1, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1944, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1946
 *         np.asarray(self.Rji)[:] = prevState['Rji']
 * 
 *         if self.type == 'Continuum':             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1946, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_Continuum, Py_EQ)); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 1946, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":1947
 * 
 *         if self.type == 'Continuum':
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef int k
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":1946
 *         np.asarray(self.Rji)[:] = prevState['Rji']
 * 
 *         if self.type == 'Continuum':             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":1950
 * 
 *         cdef int k
 *         if self.wavelength.shape == prevState['wavelength'].shape \             # <<<<<<<<<<<<<<
 *            and np.all(self.wavelength == prevState['wavelength']):
 *             if prevState['rhoPrd'] is not None:
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1950, __pyx_L1_error)}
  __pyx_t_1 = __Pyx_carray_to_py_Py_ssize_t(__pyx_v_self->wavelength.shape, 8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_wavelength); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_shape); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1950, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (__pyx_t_7) {
  } else {
    __pyx_t_6 = __pyx_t_7;
    goto __pyx_L5_bool_binop_done;
  }

  /* "Source/LwMiddleLayer.pyx":1951
 *         cdef int k
 *         if self.wavelength.shape == prevState['wavelength'].shape \
 *            and np.all(self.wavelength == prevState['wavelength']):             # <<<<<<<<<<<<<<
 *             if prevState['rhoPrd'] is not None:
 *                 np.asarray(self.rhoPrd)[:] = prevState['rhoPrd']
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_all); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1951, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_wavelength); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_t_4, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1951, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = __pyx_t_7;
  __pyx_L5_bool_binop_done:;

  /* "Source/LwMiddleLayer.pyx":1950
 * 
 *         cdef int k
 *         if self.wavelength.shape == prevState['wavelength'].shape \             # <<<<<<<<<<<<<<
 *            and np.all(self.wavelength == prevState['wavelength']):
 *             if prevState['rhoPrd'] is not None:
 */
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":1952
 *         if self.wavelength.shape == prevState['wavelength'].shape \
 *            and np.all(self.wavelength == prevState['wavelength']):
 *             if prevState['rhoPrd'] is not None:             # <<<<<<<<<<<<<<
 *                 np.asarray(self.rhoPrd)[:] = prevState['rhoPrd']
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_rhoPrd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1952, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = (__pyx_t_2 != Py_None);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":1953
 *            and np.all(self.wavelength == prevState['wavelength']):
 *             if prevState['rhoPrd'] is not None:
 *                 np.asarray(self.rhoPrd)[:] = prevState['rhoPrd']             # <<<<<<<<<<<<<<
 * 
 *             if preserveProfiles:
 */
      __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_rhoPrd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1953, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1953, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1953, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_v_self->rhoPrd.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1953, __pyx_L1_error)}
      __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->rhoPrd, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1953, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1953, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (__Pyx_PyObject_SetSlice(__pyx_t_1, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1953, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":1952
 *         if self.wavelength.shape == prevState['wavelength'].shape \
 *            and np.all(self.wavelength == prevState['wavelength']):
 *             if prevState['rhoPrd'] is not None:             # <<<<<<<<<<<<<<
 *                 np.asarray(self.rhoPrd)[:] = prevState['rhoPrd']
 * 
 */
    }

    /* "Source/LwMiddleLayer.pyx":1955
 *                 np.asarray(self.rhoPrd)[:] = prevState['rhoPrd']
 * 
 *             if preserveProfiles:             # <<<<<<<<<<<<<<
 *                 np.asarray(self.phi)[:] = prevState['phi']
 *                 if prevState['phiQ'] is not None:
 */
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_preserveProfiles); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 1955, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":1956
 * 
 *             if preserveProfiles:
 *                 np.asarray(self.phi)[:] = prevState['phi']             # <<<<<<<<<<<<<<
 *                 if prevState['phiQ'] is not None:
 *                     np.asarray(self.phiQ)[:] = prevState['phiQ']
 */
      __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_phi); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1956, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1956, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1956, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_v_self->phi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1956, __pyx_L1_error)}
      __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->phi, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1956, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1956, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__Pyx_PyObject_SetSlice(__pyx_t_1, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1956, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":1957
 *             if preserveProfiles:
 *                 np.asarray(self.phi)[:] = prevState['phi']
 *                 if prevState['phiQ'] is not None:             # <<<<<<<<<<<<<<
 *                     np.asarray(self.phiQ)[:] = prevState['phiQ']
 *                     np.asarray(self.phiU)[:] = prevState['phiU']
 */
      __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_phiQ); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1957, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_7 = (__pyx_t_2 != Py_None);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_6 = (__pyx_t_7 != 0);
      if (__pyx_t_6) {

        /* "Source/LwMiddleLayer.pyx":1958
 *                 np.asarray(self.phi)[:] = prevState['phi']
 *                 if prevState['phiQ'] is not None:
 *                     np.asarray(self.phiQ)[:] = prevState['phiQ']             # <<<<<<<<<<<<<<
 *                     np.asarray(self.phiU)[:] = prevState['phiU']
 *                     np.asarray(self.phiV)[:] = prevState['phiV']
 */
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_phiQ); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_v_self->phiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1958, __pyx_L1_error)}
        __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->phiQ, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1958, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__Pyx_PyObject_SetSlice(__pyx_t_1, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1958, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1959
 *                 if prevState['phiQ'] is not None:
 *                     np.asarray(self.phiQ)[:] = prevState['phiQ']
 *                     np.asarray(self.phiU)[:] = prevState['phiU']             # <<<<<<<<<<<<<<
 *                     np.asarray(self.phiV)[:] = prevState['phiV']
 *                     np.asarray(self.psiQ)[:] = prevState['psiQ']
 */
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_phiU); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1959, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1959, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1959, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_v_self->phiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1959, __pyx_L1_error)}
        __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->phiU, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1959, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1959, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__Pyx_PyObject_SetSlice(__pyx_t_1, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1959, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1960
 *                     np.asarray(self.phiQ)[:] = prevState['phiQ']
 *                     np.asarray(self.phiU)[:] = prevState['phiU']
 *                     np.asarray(self.phiV)[:] = prevState['phiV']             # <<<<<<<<<<<<<<
 *                     np.asarray(self.psiQ)[:] = prevState['psiQ']
 *                     np.asarray(self.psiU)[:] = prevState['psiU']
 */
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_phiV); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_v_self->phiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1960, __pyx_L1_error)}
        __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->phiV, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1960, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__Pyx_PyObject_SetSlice(__pyx_t_1, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1960, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1961
 *                     np.asarray(self.phiU)[:] = prevState['phiU']
 *                     np.asarray(self.phiV)[:] = prevState['phiV']
 *                     np.asarray(self.psiQ)[:] = prevState['psiQ']             # <<<<<<<<<<<<<<
 *                     np.asarray(self.psiU)[:] = prevState['psiU']
 *                     np.asarray(self.psiV)[:] = prevState['psiV']
 */
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_psiQ); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1961, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1961, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1961, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_v_self->psiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1961, __pyx_L1_error)}
        __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->psiQ, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1961, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1961, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__Pyx_PyObject_SetSlice(__pyx_t_1, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1961, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1962
 *                     np.asarray(self.phiV)[:] = prevState['phiV']
 *                     np.asarray(self.psiQ)[:] = prevState['psiQ']
 *                     np.asarray(self.psiU)[:] = prevState['psiU']             # <<<<<<<<<<<<<<
 *                     np.asarray(self.psiV)[:] = prevState['psiV']
 * 
 */
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_psiU); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1962, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1962, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1962, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_v_self->psiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1962, __pyx_L1_error)}
        __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_v_self->psiU, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1962, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1962, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__Pyx_PyObject_SetSlice(__pyx_t_1, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1962, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1963
 *                     np.asarray(self.psiQ)[:] = prevState['psiQ']
 *                     np.asarray(self.psiU)[:] = prevState['psiU']
 *                     np.asarray(self.psiV)[:] = prevState['psiV']             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
        __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_psiV); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_v_self->psiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1963, __pyx_L1_error)}
        __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->psiV, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
          }
        }
        __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1963, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__Pyx_PyObject_SetSlice(__pyx_t_1, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 1963, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":1957
 *             if preserveProfiles:
 *                 np.asarray(self.phi)[:] = prevState['phi']
 *                 if prevState['phiQ'] is not None:             # <<<<<<<<<<<<<<
 *                     np.asarray(self.phiQ)[:] = prevState['phiQ']
 *                     np.asarray(self.phiU)[:] = prevState['phiU']
 */
      }

      /* "Source/LwMiddleLayer.pyx":1955
 *                 np.asarray(self.rhoPrd)[:] = prevState['rhoPrd']
 * 
 *             if preserveProfiles:             # <<<<<<<<<<<<<<
 *                 np.asarray(self.phi)[:] = prevState['phi']
 *                 if prevState['phiQ'] is not None:
 */
    }

    /* "Source/LwMiddleLayer.pyx":1950
 * 
 *         cdef int k
 *         if self.wavelength.shape == prevState['wavelength'].shape \             # <<<<<<<<<<<<<<
 *            and np.all(self.wavelength == prevState['wavelength']):
 *             if prevState['rhoPrd'] is not None:
 */
    goto __pyx_L4;
  }

  /* "Source/LwMiddleLayer.pyx":1966
 * 
 *         else:
 *             if prevState['rhoPrd'] is not None:             # <<<<<<<<<<<<<<
 *                 for k in range(prevState['rhoPrd'].shape[1]):
 *                     np.asarray(self.rhoPrd)[:, k] = np.interp(self.wavelength, prevState['wavelength'], prevState['rhoPrd'][:, k])
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_rhoPrd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1966, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = (__pyx_t_2 != Py_None);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":1967
 *         else:
 *             if prevState['rhoPrd'] is not None:
 *                 for k in range(prevState['rhoPrd'].shape[1]):             # <<<<<<<<<<<<<<
 *                     np.asarray(self.rhoPrd)[:, k] = np.interp(self.wavelength, prevState['wavelength'], prevState['rhoPrd'][:, k])
 * 
 */
      __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_rhoPrd); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1967, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_shape); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1967, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1967, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_8 = __Pyx_PyInt_As_long(__pyx_t_2); if (unlikely((__pyx_t_8 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1967, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_9 = __pyx_t_8;
      for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
        __pyx_v_k = __pyx_t_10;

        /* "Source/LwMiddleLayer.pyx":1968
 *             if prevState['rhoPrd'] is not None:
 *                 for k in range(prevState['rhoPrd'].shape[1]):
 *                     np.asarray(self.rhoPrd)[:, k] = np.interp(self.wavelength, prevState['wavelength'], prevState['rhoPrd'][:, k])             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_interp); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1968, __pyx_L1_error)}
        __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_wavelength); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_rhoPrd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_k); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_12 = PyTuple_New(2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_INCREF(__pyx_slice__12);
        __Pyx_GIVEREF(__pyx_slice__12);
        PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_slice__12);
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_11);
        __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_t_3, __pyx_t_12); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = NULL;
        __pyx_t_13 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_13 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[4] = {__pyx_t_12, __pyx_t_1, __pyx_t_4, __pyx_t_11};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_13, 3+__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1968, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[4] = {__pyx_t_12, __pyx_t_1, __pyx_t_4, __pyx_t_11};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_13, 3+__pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1968, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        } else
        #endif
        {
          __pyx_t_3 = PyTuple_New(3+__pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1968, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          if (__pyx_t_12) {
            __Pyx_GIVEREF(__pyx_t_12); PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_12); __pyx_t_12 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_3, 0+__pyx_t_13, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_3, 1+__pyx_t_13, __pyx_t_4);
          __Pyx_GIVEREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_3, 2+__pyx_t_13, __pyx_t_11);
          __pyx_t_1 = 0;
          __pyx_t_4 = 0;
          __pyx_t_11 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1968, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_v_self->rhoPrd.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1968, __pyx_L1_error)}
        __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->rhoPrd, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_11);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_11, function);
          }
        }
        __pyx_t_5 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_k); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_slice__12);
        __Pyx_GIVEREF(__pyx_slice__12);
        PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_slice__12);
        __Pyx_GIVEREF(__pyx_t_11);
        PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_11);
        __pyx_t_11 = 0;
        if (unlikely(PyObject_SetItem(__pyx_t_5, __pyx_t_3, __pyx_t_2) < 0)) __PYX_ERR(0, 1968, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }

      /* "Source/LwMiddleLayer.pyx":1966
 * 
 *         else:
 *             if prevState['rhoPrd'] is not None:             # <<<<<<<<<<<<<<
 *                 for k in range(prevState['rhoPrd'].shape[1]):
 *                     np.asarray(self.rhoPrd)[:, k] = np.interp(self.wavelength, prevState['wavelength'], prevState['rhoPrd'][:, k])
 */
    }
  }
  __pyx_L4:;

  /* "Source/LwMiddleLayer.pyx":1941
 *         self.trans.Rji = f64_view(self.Rji)
 * 
 *     def load_rates_prd_from_state(self, prevState, preserveProfiles=True):             # <<<<<<<<<<<<<<
 * 
 *         np.asarray(self.Rij)[:] = prevState['Rij']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.load_rates_prd_from_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1971
 * 
 * 
 *     def compute_phi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Computes the line profile phi (phi_num in the technical report), by
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_9compute_phi(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_12LwTransition_8compute_phi[] = "\n        Computes the line profile phi (phi_num in the technical report), by\n        calling compute_phi on the line object. Provides a callback to the\n        default Voigt implementation used in the backend.\n        Does nothing if called on a continuum.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_9compute_phi(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_phi (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_8compute_phi(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1983
 *         cdef Atmosphere* atmos = &self.atmos.atmos
 *         callbackUsed = False
 *         def default_voigt_callback(f64[::1] aDamp, f64[::1] vBroad):             # <<<<<<<<<<<<<<
 *             cdef F64View aDampView = f64_view(aDamp)
 *             cdef F64View vBroadView = f64_view(vBroad)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11compute_phi_1default_voigt_callback(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11lightweaver_10LwCompiled_12LwTransition_11compute_phi_1default_voigt_callback = {"default_voigt_callback", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11compute_phi_1default_voigt_callback, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11compute_phi_1default_voigt_callback(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  __Pyx_memviewslice __pyx_v_aDamp = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_vBroad = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("default_voigt_callback (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_aDamp,&__pyx_n_s_vBroad,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_aDamp)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_vBroad)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("default_voigt_callback", 1, 2, 2, 1); __PYX_ERR(0, 1983, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "default_voigt_callback") < 0)) __PYX_ERR(0, 1983, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_aDamp = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(values[0], PyBUF_WRITABLE); if (unlikely(!__pyx_v_aDamp.memview)) __PYX_ERR(0, 1983, __pyx_L3_error)
    __pyx_v_vBroad = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(values[1], PyBUF_WRITABLE); if (unlikely(!__pyx_v_vBroad.memview)) __PYX_ERR(0, 1983, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("default_voigt_callback", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 1983, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.compute_phi.default_voigt_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_11compute_phi_default_voigt_callback(__pyx_self, __pyx_v_aDamp, __pyx_v_vBroad);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_11compute_phi_default_voigt_callback(PyObject *__pyx_self, __Pyx_memviewslice __pyx_v_aDamp, __Pyx_memviewslice __pyx_v_vBroad) {
  struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *__pyx_cur_scope;
  struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *__pyx_outer_scope;
  __pyx_t_8CmoArray_F64View __pyx_v_aDampView;
  __pyx_t_8CmoArray_F64View __pyx_v_vBroadView;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_8CmoArray_F64View __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("default_voigt_callback", 0);
  __pyx_outer_scope = (struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "Source/LwMiddleLayer.pyx":1984
 *         callbackUsed = False
 *         def default_voigt_callback(f64[::1] aDamp, f64[::1] vBroad):
 *             cdef F64View aDampView = f64_view(aDamp)             # <<<<<<<<<<<<<<
 *             cdef F64View vBroadView = f64_view(vBroad)
 *             self.trans.compute_phi(atmos[0], aDampView, vBroadView)
 */
  try {
    __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_aDamp);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1984, __pyx_L1_error)
  }
  __pyx_v_aDampView = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":1985
 *         def default_voigt_callback(f64[::1] aDamp, f64[::1] vBroad):
 *             cdef F64View aDampView = f64_view(aDamp)
 *             cdef F64View vBroadView = f64_view(vBroad)             # <<<<<<<<<<<<<<
 *             self.trans.compute_phi(atmos[0], aDampView, vBroadView)
 *             nonlocal callbackUsed
 */
  try {
    __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_vBroad);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 1985, __pyx_L1_error)
  }
  __pyx_v_vBroadView = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":1986
 *             cdef F64View aDampView = f64_view(aDamp)
 *             cdef F64View vBroadView = f64_view(vBroad)
 *             self.trans.compute_phi(atmos[0], aDampView, vBroadView)             # <<<<<<<<<<<<<<
 *             nonlocal callbackUsed
 *             callbackUsed = True
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 1986, __pyx_L1_error) }
  __pyx_cur_scope->__pyx_v_self->trans.compute_phi((__pyx_cur_scope->__pyx_v_atmos[0]), __pyx_v_aDampView, __pyx_v_vBroadView);

  /* "Source/LwMiddleLayer.pyx":1988
 *             self.trans.compute_phi(atmos[0], aDampView, vBroadView)
 *             nonlocal callbackUsed
 *             callbackUsed = True             # <<<<<<<<<<<<<<
 *             return np.asarray(self.phi)
 * 
 */
  __pyx_cur_scope->__pyx_v_callbackUsed = 1;

  /* "Source/LwMiddleLayer.pyx":1989
 *             nonlocal callbackUsed
 *             callbackUsed = True
 *             return np.asarray(self.phi)             # <<<<<<<<<<<<<<
 * 
 *         state = LineProfileState(wavelength=np.asarray(self.wavelength),
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 1989, __pyx_L1_error) }
  if (unlikely(!__pyx_cur_scope->__pyx_v_self->phi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1989, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_cur_scope->__pyx_v_self->phi, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1989, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":1983
 *         cdef Atmosphere* atmos = &self.atmos.atmos
 *         callbackUsed = False
 *         def default_voigt_callback(f64[::1] aDamp, f64[::1] vBroad):             # <<<<<<<<<<<<<<
 *             cdef F64View aDampView = f64_view(aDamp)
 *             cdef F64View vBroadView = f64_view(vBroad)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.compute_phi.default_voigt_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_aDamp, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_vBroad, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1971
 * 
 * 
 *     def compute_phi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Computes the line profile phi (phi_num in the technical report), by
 */

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_8compute_phi(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *__pyx_cur_scope;
  PyObject *__pyx_v_default_voigt_callback = 0;
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_v_profile = NULL;
  __Pyx_memviewslice __pyx_v_phi = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_Qelast = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_aDamp = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_t_9 = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_phi", 0);
  __pyx_cur_scope = (struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *)__pyx_tp_new_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi(__pyx_ptype_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1971, __pyx_L1_error)
  } else {
    __Pyx_GOTREF(__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);

  /* "Source/LwMiddleLayer.pyx":1978
 *         Does nothing if called on a continuum.
 *         '''
 *         if self.type == 'Continuum':             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1978, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_Continuum, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 1978, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":1979
 *         '''
 *         if self.type == 'Continuum':
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef Atmosphere* atmos = &self.atmos.atmos
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":1978
 *         Does nothing if called on a continuum.
 *         '''
 *         if self.type == 'Continuum':             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":1981
 *             return
 * 
 *         cdef Atmosphere* atmos = &self.atmos.atmos             # <<<<<<<<<<<<<<
 *         callbackUsed = False
 *         def default_voigt_callback(f64[::1] aDamp, f64[::1] vBroad):
 */
  __pyx_cur_scope->__pyx_v_atmos = (&__pyx_cur_scope->__pyx_v_self->atmos->atmos);

  /* "Source/LwMiddleLayer.pyx":1982
 * 
 *         cdef Atmosphere* atmos = &self.atmos.atmos
 *         callbackUsed = False             # <<<<<<<<<<<<<<
 *         def default_voigt_callback(f64[::1] aDamp, f64[::1] vBroad):
 *             cdef F64View aDampView = f64_view(aDamp)
 */
  __pyx_cur_scope->__pyx_v_callbackUsed = 0;

  /* "Source/LwMiddleLayer.pyx":1983
 *         cdef Atmosphere* atmos = &self.atmos.atmos
 *         callbackUsed = False
 *         def default_voigt_callback(f64[::1] aDamp, f64[::1] vBroad):             # <<<<<<<<<<<<<<
 *             cdef F64View aDampView = f64_view(aDamp)
 *             cdef F64View vBroadView = f64_view(vBroad)
 */
  __pyx_t_1 = __Pyx_CyFunction_New(&__pyx_mdef_11lightweaver_10LwCompiled_12LwTransition_11compute_phi_1default_voigt_callback, 0, __pyx_n_s_compute_phi_locals_default_voigt, ((PyObject*)__pyx_cur_scope), __pyx_n_s_lightweaver_LwCompiled, __pyx_d, ((PyObject *)__pyx_codeobj__14)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_default_voigt_callback = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1991
 *             return np.asarray(self.phi)
 * 
 *         state = LineProfileState(wavelength=np.asarray(self.wavelength),             # <<<<<<<<<<<<<<
 *                                  vlosMu=np.asarray(self.atmos.vlosMu),
 *                                  atmos=self.atmos.pyAtmos,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_LineProfileState); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyDict_NewPresized(6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_asarray); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_cur_scope->__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1991, __pyx_L1_error)}
  __pyx_t_5 = __pyx_memoryview_fromslice(__pyx_cur_scope->__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_wavelength, __pyx_t_4) < 0) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1992
 * 
 *         state = LineProfileState(wavelength=np.asarray(self.wavelength),
 *                                  vlosMu=np.asarray(self.atmos.vlosMu),             # <<<<<<<<<<<<<<
 *                                  atmos=self.atmos.pyAtmos,
 *                                  eqPops=self.atom.eqPops,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_cur_scope->__pyx_v_self->atmos->vlosMu.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1992, __pyx_L1_error)}
  __pyx_t_6 = __pyx_memoryview_fromslice(__pyx_cur_scope->__pyx_v_self->atmos->vlosMu, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_vlosMu, __pyx_t_4) < 0) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1993
 *         state = LineProfileState(wavelength=np.asarray(self.wavelength),
 *                                  vlosMu=np.asarray(self.atmos.vlosMu),
 *                                  atmos=self.atmos.pyAtmos,             # <<<<<<<<<<<<<<
 *                                  eqPops=self.atom.eqPops,
 *                                  default_voigt_callback=default_voigt_callback,
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_atmos, __pyx_cur_scope->__pyx_v_self->atmos->pyAtmos) < 0) __PYX_ERR(0, 1991, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":1994
 *                                  vlosMu=np.asarray(self.atmos.vlosMu),
 *                                  atmos=self.atmos.pyAtmos,
 *                                  eqPops=self.atom.eqPops,             # <<<<<<<<<<<<<<
 *                                  default_voigt_callback=default_voigt_callback,
 *                                  vBroad=self.atom.vBroad)
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_eqPops, __pyx_cur_scope->__pyx_v_self->atom->eqPops) < 0) __PYX_ERR(0, 1991, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":1995
 *                                  atmos=self.atmos.pyAtmos,
 *                                  eqPops=self.atom.eqPops,
 *                                  default_voigt_callback=default_voigt_callback,             # <<<<<<<<<<<<<<
 *                                  vBroad=self.atom.vBroad)
 *         profile = self.transModel.compute_phi(state)
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_default_voigt_callback, __pyx_v_default_voigt_callback) < 0) __PYX_ERR(0, 1991, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":1996
 *                                  eqPops=self.atom.eqPops,
 *                                  default_voigt_callback=default_voigt_callback,
 *                                  vBroad=self.atom.vBroad)             # <<<<<<<<<<<<<<
 *         profile = self.transModel.compute_phi(state)
 * 
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_self->atom->vBroad.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 1996, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_cur_scope->__pyx_v_self->atom->vBroad, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_vBroad, __pyx_t_4) < 0) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1991
 *             return np.asarray(self.phi)
 * 
 *         state = LineProfileState(wavelength=np.asarray(self.wavelength),             # <<<<<<<<<<<<<<
 *                                  vlosMu=np.asarray(self.atmos.vlosMu),
 *                                  atmos=self.atmos.pyAtmos,
 */
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_state = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1997
 *                                  default_voigt_callback=default_voigt_callback,
 *                                  vBroad=self.atom.vBroad)
 *         profile = self.transModel.compute_phi(state)             # <<<<<<<<<<<<<<
 * 
 *         cdef f64[:,:,:,::1] phi = profile.phi
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->transModel, __pyx_n_s_compute_phi); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1997, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_v_state) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_state);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1997, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_profile = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":1999
 *         profile = self.transModel.compute_phi(state)
 * 
 *         cdef f64[:,:,:,::1] phi = profile.phi             # <<<<<<<<<<<<<<
 *         cdef f64[::1] Qelast = profile.Qelast
 *         cdef f64[::1] aDamp = profile.aDamp
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_profile, __pyx_n_s_phi); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1999, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 1999, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_phi = __pyx_t_8;
  __pyx_t_8.memview = NULL;
  __pyx_t_8.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2000
 * 
 *         cdef f64[:,:,:,::1] phi = profile.phi
 *         cdef f64[::1] Qelast = profile.Qelast             # <<<<<<<<<<<<<<
 *         cdef f64[::1] aDamp = profile.aDamp
 *         if not callbackUsed:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_profile, __pyx_n_s_Qelast); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_9.memview)) __PYX_ERR(0, 2000, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_Qelast = __pyx_t_9;
  __pyx_t_9.memview = NULL;
  __pyx_t_9.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2001
 *         cdef f64[:,:,:,::1] phi = profile.phi
 *         cdef f64[::1] Qelast = profile.Qelast
 *         cdef f64[::1] aDamp = profile.aDamp             # <<<<<<<<<<<<<<
 *         if not callbackUsed:
 *             self.phi[...] = phi
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_profile, __pyx_n_s_aDamp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_9 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_9.memview)) __PYX_ERR(0, 2001, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_aDamp = __pyx_t_9;
  __pyx_t_9.memview = NULL;
  __pyx_t_9.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2002
 *         cdef f64[::1] Qelast = profile.Qelast
 *         cdef f64[::1] aDamp = profile.aDamp
 *         if not callbackUsed:             # <<<<<<<<<<<<<<
 *             self.phi[...] = phi
 *         self.Qelast[...] = Qelast
 */
  __pyx_t_2 = ((!(__pyx_cur_scope->__pyx_v_callbackUsed != 0)) != 0);
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":2003
 *         cdef f64[::1] aDamp = profile.aDamp
 *         if not callbackUsed:
 *             self.phi[...] = phi             # <<<<<<<<<<<<<<
 *         self.Qelast[...] = Qelast
 *         self.aDamp[...] = aDamp
 */
    if (unlikely(!__pyx_cur_scope->__pyx_v_self->phi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2003, __pyx_L1_error)}
    if (unlikely(__pyx_memoryview_copy_contents(__pyx_v_phi, __pyx_cur_scope->__pyx_v_self->phi, 4, 4, 0) < 0)) __PYX_ERR(0, 2003, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":2002
 *         cdef f64[::1] Qelast = profile.Qelast
 *         cdef f64[::1] aDamp = profile.aDamp
 *         if not callbackUsed:             # <<<<<<<<<<<<<<
 *             self.phi[...] = phi
 *         self.Qelast[...] = Qelast
 */
  }

  /* "Source/LwMiddleLayer.pyx":2004
 *         if not callbackUsed:
 *             self.phi[...] = phi
 *         self.Qelast[...] = Qelast             # <<<<<<<<<<<<<<
 *         self.aDamp[...] = aDamp
 * 
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_self->Qelast.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2004, __pyx_L1_error)}
  if (unlikely(__pyx_memoryview_copy_contents(__pyx_v_Qelast, __pyx_cur_scope->__pyx_v_self->Qelast, 1, 1, 0) < 0)) __PYX_ERR(0, 2004, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2005
 *             self.phi[...] = phi
 *         self.Qelast[...] = Qelast
 *         self.aDamp[...] = aDamp             # <<<<<<<<<<<<<<
 * 
 *         self.trans.compute_wphi(self.atmos.atmos)
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_self->aDamp.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2005, __pyx_L1_error)}
  if (unlikely(__pyx_memoryview_copy_contents(__pyx_v_aDamp, __pyx_cur_scope->__pyx_v_self->aDamp, 1, 1, 0) < 0)) __PYX_ERR(0, 2005, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2007
 *         self.aDamp[...] = aDamp
 * 
 *         self.trans.compute_wphi(self.atmos.atmos)             # <<<<<<<<<<<<<<
 * 
 *     cpdef compute_polarised_profiles(self):
 */
  __pyx_cur_scope->__pyx_v_self->trans.compute_wphi(__pyx_cur_scope->__pyx_v_self->atmos->atmos);

  /* "Source/LwMiddleLayer.pyx":1971
 * 
 * 
 *     def compute_phi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Computes the line profile phi (phi_num in the technical report), by
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_9, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.compute_phi", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_default_voigt_callback);
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_profile);
  __PYX_XDEC_MEMVIEW(&__pyx_v_phi, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_Qelast, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_aDamp, 1);
  __Pyx_DECREF(((PyObject *)__pyx_cur_scope));
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2009
 *         self.trans.compute_wphi(self.atmos.atmos)
 * 
 *     cpdef compute_polarised_profiles(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the polarised line profiles (all of phi, phi_{Q, U, V}, and
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11compute_polarised_profiles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_12LwTransition_compute_polarised_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_Nlambda;
  int __pyx_v_Nrays;
  int __pyx_v_Nspace;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  PyObject *__pyx_v_aDamp = NULL;
  PyObject *__pyx_v_Qelast = NULL;
  Atmosphere *__pyx_v_atmos;
  int __pyx_v_i;
  PyObject *__pyx_v_z = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *__pyx_v_zc = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  __Pyx_memviewslice __pyx_t_16 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View4D __pyx_t_17;
  PyObject *(*__pyx_t_18)(PyObject *);
  Py_ssize_t __pyx_t_19;
  Py_ssize_t __pyx_t_20;
  __pyx_t_8CmoArray_f64 __pyx_t_21;
  Py_ssize_t __pyx_t_22;
  int __pyx_t_23;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_polarised_profiles", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_compute_polarised_profiles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2009, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11compute_polarised_profiles)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2009, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":2019
 *         By calling this and iterating the Context as usual, a field
 *         '''
 *         if self.type == 'Continuum':             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2019, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_Continuum, Py_EQ)); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2019, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "Source/LwMiddleLayer.pyx":2020
 *         '''
 *         if self.type == 'Continuum':
 *             return             # <<<<<<<<<<<<<<
 * 
 *         if not self.transModel.polarisable:
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":2019
 *         By calling this and iterating the Context as usual, a field
 *         '''
 *         if self.type == 'Continuum':             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2022
 *             return
 * 
 *         if not self.transModel.polarisable:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_polarisable); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 2022, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = ((!__pyx_t_5) != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":2023
 * 
 *         if not self.transModel.polarisable:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef int Nlambda = self.wavelength.shape[0]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":2022
 *             return
 * 
 *         if not self.transModel.polarisable:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2025
 *             return
 * 
 *         cdef int Nlambda = self.wavelength.shape[0]             # <<<<<<<<<<<<<<
 *         cdef int Nrays = self.atmos.Nrays
 *         cdef int Nspace = self.atmos.Nspace
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2025, __pyx_L1_error)}
  __pyx_v_Nlambda = (__pyx_v_self->wavelength.shape[0]);

  /* "Source/LwMiddleLayer.pyx":2026
 * 
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nrays = self.atmos.Nrays             # <<<<<<<<<<<<<<
 *         cdef int Nspace = self.atmos.Nspace
 *         try:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nrays); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2026, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nrays = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":2027
 *         cdef int Nlambda = self.wavelength.shape[0]
 *         cdef int Nrays = self.atmos.Nrays
 *         cdef int Nspace = self.atmos.Nspace             # <<<<<<<<<<<<<<
 *         try:
 *             self.phiQ
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2027, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nspace = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":2028
 *         cdef int Nrays = self.atmos.Nrays
 *         cdef int Nspace = self.atmos.Nspace
 *         try:             # <<<<<<<<<<<<<<
 *             self.phiQ
 *         except AttributeError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_8, &__pyx_t_9, &__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_8);
    __Pyx_XGOTREF(__pyx_t_9);
    __Pyx_XGOTREF(__pyx_t_10);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":2029
 *         cdef int Nspace = self.atmos.Nspace
 *         try:
 *             self.phiQ             # <<<<<<<<<<<<<<
 *         except AttributeError:
 *             self.phiQ = np.zeros((Nlambda, Nrays, 2, Nspace))
 */
      if (unlikely(!__pyx_v_self->phiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2029, __pyx_L5_error)}
      (void)(__pyx_v_self->phiQ);

      /* "Source/LwMiddleLayer.pyx":2028
 *         cdef int Nrays = self.atmos.Nrays
 *         cdef int Nspace = self.atmos.Nspace
 *         try:             # <<<<<<<<<<<<<<
 *             self.phiQ
 *         except AttributeError:
 */
    }
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    goto __pyx_L10_try_end;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":2030
 *         try:
 *             self.phiQ
 *         except AttributeError:             # <<<<<<<<<<<<<<
 *             self.phiQ = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.phiU = np.zeros((Nlambda, Nrays, 2, Nspace))
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.compute_polarised_profiles", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 2030, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "Source/LwMiddleLayer.pyx":2031
 *             self.phiQ
 *         except AttributeError:
 *             self.phiQ = np.zeros((Nlambda, Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.phiU = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.phiV = np.zeros((Nlambda, Nrays, 2, Nspace))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2031, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_zeros); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2031, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2031, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2031, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2031, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_15 = PyTuple_New(4); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2031, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_t_13);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_15, 2, __pyx_int_2);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_15, 3, __pyx_t_14);
      __pyx_t_11 = 0;
      __pyx_t_13 = 0;
      __pyx_t_14 = 0;
      __pyx_t_14 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
        }
      }
      __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_14, __pyx_t_15) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_15);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2031, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_16 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_16.memview)) __PYX_ERR(0, 2031, __pyx_L7_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->phiQ, 0);
      __pyx_v_self->phiQ = __pyx_t_16;
      __pyx_t_16.memview = NULL;
      __pyx_t_16.data = NULL;

      /* "Source/LwMiddleLayer.pyx":2032
 *         except AttributeError:
 *             self.phiQ = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.phiU = np.zeros((Nlambda, Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.phiV = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiQ = np.zeros((Nlambda, Nrays, 2, Nspace))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2032, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_zeros); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2032, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2032, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2032, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2032, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_11 = PyTuple_New(4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2032, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_12);
      PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_14);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_11, 2, __pyx_int_2);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_11, 3, __pyx_t_13);
      __pyx_t_12 = 0;
      __pyx_t_14 = 0;
      __pyx_t_13 = 0;
      __pyx_t_13 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_15);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_15, function);
        }
      }
      __pyx_t_4 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_15, __pyx_t_13, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_15, __pyx_t_11);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2032, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_16 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_16.memview)) __PYX_ERR(0, 2032, __pyx_L7_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->phiU, 0);
      __pyx_v_self->phiU = __pyx_t_16;
      __pyx_t_16.memview = NULL;
      __pyx_t_16.data = NULL;

      /* "Source/LwMiddleLayer.pyx":2033
 *             self.phiQ = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.phiU = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.phiV = np.zeros((Nlambda, Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.psiQ = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiU = np.zeros((Nlambda, Nrays, 2, Nspace))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_np); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2033, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_zeros); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2033, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2033, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2033, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2033, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_12 = PyTuple_New(4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2033, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_15);
      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_15);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_13);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_int_2);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_12, 3, __pyx_t_14);
      __pyx_t_15 = 0;
      __pyx_t_13 = 0;
      __pyx_t_14 = 0;
      __pyx_t_14 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
        }
      }
      __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_14, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_12);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2033, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_16 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_16.memview)) __PYX_ERR(0, 2033, __pyx_L7_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->phiV, 0);
      __pyx_v_self->phiV = __pyx_t_16;
      __pyx_t_16.memview = NULL;
      __pyx_t_16.data = NULL;

      /* "Source/LwMiddleLayer.pyx":2034
 *             self.phiU = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.phiV = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiQ = np.zeros((Nlambda, Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.psiU = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiV = np.zeros((Nlambda, Nrays, 2, Nspace))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2034, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_zeros); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2034, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2034, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2034, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2034, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_15 = PyTuple_New(4); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2034, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_t_14);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_15, 2, __pyx_int_2);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_15, 3, __pyx_t_13);
      __pyx_t_11 = 0;
      __pyx_t_14 = 0;
      __pyx_t_13 = 0;
      __pyx_t_13 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
        }
      }
      __pyx_t_4 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_12, __pyx_t_13, __pyx_t_15) : __Pyx_PyObject_CallOneArg(__pyx_t_12, __pyx_t_15);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2034, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_16 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_16.memview)) __PYX_ERR(0, 2034, __pyx_L7_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->psiQ, 0);
      __pyx_v_self->psiQ = __pyx_t_16;
      __pyx_t_16.memview = NULL;
      __pyx_t_16.data = NULL;

      /* "Source/LwMiddleLayer.pyx":2035
 *             self.phiV = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiQ = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiU = np.zeros((Nlambda, Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.psiV = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.trans.phiQ = f64_view_4(self.phiQ)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_np); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2035, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_zeros); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2035, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2035, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2035, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2035, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_11 = PyTuple_New(4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2035, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_12);
      PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_13);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_11, 2, __pyx_int_2);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_11, 3, __pyx_t_14);
      __pyx_t_12 = 0;
      __pyx_t_13 = 0;
      __pyx_t_14 = 0;
      __pyx_t_14 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_15))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_15);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_15, function);
        }
      }
      __pyx_t_4 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_15, __pyx_t_14, __pyx_t_11) : __Pyx_PyObject_CallOneArg(__pyx_t_15, __pyx_t_11);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2035, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_16 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_16.memview)) __PYX_ERR(0, 2035, __pyx_L7_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->psiU, 0);
      __pyx_v_self->psiU = __pyx_t_16;
      __pyx_t_16.memview = NULL;
      __pyx_t_16.data = NULL;

      /* "Source/LwMiddleLayer.pyx":2036
 *             self.psiQ = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiU = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiV = np.zeros((Nlambda, Nrays, 2, Nspace))             # <<<<<<<<<<<<<<
 *             self.trans.phiQ = f64_view_4(self.phiQ)
 *             self.trans.phiU = f64_view_4(self.phiU)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_np); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2036, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_zeros); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2036, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_15 = __Pyx_PyInt_From_int(__pyx_v_Nlambda); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 2036, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_14 = __Pyx_PyInt_From_int(__pyx_v_Nrays); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2036, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_Nspace); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2036, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_12 = PyTuple_New(4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2036, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_15);
      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_15);
      __Pyx_GIVEREF(__pyx_t_14);
      PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_14);
      __Pyx_INCREF(__pyx_int_2);
      __Pyx_GIVEREF(__pyx_int_2);
      PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_int_2);
      __Pyx_GIVEREF(__pyx_t_13);
      PyTuple_SET_ITEM(__pyx_t_12, 3, __pyx_t_13);
      __pyx_t_15 = 0;
      __pyx_t_14 = 0;
      __pyx_t_13 = 0;
      __pyx_t_13 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
        }
      }
      __pyx_t_4 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_11, __pyx_t_13, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_12);
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2036, __pyx_L7_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_16 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_16.memview)) __PYX_ERR(0, 2036, __pyx_L7_except_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_XDEC_MEMVIEW(&__pyx_v_self->psiV, 0);
      __pyx_v_self->psiV = __pyx_t_16;
      __pyx_t_16.memview = NULL;
      __pyx_t_16.data = NULL;

      /* "Source/LwMiddleLayer.pyx":2037
 *             self.psiU = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.psiV = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.trans.phiQ = f64_view_4(self.phiQ)             # <<<<<<<<<<<<<<
 *             self.trans.phiU = f64_view_4(self.phiU)
 *             self.trans.phiV = f64_view_4(self.phiV)
 */
      if (unlikely(!__pyx_v_self->phiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2037, __pyx_L7_except_error)}
      try {
        __pyx_t_17 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->phiQ);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2037, __pyx_L7_except_error)
      }
      __pyx_v_self->trans.phiQ = __pyx_t_17;

      /* "Source/LwMiddleLayer.pyx":2038
 *             self.psiV = np.zeros((Nlambda, Nrays, 2, Nspace))
 *             self.trans.phiQ = f64_view_4(self.phiQ)
 *             self.trans.phiU = f64_view_4(self.phiU)             # <<<<<<<<<<<<<<
 *             self.trans.phiV = f64_view_4(self.phiV)
 *             self.trans.psiQ = f64_view_4(self.psiQ)
 */
      if (unlikely(!__pyx_v_self->phiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2038, __pyx_L7_except_error)}
      try {
        __pyx_t_17 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->phiU);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2038, __pyx_L7_except_error)
      }
      __pyx_v_self->trans.phiU = __pyx_t_17;

      /* "Source/LwMiddleLayer.pyx":2039
 *             self.trans.phiQ = f64_view_4(self.phiQ)
 *             self.trans.phiU = f64_view_4(self.phiU)
 *             self.trans.phiV = f64_view_4(self.phiV)             # <<<<<<<<<<<<<<
 *             self.trans.psiQ = f64_view_4(self.psiQ)
 *             self.trans.psiU = f64_view_4(self.psiU)
 */
      if (unlikely(!__pyx_v_self->phiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2039, __pyx_L7_except_error)}
      try {
        __pyx_t_17 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->phiV);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2039, __pyx_L7_except_error)
      }
      __pyx_v_self->trans.phiV = __pyx_t_17;

      /* "Source/LwMiddleLayer.pyx":2040
 *             self.trans.phiU = f64_view_4(self.phiU)
 *             self.trans.phiV = f64_view_4(self.phiV)
 *             self.trans.psiQ = f64_view_4(self.psiQ)             # <<<<<<<<<<<<<<
 *             self.trans.psiU = f64_view_4(self.psiU)
 *             self.trans.psiV = f64_view_4(self.psiV)
 */
      if (unlikely(!__pyx_v_self->psiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2040, __pyx_L7_except_error)}
      try {
        __pyx_t_17 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->psiQ);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2040, __pyx_L7_except_error)
      }
      __pyx_v_self->trans.psiQ = __pyx_t_17;

      /* "Source/LwMiddleLayer.pyx":2041
 *             self.trans.phiV = f64_view_4(self.phiV)
 *             self.trans.psiQ = f64_view_4(self.psiQ)
 *             self.trans.psiU = f64_view_4(self.psiU)             # <<<<<<<<<<<<<<
 *             self.trans.psiV = f64_view_4(self.psiV)
 * 
 */
      if (unlikely(!__pyx_v_self->psiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2041, __pyx_L7_except_error)}
      try {
        __pyx_t_17 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->psiU);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2041, __pyx_L7_except_error)
      }
      __pyx_v_self->trans.psiU = __pyx_t_17;

      /* "Source/LwMiddleLayer.pyx":2042
 *             self.trans.psiQ = f64_view_4(self.psiQ)
 *             self.trans.psiU = f64_view_4(self.psiU)
 *             self.trans.psiV = f64_view_4(self.psiV)             # <<<<<<<<<<<<<<
 * 
 *         self.trans.polarised = True
 */
      if (unlikely(!__pyx_v_self->psiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2042, __pyx_L7_except_error)}
      try {
        __pyx_t_17 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->psiV);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 2042, __pyx_L7_except_error)
      }
      __pyx_v_self->trans.psiV = __pyx_t_17;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L6_exception_handled;
    }
    goto __pyx_L7_except_error;
    __pyx_L7_except_error:;

    /* "Source/LwMiddleLayer.pyx":2028
 *         cdef int Nrays = self.atmos.Nrays
 *         cdef int Nspace = self.atmos.Nspace
 *         try:             # <<<<<<<<<<<<<<
 *             self.phiQ
 *         except AttributeError:
 */
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    goto __pyx_L1_error;
    __pyx_L6_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_8);
    __Pyx_XGIVEREF(__pyx_t_9);
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_ExceptionReset(__pyx_t_8, __pyx_t_9, __pyx_t_10);
    __pyx_L10_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":2044
 *             self.trans.psiV = f64_view_4(self.psiV)
 * 
 *         self.trans.polarised = True             # <<<<<<<<<<<<<<
 * 
 *         cdef LwAtom atom = self.atom
 */
  __pyx_v_self->trans.polarised = 1;

  /* "Source/LwMiddleLayer.pyx":2046
 *         self.trans.polarised = True
 * 
 *         cdef LwAtom atom = self.atom             # <<<<<<<<<<<<<<
 *         aDamp, Qelast = self.transModel.damping(self.atmos.pyAtmos, atom.eqPops)
 * 
 */
  __pyx_t_3 = ((PyObject *)__pyx_v_self->atom);
  __Pyx_INCREF(__pyx_t_3);
  __pyx_v_atom = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":2047
 * 
 *         cdef LwAtom atom = self.atom
 *         aDamp, Qelast = self.transModel.damping(self.atmos.pyAtmos, atom.eqPops)             # <<<<<<<<<<<<<<
 * 
 *         cdef Atmosphere* atmos = &self.atmos.atmos
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_damping); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  #if CYTHON_FAST_PYCALL
  if (PyFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_self->atmos->pyAtmos, __pyx_v_atom->eqPops};
    __pyx_t_3 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2047, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_3);
  } else
  #endif
  #if CYTHON_FAST_PYCCALL
  if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
    PyObject *__pyx_temp[3] = {__pyx_t_1, __pyx_v_self->atmos->pyAtmos, __pyx_v_atom->eqPops};
    __pyx_t_3 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2047, __pyx_L1_error)
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GOTREF(__pyx_t_3);
  } else
  #endif
  {
    __pyx_t_4 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (__pyx_t_1) {
      __Pyx_GIVEREF(__pyx_t_1); PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1); __pyx_t_1 = NULL;
    }
    __Pyx_INCREF(__pyx_v_self->atmos->pyAtmos);
    __Pyx_GIVEREF(__pyx_v_self->atmos->pyAtmos);
    PyTuple_SET_ITEM(__pyx_t_4, 0+__pyx_t_7, __pyx_v_self->atmos->pyAtmos);
    __Pyx_INCREF(__pyx_v_atom->eqPops);
    __Pyx_GIVEREF(__pyx_v_atom->eqPops);
    PyTuple_SET_ITEM(__pyx_t_4, 1+__pyx_t_7, __pyx_v_atom->eqPops);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if ((likely(PyTuple_CheckExact(__pyx_t_3))) || (PyList_CheckExact(__pyx_t_3))) {
    PyObject* sequence = __pyx_t_3;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 2047, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_4);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2047, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_18 = Py_TYPE(__pyx_t_1)->tp_iternext;
    index = 0; __pyx_t_2 = __pyx_t_18(__pyx_t_1); if (unlikely(!__pyx_t_2)) goto __pyx_L13_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 1; __pyx_t_4 = __pyx_t_18(__pyx_t_1); if (unlikely(!__pyx_t_4)) goto __pyx_L13_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_4);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_18(__pyx_t_1), 2) < 0) __PYX_ERR(0, 2047, __pyx_L1_error)
    __pyx_t_18 = NULL;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L14_unpacking_done;
    __pyx_L13_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_18 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 2047, __pyx_L1_error)
    __pyx_L14_unpacking_done:;
  }
  __pyx_v_aDamp = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_Qelast = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2049
 *         aDamp, Qelast = self.transModel.damping(self.atmos.pyAtmos, atom.eqPops)
 * 
 *         cdef Atmosphere* atmos = &self.atmos.atmos             # <<<<<<<<<<<<<<
 *         cdef int i
 *         for i in range(self.Qelast.shape[0]):
 */
  __pyx_v_atmos = (&__pyx_v_self->atmos->atmos);

  /* "Source/LwMiddleLayer.pyx":2051
 *         cdef Atmosphere* atmos = &self.atmos.atmos
 *         cdef int i
 *         for i in range(self.Qelast.shape[0]):             # <<<<<<<<<<<<<<
 *             self.Qelast[i] = Qelast[i]
 *             self.aDamp[i] = aDamp[i]
 */
  if (unlikely(!__pyx_v_self->Qelast.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2051, __pyx_L1_error)}
  __pyx_t_19 = (__pyx_v_self->Qelast.shape[0]);
  __pyx_t_20 = __pyx_t_19;
  for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_20; __pyx_t_7+=1) {
    __pyx_v_i = __pyx_t_7;

    /* "Source/LwMiddleLayer.pyx":2052
 *         cdef int i
 *         for i in range(self.Qelast.shape[0]):
 *             self.Qelast[i] = Qelast[i]             # <<<<<<<<<<<<<<
 *             self.aDamp[i] = aDamp[i]
 * 
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_Qelast, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2052, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_21 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_21 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2052, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_v_self->Qelast.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2052, __pyx_L1_error)}
    __pyx_t_22 = __pyx_v_i;
    __pyx_t_23 = -1;
    if (__pyx_t_22 < 0) {
      __pyx_t_22 += __pyx_v_self->Qelast.shape[0];
      if (unlikely(__pyx_t_22 < 0)) __pyx_t_23 = 0;
    } else if (unlikely(__pyx_t_22 >= __pyx_v_self->Qelast.shape[0])) __pyx_t_23 = 0;
    if (unlikely(__pyx_t_23 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_23);
      __PYX_ERR(0, 2052, __pyx_L1_error)
    }
    *((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->Qelast.data) + __pyx_t_22)) )) = __pyx_t_21;

    /* "Source/LwMiddleLayer.pyx":2053
 *         for i in range(self.Qelast.shape[0]):
 *             self.Qelast[i] = Qelast[i]
 *             self.aDamp[i] = aDamp[i]             # <<<<<<<<<<<<<<
 * 
 *         z = self.transModel.zeeman_components()
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_aDamp, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2053, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_21 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_21 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 2053, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_v_self->aDamp.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2053, __pyx_L1_error)}
    __pyx_t_22 = __pyx_v_i;
    __pyx_t_23 = -1;
    if (__pyx_t_22 < 0) {
      __pyx_t_22 += __pyx_v_self->aDamp.shape[0];
      if (unlikely(__pyx_t_22 < 0)) __pyx_t_23 = 0;
    } else if (unlikely(__pyx_t_22 >= __pyx_v_self->aDamp.shape[0])) __pyx_t_23 = 0;
    if (unlikely(__pyx_t_23 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_23);
      __PYX_ERR(0, 2053, __pyx_L1_error)
    }
    *((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->aDamp.data) + __pyx_t_22)) )) = __pyx_t_21;
  }

  /* "Source/LwMiddleLayer.pyx":2055
 *             self.aDamp[i] = aDamp[i]
 * 
 *         z = self.transModel.zeeman_components()             # <<<<<<<<<<<<<<
 *         cdef LwZeemanComponents zc = LwZeemanComponents(z)
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_zeeman_components); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2055, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_z = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":2056
 * 
 *         z = self.transModel.zeeman_components()
 *         cdef LwZeemanComponents zc = LwZeemanComponents(z)             # <<<<<<<<<<<<<<
 * 
 *         self.trans.compute_polarised_profiles(atmos[0], self.trans.aDamp, atom.atom.vBroad, zc.zc)
 */
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwZeemanComponents), __pyx_v_z); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2056, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_zc = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":2058
 *         cdef LwZeemanComponents zc = LwZeemanComponents(z)
 * 
 *         self.trans.compute_polarised_profiles(atmos[0], self.trans.aDamp, atom.atom.vBroad, zc.zc)             # <<<<<<<<<<<<<<
 * 
 *     cpdef recompute_gII(self):
 */
  try {
    __pyx_v_self->trans.compute_polarised_profiles((__pyx_v_atmos[0]), __pyx_v_self->trans.aDamp, __pyx_v_atom->atom.vBroad, __pyx_v_zc->zc);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2058, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":2009
 *         self.trans.compute_wphi(self.atmos.atmos)
 * 
 *     cpdef compute_polarised_profiles(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the polarised line profiles (all of phi, phi_{Q, U, V}, and
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __PYX_XDEC_MEMVIEW(&__pyx_t_16, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.compute_polarised_profiles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XDECREF(__pyx_v_aDamp);
  __Pyx_XDECREF(__pyx_v_Qelast);
  __Pyx_XDECREF(__pyx_v_z);
  __Pyx_XDECREF((PyObject *)__pyx_v_zc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11compute_polarised_profiles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_12LwTransition_10compute_polarised_profiles[] = "\n        Compute the polarised line profiles (all of phi, phi_{Q, U, V}, and\n        psi_{Q, U, V}) for a Voigt line, this currently doesn't support\n        non-standard line profile types, but could do so quite simply by\n        following compute_phi.\n        Does nothing if the transitions is a continuum or the line is not\n        polarisable.\n        By calling this and iterating the Context as usual, a field\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11compute_polarised_profiles(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_polarised_profiles (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10compute_polarised_profiles(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10compute_polarised_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_polarised_profiles", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_12LwTransition_compute_polarised_profiles(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2009, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.compute_polarised_profiles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2060
 *         self.trans.compute_polarised_profiles(atmos[0], self.trans.aDamp, atom.atom.vBroad, zc.zc)
 * 
 *     cpdef recompute_gII(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Triggers lazy recalculation of gII for this line (if PRD).
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_13recompute_gII(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_12LwTransition_recompute_gII(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("recompute_gII", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_recompute_gII); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2060, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_13recompute_gII)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2060, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":2064
 *         Triggers lazy recalculation of gII for this line (if PRD).
 *         '''
 *         self.trans.recompute_gII()             # <<<<<<<<<<<<<<
 * 
 *     def uv(self, int la, int mu, bool_t toObs, f64[::1] Uji not None,
 */
  __pyx_v_self->trans.recompute_gII();

  /* "Source/LwMiddleLayer.pyx":2060
 *         self.trans.compute_polarised_profiles(atmos[0], self.trans.aDamp, atom.atom.vBroad, zc.zc)
 * 
 *     cpdef recompute_gII(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Triggers lazy recalculation of gII for this line (if PRD).
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.recompute_gII", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_13recompute_gII(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_12LwTransition_12recompute_gII[] = "\n        Triggers lazy recalculation of gII for this line (if PRD).\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_13recompute_gII(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("recompute_gII (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_12recompute_gII(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_12recompute_gII(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("recompute_gII", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_12LwTransition_recompute_gII(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2060, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.recompute_gII", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2066
 *         self.trans.recompute_gII()
 * 
 *     def uv(self, int la, int mu, bool_t toObs, f64[::1] Uji not None,             # <<<<<<<<<<<<<<
 *            f64[::1] Vij not None, f64[::1] Vji not None):
 *         '''
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_15uv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_12LwTransition_14uv[] = "\n        Thin wrapper for computing U and V using the core. Must be called\n        after `atom.setup_wavelength(la)`, and Uji, Vij, Vji must tbe the\n        proper size, as no verification is performed.\n\n        Parameters\n        ----------\n        la : int\n            The wavelength index at which to compute U and V.\n        mu : int\n            The angle index at which to compute U and V.\n        Uji, Vij, Vji : np.ndarray\n            Storage arrays for the result.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_15uv(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_la;
  int __pyx_v_mu;
  bool __pyx_v_toObs;
  __Pyx_memviewslice __pyx_v_Uji = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_Vij = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_v_Vji = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("uv (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_la,&__pyx_n_s_mu,&__pyx_n_s_toObs,&__pyx_n_s_Uji,&__pyx_n_s_Vij,&__pyx_n_s_Vji,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_la)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_mu)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("uv", 1, 6, 6, 1); __PYX_ERR(0, 2066, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_toObs)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("uv", 1, 6, 6, 2); __PYX_ERR(0, 2066, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Uji)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("uv", 1, 6, 6, 3); __PYX_ERR(0, 2066, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Vij)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("uv", 1, 6, 6, 4); __PYX_ERR(0, 2066, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (likely((values[5] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Vji)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("uv", 1, 6, 6, 5); __PYX_ERR(0, 2066, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "uv") < 0)) __PYX_ERR(0, 2066, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
    }
    __pyx_v_la = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_la == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2066, __pyx_L3_error)
    __pyx_v_mu = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_mu == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2066, __pyx_L3_error)
    __pyx_v_toObs = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_toObs == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2066, __pyx_L3_error)
    __pyx_v_Uji = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(values[3], PyBUF_WRITABLE); if (unlikely(!__pyx_v_Uji.memview)) __PYX_ERR(0, 2066, __pyx_L3_error)
    __pyx_v_Vij = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(values[4], PyBUF_WRITABLE); if (unlikely(!__pyx_v_Vij.memview)) __PYX_ERR(0, 2067, __pyx_L3_error)
    __pyx_v_Vji = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(values[5], PyBUF_WRITABLE); if (unlikely(!__pyx_v_Vji.memview)) __PYX_ERR(0, 2067, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("uv", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2066, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.uv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(((PyObject *)__pyx_v_Uji.memview) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "Uji"); __PYX_ERR(0, 2066, __pyx_L1_error)
  }
  if (unlikely(((PyObject *)__pyx_v_Vij.memview) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "Vij"); __PYX_ERR(0, 2067, __pyx_L1_error)
  }
  if (unlikely(((PyObject *)__pyx_v_Vji.memview) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "Vji"); __PYX_ERR(0, 2067, __pyx_L1_error)
  }
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_14uv(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self), __pyx_v_la, __pyx_v_mu, __pyx_v_toObs, __pyx_v_Uji, __pyx_v_Vij, __pyx_v_Vji);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_14uv(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, int __pyx_v_la, int __pyx_v_mu, bool __pyx_v_toObs, __Pyx_memviewslice __pyx_v_Uji, __Pyx_memviewslice __pyx_v_Vij, __Pyx_memviewslice __pyx_v_Vji) {
  int __pyx_v_obs;
  __pyx_t_8CmoArray_F64View __pyx_v_cUji;
  __pyx_t_8CmoArray_F64View __pyx_v_cVij;
  __pyx_t_8CmoArray_F64View __pyx_v_cVji;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_8CmoArray_F64View __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("uv", 0);

  /* "Source/LwMiddleLayer.pyx":2084
 *         # TODO(cmo): Allow these to take None, and allocate if they are. Then
 *         # return in some UV datastruct
 *         cdef bint obs = toObs             # <<<<<<<<<<<<<<
 *         cdef F64View cUji = f64_view(Uji)
 *         cdef F64View cVij = f64_view(Vij)
 */
  __pyx_v_obs = __pyx_v_toObs;

  /* "Source/LwMiddleLayer.pyx":2085
 *         # return in some UV datastruct
 *         cdef bint obs = toObs
 *         cdef F64View cUji = f64_view(Uji)             # <<<<<<<<<<<<<<
 *         cdef F64View cVij = f64_view(Vij)
 *         cdef F64View cVji = f64_view(Vji)
 */
  try {
    __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_Uji);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2085, __pyx_L1_error)
  }
  __pyx_v_cUji = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":2086
 *         cdef bint obs = toObs
 *         cdef F64View cUji = f64_view(Uji)
 *         cdef F64View cVij = f64_view(Vij)             # <<<<<<<<<<<<<<
 *         cdef F64View cVji = f64_view(Vji)
 * 
 */
  try {
    __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_Vij);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2086, __pyx_L1_error)
  }
  __pyx_v_cVij = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":2087
 *         cdef F64View cUji = f64_view(Uji)
 *         cdef F64View cVij = f64_view(Vij)
 *         cdef F64View cVji = f64_view(Vji)             # <<<<<<<<<<<<<<
 * 
 *         self.trans.uv(la, mu, obs, cUji, cVij, cVji)
 */
  try {
    __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_Vji);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2087, __pyx_L1_error)
  }
  __pyx_v_cVji = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":2089
 *         cdef F64View cVji = f64_view(Vji)
 * 
 *         self.trans.uv(la, mu, obs, cUji, cVij, cVji)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_v_self->trans.uv(__pyx_v_la, __pyx_v_mu, __pyx_v_obs, __pyx_v_cUji, __pyx_v_cVij, __pyx_v_cVji);

  /* "Source/LwMiddleLayer.pyx":2066
 *         self.trans.recompute_gII()
 * 
 *     def uv(self, int la, int mu, bool_t toObs, f64[::1] Uji not None,             # <<<<<<<<<<<<<<
 *            f64[::1] Vij not None, f64[::1] Vji not None):
 *         '''
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.uv", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __PYX_XDEC_MEMVIEW(&__pyx_v_Uji, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_Vij, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_v_Vji, 1);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2092
 * 
 *     @property
 *     def jLevel(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Access the upper level on the model object.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6jLevel_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6jLevel_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6jLevel___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6jLevel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2096
 *         Access the upper level on the model object.
 *         '''
 *         return self.transModel.jLevel             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_jLevel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2096, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2092
 * 
 *     @property
 *     def jLevel(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Access the upper level on the model object.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.jLevel.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2099
 * 
 *     @property
 *     def iLevel(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Access the lower level on the model object.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6iLevel_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6iLevel_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6iLevel___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6iLevel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2103
 *         Access the lower level on the model object.
 *         '''
 *         return self.transModel.iLevel             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_iLevel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2099
 * 
 *     @property
 *     def iLevel(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Access the lower level on the model object.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.iLevel.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2106
 * 
 *     @property
 *     def j(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Index of upper level.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1j_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1j_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_1j___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_1j___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2110
 *         Index of upper level.
 *         '''
 *         return self.transModel.j             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_j); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2106
 * 
 *     @property
 *     def j(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Index of upper level.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.j.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2113
 * 
 *     @property
 *     def i(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Index of lower level.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1i_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1i_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_1i___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_1i___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2117
 *         Index of lower level.
 *         '''
 *         return self.transModel.i             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2113
 * 
 *     @property
 *     def i(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Index of lower level.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.i.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2120
 * 
 *     @property
 *     def Aji(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Einstein A for transition.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Aji_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Aji_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Aji___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Aji___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2124
 *         Einstein A for transition.
 *         '''
 *         return self.trans.Aji             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->trans.Aji); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2120
 * 
 *     @property
 *     def Aji(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Einstein A for transition.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.Aji.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2127
 * 
 *     @property
 *     def Bji(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Einstein Bji for transition.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Bji_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Bji_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Bji___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Bji___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2131
 *         Einstein Bji for transition.
 *         '''
 *         return self.trans.Bji             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->trans.Bji); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2127
 * 
 *     @property
 *     def Bji(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Einstein Bji for transition.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.Bji.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2134
 * 
 *     @property
 *     def Bij(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Einstein Bij for transition.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Bij_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Bij_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Bij___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Bij___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2138
 *         Einstein Bij for transition.
 *         '''
 *         return self.trans.Bij             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->trans.Bij); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2134
 * 
 *     @property
 *     def Bij(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Einstein Bij for transition.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.Bij.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2141
 * 
 *     @property
 *     def Nblue(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Index into global wavelength grid where this transition's local grid
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5Nblue_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5Nblue_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5Nblue___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5Nblue___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2146
 *         starts.
 *         '''
 *         return self.trans.Nblue             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->trans.Nblue); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2141
 * 
 *     @property
 *     def Nblue(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Index into global wavelength grid where this transition's local grid
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.Nblue.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2149
 * 
 *     @property
 *     def lambda0(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Line rest wavelength or continuum edge wavelength.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_7lambda0_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_7lambda0_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_7lambda0___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_7lambda0___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2153
 *         Line rest wavelength or continuum edge wavelength.
 *         '''
 *         return self.trans.lambda0             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->trans.lambda0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2149
 * 
 *     @property
 *     def lambda0(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Line rest wavelength or continuum edge wavelength.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.lambda0.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2156
 * 
 *     @property
 *     def wphi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Multiplicative inverse of integrated line profile at each location in
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4wphi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4wphi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4wphi___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4wphi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2163
 *         normalised.
 *         '''
 *         return np.asarray(self.wphi)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->wphi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2163, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->wphi, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2156
 * 
 *     @property
 *     def wphi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Multiplicative inverse of integrated line profile at each location in
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.wphi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2166
 * 
 *     @property
 *     def phi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Numerical line profile. AttributeError for continua.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3phi_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3phi_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3phi___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3phi___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2170
 *         Numerical line profile. AttributeError for continua.
 *         '''
 *         return np.asarray(self.phi)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->phi.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2170, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->phi, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2166
 * 
 *     @property
 *     def phi(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Numerical line profile. AttributeError for continua.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.phi.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2173
 * 
 *     @property
 *     def phiQ(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.phiQ)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiQ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiQ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiQ___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiQ___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2174
 *     @property
 *     def phiQ(self):
 *         return np.asarray(self.phiQ)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->phiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2174, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->phiQ, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2173
 * 
 *     @property
 *     def phiQ(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.phiQ)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.phiQ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2177
 * 
 *     @property
 *     def phiU(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.phiU)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiU_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiU_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiU___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiU___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2178
 *     @property
 *     def phiU(self):
 *         return np.asarray(self.phiU)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->phiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2178, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->phiU, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2177
 * 
 *     @property
 *     def phiU(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.phiU)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.phiU.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2181
 * 
 *     @property
 *     def phiV(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.phiV)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiV_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiV_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiV___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4phiV___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2182
 *     @property
 *     def phiV(self):
 *         return np.asarray(self.phiV)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->phiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2182, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->phiV, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2181
 * 
 *     @property
 *     def phiV(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.phiV)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.phiV.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2185
 * 
 *     @property
 *     def psiQ(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.psiQ)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiQ_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiQ_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiQ___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiQ___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2186
 *     @property
 *     def psiQ(self):
 *         return np.asarray(self.psiQ)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->psiQ.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2186, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->psiQ, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2185
 * 
 *     @property
 *     def psiQ(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.psiQ)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.psiQ.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2189
 * 
 *     @property
 *     def psiU(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.psiU)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiU_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiU_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiU___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiU___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2190
 *     @property
 *     def psiU(self):
 *         return np.asarray(self.psiU)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->psiU.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2190, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->psiU, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2189
 * 
 *     @property
 *     def psiU(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.psiU)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.psiU.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2193
 * 
 *     @property
 *     def psiV(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.psiV)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiV_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiV_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiV___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4psiV___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2194
 *     @property
 *     def psiV(self):
 *         return np.asarray(self.psiV)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->psiV.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2194, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->psiV, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2193
 * 
 *     @property
 *     def psiV(self):             # <<<<<<<<<<<<<<
 *         return np.asarray(self.psiV)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.psiV.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2197
 * 
 *     @property
 *     def Rij(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Upwards radiative rates for the transition throughout the atmosphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Rij_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Rij_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Rij___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Rij___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2201
 *         Upwards radiative rates for the transition throughout the atmosphere.
 *         '''
 *         return np.asarray(self.Rij)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->Rij.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2201, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->Rij, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2197
 * 
 *     @property
 *     def Rij(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Upwards radiative rates for the transition throughout the atmosphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.Rij.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2204
 * 
 *     @property
 *     def Rji(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Downward radiative rates for the transition throughout the atmosphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Rji_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Rji_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Rji___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_3Rji___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2208
 *         Downward radiative rates for the transition throughout the atmosphere.
 *         '''
 *         return np.asarray(self.Rji)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->Rji.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2208, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->Rji, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2204
 * 
 *     @property
 *     def Rji(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Downward radiative rates for the transition throughout the atmosphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.Rji.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2211
 * 
 *     @property
 *     def rhoPrd(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Ratio of emission to absorption profiles throughout the atmosphere,
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6rhoPrd_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6rhoPrd_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6rhoPrd___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6rhoPrd___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2216
 *         in the case of PRD lines.
 *         '''
 *         return np.asarray(self.rhoPrd)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->rhoPrd.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2216, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->rhoPrd, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2211
 * 
 *     @property
 *     def rhoPrd(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Ratio of emission to absorption profiles throughout the atmosphere,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.rhoPrd.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2219
 * 
 *     @property
 *     def alpha(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The wavelength-dependent cross-section for a continuum.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5alpha_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5alpha_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5alpha___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5alpha___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2224
 *         AttributeError for lines.
 *         '''
 *         return np.asarray(self.alpha)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->alpha.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2224, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->alpha, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2219
 * 
 *     @property
 *     def alpha(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The wavelength-dependent cross-section for a continuum.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.alpha.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2227
 * 
 *     @property
 *     def wavelength(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The transition's local wavelength grid.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10wavelength_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10wavelength_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10wavelength___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10wavelength___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2231
 *         The transition's local wavelength grid.
 *         '''
 *         return np.asarray(self.wavelength)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2231, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2227
 * 
 *     @property
 *     def wavelength(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The transition's local wavelength grid.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.wavelength.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2234
 * 
 *     @property
 *     def active(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The active wavelength mask for this transition.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6active_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6active_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6active___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6active___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2238
 *         The active wavelength mask for this transition.
 *         '''
 *         return np.asarray(self.active).astype(np.bool)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->active.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2238, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->active, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_11lightweaver_10LwCompiled_i8, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_11lightweaver_10LwCompiled_i8, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_astype); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_bool); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2234
 * 
 *     @property
 *     def active(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The active wavelength mask for this transition.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.active.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2241
 * 
 *     @property
 *     def Qelast(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The elastic collision rate for this transition in the atmosphere,
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6Qelast_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6Qelast_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6Qelast___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_6Qelast___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2246
 *         needed for PRD.
 *         '''
 *         return np.asarray(self.Qelast)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->Qelast.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2246, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->Qelast, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2241
 * 
 *     @property
 *     def Qelast(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The elastic collision rate for this transition in the atmosphere,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.Qelast.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2249
 * 
 *     @property
 *     def aDamp(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The Voigt damping parameter for this transition in the atmosphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5aDamp_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5aDamp_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5aDamp___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_5aDamp___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2253
 *         The Voigt damping parameter for this transition in the atmosphere.
 *         '''
 *         return np.asarray(self.aDamp)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->aDamp.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2253, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->aDamp, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2249
 * 
 *     @property
 *     def aDamp(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The Voigt damping parameter for this transition in the atmosphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.aDamp.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2256
 * 
 *     @property
 *     def polarisable(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The polarisability of the transition, based on model data.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11polarisable_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11polarisable_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_11polarisable___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_11polarisable___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2260
 *         The polarisability of the transition, based on model data.
 *         '''
 *         return self.transModel.polarisable             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->transModel, __pyx_n_s_polarisable); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2256
 * 
 *     @property
 *     def polarisable(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The polarisability of the transition, based on model data.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.polarisable.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2263
 * 
 *     @property
 *     def type(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The type of transition (Line or Continuum) as a str.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4type_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4type___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4type___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2267
 *         The type of transition (Line or Continuum) as a str.
 *         '''
 *         if self.trans.type == LINE:             # <<<<<<<<<<<<<<
 *             return 'Line'
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_self->trans.type == LINE) != 0);
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":2268
 *         '''
 *         if self.trans.type == LINE:
 *             return 'Line'             # <<<<<<<<<<<<<<
 *         else:
 *             return 'Continuum'
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_n_u_Line);
    __pyx_r = __pyx_n_u_Line;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":2267
 *         The type of transition (Line or Continuum) as a str.
 *         '''
 *         if self.trans.type == LINE:             # <<<<<<<<<<<<<<
 *             return 'Line'
 *         else:
 */
  }

  /* "Source/LwMiddleLayer.pyx":2270
 *             return 'Line'
 *         else:
 *             return 'Continuum'             # <<<<<<<<<<<<<<
 * 
 * cdef class LwZeemanComponents:
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_n_u_Continuum);
    __pyx_r = __pyx_n_u_Continuum;
    goto __pyx_L0;
  }

  /* "Source/LwMiddleLayer.pyx":2263
 * 
 *     @property
 *     def type(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The type of transition (Line or Continuum) as a str.
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1772
 *     cdef f64[::1] Rij
 *     cdef f64[::1] Rji
 *     cdef public object transModel             # <<<<<<<<<<<<<<
 *     cdef LwAtmosphere atmos
 *     cdef object spect
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->transModel);
  __pyx_r = __pyx_v_self->transModel;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->transModel);
  __Pyx_DECREF(__pyx_v_self->transModel);
  __pyx_v_self->transModel = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_10transModel_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->transModel);
  __Pyx_DECREF(__pyx_v_self->transModel);
  __pyx_v_self->transModel = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":1775
 *     cdef LwAtmosphere atmos
 *     cdef object spect
 *     cdef public LwAtom atom             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, trans, compAtom, atmos, spect):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->atom));
  __pyx_r = ((PyObject *)__pyx_v_self->atom);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 1775, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->atom);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atom));
  __pyx_v_self->atom = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.atom.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_4atom_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->atom);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atom));
  __pyx_v_self->atom = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_16__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_12LwTransition_18__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_12LwTransition_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwTransition.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2282
 *     cdef f64[::1] strength
 * 
 *     def __init__(self, z):             # <<<<<<<<<<<<<<
 *         self.alpha = z.alpha
 *         self.shift = z.shift
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_z = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_z,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_z)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 2282, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_z = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2282, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwZeemanComponents.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *)__pyx_v_self), __pyx_v_z);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *__pyx_v_self, PyObject *__pyx_v_z) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_memviewslice __pyx_t_2 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_t_3 = { 0, 0, { 0 }, { 0 }, { 0 } };
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  __pyx_t_8CmoArray_F64View __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":2283
 * 
 *     def __init__(self, z):
 *         self.alpha = z.alpha             # <<<<<<<<<<<<<<
 *         self.shift = z.shift
 *         self.strength = z.strength
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_z, __pyx_n_s_alpha); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_5numpy_int32_t(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 2283, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->alpha, 0);
  __pyx_v_self->alpha = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2284
 *     def __init__(self, z):
 *         self.alpha = z.alpha
 *         self.shift = z.shift             # <<<<<<<<<<<<<<
 *         self.strength = z.strength
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_z, __pyx_n_s_shift); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 2284, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->shift, 0);
  __pyx_v_self->shift = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2285
 *         self.alpha = z.alpha
 *         self.shift = z.shift
 *         self.strength = z.strength             # <<<<<<<<<<<<<<
 * 
 *         self.zc.alpha = I32View(&self.alpha[0], self.alpha.shape[0])
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_z, __pyx_n_s_strength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 2285, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->strength, 0);
  __pyx_v_self->strength = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2287
 *         self.strength = z.strength
 * 
 *         self.zc.alpha = I32View(&self.alpha[0], self.alpha.shape[0])             # <<<<<<<<<<<<<<
 *         self.zc.shift = f64_view(self.shift)
 *         self.zc.strength = f64_view(self.strength)
 */
  if (unlikely(!__pyx_v_self->alpha.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2287, __pyx_L1_error)}
  __pyx_t_4 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_4 < 0) {
    __pyx_t_4 += __pyx_v_self->alpha.shape[0];
    if (unlikely(__pyx_t_4 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_4 >= __pyx_v_self->alpha.shape[0])) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(0, 2287, __pyx_L1_error)
  }
  if (unlikely(!__pyx_v_self->alpha.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2287, __pyx_L1_error)}
  __pyx_v_self->zc.alpha = __pyx_t_11lightweaver_10LwCompiled_I32View((&(*((__pyx_t_5numpy_int32_t *) ( /* dim=0 */ ((char *) (((__pyx_t_5numpy_int32_t *) __pyx_v_self->alpha.data) + __pyx_t_4)) )))), (__pyx_v_self->alpha.shape[0]));

  /* "Source/LwMiddleLayer.pyx":2288
 * 
 *         self.zc.alpha = I32View(&self.alpha[0], self.alpha.shape[0])
 *         self.zc.shift = f64_view(self.shift)             # <<<<<<<<<<<<<<
 *         self.zc.strength = f64_view(self.strength)
 * 
 */
  if (unlikely(!__pyx_v_self->shift.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2288, __pyx_L1_error)}
  try {
    __pyx_t_6 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->shift);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2288, __pyx_L1_error)
  }
  __pyx_v_self->zc.shift = __pyx_t_6;

  /* "Source/LwMiddleLayer.pyx":2289
 *         self.zc.alpha = I32View(&self.alpha[0], self.alpha.shape[0])
 *         self.zc.shift = f64_view(self.shift)
 *         self.zc.strength = f64_view(self.strength)             # <<<<<<<<<<<<<<
 * 
 * cdef class LwAtom:
 */
  if (unlikely(!__pyx_v_self->strength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2289, __pyx_L1_error)}
  try {
    __pyx_t_6 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->strength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2289, __pyx_L1_error)
  }
  __pyx_v_self->zc.strength = __pyx_t_6;

  /* "Source/LwMiddleLayer.pyx":2282
 *     cdef f64[::1] strength
 * 
 *     def __init__(self, z):             # <<<<<<<<<<<<<<
 *         self.alpha = z.alpha
 *         self.shift = z.shift
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_2, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_3, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwZeemanComponents.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_3__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents_2__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwZeemanComponents.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_5__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents_4__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_18LwZeemanComponents_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwZeemanComponents.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2351
 *     cdef dict fsIterSchemeProperties
 * 
 *     def __init__(self, atom, atmos, eqPops, spect, background,             # <<<<<<<<<<<<<<
 *                  detailed=False, initSol=None, ngOptions=None,
 *                  conserveCharge=False, fsIterSchemeProperties=None):
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_atom = 0;
  PyObject *__pyx_v_atmos = 0;
  PyObject *__pyx_v_eqPops = 0;
  PyObject *__pyx_v_spect = 0;
  PyObject *__pyx_v_background = 0;
  PyObject *__pyx_v_detailed = 0;
  PyObject *__pyx_v_initSol = 0;
  PyObject *__pyx_v_ngOptions = 0;
  PyObject *__pyx_v_conserveCharge = 0;
  PyObject *__pyx_v_fsIterSchemeProperties = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atom,&__pyx_n_s_atmos,&__pyx_n_s_eqPops,&__pyx_n_s_spect,&__pyx_n_s_background,&__pyx_n_s_detailed,&__pyx_n_s_initSol,&__pyx_n_s_ngOptions,&__pyx_n_s_conserveCharge,&__pyx_n_s_fsIterSchemeProperties,0};
    PyObject* values[10] = {0,0,0,0,0,0,0,0,0,0};

    /* "Source/LwMiddleLayer.pyx":2352
 * 
 *     def __init__(self, atom, atmos, eqPops, spect, background,
 *                  detailed=False, initSol=None, ngOptions=None,             # <<<<<<<<<<<<<<
 *                  conserveCharge=False, fsIterSchemeProperties=None):
 *         self.atomicModel = atom
 */
    values[5] = ((PyObject *)Py_False);
    values[6] = ((PyObject *)Py_None);
    values[7] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":2353
 *     def __init__(self, atom, atmos, eqPops, spect, background,
 *                  detailed=False, initSol=None, ngOptions=None,
 *                  conserveCharge=False, fsIterSchemeProperties=None):             # <<<<<<<<<<<<<<
 *         self.atomicModel = atom
 *         self.detailed = detailed
 */
    values[8] = ((PyObject *)Py_False);
    values[9] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atom)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 5, 10, 1); __PYX_ERR(0, 2351, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eqPops)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 5, 10, 2); __PYX_ERR(0, 2351, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_spect)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 5, 10, 3); __PYX_ERR(0, 2351, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (likely((values[4] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_background)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 5, 10, 4); __PYX_ERR(0, 2351, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_detailed);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_initSol);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ngOptions);
          if (value) { values[7] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_conserveCharge);
          if (value) { values[8] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fsIterSchemeProperties);
          if (value) { values[9] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 2351, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_atom = values[0];
    __pyx_v_atmos = values[1];
    __pyx_v_eqPops = values[2];
    __pyx_v_spect = values[3];
    __pyx_v_background = values[4];
    __pyx_v_detailed = values[5];
    __pyx_v_initSol = values[6];
    __pyx_v_ngOptions = values[7];
    __pyx_v_conserveCharge = values[8];
    __pyx_v_fsIterSchemeProperties = values[9];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 5, 10, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2351, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), __pyx_v_atom, __pyx_v_atmos, __pyx_v_eqPops, __pyx_v_spect, __pyx_v_background, __pyx_v_detailed, __pyx_v_initSol, __pyx_v_ngOptions, __pyx_v_conserveCharge, __pyx_v_fsIterSchemeProperties);

  /* "Source/LwMiddleLayer.pyx":2351
 *     cdef dict fsIterSchemeProperties
 * 
 *     def __init__(self, atom, atmos, eqPops, spect, background,             # <<<<<<<<<<<<<<
 *                  detailed=False, initSol=None, ngOptions=None,
 *                  conserveCharge=False, fsIterSchemeProperties=None):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_atom, PyObject *__pyx_v_atmos, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_spect, PyObject *__pyx_v_background, PyObject *__pyx_v_detailed, PyObject *__pyx_v_initSol, PyObject *__pyx_v_ngOptions, PyObject *__pyx_v_conserveCharge, PyObject *__pyx_v_fsIterSchemeProperties) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a = 0;
  PyObject *__pyx_v_modelPops = NULL;
  PyObject *__pyx_v_t = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_lt = 0;
  int __pyx_v_Nlevel;
  int __pyx_v_Ntrans;
  bool __pyx_v_defaultPerAtomStorage;
  bool __pyx_v_defaultWlaGijStorage;
  int __pyx_v_doInitSol;
  PyObject *__pyx_7genexpr__pyx_v_l = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  __Pyx_memviewslice __pyx_t_5 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  __Pyx_memviewslice __pyx_t_15 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View3D __pyx_t_16;
  __pyx_t_11lightweaver_10LwCompiled_i64 __pyx_t_17;
  __Pyx_memviewslice __pyx_t_18 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_19;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);
  __Pyx_INCREF(__pyx_v_initSol);
  __Pyx_INCREF(__pyx_v_ngOptions);

  /* "Source/LwMiddleLayer.pyx":2354
 *                  detailed=False, initSol=None, ngOptions=None,
 *                  conserveCharge=False, fsIterSchemeProperties=None):
 *         self.atomicModel = atom             # <<<<<<<<<<<<<<
 *         self.detailed = detailed
 *         cdef LwAtmosphere a = atmos
 */
  __Pyx_INCREF(__pyx_v_atom);
  __Pyx_GIVEREF(__pyx_v_atom);
  __Pyx_GOTREF(__pyx_v_self->atomicModel);
  __Pyx_DECREF(__pyx_v_self->atomicModel);
  __pyx_v_self->atomicModel = __pyx_v_atom;

  /* "Source/LwMiddleLayer.pyx":2355
 *                  conserveCharge=False, fsIterSchemeProperties=None):
 *         self.atomicModel = atom
 *         self.detailed = detailed             # <<<<<<<<<<<<<<
 *         cdef LwAtmosphere a = atmos
 *         self.atmos = a
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_detailed); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2355, __pyx_L1_error)
  __pyx_v_self->detailed = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":2356
 *         self.atomicModel = atom
 *         self.detailed = detailed
 *         cdef LwAtmosphere a = atmos             # <<<<<<<<<<<<<<
 *         self.atmos = a
 *         self.atom.atmos = &a.atmos
 */
  if (!(likely(((__pyx_v_atmos) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_atmos, __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere))))) __PYX_ERR(0, 2356, __pyx_L1_error)
  __pyx_t_2 = __pyx_v_atmos;
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_a = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":2357
 *         self.detailed = detailed
 *         cdef LwAtmosphere a = atmos
 *         self.atmos = a             # <<<<<<<<<<<<<<
 *         self.atom.atmos = &a.atmos
 *         self.eqPops = eqPops
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_a));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_a));
  __Pyx_GOTREF(__pyx_v_self->atmos);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atmos));
  __pyx_v_self->atmos = __pyx_v_a;

  /* "Source/LwMiddleLayer.pyx":2358
 *         cdef LwAtmosphere a = atmos
 *         self.atmos = a
 *         self.atom.atmos = &a.atmos             # <<<<<<<<<<<<<<
 *         self.eqPops = eqPops
 *         modelPops = eqPops.atomicPops[atom.element]
 */
  __pyx_v_self->atom.atmos = (&__pyx_v_a->atmos);

  /* "Source/LwMiddleLayer.pyx":2359
 *         self.atmos = a
 *         self.atom.atmos = &a.atmos
 *         self.eqPops = eqPops             # <<<<<<<<<<<<<<
 *         modelPops = eqPops.atomicPops[atom.element]
 *         self.modelPops = modelPops
 */
  __Pyx_INCREF(__pyx_v_eqPops);
  __Pyx_GIVEREF(__pyx_v_eqPops);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_v_eqPops;

  /* "Source/LwMiddleLayer.pyx":2360
 *         self.atom.atmos = &a.atmos
 *         self.eqPops = eqPops
 *         modelPops = eqPops.atomicPops[atom.element]             # <<<<<<<<<<<<<<
 *         self.modelPops = modelPops
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_eqPops, __pyx_n_s_atomicPops); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_element); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_modelPops = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2361
 *         self.eqPops = eqPops
 *         modelPops = eqPops.atomicPops[atom.element]
 *         self.modelPops = modelPops             # <<<<<<<<<<<<<<
 * 
 *         self.vBroad = atom.vBroad(atmos)
 */
  __Pyx_INCREF(__pyx_v_modelPops);
  __Pyx_GIVEREF(__pyx_v_modelPops);
  __Pyx_GOTREF(__pyx_v_self->modelPops);
  __Pyx_DECREF(__pyx_v_self->modelPops);
  __pyx_v_self->modelPops = __pyx_v_modelPops;

  /* "Source/LwMiddleLayer.pyx":2363
 *         self.modelPops = modelPops
 * 
 *         self.vBroad = atom.vBroad(atmos)             # <<<<<<<<<<<<<<
 *         self.atom.vBroad = f64_view(self.vBroad)
 *         self.nTotal = modelPops.nTotal
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_vBroad); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_v_atmos) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_atmos);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2363, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_5.memview)) __PYX_ERR(0, 2363, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vBroad, 0);
  __pyx_v_self->vBroad = __pyx_t_5;
  __pyx_t_5.memview = NULL;
  __pyx_t_5.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2364
 * 
 *         self.vBroad = atom.vBroad(atmos)
 *         self.atom.vBroad = f64_view(self.vBroad)             # <<<<<<<<<<<<<<
 *         self.nTotal = modelPops.nTotal
 *         self.atom.nTotal = f64_view(self.nTotal)
 */
  if (unlikely(!__pyx_v_self->vBroad.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2364, __pyx_L1_error)}
  try {
    __pyx_t_6 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vBroad);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2364, __pyx_L1_error)
  }
  __pyx_v_self->atom.vBroad = __pyx_t_6;

  /* "Source/LwMiddleLayer.pyx":2365
 *         self.vBroad = atom.vBroad(atmos)
 *         self.atom.vBroad = f64_view(self.vBroad)
 *         self.nTotal = modelPops.nTotal             # <<<<<<<<<<<<<<
 *         self.atom.nTotal = f64_view(self.nTotal)
 * 
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_modelPops, __pyx_n_s_nTotal); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2365, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_4, PyBUF_WRITABLE); if (unlikely(!__pyx_t_5.memview)) __PYX_ERR(0, 2365, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->nTotal, 0);
  __pyx_v_self->nTotal = __pyx_t_5;
  __pyx_t_5.memview = NULL;
  __pyx_t_5.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2366
 *         self.atom.vBroad = f64_view(self.vBroad)
 *         self.nTotal = modelPops.nTotal
 *         self.atom.nTotal = f64_view(self.nTotal)             # <<<<<<<<<<<<<<
 * 
 *         self.trans = []
 */
  if (unlikely(!__pyx_v_self->nTotal.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2366, __pyx_L1_error)}
  try {
    __pyx_t_6 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->nTotal);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2366, __pyx_L1_error)
  }
  __pyx_v_self->atom.nTotal = __pyx_t_6;

  /* "Source/LwMiddleLayer.pyx":2368
 *         self.atom.nTotal = f64_view(self.nTotal)
 * 
 *         self.trans = []             # <<<<<<<<<<<<<<
 *         for t in atom.transitions:
 *             if spect.activeTrans[t.transId]:
 */
  __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->trans);
  __Pyx_DECREF(__pyx_v_self->trans);
  __pyx_v_self->trans = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2369
 * 
 *         self.trans = []
 *         for t in atom.transitions:             # <<<<<<<<<<<<<<
 *             if spect.activeTrans[t.transId]:
 *                 self.trans.append(LwTransition(t, self, atmos, spect))
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_transitions); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2369, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (likely(PyList_CheckExact(__pyx_t_4)) || PyTuple_CheckExact(__pyx_t_4)) {
    __pyx_t_3 = __pyx_t_4; __Pyx_INCREF(__pyx_t_3); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2369, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2369, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2369, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2369, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2369, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2369, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_8(__pyx_t_3);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 2369, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":2370
 *         self.trans = []
 *         for t in atom.transitions:
 *             if spect.activeTrans[t.transId]:             # <<<<<<<<<<<<<<
 *                 self.trans.append(LwTransition(t, self, atmos, spect))
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_activeTrans); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_transId); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyObject_GetItem(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 2370, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (__pyx_t_10) {

      /* "Source/LwMiddleLayer.pyx":2371
 *         for t in atom.transitions:
 *             if spect.activeTrans[t.transId]:
 *                 self.trans.append(LwTransition(t, self, atmos, spect))             # <<<<<<<<<<<<<<
 * 
 *         cdef LwTransition lt
 */
      if (unlikely(__pyx_v_self->trans == Py_None)) {
        PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
        __PYX_ERR(0, 2371, __pyx_L1_error)
      }
      __pyx_t_9 = PyTuple_New(4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2371, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_INCREF(__pyx_v_t);
      __Pyx_GIVEREF(__pyx_v_t);
      PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_t);
      __Pyx_INCREF(((PyObject *)__pyx_v_self));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
      PyTuple_SET_ITEM(__pyx_t_9, 1, ((PyObject *)__pyx_v_self));
      __Pyx_INCREF(__pyx_v_atmos);
      __Pyx_GIVEREF(__pyx_v_atmos);
      PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_v_atmos);
      __Pyx_INCREF(__pyx_v_spect);
      __Pyx_GIVEREF(__pyx_v_spect);
      PyTuple_SET_ITEM(__pyx_t_9, 3, __pyx_v_spect);
      __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwTransition), __pyx_t_9, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2371, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_self->trans, __pyx_t_2); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 2371, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":2370
 *         self.trans = []
 *         for t in atom.transitions:
 *             if spect.activeTrans[t.transId]:             # <<<<<<<<<<<<<<
 *                 self.trans.append(LwTransition(t, self, atmos, spect))
 * 
 */
    }

    /* "Source/LwMiddleLayer.pyx":2369
 * 
 *         self.trans = []
 *         for t in atom.transitions:             # <<<<<<<<<<<<<<
 *             if spect.activeTrans[t.transId]:
 *                 self.trans.append(LwTransition(t, self, atmos, spect))
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":2374
 * 
 *         cdef LwTransition lt
 *         for lt in self.trans:             # <<<<<<<<<<<<<<
 *             self.atom.trans.push_back(&lt.trans)
 * 
 */
  if (unlikely(__pyx_v_self->trans == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 2374, __pyx_L1_error)
  }
  __pyx_t_3 = __pyx_v_self->trans; __Pyx_INCREF(__pyx_t_3); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_3)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2374, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2374, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_11lightweaver_10LwCompiled_LwTransition))))) __PYX_ERR(0, 2374, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_lt, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":2375
 *         cdef LwTransition lt
 *         for lt in self.trans:
 *             self.atom.trans.push_back(&lt.trans)             # <<<<<<<<<<<<<<
 * 
 *         cdef int Nlevel = len(atom.levels)
 */
    try {
      __pyx_v_self->atom.trans.push_back((&__pyx_v_lt->trans));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2375, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":2374
 * 
 *         cdef LwTransition lt
 *         for lt in self.trans:             # <<<<<<<<<<<<<<
 *             self.atom.trans.push_back(&lt.trans)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":2377
 *             self.atom.trans.push_back(&lt.trans)
 * 
 *         cdef int Nlevel = len(atom.levels)             # <<<<<<<<<<<<<<
 *         cdef int Ntrans = len(self.trans)
 *         self.atom.Nlevel = Nlevel
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_levels); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = PyObject_Length(__pyx_t_3); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2377, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_Nlevel = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":2378
 * 
 *         cdef int Nlevel = len(atom.levels)
 *         cdef int Ntrans = len(self.trans)             # <<<<<<<<<<<<<<
 *         self.atom.Nlevel = Nlevel
 *         self.atom.Ntrans = Ntrans
 */
  __pyx_t_3 = __pyx_v_self->trans;
  __Pyx_INCREF(__pyx_t_3);
  if (unlikely(__pyx_t_3 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 2378, __pyx_L1_error)
  }
  __pyx_t_7 = PyList_GET_SIZE(__pyx_t_3); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2378, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_Ntrans = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":2379
 *         cdef int Nlevel = len(atom.levels)
 *         cdef int Ntrans = len(self.trans)
 *         self.atom.Nlevel = Nlevel             # <<<<<<<<<<<<<<
 *         self.atom.Ntrans = Ntrans
 * 
 */
  __pyx_v_self->atom.Nlevel = __pyx_v_Nlevel;

  /* "Source/LwMiddleLayer.pyx":2380
 *         cdef int Ntrans = len(self.trans)
 *         self.atom.Nlevel = Nlevel
 *         self.atom.Ntrans = Ntrans             # <<<<<<<<<<<<<<
 * 
 *         cdef bool_t defaultPerAtomStorage = True
 */
  __pyx_v_self->atom.Ntrans = __pyx_v_Ntrans;

  /* "Source/LwMiddleLayer.pyx":2382
 *         self.atom.Ntrans = Ntrans
 * 
 *         cdef bool_t defaultPerAtomStorage = True             # <<<<<<<<<<<<<<
 *         cdef bool_t defaultWlaGijStorage = True
 *         if fsIterSchemeProperties is not None:
 */
  __pyx_v_defaultPerAtomStorage = 1;

  /* "Source/LwMiddleLayer.pyx":2383
 * 
 *         cdef bool_t defaultPerAtomStorage = True
 *         cdef bool_t defaultWlaGijStorage = True             # <<<<<<<<<<<<<<
 *         if fsIterSchemeProperties is not None:
 *             self.fsIterSchemeProperties = fsIterSchemeProperties
 */
  __pyx_v_defaultWlaGijStorage = 1;

  /* "Source/LwMiddleLayer.pyx":2384
 *         cdef bool_t defaultPerAtomStorage = True
 *         cdef bool_t defaultWlaGijStorage = True
 *         if fsIterSchemeProperties is not None:             # <<<<<<<<<<<<<<
 *             self.fsIterSchemeProperties = fsIterSchemeProperties
 *             defaultPerAtomStorage = fsIterSchemeProperties['defaultPerAtomStorage']
 */
  __pyx_t_10 = (__pyx_v_fsIterSchemeProperties != Py_None);
  __pyx_t_12 = (__pyx_t_10 != 0);
  if (__pyx_t_12) {

    /* "Source/LwMiddleLayer.pyx":2385
 *         cdef bool_t defaultWlaGijStorage = True
 *         if fsIterSchemeProperties is not None:
 *             self.fsIterSchemeProperties = fsIterSchemeProperties             # <<<<<<<<<<<<<<
 *             defaultPerAtomStorage = fsIterSchemeProperties['defaultPerAtomStorage']
 *             defaultWlaGijStorage = fsIterSchemeProperties['defaultWlaGijStorage']
 */
    if (!(likely(PyDict_CheckExact(__pyx_v_fsIterSchemeProperties))||((__pyx_v_fsIterSchemeProperties) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_fsIterSchemeProperties)->tp_name), 0))) __PYX_ERR(0, 2385, __pyx_L1_error)
    __pyx_t_3 = __pyx_v_fsIterSchemeProperties;
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_v_self->fsIterSchemeProperties);
    __Pyx_DECREF(__pyx_v_self->fsIterSchemeProperties);
    __pyx_v_self->fsIterSchemeProperties = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":2386
 *         if fsIterSchemeProperties is not None:
 *             self.fsIterSchemeProperties = fsIterSchemeProperties
 *             defaultPerAtomStorage = fsIterSchemeProperties['defaultPerAtomStorage']             # <<<<<<<<<<<<<<
 *             defaultWlaGijStorage = fsIterSchemeProperties['defaultWlaGijStorage']
 *         else:
 */
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_fsIterSchemeProperties, __pyx_n_u_defaultPerAtomStorage); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2386, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2386, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_defaultPerAtomStorage = __pyx_t_1;

    /* "Source/LwMiddleLayer.pyx":2387
 *             self.fsIterSchemeProperties = fsIterSchemeProperties
 *             defaultPerAtomStorage = fsIterSchemeProperties['defaultPerAtomStorage']
 *             defaultWlaGijStorage = fsIterSchemeProperties['defaultWlaGijStorage']             # <<<<<<<<<<<<<<
 *         else:
 *             self.fsIterSchemeProperties = {
 */
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_fsIterSchemeProperties, __pyx_n_u_defaultWlaGijStorage); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2387, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_defaultWlaGijStorage = __pyx_t_1;

    /* "Source/LwMiddleLayer.pyx":2384
 *         cdef bool_t defaultPerAtomStorage = True
 *         cdef bool_t defaultWlaGijStorage = True
 *         if fsIterSchemeProperties is not None:             # <<<<<<<<<<<<<<
 *             self.fsIterSchemeProperties = fsIterSchemeProperties
 *             defaultPerAtomStorage = fsIterSchemeProperties['defaultPerAtomStorage']
 */
    goto __pyx_L8;
  }

  /* "Source/LwMiddleLayer.pyx":2390
 *         else:
 *             self.fsIterSchemeProperties = {
 *                 'defaultPerAtomStorage': defaultPerAtomStorage,             # <<<<<<<<<<<<<<
 *                 'defaultWlaGijStorage': defaultPerAtomStorage
 *             }
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_defaultPerAtomStorage); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_defaultPerAtomStorage, __pyx_t_2) < 0) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":2391
 *             self.fsIterSchemeProperties = {
 *                 'defaultPerAtomStorage': defaultPerAtomStorage,
 *                 'defaultWlaGijStorage': defaultPerAtomStorage             # <<<<<<<<<<<<<<
 *             }
 * 
 */
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_defaultPerAtomStorage); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2391, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_defaultWlaGijStorage, __pyx_t_2) < 0) __PYX_ERR(0, 2390, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":2389
 *             defaultWlaGijStorage = fsIterSchemeProperties['defaultWlaGijStorage']
 *         else:
 *             self.fsIterSchemeProperties = {             # <<<<<<<<<<<<<<
 *                 'defaultPerAtomStorage': defaultPerAtomStorage,
 *                 'defaultWlaGijStorage': defaultPerAtomStorage
 */
    __Pyx_GIVEREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_v_self->fsIterSchemeProperties);
    __Pyx_DECREF(__pyx_v_self->fsIterSchemeProperties);
    __pyx_v_self->fsIterSchemeProperties = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
  }
  __pyx_L8:;

  /* "Source/LwMiddleLayer.pyx":2394
 *             }
 * 
 *         if not self.detailed:             # <<<<<<<<<<<<<<
 *             self.Gamma = np.zeros((Nlevel, Nlevel, atmos.Nspace))
 *             self.atom.Gamma = f64_view_3(self.Gamma)
 */
  __pyx_t_12 = ((!(__pyx_v_self->detailed != 0)) != 0);
  if (__pyx_t_12) {

    /* "Source/LwMiddleLayer.pyx":2395
 * 
 *         if not self.detailed:
 *             self.Gamma = np.zeros((Nlevel, Nlevel, atmos.Nspace))             # <<<<<<<<<<<<<<
 *             self.atom.Gamma = f64_view_3(self.Gamma)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_Nlevel); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_Nlevel); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nspace); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_14 = PyTuple_New(3); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_14, 1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_13);
    PyTuple_SET_ITEM(__pyx_t_14, 2, __pyx_t_13);
    __pyx_t_2 = 0;
    __pyx_t_4 = 0;
    __pyx_t_13 = 0;
    __pyx_t_13 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_9))) {
      __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_9);
      if (likely(__pyx_t_13)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
        __Pyx_INCREF(__pyx_t_13);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_9, function);
      }
    }
    __pyx_t_3 = (__pyx_t_13) ? __Pyx_PyObject_Call2Args(__pyx_t_9, __pyx_t_13, __pyx_t_14) : __Pyx_PyObject_CallOneArg(__pyx_t_9, __pyx_t_14);
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2395, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_15 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_3, PyBUF_WRITABLE); if (unlikely(!__pyx_t_15.memview)) __PYX_ERR(0, 2395, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->Gamma, 0);
    __pyx_v_self->Gamma = __pyx_t_15;
    __pyx_t_15.memview = NULL;
    __pyx_t_15.data = NULL;

    /* "Source/LwMiddleLayer.pyx":2396
 *         if not self.detailed:
 *             self.Gamma = np.zeros((Nlevel, Nlevel, atmos.Nspace))
 *             self.atom.Gamma = f64_view_3(self.Gamma)             # <<<<<<<<<<<<<<
 * 
 *             self.C = np.zeros((Nlevel, Nlevel, atmos.Nspace))
 */
    if (unlikely(!__pyx_v_self->Gamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2396, __pyx_L1_error)}
    try {
      __pyx_t_16 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->Gamma);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2396, __pyx_L1_error)
    }
    __pyx_v_self->atom.Gamma = __pyx_t_16;

    /* "Source/LwMiddleLayer.pyx":2398
 *             self.atom.Gamma = f64_view_3(self.Gamma)
 * 
 *             self.C = np.zeros((Nlevel, Nlevel, atmos.Nspace))             # <<<<<<<<<<<<<<
 *             self.atom.C = f64_view_3(self.C)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_zeros); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_9 = __Pyx_PyInt_From_int(__pyx_v_Nlevel); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_13 = __Pyx_PyInt_From_int(__pyx_v_Nlevel); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nspace); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_9);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_9);
    __Pyx_GIVEREF(__pyx_t_13);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_13);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_4);
    __pyx_t_9 = 0;
    __pyx_t_13 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_14))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_14);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_14, function);
      }
    }
    __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_14, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_14, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2398, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
    __pyx_t_15 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_3, PyBUF_WRITABLE); if (unlikely(!__pyx_t_15.memview)) __PYX_ERR(0, 2398, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->C, 0);
    __pyx_v_self->C = __pyx_t_15;
    __pyx_t_15.memview = NULL;
    __pyx_t_15.data = NULL;

    /* "Source/LwMiddleLayer.pyx":2399
 * 
 *             self.C = np.zeros((Nlevel, Nlevel, atmos.Nspace))
 *             self.atom.C = f64_view_3(self.C)             # <<<<<<<<<<<<<<
 * 
 *         self.atom.init_scratch(self.atmos.Nspace, detailed,
 */
    if (unlikely(!__pyx_v_self->C.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2399, __pyx_L1_error)}
    try {
      __pyx_t_16 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->C);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2399, __pyx_L1_error)
    }
    __pyx_v_self->atom.C = __pyx_t_16;

    /* "Source/LwMiddleLayer.pyx":2394
 *             }
 * 
 *         if not self.detailed:             # <<<<<<<<<<<<<<
 *             self.Gamma = np.zeros((Nlevel, Nlevel, atmos.Nspace))
 *             self.atom.Gamma = f64_view_3(self.Gamma)
 */
  }

  /* "Source/LwMiddleLayer.pyx":2401
 *             self.atom.C = f64_view_3(self.C)
 * 
 *         self.atom.init_scratch(self.atmos.Nspace, detailed,             # <<<<<<<<<<<<<<
 *                                defaultWlaGijStorage, defaultPerAtomStorage)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_17 = __Pyx_PyInt_As_int64_t(__pyx_t_3); if (unlikely((__pyx_t_17 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2401, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_detailed); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2401, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2402
 * 
 *         self.atom.init_scratch(self.atmos.Nspace, detailed,
 *                                defaultWlaGijStorage, defaultPerAtomStorage)             # <<<<<<<<<<<<<<
 * 
 *         self.stages = np.array([l.stage for l in self.atomicModel.levels], dtype=np.float64)
 */
  __pyx_v_self->atom.init_scratch(__pyx_t_17, __pyx_t_1, __pyx_v_defaultWlaGijStorage, __pyx_v_defaultPerAtomStorage);

  /* "Source/LwMiddleLayer.pyx":2404
 *                                defaultWlaGijStorage, defaultPerAtomStorage)
 * 
 *         self.stages = np.array([l.stage for l in self.atomicModel.levels], dtype=np.float64)             # <<<<<<<<<<<<<<
 *         self.atom.stages = f64_view(self.stages)
 *         self.nStar = modelPops.nStar
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  { /* enter inner scope */
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2404, __pyx_L12_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->atomicModel, __pyx_n_s_levels); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2404, __pyx_L12_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_4 = __pyx_t_2; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
    } else {
      __pyx_t_7 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2404, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2404, __pyx_L12_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_8)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2404, __pyx_L12_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2404, __pyx_L12_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2404, __pyx_L12_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2404, __pyx_L12_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_8(__pyx_t_4);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 2404, __pyx_L12_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_7genexpr__pyx_v_l, __pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_7genexpr__pyx_v_l, __pyx_n_s_stage); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2404, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_2))) __PYX_ERR(0, 2404, __pyx_L12_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_l); __pyx_7genexpr__pyx_v_l = 0;
    goto __pyx_L15_exit_scope;
    __pyx_L12_error:;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_l); __pyx_7genexpr__pyx_v_l = 0;
    goto __pyx_L1_error;
    __pyx_L15_exit_scope:;
  } /* exit inner scope */
  __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_float64); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_13) < 0) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_13, PyBUF_WRITABLE); if (unlikely(!__pyx_t_5.memview)) __PYX_ERR(0, 2404, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->stages, 0);
  __pyx_v_self->stages = __pyx_t_5;
  __pyx_t_5.memview = NULL;
  __pyx_t_5.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2405
 * 
 *         self.stages = np.array([l.stage for l in self.atomicModel.levels], dtype=np.float64)
 *         self.atom.stages = f64_view(self.stages)             # <<<<<<<<<<<<<<
 *         self.nStar = modelPops.nStar
 *         self.atom.nStar = f64_view_2(self.nStar)
 */
  if (unlikely(!__pyx_v_self->stages.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2405, __pyx_L1_error)}
  try {
    __pyx_t_6 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->stages);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2405, __pyx_L1_error)
  }
  __pyx_v_self->atom.stages = __pyx_t_6;

  /* "Source/LwMiddleLayer.pyx":2406
 *         self.stages = np.array([l.stage for l in self.atomicModel.levels], dtype=np.float64)
 *         self.atom.stages = f64_view(self.stages)
 *         self.nStar = modelPops.nStar             # <<<<<<<<<<<<<<
 *         self.atom.nStar = f64_view_2(self.nStar)
 * 
 */
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_modelPops, __pyx_n_s_nStar); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2406, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __pyx_t_18 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_13, PyBUF_WRITABLE); if (unlikely(!__pyx_t_18.memview)) __PYX_ERR(0, 2406, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->nStar, 0);
  __pyx_v_self->nStar = __pyx_t_18;
  __pyx_t_18.memview = NULL;
  __pyx_t_18.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2407
 *         self.atom.stages = f64_view(self.stages)
 *         self.nStar = modelPops.nStar
 *         self.atom.nStar = f64_view_2(self.nStar)             # <<<<<<<<<<<<<<
 * 
 *         doInitSol = True
 */
  if (unlikely(!__pyx_v_self->nStar.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2407, __pyx_L1_error)}
  try {
    __pyx_t_19 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->nStar);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2407, __pyx_L1_error)
  }
  __pyx_v_self->atom.nStar = __pyx_t_19;

  /* "Source/LwMiddleLayer.pyx":2409
 *         self.atom.nStar = f64_view_2(self.nStar)
 * 
 *         doInitSol = True             # <<<<<<<<<<<<<<
 *         self.n = modelPops.n
 *         self.atom.n = f64_view_2(self.n)
 */
  __pyx_v_doInitSol = 1;

  /* "Source/LwMiddleLayer.pyx":2410
 * 
 *         doInitSol = True
 *         self.n = modelPops.n             # <<<<<<<<<<<<<<
 *         self.atom.n = f64_view_2(self.n)
 * 
 */
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_modelPops, __pyx_n_s_n); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __pyx_t_18 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_13, PyBUF_WRITABLE); if (unlikely(!__pyx_t_18.memview)) __PYX_ERR(0, 2410, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->n, 0);
  __pyx_v_self->n = __pyx_t_18;
  __pyx_t_18.memview = NULL;
  __pyx_t_18.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2411
 *         doInitSol = True
 *         self.n = modelPops.n
 *         self.atom.n = f64_view_2(self.n)             # <<<<<<<<<<<<<<
 * 
 *         if self.detailed:
 */
  if (unlikely(!__pyx_v_self->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2411, __pyx_L1_error)}
  try {
    __pyx_t_19 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->n);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2411, __pyx_L1_error)
  }
  __pyx_v_self->atom.n = __pyx_t_19;

  /* "Source/LwMiddleLayer.pyx":2413
 *         self.atom.n = f64_view_2(self.n)
 * 
 *         if self.detailed:             # <<<<<<<<<<<<<<
 *             doInitSol = False
 *             ngOptions = None
 */
  __pyx_t_12 = (__pyx_v_self->detailed != 0);
  if (__pyx_t_12) {

    /* "Source/LwMiddleLayer.pyx":2414
 * 
 *         if self.detailed:
 *             doInitSol = False             # <<<<<<<<<<<<<<
 *             ngOptions = None
 * 
 */
    __pyx_v_doInitSol = 0;

    /* "Source/LwMiddleLayer.pyx":2415
 *         if self.detailed:
 *             doInitSol = False
 *             ngOptions = None             # <<<<<<<<<<<<<<
 * 
 *         if initSol is None:
 */
    __Pyx_INCREF(Py_None);
    __Pyx_DECREF_SET(__pyx_v_ngOptions, Py_None);

    /* "Source/LwMiddleLayer.pyx":2413
 *         self.atom.n = f64_view_2(self.n)
 * 
 *         if self.detailed:             # <<<<<<<<<<<<<<
 *             doInitSol = False
 *             ngOptions = None
 */
  }

  /* "Source/LwMiddleLayer.pyx":2417
 *             ngOptions = None
 * 
 *         if initSol is None:             # <<<<<<<<<<<<<<
 *             initSol = InitialSolution.Lte
 * 
 */
  __pyx_t_12 = (__pyx_v_initSol == Py_None);
  __pyx_t_10 = (__pyx_t_12 != 0);
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":2418
 * 
 *         if initSol is None:
 *             initSol = InitialSolution.Lte             # <<<<<<<<<<<<<<
 * 
 *         if doInitSol and initSol == InitialSolution.Zero:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_InitialSolution); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2418, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_Lte); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2418, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF_SET(__pyx_v_initSol, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":2417
 *             ngOptions = None
 * 
 *         if initSol is None:             # <<<<<<<<<<<<<<
 *             initSol = InitialSolution.Lte
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2420
 *             initSol = InitialSolution.Lte
 * 
 *         if doInitSol and initSol == InitialSolution.Zero:             # <<<<<<<<<<<<<<
 *             raise ValueError('Zero radiation InitialSolution not currently supported')
 * 
 */
  __pyx_t_12 = (__pyx_v_doInitSol != 0);
  if (__pyx_t_12) {
  } else {
    __pyx_t_10 = __pyx_t_12;
    goto __pyx_L19_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_InitialSolution); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_Zero); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_initSol, __pyx_t_13, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2420, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 2420, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_10 = __pyx_t_12;
  __pyx_L19_bool_binop_done:;
  if (unlikely(__pyx_t_10)) {

    /* "Source/LwMiddleLayer.pyx":2421
 * 
 *         if doInitSol and initSol == InitialSolution.Zero:
 *             raise ValueError('Zero radiation InitialSolution not currently supported')             # <<<<<<<<<<<<<<
 * 
 *         if doInitSol and initSol == InitialSolution.EscapeProbability and Ntrans > 0:
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2421, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 2421, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":2420
 *             initSol = InitialSolution.Lte
 * 
 *         if doInitSol and initSol == InitialSolution.Zero:             # <<<<<<<<<<<<<<
 *             raise ValueError('Zero radiation InitialSolution not currently supported')
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2423
 *             raise ValueError('Zero radiation InitialSolution not currently supported')
 * 
 *         if doInitSol and initSol == InitialSolution.EscapeProbability and Ntrans > 0:             # <<<<<<<<<<<<<<
 *             self.set_pops_escape_probability(self.atmos, background, conserveCharge=conserveCharge)
 * 
 */
  __pyx_t_12 = (__pyx_v_doInitSol != 0);
  if (__pyx_t_12) {
  } else {
    __pyx_t_10 = __pyx_t_12;
    goto __pyx_L22_bool_binop_done;
  }
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_InitialSolution); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_EscapeProbability); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_13);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_RichCompare(__pyx_v_initSol, __pyx_t_13, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2423, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
  __pyx_t_12 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_12 < 0)) __PYX_ERR(0, 2423, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_12) {
  } else {
    __pyx_t_10 = __pyx_t_12;
    goto __pyx_L22_bool_binop_done;
  }
  __pyx_t_12 = ((__pyx_v_Ntrans > 0) != 0);
  __pyx_t_10 = __pyx_t_12;
  __pyx_L22_bool_binop_done:;
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":2424
 * 
 *         if doInitSol and initSol == InitialSolution.EscapeProbability and Ntrans > 0:
 *             self.set_pops_escape_probability(self.atmos, background, conserveCharge=conserveCharge)             # <<<<<<<<<<<<<<
 * 
 *         if ngOptions is not None:
 */
    __pyx_t_3 = ((PyObject *)__pyx_v_self->atmos);
    __Pyx_INCREF(__pyx_t_3);
    if (!(likely(((__pyx_v_background) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_background, __pyx_ptype_11lightweaver_10LwCompiled_LwBackground))))) __PYX_ERR(0, 2424, __pyx_L1_error)
    __pyx_t_20.__pyx_n = 1;
    __pyx_t_20.conserveCharge = __pyx_v_conserveCharge;
    __pyx_t_13 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self->__pyx_vtab)->set_pops_escape_probability(__pyx_v_self, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_3), ((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_background), 0, &__pyx_t_20); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2424, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

    /* "Source/LwMiddleLayer.pyx":2423
 *             raise ValueError('Zero radiation InitialSolution not currently supported')
 * 
 *         if doInitSol and initSol == InitialSolution.EscapeProbability and Ntrans > 0:             # <<<<<<<<<<<<<<
 *             self.set_pops_escape_probability(self.atmos, background, conserveCharge=conserveCharge)
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2426
 *             self.set_pops_escape_probability(self.atmos, background, conserveCharge=conserveCharge)
 * 
 *         if ngOptions is not None:             # <<<<<<<<<<<<<<
 *             self.atom.ng = Ng(ngOptions.Norder, ngOptions.Nperiod, ngOptions.Ndelay, self.atom.n.flatten())
 *         else:
 */
  __pyx_t_10 = (__pyx_v_ngOptions != Py_None);
  __pyx_t_12 = (__pyx_t_10 != 0);
  if (__pyx_t_12) {

    /* "Source/LwMiddleLayer.pyx":2427
 * 
 *         if ngOptions is not None:
 *             self.atom.ng = Ng(ngOptions.Norder, ngOptions.Nperiod, ngOptions.Ndelay, self.atom.n.flatten())             # <<<<<<<<<<<<<<
 *         else:
 *             self.atom.ng = Ng(0,0,0, self.atom.n.flatten())
 */
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_ngOptions, __pyx_n_s_Norder); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2427, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_21 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_21 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2427, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_ngOptions, __pyx_n_s_Nperiod); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2427, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_22 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_22 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2427, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_v_ngOptions, __pyx_n_s_Ndelay); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 2427, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_23 = __Pyx_PyInt_As_int(__pyx_t_13); if (unlikely((__pyx_t_23 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2427, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __pyx_v_self->atom.ng = Ng(__pyx_t_21, __pyx_t_22, __pyx_t_23, __pyx_v_self->atom.n.flatten());

    /* "Source/LwMiddleLayer.pyx":2426
 *             self.set_pops_escape_probability(self.atmos, background, conserveCharge=conserveCharge)
 * 
 *         if ngOptions is not None:             # <<<<<<<<<<<<<<
 *             self.atom.ng = Ng(ngOptions.Norder, ngOptions.Nperiod, ngOptions.Ndelay, self.atom.n.flatten())
 *         else:
 */
    goto __pyx_L25;
  }

  /* "Source/LwMiddleLayer.pyx":2429
 *             self.atom.ng = Ng(ngOptions.Norder, ngOptions.Nperiod, ngOptions.Ndelay, self.atom.n.flatten())
 *         else:
 *             self.atom.ng = Ng(0,0,0, self.atom.n.flatten())             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
  /*else*/ {
    __pyx_v_self->atom.ng = Ng(0, 0, 0, __pyx_v_self->atom.n.flatten());
  }
  __pyx_L25:;

  /* "Source/LwMiddleLayer.pyx":2351
 *     cdef dict fsIterSchemeProperties
 * 
 *     def __init__(self, atom, atmos, eqPops, spect, background,             # <<<<<<<<<<<<<<
 *                  detailed=False, initSol=None, ngOptions=None,
 *                  conserveCharge=False, fsIterSchemeProperties=None):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __PYX_XDEC_MEMVIEW(&__pyx_t_5, 1);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __PYX_XDEC_MEMVIEW(&__pyx_t_15, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_18, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_modelPops);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XDECREF((PyObject *)__pyx_v_lt);
  __Pyx_XDECREF(__pyx_7genexpr__pyx_v_l);
  __Pyx_XDECREF(__pyx_v_initSol);
  __Pyx_XDECREF(__pyx_v_ngOptions);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2431
 *             self.atom.ng = Ng(0,0,0, self.atom.n.flatten())
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['atomicModel'] = self.atomicModel
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_3__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_3__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_2__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_2__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":2432
 * 
 *     def __getstate__(self):
 *         state = {}             # <<<<<<<<<<<<<<
 *         state['atomicModel'] = self.atomicModel
 *         state['modelPops'] = self.modelPops
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2432, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2433
 *     def __getstate__(self):
 *         state = {}
 *         state['atomicModel'] = self.atomicModel             # <<<<<<<<<<<<<<
 *         state['modelPops'] = self.modelPops
 *         state['atmos'] = self.atmos
 */
  __pyx_t_1 = __pyx_v_self->atomicModel;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_atomicModel, __pyx_t_1) < 0)) __PYX_ERR(0, 2433, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2434
 *         state = {}
 *         state['atomicModel'] = self.atomicModel
 *         state['modelPops'] = self.modelPops             # <<<<<<<<<<<<<<
 *         state['atmos'] = self.atmos
 *         state['eqPops'] = self.eqPops
 */
  __pyx_t_1 = __pyx_v_self->modelPops;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_modelPops, __pyx_t_1) < 0)) __PYX_ERR(0, 2434, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2435
 *         state['atomicModel'] = self.atomicModel
 *         state['modelPops'] = self.modelPops
 *         state['atmos'] = self.atmos             # <<<<<<<<<<<<<<
 *         state['eqPops'] = self.eqPops
 *         state['trans'] = self.trans
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->atmos);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_atmos, __pyx_t_1) < 0)) __PYX_ERR(0, 2435, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2436
 *         state['modelPops'] = self.modelPops
 *         state['atmos'] = self.atmos
 *         state['eqPops'] = self.eqPops             # <<<<<<<<<<<<<<
 *         state['trans'] = self.trans
 *         state['detailed'] = self.detailed
 */
  __pyx_t_1 = __pyx_v_self->eqPops;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_eqPops, __pyx_t_1) < 0)) __PYX_ERR(0, 2436, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2437
 *         state['atmos'] = self.atmos
 *         state['eqPops'] = self.eqPops
 *         state['trans'] = self.trans             # <<<<<<<<<<<<<<
 *         state['detailed'] = self.detailed
 *         state['vBroad'] = np.asarray(self.vBroad)
 */
  __pyx_t_1 = __pyx_v_self->trans;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_trans, __pyx_t_1) < 0)) __PYX_ERR(0, 2437, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2438
 *         state['eqPops'] = self.eqPops
 *         state['trans'] = self.trans
 *         state['detailed'] = self.detailed             # <<<<<<<<<<<<<<
 *         state['vBroad'] = np.asarray(self.vBroad)
 *         state['nTotal'] = self.modelPops.nTotal
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->detailed); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2438, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_detailed, __pyx_t_1) < 0)) __PYX_ERR(0, 2438, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2439
 *         state['trans'] = self.trans
 *         state['detailed'] = self.detailed
 *         state['vBroad'] = np.asarray(self.vBroad)             # <<<<<<<<<<<<<<
 *         state['nTotal'] = self.modelPops.nTotal
 *         state['nStar'] = self.modelPops.nStar
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->vBroad.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2439, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vBroad, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_vBroad, __pyx_t_1) < 0)) __PYX_ERR(0, 2439, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2440
 *         state['detailed'] = self.detailed
 *         state['vBroad'] = np.asarray(self.vBroad)
 *         state['nTotal'] = self.modelPops.nTotal             # <<<<<<<<<<<<<<
 *         state['nStar'] = self.modelPops.nStar
 *         state['n'] = self.modelPops.n
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->modelPops, __pyx_n_s_nTotal); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_nTotal, __pyx_t_1) < 0)) __PYX_ERR(0, 2440, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2441
 *         state['vBroad'] = np.asarray(self.vBroad)
 *         state['nTotal'] = self.modelPops.nTotal
 *         state['nStar'] = self.modelPops.nStar             # <<<<<<<<<<<<<<
 *         state['n'] = self.modelPops.n
 *         state['stages'] = np.asarray(self.stages)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->modelPops, __pyx_n_s_nStar); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_nStar, __pyx_t_1) < 0)) __PYX_ERR(0, 2441, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2442
 *         state['nTotal'] = self.modelPops.nTotal
 *         state['nStar'] = self.modelPops.nStar
 *         state['n'] = self.modelPops.n             # <<<<<<<<<<<<<<
 *         state['stages'] = np.asarray(self.stages)
 *         state['Ng'] = (self.atom.ng.Norder, self.atom.ng.Nperiod, self.atom.ng.Ndelay)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->modelPops, __pyx_n_s_n); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_n, __pyx_t_1) < 0)) __PYX_ERR(0, 2442, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2443
 *         state['nStar'] = self.modelPops.nStar
 *         state['n'] = self.modelPops.n
 *         state['stages'] = np.asarray(self.stages)             # <<<<<<<<<<<<<<
 *         state['Ng'] = (self.atom.ng.Norder, self.atom.ng.Nperiod, self.atom.ng.Ndelay)
 *         if self.detailed:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->stages.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2443, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->stages, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2443, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_stages, __pyx_t_1) < 0)) __PYX_ERR(0, 2443, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2444
 *         state['n'] = self.modelPops.n
 *         state['stages'] = np.asarray(self.stages)
 *         state['Ng'] = (self.atom.ng.Norder, self.atom.ng.Nperiod, self.atom.ng.Ndelay)             # <<<<<<<<<<<<<<
 *         if self.detailed:
 *             state['Gamma'] = None
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atom.ng.Norder); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->atom.ng.Nperiod); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_self->atom.ng.Ndelay); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Ng, __pyx_t_4) < 0)) __PYX_ERR(0, 2444, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2445
 *         state['stages'] = np.asarray(self.stages)
 *         state['Ng'] = (self.atom.ng.Norder, self.atom.ng.Nperiod, self.atom.ng.Ndelay)
 *         if self.detailed:             # <<<<<<<<<<<<<<
 *             state['Gamma'] = None
 *             state['C'] = None
 */
  __pyx_t_5 = (__pyx_v_self->detailed != 0);
  if (__pyx_t_5) {

    /* "Source/LwMiddleLayer.pyx":2446
 *         state['Ng'] = (self.atom.ng.Norder, self.atom.ng.Nperiod, self.atom.ng.Ndelay)
 *         if self.detailed:
 *             state['Gamma'] = None             # <<<<<<<<<<<<<<
 *             state['C'] = None
 *         else:
 */
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Gamma, Py_None) < 0)) __PYX_ERR(0, 2446, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":2447
 *         if self.detailed:
 *             state['Gamma'] = None
 *             state['C'] = None             # <<<<<<<<<<<<<<
 *         else:
 *             state['Gamma'] = np.asarray(self.Gamma)
 */
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_C, Py_None) < 0)) __PYX_ERR(0, 2447, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":2445
 *         state['stages'] = np.asarray(self.stages)
 *         state['Ng'] = (self.atom.ng.Norder, self.atom.ng.Nperiod, self.atom.ng.Ndelay)
 *         if self.detailed:             # <<<<<<<<<<<<<<
 *             state['Gamma'] = None
 *             state['C'] = None
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":2449
 *             state['C'] = None
 *         else:
 *             state['Gamma'] = np.asarray(self.Gamma)             # <<<<<<<<<<<<<<
 *             state['C'] = np.asarray(self.C)
 *         state['fsIterSchemeProperties'] = self.fsIterSchemeProperties
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2449, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2449, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_v_self->Gamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2449, __pyx_L1_error)}
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->Gamma, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2449, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_1, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2449, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Gamma, __pyx_t_4) < 0)) __PYX_ERR(0, 2449, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":2450
 *         else:
 *             state['Gamma'] = np.asarray(self.Gamma)
 *             state['C'] = np.asarray(self.C)             # <<<<<<<<<<<<<<
 *         state['fsIterSchemeProperties'] = self.fsIterSchemeProperties
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_v_self->C.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2450, __pyx_L1_error)}
    __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->C, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_4 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2450, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_C, __pyx_t_4) < 0)) __PYX_ERR(0, 2450, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":2451
 *             state['Gamma'] = np.asarray(self.Gamma)
 *             state['C'] = np.asarray(self.C)
 *         state['fsIterSchemeProperties'] = self.fsIterSchemeProperties             # <<<<<<<<<<<<<<
 * 
 *         return state
 */
  __pyx_t_4 = __pyx_v_self->fsIterSchemeProperties;
  __Pyx_INCREF(__pyx_t_4);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_fsIterSchemeProperties, __pyx_t_4) < 0)) __PYX_ERR(0, 2451, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2453
 *         state['fsIterSchemeProperties'] = self.fsIterSchemeProperties
 * 
 *         return state             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, state):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_state);
  __pyx_r = __pyx_v_state;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2431
 *             self.atom.ng = Ng(0,0,0, self.atom.n.flatten())
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['atomicModel'] = self.atomicModel
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2455
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.atomicModel = state['atomicModel']
 *         self.modelPops = state['modelPops']
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_4__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_4__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_state) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a = 0;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_lt = 0;
  int __pyx_v_Nlevel;
  int __pyx_v_Ntrans;
  PyObject *__pyx_v_ng = NULL;
  bool __pyx_v_defaultPerAtomStorage;
  bool __pyx_v_defaultWlaGijStorage;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  bool __pyx_t_2;
  __Pyx_memviewslice __pyx_t_3 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  __Pyx_memviewslice __pyx_t_8 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View3D __pyx_t_9;
  __Pyx_memviewslice __pyx_t_10 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  __pyx_t_11lightweaver_10LwCompiled_i64 __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":2456
 * 
 *     def __setstate__(self, state):
 *         self.atomicModel = state['atomicModel']             # <<<<<<<<<<<<<<
 *         self.modelPops = state['modelPops']
 *         cdef LwAtmosphere a = state['atmos']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_atomicModel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2456, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->atomicModel);
  __Pyx_DECREF(__pyx_v_self->atomicModel);
  __pyx_v_self->atomicModel = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2457
 *     def __setstate__(self, state):
 *         self.atomicModel = state['atomicModel']
 *         self.modelPops = state['modelPops']             # <<<<<<<<<<<<<<
 *         cdef LwAtmosphere a = state['atmos']
 *         self.atmos = a
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_modelPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->modelPops);
  __Pyx_DECREF(__pyx_v_self->modelPops);
  __pyx_v_self->modelPops = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2458
 *         self.atomicModel = state['atomicModel']
 *         self.modelPops = state['modelPops']
 *         cdef LwAtmosphere a = state['atmos']             # <<<<<<<<<<<<<<
 *         self.atmos = a
 *         self.atom.atmos = &a.atmos
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_atmos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2458, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere))))) __PYX_ERR(0, 2458, __pyx_L1_error)
  __pyx_v_a = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2459
 *         self.modelPops = state['modelPops']
 *         cdef LwAtmosphere a = state['atmos']
 *         self.atmos = a             # <<<<<<<<<<<<<<
 *         self.atom.atmos = &a.atmos
 *         self.eqPops = state['eqPops']
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_a));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_a));
  __Pyx_GOTREF(__pyx_v_self->atmos);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atmos));
  __pyx_v_self->atmos = __pyx_v_a;

  /* "Source/LwMiddleLayer.pyx":2460
 *         cdef LwAtmosphere a = state['atmos']
 *         self.atmos = a
 *         self.atom.atmos = &a.atmos             # <<<<<<<<<<<<<<
 *         self.eqPops = state['eqPops']
 * 
 */
  __pyx_v_self->atom.atmos = (&__pyx_v_a->atmos);

  /* "Source/LwMiddleLayer.pyx":2461
 *         self.atmos = a
 *         self.atom.atmos = &a.atmos
 *         self.eqPops = state['eqPops']             # <<<<<<<<<<<<<<
 * 
 *         self.detailed = state['detailed']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_eqPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2463
 *         self.eqPops = state['eqPops']
 * 
 *         self.detailed = state['detailed']             # <<<<<<<<<<<<<<
 * 
 *         self.vBroad = state['vBroad']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_detailed); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2463, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2463, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->detailed = __pyx_t_2;

  /* "Source/LwMiddleLayer.pyx":2465
 *         self.detailed = state['detailed']
 * 
 *         self.vBroad = state['vBroad']             # <<<<<<<<<<<<<<
 *         self.atom.vBroad = f64_view(self.vBroad)
 *         self.nTotal = state['nTotal']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_vBroad); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2465, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 2465, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->vBroad, 0);
  __pyx_v_self->vBroad = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2466
 * 
 *         self.vBroad = state['vBroad']
 *         self.atom.vBroad = f64_view(self.vBroad)             # <<<<<<<<<<<<<<
 *         self.nTotal = state['nTotal']
 *         self.atom.nTotal = f64_view(self.nTotal)
 */
  if (unlikely(!__pyx_v_self->vBroad.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2466, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->vBroad);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2466, __pyx_L1_error)
  }
  __pyx_v_self->atom.vBroad = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":2467
 *         self.vBroad = state['vBroad']
 *         self.atom.vBroad = f64_view(self.vBroad)
 *         self.nTotal = state['nTotal']             # <<<<<<<<<<<<<<
 *         self.atom.nTotal = f64_view(self.nTotal)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_nTotal); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 2467, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->nTotal, 0);
  __pyx_v_self->nTotal = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2468
 *         self.atom.vBroad = f64_view(self.vBroad)
 *         self.nTotal = state['nTotal']
 *         self.atom.nTotal = f64_view(self.nTotal)             # <<<<<<<<<<<<<<
 * 
 *         self.trans = state['trans']
 */
  if (unlikely(!__pyx_v_self->nTotal.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2468, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->nTotal);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2468, __pyx_L1_error)
  }
  __pyx_v_self->atom.nTotal = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":2470
 *         self.atom.nTotal = f64_view(self.nTotal)
 * 
 *         self.trans = state['trans']             # <<<<<<<<<<<<<<
 *         cdef LwTransition lt
 *         for lt in self.trans:
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_trans); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2470, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 2470, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->trans);
  __Pyx_DECREF(__pyx_v_self->trans);
  __pyx_v_self->trans = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2472
 *         self.trans = state['trans']
 *         cdef LwTransition lt
 *         for lt in self.trans:             # <<<<<<<<<<<<<<
 *             self.atom.trans.push_back(&lt.trans)
 * 
 */
  if (unlikely(__pyx_v_self->trans == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 2472, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->trans; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_6 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_6); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 2472, __pyx_L1_error)
    #else
    __pyx_t_6 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2472, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    #endif
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_11lightweaver_10LwCompiled_LwTransition))))) __PYX_ERR(0, 2472, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_lt, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":2473
 *         cdef LwTransition lt
 *         for lt in self.trans:
 *             self.atom.trans.push_back(&lt.trans)             # <<<<<<<<<<<<<<
 * 
 *         cdef int Nlevel = len(self.atomicModel.levels)
 */
    try {
      __pyx_v_self->atom.trans.push_back((&__pyx_v_lt->trans));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2473, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":2472
 *         self.trans = state['trans']
 *         cdef LwTransition lt
 *         for lt in self.trans:             # <<<<<<<<<<<<<<
 *             self.atom.trans.push_back(&lt.trans)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2475
 *             self.atom.trans.push_back(&lt.trans)
 * 
 *         cdef int Nlevel = len(self.atomicModel.levels)             # <<<<<<<<<<<<<<
 *         cdef int Ntrans = len(self.trans)
 *         self.atom.Nlevel = Nlevel
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->atomicModel, __pyx_n_s_levels); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2475, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2475, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Nlevel = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":2476
 * 
 *         cdef int Nlevel = len(self.atomicModel.levels)
 *         cdef int Ntrans = len(self.trans)             # <<<<<<<<<<<<<<
 *         self.atom.Nlevel = Nlevel
 *         self.atom.Ntrans = Ntrans
 */
  __pyx_t_1 = __pyx_v_self->trans;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(__pyx_t_1 == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 2476, __pyx_L1_error)
  }
  __pyx_t_5 = PyList_GET_SIZE(__pyx_t_1); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 2476, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_Ntrans = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":2477
 *         cdef int Nlevel = len(self.atomicModel.levels)
 *         cdef int Ntrans = len(self.trans)
 *         self.atom.Nlevel = Nlevel             # <<<<<<<<<<<<<<
 *         self.atom.Ntrans = Ntrans
 * 
 */
  __pyx_v_self->atom.Nlevel = __pyx_v_Nlevel;

  /* "Source/LwMiddleLayer.pyx":2478
 *         cdef int Ntrans = len(self.trans)
 *         self.atom.Nlevel = Nlevel
 *         self.atom.Ntrans = Ntrans             # <<<<<<<<<<<<<<
 * 
 *         if not self.detailed:
 */
  __pyx_v_self->atom.Ntrans = __pyx_v_Ntrans;

  /* "Source/LwMiddleLayer.pyx":2480
 *         self.atom.Ntrans = Ntrans
 * 
 *         if not self.detailed:             # <<<<<<<<<<<<<<
 *             self.Gamma = state['Gamma']
 *             self.atom.Gamma = f64_view_3(self.Gamma)
 */
  __pyx_t_7 = ((!(__pyx_v_self->detailed != 0)) != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":2481
 * 
 *         if not self.detailed:
 *             self.Gamma = state['Gamma']             # <<<<<<<<<<<<<<
 *             self.atom.Gamma = f64_view_3(self.Gamma)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Gamma); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2481, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 2481, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->Gamma, 0);
    __pyx_v_self->Gamma = __pyx_t_8;
    __pyx_t_8.memview = NULL;
    __pyx_t_8.data = NULL;

    /* "Source/LwMiddleLayer.pyx":2482
 *         if not self.detailed:
 *             self.Gamma = state['Gamma']
 *             self.atom.Gamma = f64_view_3(self.Gamma)             # <<<<<<<<<<<<<<
 * 
 *             self.C = state['C']
 */
    if (unlikely(!__pyx_v_self->Gamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2482, __pyx_L1_error)}
    try {
      __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->Gamma);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2482, __pyx_L1_error)
    }
    __pyx_v_self->atom.Gamma = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":2484
 *             self.atom.Gamma = f64_view_3(self.Gamma)
 * 
 *             self.C = state['C']             # <<<<<<<<<<<<<<
 *             self.atom.C = f64_view_3(self.C)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_C); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2484, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_8.memview)) __PYX_ERR(0, 2484, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->C, 0);
    __pyx_v_self->C = __pyx_t_8;
    __pyx_t_8.memview = NULL;
    __pyx_t_8.data = NULL;

    /* "Source/LwMiddleLayer.pyx":2485
 * 
 *             self.C = state['C']
 *             self.atom.C = f64_view_3(self.C)             # <<<<<<<<<<<<<<
 * 
 *         self.stages = state['stages']
 */
    if (unlikely(!__pyx_v_self->C.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2485, __pyx_L1_error)}
    try {
      __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->C);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2485, __pyx_L1_error)
    }
    __pyx_v_self->atom.C = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":2480
 *         self.atom.Ntrans = Ntrans
 * 
 *         if not self.detailed:             # <<<<<<<<<<<<<<
 *             self.Gamma = state['Gamma']
 *             self.atom.Gamma = f64_view_3(self.Gamma)
 */
  }

  /* "Source/LwMiddleLayer.pyx":2487
 *             self.atom.C = f64_view_3(self.C)
 * 
 *         self.stages = state['stages']             # <<<<<<<<<<<<<<
 *         self.atom.stages = f64_view(self.stages)
 *         self.nStar = state['nStar']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_stages); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_3.memview)) __PYX_ERR(0, 2487, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->stages, 0);
  __pyx_v_self->stages = __pyx_t_3;
  __pyx_t_3.memview = NULL;
  __pyx_t_3.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2488
 * 
 *         self.stages = state['stages']
 *         self.atom.stages = f64_view(self.stages)             # <<<<<<<<<<<<<<
 *         self.nStar = state['nStar']
 *         self.atom.nStar = f64_view_2(self.nStar)
 */
  if (unlikely(!__pyx_v_self->stages.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2488, __pyx_L1_error)}
  try {
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->stages);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2488, __pyx_L1_error)
  }
  __pyx_v_self->atom.stages = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":2489
 *         self.stages = state['stages']
 *         self.atom.stages = f64_view(self.stages)
 *         self.nStar = state['nStar']             # <<<<<<<<<<<<<<
 *         self.atom.nStar = f64_view_2(self.nStar)
 *         self.n = state['n']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_nStar); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 2489, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->nStar, 0);
  __pyx_v_self->nStar = __pyx_t_10;
  __pyx_t_10.memview = NULL;
  __pyx_t_10.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2490
 *         self.atom.stages = f64_view(self.stages)
 *         self.nStar = state['nStar']
 *         self.atom.nStar = f64_view_2(self.nStar)             # <<<<<<<<<<<<<<
 *         self.n = state['n']
 *         self.atom.n = f64_view_2(self.n)
 */
  if (unlikely(!__pyx_v_self->nStar.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2490, __pyx_L1_error)}
  try {
    __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->nStar);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2490, __pyx_L1_error)
  }
  __pyx_v_self->atom.nStar = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":2491
 *         self.nStar = state['nStar']
 *         self.atom.nStar = f64_view_2(self.nStar)
 *         self.n = state['n']             # <<<<<<<<<<<<<<
 *         self.atom.n = f64_view_2(self.n)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_n); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2491, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 2491, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->n, 0);
  __pyx_v_self->n = __pyx_t_10;
  __pyx_t_10.memview = NULL;
  __pyx_t_10.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2492
 *         self.atom.nStar = f64_view_2(self.nStar)
 *         self.n = state['n']
 *         self.atom.n = f64_view_2(self.n)             # <<<<<<<<<<<<<<
 * 
 *         ng = state['Ng']
 */
  if (unlikely(!__pyx_v_self->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2492, __pyx_L1_error)}
  try {
    __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->n);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2492, __pyx_L1_error)
  }
  __pyx_v_self->atom.n = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":2494
 *         self.atom.n = f64_view_2(self.n)
 * 
 *         ng = state['Ng']             # <<<<<<<<<<<<<<
 *         self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())
 *         self.fsIterSchemeProperties = state['fsIterSchemeProperties']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Ng); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2494, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ng = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2495
 * 
 *         ng = state['Ng']
 *         self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())             # <<<<<<<<<<<<<<
 *         self.fsIterSchemeProperties = state['fsIterSchemeProperties']
 *         cdef bool_t defaultPerAtomStorage = self.fsIterSchemeProperties['defaultPerAtomStorage']
 */
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_ng, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2495, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2495, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_ng, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2495, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_13 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_13 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2495, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_ng, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2495, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_14 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_14 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2495, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->atom.ng = Ng(__pyx_t_12, __pyx_t_13, __pyx_t_14, __pyx_v_self->atom.n.flatten());

  /* "Source/LwMiddleLayer.pyx":2496
 *         ng = state['Ng']
 *         self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())
 *         self.fsIterSchemeProperties = state['fsIterSchemeProperties']             # <<<<<<<<<<<<<<
 *         cdef bool_t defaultPerAtomStorage = self.fsIterSchemeProperties['defaultPerAtomStorage']
 *         cdef bool_t defaultWlaGijStorage = self.fsIterSchemeProperties['defaultWlaGijStorage']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_fsIterSchemeProperties); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 2496, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->fsIterSchemeProperties);
  __Pyx_DECREF(__pyx_v_self->fsIterSchemeProperties);
  __pyx_v_self->fsIterSchemeProperties = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2497
 *         self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())
 *         self.fsIterSchemeProperties = state['fsIterSchemeProperties']
 *         cdef bool_t defaultPerAtomStorage = self.fsIterSchemeProperties['defaultPerAtomStorage']             # <<<<<<<<<<<<<<
 *         cdef bool_t defaultWlaGijStorage = self.fsIterSchemeProperties['defaultWlaGijStorage']
 *         self.atom.init_scratch(self.atmos.Nspace, self.detailed,
 */
  if (unlikely(__pyx_v_self->fsIterSchemeProperties == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 2497, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->fsIterSchemeProperties, __pyx_n_u_defaultPerAtomStorage); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2497, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_defaultPerAtomStorage = __pyx_t_2;

  /* "Source/LwMiddleLayer.pyx":2498
 *         self.fsIterSchemeProperties = state['fsIterSchemeProperties']
 *         cdef bool_t defaultPerAtomStorage = self.fsIterSchemeProperties['defaultPerAtomStorage']
 *         cdef bool_t defaultWlaGijStorage = self.fsIterSchemeProperties['defaultWlaGijStorage']             # <<<<<<<<<<<<<<
 *         self.atom.init_scratch(self.atmos.Nspace, self.detailed,
 *                                defaultWlaGijStorage, defaultPerAtomStorage)
 */
  if (unlikely(__pyx_v_self->fsIterSchemeProperties == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 2498, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->fsIterSchemeProperties, __pyx_n_u_defaultWlaGijStorage); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2498, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_defaultWlaGijStorage = __pyx_t_2;

  /* "Source/LwMiddleLayer.pyx":2499
 *         cdef bool_t defaultPerAtomStorage = self.fsIterSchemeProperties['defaultPerAtomStorage']
 *         cdef bool_t defaultWlaGijStorage = self.fsIterSchemeProperties['defaultWlaGijStorage']
 *         self.atom.init_scratch(self.atmos.Nspace, self.detailed,             # <<<<<<<<<<<<<<
 *                                defaultWlaGijStorage, defaultPerAtomStorage)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_15 = __Pyx_PyInt_As_int64_t(__pyx_t_1); if (unlikely((__pyx_t_15 == ((int64_t)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2499, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2500
 *         cdef bool_t defaultWlaGijStorage = self.fsIterSchemeProperties['defaultWlaGijStorage']
 *         self.atom.init_scratch(self.atmos.Nspace, self.detailed,
 *                                defaultWlaGijStorage, defaultPerAtomStorage)             # <<<<<<<<<<<<<<
 * 
 *     def load_pops_rates_prd_from_state(self, prevState, popsOnly=False, preserveProfiles=False):
 */
  __pyx_v_self->atom.init_scratch(__pyx_t_15, __pyx_v_self->detailed, __pyx_v_defaultWlaGijStorage, __pyx_v_defaultPerAtomStorage);

  /* "Source/LwMiddleLayer.pyx":2455
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.atomicModel = state['atomicModel']
 *         self.modelPops = state['modelPops']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_3, 1);
  __Pyx_XDECREF(__pyx_t_6);
  __PYX_XDEC_MEMVIEW(&__pyx_t_8, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_10, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF((PyObject *)__pyx_v_lt);
  __Pyx_XDECREF(__pyx_v_ng);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2502
 *                                defaultWlaGijStorage, defaultPerAtomStorage)
 * 
 *     def load_pops_rates_prd_from_state(self, prevState, popsOnly=False, preserveProfiles=False):             # <<<<<<<<<<<<<<
 *         if not self.detailed:
 *             np.asarray(self.n)[:] = prevState['n']
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_7load_pops_rates_prd_from_state(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_7load_pops_rates_prd_from_state(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_prevState = 0;
  PyObject *__pyx_v_popsOnly = 0;
  PyObject *__pyx_v_preserveProfiles = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_pops_rates_prd_from_state (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_prevState,&__pyx_n_s_popsOnly,&__pyx_n_s_preserveProfiles,0};
    PyObject* values[3] = {0,0,0};
    values[1] = ((PyObject *)Py_False);
    values[2] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_prevState)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_popsOnly);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_preserveProfiles);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "load_pops_rates_prd_from_state") < 0)) __PYX_ERR(0, 2502, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_prevState = values[0];
    __pyx_v_popsOnly = values[1];
    __pyx_v_preserveProfiles = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("load_pops_rates_prd_from_state", 0, 1, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2502, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.load_pops_rates_prd_from_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6load_pops_rates_prd_from_state(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), __pyx_v_prevState, __pyx_v_popsOnly, __pyx_v_preserveProfiles);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6load_pops_rates_prd_from_state(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_prevState, PyObject *__pyx_v_popsOnly, PyObject *__pyx_v_preserveProfiles) {
  PyObject *__pyx_v_ng = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *__pyx_v_t = 0;
  CYTHON_UNUSED int __pyx_v_i;
  PyObject *__pyx_v_st = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  int __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_pops_rates_prd_from_state", 0);

  /* "Source/LwMiddleLayer.pyx":2503
 * 
 *     def load_pops_rates_prd_from_state(self, prevState, popsOnly=False, preserveProfiles=False):
 *         if not self.detailed:             # <<<<<<<<<<<<<<
 *             np.asarray(self.n)[:] = prevState['n']
 *             ng = prevState['Ng']
 */
  __pyx_t_1 = ((!(__pyx_v_self->detailed != 0)) != 0);
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":2504
 *     def load_pops_rates_prd_from_state(self, prevState, popsOnly=False, preserveProfiles=False):
 *         if not self.detailed:
 *             np.asarray(self.n)[:] = prevState['n']             # <<<<<<<<<<<<<<
 *             ng = prevState['Ng']
 *             self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_n); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_v_self->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2504, __pyx_L1_error)}
    __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->n, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2504, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetSlice(__pyx_t_3, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 2504, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":2505
 *         if not self.detailed:
 *             np.asarray(self.n)[:] = prevState['n']
 *             ng = prevState['Ng']             # <<<<<<<<<<<<<<
 *             self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_Ng); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2505, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_ng = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":2506
 *             np.asarray(self.n)[:] = prevState['n']
 *             ng = prevState['Ng']
 *             self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())             # <<<<<<<<<<<<<<
 * 
 *         if popsOnly:
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_ng, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_7 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2506, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_ng, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2506, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_ng, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2506, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2506, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->atom.ng = Ng(__pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_v_self->atom.n.flatten());

    /* "Source/LwMiddleLayer.pyx":2503
 * 
 *     def load_pops_rates_prd_from_state(self, prevState, popsOnly=False, preserveProfiles=False):
 *         if not self.detailed:             # <<<<<<<<<<<<<<
 *             np.asarray(self.n)[:] = prevState['n']
 *             ng = prevState['Ng']
 */
  }

  /* "Source/LwMiddleLayer.pyx":2508
 *             self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())
 * 
 *         if popsOnly:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_popsOnly); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 2508, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "Source/LwMiddleLayer.pyx":2509
 * 
 *         if popsOnly:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef LwTransition t
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":2508
 *             self.atom.ng = Ng(ng[0], ng[1], ng[2], self.atom.n.flatten())
 * 
 *         if popsOnly:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2513
 *         cdef LwTransition t
 *         cdef int i
 *         for i, t in enumerate(self.trans):             # <<<<<<<<<<<<<<
 *             for st in prevState['trans']:
 *                 if st.transModel.i == t.i and st.transModel.j == t.j:
 */
  __pyx_t_9 = 0;
  __pyx_t_2 = __pyx_v_self->trans; __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
  for (;;) {
    if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 2513, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_11lightweaver_10LwCompiled_LwTransition))))) __PYX_ERR(0, 2513, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_t, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)__pyx_t_3));
    __pyx_t_3 = 0;
    __pyx_v_i = __pyx_t_9;
    __pyx_t_9 = (__pyx_t_9 + 1);

    /* "Source/LwMiddleLayer.pyx":2514
 *         cdef int i
 *         for i, t in enumerate(self.trans):
 *             for st in prevState['trans']:             # <<<<<<<<<<<<<<
 *                 if st.transModel.i == t.i and st.transModel.j == t.j:
 *                     t.load_rates_prd_from_state(st.__getstate__(), preserveProfiles=preserveProfiles)
 */
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_prevState, __pyx_n_u_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_5 = __pyx_t_3; __Pyx_INCREF(__pyx_t_5); __pyx_t_11 = 0;
      __pyx_t_12 = NULL;
    } else {
      __pyx_t_11 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2514, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_12 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 2514, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_12)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 2514, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2514, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 2514, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2514, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_12(__pyx_t_5);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 2514, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_st, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":2515
 *         for i, t in enumerate(self.trans):
 *             for st in prevState['trans']:
 *                 if st.transModel.i == t.i and st.transModel.j == t.j:             # <<<<<<<<<<<<<<
 *                     t.load_rates_prd_from_state(st.__getstate__(), preserveProfiles=preserveProfiles)
 *                     break
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_st, __pyx_n_s_transModel); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_i); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_t), __pyx_n_s_i); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_6 = PyObject_RichCompare(__pyx_t_4, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_13 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_13 < 0)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (__pyx_t_13) {
      } else {
        __pyx_t_1 = __pyx_t_13;
        goto __pyx_L10_bool_binop_done;
      }
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_st, __pyx_n_s_transModel); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_j); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_t), __pyx_n_s_j); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = PyObject_RichCompare(__pyx_t_3, __pyx_t_6, Py_EQ); __Pyx_XGOTREF(__pyx_t_4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_13 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely(__pyx_t_13 < 0)) __PYX_ERR(0, 2515, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_1 = __pyx_t_13;
      __pyx_L10_bool_binop_done:;
      if (__pyx_t_1) {

        /* "Source/LwMiddleLayer.pyx":2516
 *             for st in prevState['trans']:
 *                 if st.transModel.i == t.i and st.transModel.j == t.j:
 *                     t.load_rates_prd_from_state(st.__getstate__(), preserveProfiles=preserveProfiles)             # <<<<<<<<<<<<<<
 *                     break
 * 
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_t), __pyx_n_s_load_rates_prd_from_state); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2516, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_st, __pyx_n_s_getstate); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2516, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_14 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_6 = (__pyx_t_14) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_14) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2516, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2516, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
        __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2516, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_preserveProfiles, __pyx_v_preserveProfiles) < 0) __PYX_ERR(0, 2516, __pyx_L1_error)
        __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 2516, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

        /* "Source/LwMiddleLayer.pyx":2517
 *                 if st.transModel.i == t.i and st.transModel.j == t.j:
 *                     t.load_rates_prd_from_state(st.__getstate__(), preserveProfiles=preserveProfiles)
 *                     break             # <<<<<<<<<<<<<<
 * 
 *     def compute_collisions(self, fillDiagonal=False):
 */
        goto __pyx_L8_break;

        /* "Source/LwMiddleLayer.pyx":2515
 *         for i, t in enumerate(self.trans):
 *             for st in prevState['trans']:
 *                 if st.transModel.i == t.i and st.transModel.j == t.j:             # <<<<<<<<<<<<<<
 *                     t.load_rates_prd_from_state(st.__getstate__(), preserveProfiles=preserveProfiles)
 *                     break
 */
      }

      /* "Source/LwMiddleLayer.pyx":2514
 *         cdef int i
 *         for i, t in enumerate(self.trans):
 *             for st in prevState['trans']:             # <<<<<<<<<<<<<<
 *                 if st.transModel.i == t.i and st.transModel.j == t.j:
 *                     t.load_rates_prd_from_state(st.__getstate__(), preserveProfiles=preserveProfiles)
 */
    }
    __pyx_L8_break:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "Source/LwMiddleLayer.pyx":2513
 *         cdef LwTransition t
 *         cdef int i
 *         for i, t in enumerate(self.trans):             # <<<<<<<<<<<<<<
 *             for st in prevState['trans']:
 *                 if st.transModel.i == t.i and st.transModel.j == t.j:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":2502
 *                                defaultWlaGijStorage, defaultPerAtomStorage)
 * 
 *     def load_pops_rates_prd_from_state(self, prevState, popsOnly=False, preserveProfiles=False):             # <<<<<<<<<<<<<<
 *         if not self.detailed:
 *             np.asarray(self.n)[:] = prevState['n']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.load_pops_rates_prd_from_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ng);
  __Pyx_XDECREF((PyObject *)__pyx_v_t);
  __Pyx_XDECREF(__pyx_v_st);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2519
 *                     break
 * 
 *     def compute_collisions(self, fillDiagonal=False):             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=3] C = np.asarray(self.C)
 *         C.fill(0.0)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9compute_collisions(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9compute_collisions(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fillDiagonal = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_collisions (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fillDiagonal,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fillDiagonal);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_collisions") < 0)) __PYX_ERR(0, 2519, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fillDiagonal = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_collisions", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2519, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.compute_collisions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_8compute_collisions(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), __pyx_v_fillDiagonal);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_8compute_collisions(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_fillDiagonal) {
  PyArrayObject *__pyx_v_C = 0;
  PyObject *__pyx_v_col = NULL;
  int __pyx_v_k;
  int __pyx_v_i;
  int __pyx_v_j;
  __pyx_t_8CmoArray_f64 __pyx_v_CDiag;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_C;
  __Pyx_Buffer __pyx_pybuffer_C;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyArrayObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  npy_intp __pyx_t_12;
  npy_intp __pyx_t_13;
  npy_intp __pyx_t_14;
  npy_intp __pyx_t_15;
  int __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  int __pyx_t_20;
  npy_intp __pyx_t_21;
  npy_intp __pyx_t_22;
  int __pyx_t_23;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_collisions", 0);
  __pyx_pybuffer_C.pybuffer.buf = NULL;
  __pyx_pybuffer_C.refcount = 0;
  __pyx_pybuffernd_C.data = NULL;
  __pyx_pybuffernd_C.rcbuffer = &__pyx_pybuffer_C;

  /* "Source/LwMiddleLayer.pyx":2520
 * 
 *     def compute_collisions(self, fillDiagonal=False):
 *         cdef np.ndarray[np.double_t, ndim=3] C = np.asarray(self.C)             # <<<<<<<<<<<<<<
 *         C.fill(0.0)
 *         for col in self.atomicModel.collisions:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->C.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2520, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->C, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2520, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2520, __pyx_L1_error)
  __pyx_t_5 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_C.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 3, 0, __pyx_stack) == -1)) {
      __pyx_v_C = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_C.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 2520, __pyx_L1_error)
    } else {__pyx_pybuffernd_C.diminfo[0].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_C.diminfo[0].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_C.diminfo[1].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_C.diminfo[1].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[1]; __pyx_pybuffernd_C.diminfo[2].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[2]; __pyx_pybuffernd_C.diminfo[2].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[2];
    }
  }
  __pyx_t_5 = 0;
  __pyx_v_C = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2521
 *     def compute_collisions(self, fillDiagonal=False):
 *         cdef np.ndarray[np.double_t, ndim=3] C = np.asarray(self.C)
 *         C.fill(0.0)             # <<<<<<<<<<<<<<
 *         for col in self.atomicModel.collisions:
 *             col.compute_rates(self.atmos.pyAtmos, self.eqPops, C)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_C), __pyx_n_s_fill); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_float_0_0) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_float_0_0);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2521, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2522
 *         cdef np.ndarray[np.double_t, ndim=3] C = np.asarray(self.C)
 *         C.fill(0.0)
 *         for col in self.atomicModel.collisions:             # <<<<<<<<<<<<<<
 *             col.compute_rates(self.atmos.pyAtmos, self.eqPops, C)
 *         C[C < 0.0] = 0.0
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->atomicModel, __pyx_n_s_collisions); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
    __pyx_t_7 = NULL;
  } else {
    __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2522, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2522, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_7)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 2522, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2522, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 2522, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2522, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_7(__pyx_t_3);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 2522, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_col, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2523
 *         C.fill(0.0)
 *         for col in self.atomicModel.collisions:
 *             col.compute_rates(self.atmos.pyAtmos, self.eqPops, C)             # <<<<<<<<<<<<<<
 *         C[C < 0.0] = 0.0
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_col, __pyx_n_s_compute_rates); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2523, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_8 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_self->atmos->pyAtmos, __pyx_v_self->eqPops, ((PyObject *)__pyx_v_C)};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 3+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2523, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[4] = {__pyx_t_4, __pyx_v_self->atmos->pyAtmos, __pyx_v_self->eqPops, ((PyObject *)__pyx_v_C)};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_8, 3+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2523, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GOTREF(__pyx_t_1);
    } else
    #endif
    {
      __pyx_t_9 = PyTuple_New(3+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2523, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_4) {
        __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_4); __pyx_t_4 = NULL;
      }
      __Pyx_INCREF(__pyx_v_self->atmos->pyAtmos);
      __Pyx_GIVEREF(__pyx_v_self->atmos->pyAtmos);
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_v_self->atmos->pyAtmos);
      __Pyx_INCREF(__pyx_v_self->eqPops);
      __Pyx_GIVEREF(__pyx_v_self->eqPops);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_v_self->eqPops);
      __Pyx_INCREF(((PyObject *)__pyx_v_C));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_C));
      PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_8, ((PyObject *)__pyx_v_C));
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2523, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2522
 *         cdef np.ndarray[np.double_t, ndim=3] C = np.asarray(self.C)
 *         C.fill(0.0)
 *         for col in self.atomicModel.collisions:             # <<<<<<<<<<<<<<
 *             col.compute_rates(self.atmos.pyAtmos, self.eqPops, C)
 *         C[C < 0.0] = 0.0
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":2524
 *         for col in self.atomicModel.collisions:
 *             col.compute_rates(self.atmos.pyAtmos, self.eqPops, C)
 *         C[C < 0.0] = 0.0             # <<<<<<<<<<<<<<
 * 
 *         if not fillDiagonal:
 */
  __pyx_t_3 = PyObject_RichCompare(((PyObject *)__pyx_v_C), __pyx_float_0_0, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2524, __pyx_L1_error)
  if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_C), __pyx_t_3, __pyx_float_0_0) < 0)) __PYX_ERR(0, 2524, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":2526
 *         C[C < 0.0] = 0.0
 * 
 *         if not fillDiagonal:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_v_fillDiagonal); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 2526, __pyx_L1_error)
  __pyx_t_11 = ((!__pyx_t_10) != 0);
  if (__pyx_t_11) {

    /* "Source/LwMiddleLayer.pyx":2527
 * 
 *         if not fillDiagonal:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef int k
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":2526
 *         C[C < 0.0] = 0.0
 * 
 *         if not fillDiagonal:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2533
 *         cdef int j
 *         cdef f64 CDiag
 *         for k in range(C.shape[2]):             # <<<<<<<<<<<<<<
 *             for i in range(C.shape[0]):
 *                 CDiag = 0.0
 */
  __pyx_t_12 = (__pyx_v_C->dimensions[2]);
  __pyx_t_13 = __pyx_t_12;
  for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_13; __pyx_t_8+=1) {
    __pyx_v_k = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":2534
 *         cdef f64 CDiag
 *         for k in range(C.shape[2]):
 *             for i in range(C.shape[0]):             # <<<<<<<<<<<<<<
 *                 CDiag = 0.0
 *                 C[i, i, k] = 0.0
 */
    __pyx_t_14 = (__pyx_v_C->dimensions[0]);
    __pyx_t_15 = __pyx_t_14;
    for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
      __pyx_v_i = __pyx_t_16;

      /* "Source/LwMiddleLayer.pyx":2535
 *         for k in range(C.shape[2]):
 *             for i in range(C.shape[0]):
 *                 CDiag = 0.0             # <<<<<<<<<<<<<<
 *                 C[i, i, k] = 0.0
 *                 for j in range(C.shape[0]):
 */
      __pyx_v_CDiag = 0.0;

      /* "Source/LwMiddleLayer.pyx":2536
 *             for i in range(C.shape[0]):
 *                 CDiag = 0.0
 *                 C[i, i, k] = 0.0             # <<<<<<<<<<<<<<
 *                 for j in range(C.shape[0]):
 *                     CDiag += C[j, i, k]
 */
      __pyx_t_17 = __pyx_v_i;
      __pyx_t_18 = __pyx_v_i;
      __pyx_t_19 = __pyx_v_k;
      __pyx_t_20 = -1;
      if (__pyx_t_17 < 0) {
        __pyx_t_17 += __pyx_pybuffernd_C.diminfo[0].shape;
        if (unlikely(__pyx_t_17 < 0)) __pyx_t_20 = 0;
      } else if (unlikely(__pyx_t_17 >= __pyx_pybuffernd_C.diminfo[0].shape)) __pyx_t_20 = 0;
      if (__pyx_t_18 < 0) {
        __pyx_t_18 += __pyx_pybuffernd_C.diminfo[1].shape;
        if (unlikely(__pyx_t_18 < 0)) __pyx_t_20 = 1;
      } else if (unlikely(__pyx_t_18 >= __pyx_pybuffernd_C.diminfo[1].shape)) __pyx_t_20 = 1;
      if (__pyx_t_19 < 0) {
        __pyx_t_19 += __pyx_pybuffernd_C.diminfo[2].shape;
        if (unlikely(__pyx_t_19 < 0)) __pyx_t_20 = 2;
      } else if (unlikely(__pyx_t_19 >= __pyx_pybuffernd_C.diminfo[2].shape)) __pyx_t_20 = 2;
      if (unlikely(__pyx_t_20 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_20);
        __PYX_ERR(0, 2536, __pyx_L1_error)
      }
      *__Pyx_BufPtrStrided3d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_C.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_C.diminfo[0].strides, __pyx_t_18, __pyx_pybuffernd_C.diminfo[1].strides, __pyx_t_19, __pyx_pybuffernd_C.diminfo[2].strides) = 0.0;

      /* "Source/LwMiddleLayer.pyx":2537
 *                 CDiag = 0.0
 *                 C[i, i, k] = 0.0
 *                 for j in range(C.shape[0]):             # <<<<<<<<<<<<<<
 *                     CDiag += C[j, i, k]
 *                 C[i, i, k] = -CDiag
 */
      __pyx_t_21 = (__pyx_v_C->dimensions[0]);
      __pyx_t_22 = __pyx_t_21;
      for (__pyx_t_20 = 0; __pyx_t_20 < __pyx_t_22; __pyx_t_20+=1) {
        __pyx_v_j = __pyx_t_20;

        /* "Source/LwMiddleLayer.pyx":2538
 *                 C[i, i, k] = 0.0
 *                 for j in range(C.shape[0]):
 *                     CDiag += C[j, i, k]             # <<<<<<<<<<<<<<
 *                 C[i, i, k] = -CDiag
 * 
 */
        __pyx_t_19 = __pyx_v_j;
        __pyx_t_18 = __pyx_v_i;
        __pyx_t_17 = __pyx_v_k;
        __pyx_t_23 = -1;
        if (__pyx_t_19 < 0) {
          __pyx_t_19 += __pyx_pybuffernd_C.diminfo[0].shape;
          if (unlikely(__pyx_t_19 < 0)) __pyx_t_23 = 0;
        } else if (unlikely(__pyx_t_19 >= __pyx_pybuffernd_C.diminfo[0].shape)) __pyx_t_23 = 0;
        if (__pyx_t_18 < 0) {
          __pyx_t_18 += __pyx_pybuffernd_C.diminfo[1].shape;
          if (unlikely(__pyx_t_18 < 0)) __pyx_t_23 = 1;
        } else if (unlikely(__pyx_t_18 >= __pyx_pybuffernd_C.diminfo[1].shape)) __pyx_t_23 = 1;
        if (__pyx_t_17 < 0) {
          __pyx_t_17 += __pyx_pybuffernd_C.diminfo[2].shape;
          if (unlikely(__pyx_t_17 < 0)) __pyx_t_23 = 2;
        } else if (unlikely(__pyx_t_17 >= __pyx_pybuffernd_C.diminfo[2].shape)) __pyx_t_23 = 2;
        if (unlikely(__pyx_t_23 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_23);
          __PYX_ERR(0, 2538, __pyx_L1_error)
        }
        __pyx_v_CDiag = (__pyx_v_CDiag + (*__Pyx_BufPtrStrided3d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_C.rcbuffer->pybuffer.buf, __pyx_t_19, __pyx_pybuffernd_C.diminfo[0].strides, __pyx_t_18, __pyx_pybuffernd_C.diminfo[1].strides, __pyx_t_17, __pyx_pybuffernd_C.diminfo[2].strides)));
      }

      /* "Source/LwMiddleLayer.pyx":2539
 *                 for j in range(C.shape[0]):
 *                     CDiag += C[j, i, k]
 *                 C[i, i, k] = -CDiag             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_17 = __pyx_v_i;
      __pyx_t_18 = __pyx_v_i;
      __pyx_t_19 = __pyx_v_k;
      __pyx_t_20 = -1;
      if (__pyx_t_17 < 0) {
        __pyx_t_17 += __pyx_pybuffernd_C.diminfo[0].shape;
        if (unlikely(__pyx_t_17 < 0)) __pyx_t_20 = 0;
      } else if (unlikely(__pyx_t_17 >= __pyx_pybuffernd_C.diminfo[0].shape)) __pyx_t_20 = 0;
      if (__pyx_t_18 < 0) {
        __pyx_t_18 += __pyx_pybuffernd_C.diminfo[1].shape;
        if (unlikely(__pyx_t_18 < 0)) __pyx_t_20 = 1;
      } else if (unlikely(__pyx_t_18 >= __pyx_pybuffernd_C.diminfo[1].shape)) __pyx_t_20 = 1;
      if (__pyx_t_19 < 0) {
        __pyx_t_19 += __pyx_pybuffernd_C.diminfo[2].shape;
        if (unlikely(__pyx_t_19 < 0)) __pyx_t_20 = 2;
      } else if (unlikely(__pyx_t_19 >= __pyx_pybuffernd_C.diminfo[2].shape)) __pyx_t_20 = 2;
      if (unlikely(__pyx_t_20 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_20);
        __PYX_ERR(0, 2539, __pyx_L1_error)
      }
      *__Pyx_BufPtrStrided3d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_C.rcbuffer->pybuffer.buf, __pyx_t_17, __pyx_pybuffernd_C.diminfo[0].strides, __pyx_t_18, __pyx_pybuffernd_C.diminfo[1].strides, __pyx_t_19, __pyx_pybuffernd_C.diminfo[2].strides) = (-__pyx_v_CDiag);
    }
  }

  /* "Source/LwMiddleLayer.pyx":2519
 *                     break
 * 
 *     def compute_collisions(self, fillDiagonal=False):             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=3] C = np.asarray(self.C)
 *         C.fill(0.0)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.compute_collisions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_C);
  __Pyx_XDECREF(__pyx_v_col);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2542
 * 
 * 
 *     cpdef set_pops_escape_probability(self, LwAtmosphere a, LwBackground bg, conserveCharge=False, int Niter=100):             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=3] Gamma
 *         cdef np.ndarray[np.double_t, ndim=3] C
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11set_pops_escape_probability(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a, struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_bg, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability *__pyx_optional_args) {
  PyObject *__pyx_v_conserveCharge = ((PyObject *)Py_False);
  int __pyx_v_Niter = ((int)0x64);
  PyArrayObject *__pyx_v_Gamma = 0;
  PyArrayObject *__pyx_v_C = 0;
  __pyx_t_8CmoArray_f64 __pyx_v_delta;
  NgChange __pyx_v_maxChange;
  int __pyx_v_k;
  PyArrayObject *__pyx_v_deltaNe = 0;
  PyObject *__pyx_v_prevN = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_start = NULL;
  CYTHON_UNUSED int __pyx_v_it;
  CYTHON_UNUSED PyObject *__pyx_v_end = NULL;
  PyObject *__pyx_v_n = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_C;
  __Pyx_Buffer __pyx_pybuffer_C;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_Gamma;
  __Pyx_Buffer __pyx_pybuffer_Gamma;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_deltaNe;
  __Pyx_Buffer __pyx_pybuffer_deltaNe;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyArrayObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  __pyx_t_8CmoArray_f64 __pyx_t_17;
  PyArrayObject *__pyx_t_18 = NULL;
  long __pyx_t_19;
  long __pyx_t_20;
  Py_ssize_t __pyx_t_21;
  Py_ssize_t __pyx_t_22;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_pops_escape_probability", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_conserveCharge = __pyx_optional_args->conserveCharge;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_Niter = __pyx_optional_args->Niter;
      }
    }
  }
  __pyx_pybuffer_Gamma.pybuffer.buf = NULL;
  __pyx_pybuffer_Gamma.refcount = 0;
  __pyx_pybuffernd_Gamma.data = NULL;
  __pyx_pybuffernd_Gamma.rcbuffer = &__pyx_pybuffer_Gamma;
  __pyx_pybuffer_C.pybuffer.buf = NULL;
  __pyx_pybuffer_C.refcount = 0;
  __pyx_pybuffernd_C.data = NULL;
  __pyx_pybuffernd_C.rcbuffer = &__pyx_pybuffer_C;
  __pyx_pybuffer_deltaNe.pybuffer.buf = NULL;
  __pyx_pybuffer_deltaNe.refcount = 0;
  __pyx_pybuffernd_deltaNe.data = NULL;
  __pyx_pybuffernd_deltaNe.rcbuffer = &__pyx_pybuffer_deltaNe;
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_pops_escape_probability); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2542, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11set_pops_escape_probability)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_Niter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2542, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[5] = {__pyx_t_5, ((PyObject *)__pyx_v_a), ((PyObject *)__pyx_v_bg), __pyx_v_conserveCharge, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 4+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2542, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[5] = {__pyx_t_5, ((PyObject *)__pyx_v_a), ((PyObject *)__pyx_v_bg), __pyx_v_conserveCharge, __pyx_t_3};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 4+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2542, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        {
          __pyx_t_7 = PyTuple_New(4+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2542, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (__pyx_t_5) {
            __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
          }
          __Pyx_INCREF(((PyObject *)__pyx_v_a));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_a));
          PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, ((PyObject *)__pyx_v_a));
          __Pyx_INCREF(((PyObject *)__pyx_v_bg));
          __Pyx_GIVEREF(((PyObject *)__pyx_v_bg));
          PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, ((PyObject *)__pyx_v_bg));
          __Pyx_INCREF(__pyx_v_conserveCharge);
          __Pyx_GIVEREF(__pyx_v_conserveCharge);
          PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_6, __pyx_v_conserveCharge);
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_7, 3+__pyx_t_6, __pyx_t_3);
          __pyx_t_3 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2542, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":2550
 *         cdef np.ndarray[np.double_t, ndim=1] deltaNe
 * 
 *         self.compute_collisions()             # <<<<<<<<<<<<<<
 *         Gamma = np.asarray(self.Gamma)
 *         C = np.asarray(self.C)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_compute_collisions); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2551
 * 
 *         self.compute_collisions()
 *         Gamma = np.asarray(self.Gamma)             # <<<<<<<<<<<<<<
 *         C = np.asarray(self.C)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->Gamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2551, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->Gamma, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2551, __pyx_L1_error)
  __pyx_t_8 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer);
    __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack);
    if (unlikely(__pyx_t_6 < 0)) {
      PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer, (PyObject*)__pyx_v_Gamma, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
      }
      __pyx_t_9 = __pyx_t_10 = __pyx_t_11 = 0;
    }
    __pyx_pybuffernd_Gamma.diminfo[0].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_Gamma.diminfo[0].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_Gamma.diminfo[1].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_Gamma.diminfo[1].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[1]; __pyx_pybuffernd_Gamma.diminfo[2].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[2]; __pyx_pybuffernd_Gamma.diminfo[2].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[2];
    if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 2551, __pyx_L1_error)
  }
  __pyx_t_8 = 0;
  __pyx_v_Gamma = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2552
 *         self.compute_collisions()
 *         Gamma = np.asarray(self.Gamma)
 *         C = np.asarray(self.C)             # <<<<<<<<<<<<<<
 * 
 *         if conserveCharge:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->C.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2552, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->C, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2552, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2552, __pyx_L1_error)
  __pyx_t_12 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
    __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_C.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack);
    if (unlikely(__pyx_t_6 < 0)) {
      PyErr_Fetch(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_C.rcbuffer->pybuffer, (PyObject*)__pyx_v_C, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_11); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_9);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_11, __pyx_t_10, __pyx_t_9);
      }
      __pyx_t_11 = __pyx_t_10 = __pyx_t_9 = 0;
    }
    __pyx_pybuffernd_C.diminfo[0].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_C.diminfo[0].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_C.diminfo[1].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_C.diminfo[1].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[1]; __pyx_pybuffernd_C.diminfo[2].strides = __pyx_pybuffernd_C.rcbuffer->pybuffer.strides[2]; __pyx_pybuffernd_C.diminfo[2].shape = __pyx_pybuffernd_C.rcbuffer->pybuffer.shape[2];
    if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 2552, __pyx_L1_error)
  }
  __pyx_t_12 = 0;
  __pyx_v_C = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2554
 *         C = np.asarray(self.C)
 * 
 *         if conserveCharge:             # <<<<<<<<<<<<<<
 *             prevN = np.copy(self.n)
 * 
 */
  __pyx_t_13 = __Pyx_PyObject_IsTrue(__pyx_v_conserveCharge); if (unlikely(__pyx_t_13 < 0)) __PYX_ERR(0, 2554, __pyx_L1_error)
  if (__pyx_t_13) {

    /* "Source/LwMiddleLayer.pyx":2555
 * 
 *         if conserveCharge:
 *             prevN = np.copy(self.n)             # <<<<<<<<<<<<<<
 * 
 *         self.atom.ng = Ng(0,0,0, self.atom.n.flatten())
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_v_self->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2555, __pyx_L1_error)}
    __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->n, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_prevN = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2554
 *         C = np.asarray(self.C)
 * 
 *         if conserveCharge:             # <<<<<<<<<<<<<<
 *             prevN = np.copy(self.n)
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2557
 *             prevN = np.copy(self.n)
 * 
 *         self.atom.ng = Ng(0,0,0, self.atom.n.flatten())             # <<<<<<<<<<<<<<
 *         start = time.time()
 *         for it in range(Niter):
 */
  __pyx_v_self->atom.ng = Ng(0, 0, 0, __pyx_v_self->atom.n.flatten());

  /* "Source/LwMiddleLayer.pyx":2558
 * 
 *         self.atom.ng = Ng(0,0,0, self.atom.n.flatten())
 *         start = time.time()             # <<<<<<<<<<<<<<
 *         for it in range(Niter):
 *             Gamma.fill(0.0)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_time); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_time); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2558, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_start = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2559
 *         self.atom.ng = Ng(0,0,0, self.atom.n.flatten())
 *         start = time.time()
 *         for it in range(Niter):             # <<<<<<<<<<<<<<
 *             Gamma.fill(0.0)
 *             Gamma += C
 */
  __pyx_t_6 = __pyx_v_Niter;
  __pyx_t_14 = __pyx_t_6;
  for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
    __pyx_v_it = __pyx_t_15;

    /* "Source/LwMiddleLayer.pyx":2560
 *         start = time.time()
 *         for it in range(Niter):
 *             Gamma.fill(0.0)             # <<<<<<<<<<<<<<
 *             Gamma += C
 *             gamma_matrices_escape_prob(&self.atom, bg.background, a.atmos)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_Gamma), __pyx_n_s_fill); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2560, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_float_0_0) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_float_0_0);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2560, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2561
 *         for it in range(Niter):
 *             Gamma.fill(0.0)
 *             Gamma += C             # <<<<<<<<<<<<<<
 *             gamma_matrices_escape_prob(&self.atom, bg.background, a.atmos)
 *             try:
 */
    __pyx_t_1 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_Gamma), ((PyObject *)__pyx_v_C)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2561, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2561, __pyx_L1_error)
    __pyx_t_8 = ((PyArrayObject *)__pyx_t_1);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer);
      __pyx_t_16 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack);
      if (unlikely(__pyx_t_16 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer, (PyObject*)__pyx_v_Gamma, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        }
        __pyx_t_9 = __pyx_t_10 = __pyx_t_11 = 0;
      }
      __pyx_pybuffernd_Gamma.diminfo[0].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_Gamma.diminfo[0].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_Gamma.diminfo[1].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_Gamma.diminfo[1].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[1]; __pyx_pybuffernd_Gamma.diminfo[2].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[2]; __pyx_pybuffernd_Gamma.diminfo[2].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[2];
      if (unlikely(__pyx_t_16 < 0)) __PYX_ERR(0, 2561, __pyx_L1_error)
    }
    __pyx_t_8 = 0;
    __Pyx_DECREF_SET(__pyx_v_Gamma, ((PyArrayObject *)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2562
 *             Gamma.fill(0.0)
 *             Gamma += C
 *             gamma_matrices_escape_prob(&self.atom, bg.background, a.atmos)             # <<<<<<<<<<<<<<
 *             try:
 *                 stat_eq_impl(&self.atom)
 */
    EscapeProbability::gamma_matrices_escape_prob((&__pyx_v_self->atom), __pyx_v_bg->background, __pyx_v_a->atmos);

    /* "Source/LwMiddleLayer.pyx":2563
 *             Gamma += C
 *             gamma_matrices_escape_prob(&self.atom, bg.background, a.atmos)
 *             try:             # <<<<<<<<<<<<<<
 *                 stat_eq_impl(&self.atom)
 *             except:
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_10, &__pyx_t_9);
      __Pyx_XGOTREF(__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_10);
      __Pyx_XGOTREF(__pyx_t_9);
      /*try:*/ {

        /* "Source/LwMiddleLayer.pyx":2564
 *             gamma_matrices_escape_prob(&self.atom, bg.background, a.atmos)
 *             try:
 *                 stat_eq_impl(&self.atom)             # <<<<<<<<<<<<<<
 *             except:
 *                 raise ExplodingMatrixError('Singular Matrix')
 */
        try {
          stat_eq_impl((&__pyx_v_self->atom));
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 2564, __pyx_L6_error)
        }

        /* "Source/LwMiddleLayer.pyx":2563
 *             Gamma += C
 *             gamma_matrices_escape_prob(&self.atom, bg.background, a.atmos)
 *             try:             # <<<<<<<<<<<<<<
 *                 stat_eq_impl(&self.atom)
 *             except:
 */
      }
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L13_try_end;
      __pyx_L6_error:;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "Source/LwMiddleLayer.pyx":2565
 *             try:
 *                 stat_eq_impl(&self.atom)
 *             except:             # <<<<<<<<<<<<<<
 *                 raise ExplodingMatrixError('Singular Matrix')
 *             self.atom.ng.accelerate(self.atom.n.flatten())
 */
      /*except:*/ {
        __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.set_pops_escape_probability", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_4) < 0) __PYX_ERR(0, 2565, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_GOTREF(__pyx_t_4);

        /* "Source/LwMiddleLayer.pyx":2566
 *                 stat_eq_impl(&self.atom)
 *             except:
 *                 raise ExplodingMatrixError('Singular Matrix')             # <<<<<<<<<<<<<<
 *             self.atom.ng.accelerate(self.atom.n.flatten())
 *             maxChange = self.atom.ng.max_change()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_ExplodingMatrixError); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2566, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_u_Singular_Matrix) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_u_Singular_Matrix);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2566, __pyx_L8_except_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_7, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __PYX_ERR(0, 2566, __pyx_L8_except_error)
      }
      __pyx_L8_except_error:;

      /* "Source/LwMiddleLayer.pyx":2563
 *             Gamma += C
 *             gamma_matrices_escape_prob(&self.atom, bg.background, a.atmos)
 *             try:             # <<<<<<<<<<<<<<
 *                 stat_eq_impl(&self.atom)
 *             except:
 */
      __Pyx_XGIVEREF(__pyx_t_11);
      __Pyx_XGIVEREF(__pyx_t_10);
      __Pyx_XGIVEREF(__pyx_t_9);
      __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_10, __pyx_t_9);
      goto __pyx_L1_error;
      __pyx_L13_try_end:;
    }

    /* "Source/LwMiddleLayer.pyx":2567
 *             except:
 *                 raise ExplodingMatrixError('Singular Matrix')
 *             self.atom.ng.accelerate(self.atom.n.flatten())             # <<<<<<<<<<<<<<
 *             maxChange = self.atom.ng.max_change()
 *             delta = maxChange.dMax
 */
    (void)(__pyx_v_self->atom.ng.accelerate(__pyx_v_self->atom.n.flatten()));

    /* "Source/LwMiddleLayer.pyx":2568
 *                 raise ExplodingMatrixError('Singular Matrix')
 *             self.atom.ng.accelerate(self.atom.n.flatten())
 *             maxChange = self.atom.ng.max_change()             # <<<<<<<<<<<<<<
 *             delta = maxChange.dMax
 *             if delta < 3e-2:
 */
    __pyx_v_maxChange = __pyx_v_self->atom.ng.max_change();

    /* "Source/LwMiddleLayer.pyx":2569
 *             self.atom.ng.accelerate(self.atom.n.flatten())
 *             maxChange = self.atom.ng.max_change()
 *             delta = maxChange.dMax             # <<<<<<<<<<<<<<
 *             if delta < 3e-2:
 *                 end = time.time()
 */
    __pyx_t_17 = __pyx_v_maxChange.dMax;
    __pyx_v_delta = __pyx_t_17;

    /* "Source/LwMiddleLayer.pyx":2570
 *             maxChange = self.atom.ng.max_change()
 *             delta = maxChange.dMax
 *             if delta < 3e-2:             # <<<<<<<<<<<<<<
 *                 end = time.time()
 *                 break
 */
    __pyx_t_13 = ((__pyx_v_delta < 3e-2) != 0);
    if (__pyx_t_13) {

      /* "Source/LwMiddleLayer.pyx":2571
 *             delta = maxChange.dMax
 *             if delta < 3e-2:
 *                 end = time.time()             # <<<<<<<<<<<<<<
 *                 break
 *         else:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2571, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_time); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2571, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
        }
      }
      __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_1);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2571, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_end = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "Source/LwMiddleLayer.pyx":2572
 *             if delta < 3e-2:
 *                 end = time.time()
 *                 break             # <<<<<<<<<<<<<<
 *         else:
 *             print('Escape probability didn\'t converge for %s, setting LTE populations' % self.atomicModel.element.name)
 */
      goto __pyx_L5_break;

      /* "Source/LwMiddleLayer.pyx":2570
 *             maxChange = self.atom.ng.max_change()
 *             delta = maxChange.dMax
 *             if delta < 3e-2:             # <<<<<<<<<<<<<<
 *                 end = time.time()
 *                 break
 */
    }
  }
  /*else*/ {

    /* "Source/LwMiddleLayer.pyx":2574
 *                 break
 *         else:
 *             print('Escape probability didn\'t converge for %s, setting LTE populations' % self.atomicModel.element.name)             # <<<<<<<<<<<<<<
 *             n = np.asarray(self.n)
 *             n[:] = np.asarray(self.nStar)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->atomicModel, __pyx_n_s_element); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_name); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyUnicode_FormatSafe(__pyx_kp_u_Escape_probability_didn_t_conver, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2575
 *         else:
 *             print('Escape probability didn\'t converge for %s, setting LTE populations' % self.atomicModel.element.name)
 *             n = np.asarray(self.n)             # <<<<<<<<<<<<<<
 *             n[:] = np.asarray(self.nStar)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2575, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2575, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_v_self->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2575, __pyx_L1_error)}
    __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->n, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2575, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_7, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2575, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_n = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2576
 *             print('Escape probability didn\'t converge for %s, setting LTE populations' % self.atomicModel.element.name)
 *             n = np.asarray(self.n)
 *             n[:] = np.asarray(self.nStar)             # <<<<<<<<<<<<<<
 * 
 *         if conserveCharge:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_v_self->nStar.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2576, __pyx_L1_error)}
    __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->nStar, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2576, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__Pyx_PyObject_SetSlice(__pyx_v_n, __pyx_t_1, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 2576, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L5_break:;

  /* "Source/LwMiddleLayer.pyx":2578
 *             n[:] = np.asarray(self.nStar)
 * 
 *         if conserveCharge:             # <<<<<<<<<<<<<<
 *             deltaNe = np.sum((np.asarray(self.n) - prevN) * np.asarray(self.stages)[:, None], axis=0)
 * 
 */
  __pyx_t_13 = __Pyx_PyObject_IsTrue(__pyx_v_conserveCharge); if (unlikely(__pyx_t_13 < 0)) __PYX_ERR(0, 2578, __pyx_L1_error)
  if (__pyx_t_13) {

    /* "Source/LwMiddleLayer.pyx":2579
 * 
 *         if conserveCharge:
 *             deltaNe = np.sum((np.asarray(self.n) - prevN) * np.asarray(self.stages)[:, None], axis=0)             # <<<<<<<<<<<<<<
 * 
 *             for k in range(self.atmos.Nspace):
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_sum); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_v_self->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2579, __pyx_L1_error)}
    __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->n, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_v_prevN)) { __Pyx_RaiseUnboundLocalError("prevN"); __PYX_ERR(0, 2579, __pyx_L1_error) }
    __pyx_t_7 = PyNumber_Subtract(__pyx_t_1, __pyx_v_prevN); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_v_self->stages.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2579, __pyx_L1_error)}
    __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->stages, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_tuple__20); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_7, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_axis, __pyx_int_0) < 0) __PYX_ERR(0, 2579, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2579, __pyx_L1_error)
    __pyx_t_18 = ((PyArrayObject *)__pyx_t_7);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltaNe.rcbuffer->pybuffer);
      __pyx_t_6 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_deltaNe.rcbuffer->pybuffer, (PyObject*)__pyx_t_18, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_6 < 0)) {
        PyErr_Fetch(&__pyx_t_9, &__pyx_t_10, &__pyx_t_11);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_deltaNe.rcbuffer->pybuffer, (PyObject*)__pyx_v_deltaNe, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_9); Py_XDECREF(__pyx_t_10); Py_XDECREF(__pyx_t_11);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_9, __pyx_t_10, __pyx_t_11);
        }
        __pyx_t_9 = __pyx_t_10 = __pyx_t_11 = 0;
      }
      __pyx_pybuffernd_deltaNe.diminfo[0].strides = __pyx_pybuffernd_deltaNe.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_deltaNe.diminfo[0].shape = __pyx_pybuffernd_deltaNe.rcbuffer->pybuffer.shape[0];
      if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 2579, __pyx_L1_error)
    }
    __pyx_t_18 = 0;
    __pyx_v_deltaNe = ((PyArrayObject *)__pyx_t_7);
    __pyx_t_7 = 0;

    /* "Source/LwMiddleLayer.pyx":2581
 *             deltaNe = np.sum((np.asarray(self.n) - prevN) * np.asarray(self.stages)[:, None], axis=0)
 * 
 *             for k in range(self.atmos.Nspace):             # <<<<<<<<<<<<<<
 *                 self.atmos.ne[k] += deltaNe[k]
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2581, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_19 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_19 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 2581, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_20 = __pyx_t_19;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_20; __pyx_t_6+=1) {
      __pyx_v_k = __pyx_t_6;

      /* "Source/LwMiddleLayer.pyx":2582
 * 
 *             for k in range(self.atmos.Nspace):
 *                 self.atmos.ne[k] += deltaNe[k]             # <<<<<<<<<<<<<<
 * 
 *             for k in range(self.atmos.Nspace):
 */
      __pyx_t_21 = __pyx_v_k;
      __pyx_t_14 = -1;
      if (__pyx_t_21 < 0) {
        __pyx_t_21 += __pyx_pybuffernd_deltaNe.diminfo[0].shape;
        if (unlikely(__pyx_t_21 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_21 >= __pyx_pybuffernd_deltaNe.diminfo[0].shape)) __pyx_t_14 = 0;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        __PYX_ERR(0, 2582, __pyx_L1_error)
      }
      if (unlikely(!__pyx_v_self->atmos->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2582, __pyx_L1_error)}
      __pyx_t_22 = __pyx_v_k;
      __pyx_t_14 = -1;
      if (__pyx_t_22 < 0) {
        __pyx_t_22 += __pyx_v_self->atmos->ne.shape[0];
        if (unlikely(__pyx_t_22 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_22 >= __pyx_v_self->atmos->ne.shape[0])) __pyx_t_14 = 0;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        __PYX_ERR(0, 2582, __pyx_L1_error)
      }
      *((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->atmos->ne.data) + __pyx_t_22)) )) += (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_deltaNe.rcbuffer->pybuffer.buf, __pyx_t_21, __pyx_pybuffernd_deltaNe.diminfo[0].strides));
    }

    /* "Source/LwMiddleLayer.pyx":2584
 *                 self.atmos.ne[k] += deltaNe[k]
 * 
 *             for k in range(self.atmos.Nspace):             # <<<<<<<<<<<<<<
 *                 if self.atmos.ne[k] < 1e6:
 *                     self.atmos.ne[k] = 1e6
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 2584, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_19 = __Pyx_PyInt_As_long(__pyx_t_7); if (unlikely((__pyx_t_19 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 2584, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_20 = __pyx_t_19;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_20; __pyx_t_6+=1) {
      __pyx_v_k = __pyx_t_6;

      /* "Source/LwMiddleLayer.pyx":2585
 * 
 *             for k in range(self.atmos.Nspace):
 *                 if self.atmos.ne[k] < 1e6:             # <<<<<<<<<<<<<<
 *                     self.atmos.ne[k] = 1e6
 * 
 */
      if (unlikely(!__pyx_v_self->atmos->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2585, __pyx_L1_error)}
      __pyx_t_21 = __pyx_v_k;
      __pyx_t_14 = -1;
      if (__pyx_t_21 < 0) {
        __pyx_t_21 += __pyx_v_self->atmos->ne.shape[0];
        if (unlikely(__pyx_t_21 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_21 >= __pyx_v_self->atmos->ne.shape[0])) __pyx_t_14 = 0;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        __PYX_ERR(0, 2585, __pyx_L1_error)
      }
      __pyx_t_13 = (((*((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->atmos->ne.data) + __pyx_t_21)) ))) < 1e6) != 0);
      if (__pyx_t_13) {

        /* "Source/LwMiddleLayer.pyx":2586
 *             for k in range(self.atmos.Nspace):
 *                 if self.atmos.ne[k] < 1e6:
 *                     self.atmos.ne[k] = 1e6             # <<<<<<<<<<<<<<
 * 
 *     cpdef setup_wavelength(self, int la):
 */
        if (unlikely(!__pyx_v_self->atmos->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2586, __pyx_L1_error)}
        __pyx_t_21 = __pyx_v_k;
        __pyx_t_14 = -1;
        if (__pyx_t_21 < 0) {
          __pyx_t_21 += __pyx_v_self->atmos->ne.shape[0];
          if (unlikely(__pyx_t_21 < 0)) __pyx_t_14 = 0;
        } else if (unlikely(__pyx_t_21 >= __pyx_v_self->atmos->ne.shape[0])) __pyx_t_14 = 0;
        if (unlikely(__pyx_t_14 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_14);
          __PYX_ERR(0, 2586, __pyx_L1_error)
        }
        *((__pyx_t_8CmoArray_f64 *) ( /* dim=0 */ ((char *) (((__pyx_t_8CmoArray_f64 *) __pyx_v_self->atmos->ne.data) + __pyx_t_21)) )) = 1e6;

        /* "Source/LwMiddleLayer.pyx":2585
 * 
 *             for k in range(self.atmos.Nspace):
 *                 if self.atmos.ne[k] < 1e6:             # <<<<<<<<<<<<<<
 *                     self.atmos.ne[k] = 1e6
 * 
 */
      }
    }

    /* "Source/LwMiddleLayer.pyx":2578
 *             n[:] = np.asarray(self.nStar)
 * 
 *         if conserveCharge:             # <<<<<<<<<<<<<<
 *             deltaNe = np.sum((np.asarray(self.n) - prevN) * np.asarray(self.stages)[:, None], axis=0)
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2542
 * 
 * 
 *     cpdef set_pops_escape_probability(self, LwAtmosphere a, LwBackground bg, conserveCharge=False, int Niter=100):             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=3] Gamma
 *         cdef np.ndarray[np.double_t, ndim=3] C
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltaNe.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.set_pops_escape_probability", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_C.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_deltaNe.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_Gamma);
  __Pyx_XDECREF((PyObject *)__pyx_v_C);
  __Pyx_XDECREF((PyObject *)__pyx_v_deltaNe);
  __Pyx_XDECREF(__pyx_v_prevN);
  __Pyx_XDECREF(__pyx_v_start);
  __Pyx_XDECREF(__pyx_v_end);
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11set_pops_escape_probability(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11set_pops_escape_probability(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a = 0;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_bg = 0;
  PyObject *__pyx_v_conserveCharge = 0;
  int __pyx_v_Niter;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_pops_escape_probability (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_a,&__pyx_n_s_bg,&__pyx_n_s_conserveCharge,&__pyx_n_s_Niter,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_a)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_bg)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_pops_escape_probability", 0, 2, 4, 1); __PYX_ERR(0, 2542, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_conserveCharge);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Niter);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_pops_escape_probability") < 0)) __PYX_ERR(0, 2542, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_a = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)values[0]);
    __pyx_v_bg = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)values[1]);
    __pyx_v_conserveCharge = values[2];
    if (values[3]) {
      __pyx_v_Niter = __Pyx_PyInt_As_int(values[3]); if (unlikely((__pyx_v_Niter == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2542, __pyx_L3_error)
    } else {
      __pyx_v_Niter = ((int)0x64);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_pops_escape_probability", 0, 2, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2542, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.set_pops_escape_probability", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_a), __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere, 1, "a", 0))) __PYX_ERR(0, 2542, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_bg), __pyx_ptype_11lightweaver_10LwCompiled_LwBackground, 1, "bg", 0))) __PYX_ERR(0, 2542, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_10set_pops_escape_probability(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), __pyx_v_a, __pyx_v_bg, __pyx_v_conserveCharge, __pyx_v_Niter);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_10set_pops_escape_probability(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *__pyx_v_a, struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *__pyx_v_bg, PyObject *__pyx_v_conserveCharge, int __pyx_v_Niter) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_pops_escape_probability", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 2;
  __pyx_t_2.conserveCharge = __pyx_v_conserveCharge;
  __pyx_t_2.Niter = __pyx_v_Niter;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwAtom->set_pops_escape_probability(__pyx_v_self, __pyx_v_a, __pyx_v_bg, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2542, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.set_pops_escape_probability", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2588
 *                     self.atmos.ne[k] = 1e6
 * 
 *     cpdef setup_wavelength(self, int la):             # <<<<<<<<<<<<<<
 *         '''
 *         Initialise the wavelength dependent arrays for the wavelength at
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_13setup_wavelength(PyObject *__pyx_v_self, PyObject *__pyx_arg_la); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_6LwAtom_setup_wavelength(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, int __pyx_v_la, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setup_wavelength", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setup_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2588, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_13setup_wavelength)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_la); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2588, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2588, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":2593
 *         index la.
 *         '''
 *         self.atom.setup_wavelength(la)             # <<<<<<<<<<<<<<
 * 
 *     def compute_profiles(self, polarised=False):
 */
  __pyx_v_self->atom.setup_wavelength(__pyx_v_la);

  /* "Source/LwMiddleLayer.pyx":2588
 *                     self.atmos.ne[k] = 1e6
 * 
 *     cpdef setup_wavelength(self, int la):             # <<<<<<<<<<<<<<
 *         '''
 *         Initialise the wavelength dependent arrays for the wavelength at
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.setup_wavelength", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_13setup_wavelength(PyObject *__pyx_v_self, PyObject *__pyx_arg_la); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_6LwAtom_12setup_wavelength[] = "\n        Initialise the wavelength dependent arrays for the wavelength at\n        index la.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_13setup_wavelength(PyObject *__pyx_v_self, PyObject *__pyx_arg_la) {
  int __pyx_v_la;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setup_wavelength (wrapper)", 0);
  assert(__pyx_arg_la); {
    __pyx_v_la = __Pyx_PyInt_As_int(__pyx_arg_la); if (unlikely((__pyx_v_la == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2588, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.setup_wavelength", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_12setup_wavelength(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), ((int)__pyx_v_la));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_12setup_wavelength(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, int __pyx_v_la) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setup_wavelength", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_6LwAtom_setup_wavelength(__pyx_v_self, __pyx_v_la, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2588, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.setup_wavelength", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2595
 *         self.atom.setup_wavelength(la)
 * 
 *     def compute_profiles(self, polarised=False):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the line profiles for the spectral lines on the model.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_15compute_profiles(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_6LwAtom_14compute_profiles[] = "\n        Compute the line profiles for the spectral lines on the model.\n\n        Parameters\n        ----------\n        polarised : bool, optional\n            If True, and the lines are polarised, then the full Stokes line\n            profiles will be computed, otherwise the scalar case will be\n            computed (default: False).\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_15compute_profiles(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_polarised = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_profiles (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_polarised,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_polarised);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_profiles") < 0)) __PYX_ERR(0, 2595, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_polarised = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_profiles", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2595, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.compute_profiles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_14compute_profiles(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), __pyx_v_polarised);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_14compute_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_polarised) {
  PyObject *__pyx_v_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_profiles", 0);

  /* "Source/LwMiddleLayer.pyx":2606
 *             computed (default: False).
 *         '''
 *         np.asarray(self.vBroad)[:] = self.atomicModel.vBroad(self.atmos)             # <<<<<<<<<<<<<<
 *         for t in self.trans:
 *             if polarised:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->atomicModel, __pyx_n_s_vBroad); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, ((PyObject *)__pyx_v_self->atmos)) : __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_self->atmos));
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->vBroad.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2606, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->vBroad, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2606, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (__Pyx_PyObject_SetSlice(__pyx_t_2, __pyx_t_1, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 2606, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2607
 *         '''
 *         np.asarray(self.vBroad)[:] = self.atomicModel.vBroad(self.atmos)
 *         for t in self.trans:             # <<<<<<<<<<<<<<
 *             if polarised:
 *                 t.compute_polarised_profiles()
 */
  if (unlikely(__pyx_v_self->trans == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 2607, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->trans; __Pyx_INCREF(__pyx_t_1); __pyx_t_6 = 0;
  for (;;) {
    if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 2607, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2607, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":2608
 *         np.asarray(self.vBroad)[:] = self.atomicModel.vBroad(self.atmos)
 *         for t in self.trans:
 *             if polarised:             # <<<<<<<<<<<<<<
 *                 t.compute_polarised_profiles()
 *             else:
 */
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_polarised); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 2608, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":2609
 *         for t in self.trans:
 *             if polarised:
 *                 t.compute_polarised_profiles()             # <<<<<<<<<<<<<<
 *             else:
 *                 t.compute_phi()
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_compute_polarised_profiles); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2609, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2609, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":2608
 *         np.asarray(self.vBroad)[:] = self.atomicModel.vBroad(self.atmos)
 *         for t in self.trans:
 *             if polarised:             # <<<<<<<<<<<<<<
 *                 t.compute_polarised_profiles()
 *             else:
 */
      goto __pyx_L5;
    }

    /* "Source/LwMiddleLayer.pyx":2611
 *                 t.compute_polarised_profiles()
 *             else:
 *                 t.compute_phi()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
    /*else*/ {
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_compute_phi); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2611, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2611, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_L5:;

    /* "Source/LwMiddleLayer.pyx":2607
 *         '''
 *         np.asarray(self.vBroad)[:] = self.atomicModel.vBroad(self.atmos)
 *         for t in self.trans:             # <<<<<<<<<<<<<<
 *             if polarised:
 *                 t.compute_polarised_profiles()
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2595
 *         self.atom.setup_wavelength(la)
 * 
 *     def compute_profiles(self, polarised=False):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the line profiles for the spectral lines on the model.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.compute_profiles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2614
 * 
 *     @property
 *     def Nlevel(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of levels in the atomic model.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6Nlevel_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6Nlevel_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6Nlevel___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6Nlevel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2618
 *         The number of levels in the atomic model.
 *         '''
 *         return self.atom.Nlevel             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atom.Nlevel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2614
 * 
 *     @property
 *     def Nlevel(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of levels in the atomic model.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.Nlevel.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2621
 * 
 *     @property
 *     def Ntrans(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of transitions in the atomic model.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6Ntrans_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6Ntrans_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6Ntrans___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6Ntrans___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2625
 *         The number of transitions in the atomic model.
 *         '''
 *         return self.atom.Ntrans             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->atom.Ntrans); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2621
 * 
 *     @property
 *     def Ntrans(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of transitions in the atomic model.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.Ntrans.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2628
 * 
 *     @property
 *     def vBroad(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The broadening velocity associated with this atomic model in this
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6vBroad_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6vBroad_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6vBroad___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6vBroad___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2633
 *         atmosphere.
 *         '''
 *         return np.asarray(self.vBroad)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->vBroad.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2633, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->vBroad, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2633, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2628
 * 
 *     @property
 *     def vBroad(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The broadening velocity associated with this atomic model in this
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.vBroad.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2636
 * 
 *     @property
 *     def Gamma(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The Gamma iteration matrix [Nlevel, Nlevel, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5Gamma_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5Gamma_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5Gamma___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5Gamma___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2640
 *         The Gamma iteration matrix [Nlevel, Nlevel, Nspace].
 *         '''
 *         return np.asarray(self.Gamma)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->Gamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2640, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->Gamma, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2636
 * 
 *     @property
 *     def Gamma(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The Gamma iteration matrix [Nlevel, Nlevel, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.Gamma.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2643
 * 
 *     @property
 *     def C(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The collisional rates matrix [Nlevel, Nlevel, Nspace]. This is filled
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1C_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1C_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_1C___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_1C___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2648
 *         s.t. C_{ji} is C[i, j] to facilitate addition to Gamma.
 *         '''
 *         return np.asarray(self.C)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->C.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2648, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->C, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2648, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2643
 * 
 *     @property
 *     def C(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The collisional rates matrix [Nlevel, Nlevel, Nspace]. This is filled
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.C.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2651
 * 
 *     @property
 *     def nTotal(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The total number density of the model throughout the atmosphere.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6nTotal_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6nTotal_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6nTotal___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6nTotal___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2655
 *         The total number density of the model throughout the atmosphere.
 *         '''
 *         return np.asarray(self.nTotal)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->nTotal.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2655, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->nTotal, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2651
 * 
 *     @property
 *     def nTotal(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The total number density of the model throughout the atmosphere.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.nTotal.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2658
 * 
 *     @property
 *     def n(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The atomic populations (NLTE if in use) [Nlevel, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1n_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1n_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_1n___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_1n___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2662
 *         The atomic populations (NLTE if in use) [Nlevel, Nspace].
 *         '''
 *         return np.asarray(self.n)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2662, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->n, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2658
 * 
 *     @property
 *     def n(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The atomic populations (NLTE if in use) [Nlevel, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.n.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2665
 * 
 *     @property
 *     def nStar(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The LTE populations for this species in this atmosphere [Nlevel, Nspace].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5nStar_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5nStar_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5nStar___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5nStar___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2669
 *         The LTE populations for this species in this atmosphere [Nlevel, Nspace].
 *         '''
 *         return np.asarray(self.nStar)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->nStar.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2669, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->nStar, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2665
 * 
 *     @property
 *     def nStar(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The LTE populations for this species in this atmosphere [Nlevel, Nspace].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.nStar.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2672
 * 
 *     @property
 *     def stages(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The ionisation stage of each level of this model.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6stages_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6stages_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6stages___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_6stages___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2676
 *         The ionisation stage of each level of this model.
 *         '''
 *         return np.asarray(self.stages)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->stages.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2676, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->stages, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2672
 * 
 *     @property
 *     def stages(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The ionisation stage of each level of this model.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.stages.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2679
 * 
 *     @property
 *     def trans(self):             # <<<<<<<<<<<<<<
 *         '''
 *         List of computational transitions (LwTransition).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5trans_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5trans_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5trans___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_5trans___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2683
 *         List of computational transitions (LwTransition).
 *         '''
 *         return self.trans             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->trans);
  __pyx_r = __pyx_v_self->trans;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2679
 * 
 *     @property
 *     def trans(self):             # <<<<<<<<<<<<<<
 *         '''
 *         List of computational transitions (LwTransition).
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2686
 * 
 *     @property
 *     def element(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The element identifier for this atomic model.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_7element_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_7element_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_7element___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_7element___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2690
 *         The element identifier for this atomic model.
 *         '''
 *         return self.atomicModel.element             # <<<<<<<<<<<<<<
 * 
 * cdef JRest_to_numpy(F64Arr2D JRest):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->atomicModel, __pyx_n_s_element); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2686
 * 
 *     @property
 *     def element(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The element identifier for this atomic model.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.element.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2343
 *     cdef f64[::1] stages
 * 
 *     cdef public object atomicModel             # <<<<<<<<<<<<<<
 *     cdef public object modelPops
 *     cdef LwAtmosphere atmos
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->atomicModel);
  __pyx_r = __pyx_v_self->atomicModel;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->atomicModel);
  __Pyx_DECREF(__pyx_v_self->atomicModel);
  __pyx_v_self->atomicModel = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->atomicModel);
  __Pyx_DECREF(__pyx_v_self->atomicModel);
  __pyx_v_self->atomicModel = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2344
 * 
 *     cdef public object atomicModel
 *     cdef public object modelPops             # <<<<<<<<<<<<<<
 *     cdef LwAtmosphere atmos
 *     cdef object eqPops
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->modelPops);
  __pyx_r = __pyx_v_self->modelPops;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->modelPops);
  __Pyx_DECREF(__pyx_v_self->modelPops);
  __pyx_v_self->modelPops = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_9modelPops_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->modelPops);
  __Pyx_DECREF(__pyx_v_self->modelPops);
  __pyx_v_self->modelPops = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_17__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_16__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_16__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_19__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_6LwAtom_18__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_6LwAtom_18__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwAtom.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2692
 *         return self.atomicModel.element
 * 
 * cdef JRest_to_numpy(F64Arr2D JRest):             # <<<<<<<<<<<<<<
 *     if JRest.data() is NULL:
 *         raise AttributeError
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled_JRest_to_numpy(__pyx_t_8CmoArray_F64Arr2D __pyx_v_JRest) {
  npy_intp __pyx_v_shape[2];
  PyObject *__pyx_v_ndarray = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("JRest_to_numpy", 0);

  /* "Source/LwMiddleLayer.pyx":2693
 * 
 * cdef JRest_to_numpy(F64Arr2D JRest):
 *     if JRest.data() is NULL:             # <<<<<<<<<<<<<<
 *         raise AttributeError
 *     cdef np.npy_intp shape[2]
 */
  __pyx_t_1 = ((__pyx_v_JRest.data() == NULL) != 0);
  if (unlikely(__pyx_t_1)) {

    /* "Source/LwMiddleLayer.pyx":2694
 * cdef JRest_to_numpy(F64Arr2D JRest):
 *     if JRest.data() is NULL:
 *         raise AttributeError             # <<<<<<<<<<<<<<
 *     cdef np.npy_intp shape[2]
 *     shape[0] = <np.npy_intp> JRest.shape(0)
 */
    __Pyx_Raise(__pyx_builtin_AttributeError, 0, 0, 0);
    __PYX_ERR(0, 2694, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":2693
 * 
 * cdef JRest_to_numpy(F64Arr2D JRest):
 *     if JRest.data() is NULL:             # <<<<<<<<<<<<<<
 *         raise AttributeError
 *     cdef np.npy_intp shape[2]
 */
  }

  /* "Source/LwMiddleLayer.pyx":2696
 *         raise AttributeError
 *     cdef np.npy_intp shape[2]
 *     shape[0] = <np.npy_intp> JRest.shape(0)             # <<<<<<<<<<<<<<
 *     shape[1] = <np.npy_intp> JRest.shape(1)
 *     ndarray = np.PyArray_SimpleNewFromData(2, &shape[0],
 */
  (__pyx_v_shape[0]) = ((npy_intp)__pyx_v_JRest.shape(0));

  /* "Source/LwMiddleLayer.pyx":2697
 *     cdef np.npy_intp shape[2]
 *     shape[0] = <np.npy_intp> JRest.shape(0)
 *     shape[1] = <np.npy_intp> JRest.shape(1)             # <<<<<<<<<<<<<<
 *     ndarray = np.PyArray_SimpleNewFromData(2, &shape[0],
 *                                             np.NPY_FLOAT64, <void*>JRest.data())
 */
  (__pyx_v_shape[1]) = ((npy_intp)__pyx_v_JRest.shape(1));

  /* "Source/LwMiddleLayer.pyx":2698
 *     shape[0] = <np.npy_intp> JRest.shape(0)
 *     shape[1] = <np.npy_intp> JRest.shape(1)
 *     ndarray = np.PyArray_SimpleNewFromData(2, &shape[0],             # <<<<<<<<<<<<<<
 *                                             np.NPY_FLOAT64, <void*>JRest.data())
 *     return ndarray
 */
  __pyx_t_2 = PyArray_SimpleNewFromData(2, (&(__pyx_v_shape[0])), NPY_FLOAT64, ((void *)__pyx_v_JRest.data())); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_ndarray = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":2700
 *     ndarray = np.PyArray_SimpleNewFromData(2, &shape[0],
 *                                             np.NPY_FLOAT64, <void*>JRest.data())
 *     return ndarray             # <<<<<<<<<<<<<<
 * 
 * cdef JRest_from_numpy(Spectrum spect, f64[:,::1] JRest):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ndarray);
  __pyx_r = __pyx_v_ndarray;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2692
 *         return self.atomicModel.element
 * 
 * cdef JRest_to_numpy(F64Arr2D JRest):             # <<<<<<<<<<<<<<
 *     if JRest.data() is NULL:
 *         raise AttributeError
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("lightweaver.LwCompiled.JRest_to_numpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ndarray);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2702
 *     return ndarray
 * 
 * cdef JRest_from_numpy(Spectrum spect, f64[:,::1] JRest):             # <<<<<<<<<<<<<<
 *     spect.JRest = F64Arr2D(f64_view_2(JRest))
 * 
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled_JRest_from_numpy(Spectrum __pyx_v_spect, __Pyx_memviewslice __pyx_v_JRest) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_8CmoArray_F64View2D __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("JRest_from_numpy", 0);

  /* "Source/LwMiddleLayer.pyx":2703
 * 
 * cdef JRest_from_numpy(Spectrum spect, f64[:,::1] JRest):
 *     spect.JRest = F64Arr2D(f64_view_2(JRest))             # <<<<<<<<<<<<<<
 * 
 * cdef class LwSpectrum:
 */
  try {
    __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_JRest);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2703, __pyx_L1_error)
  }
  __pyx_v_spect.JRest = __pyx_t_8CmoArray_F64Arr2D(__pyx_t_1);

  /* "Source/LwMiddleLayer.pyx":2702
 *     return ndarray
 * 
 * cdef JRest_from_numpy(Spectrum spect, f64[:,::1] JRest):             # <<<<<<<<<<<<<<
 *     spect.JRest = F64Arr2D(f64_view_2(JRest))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.JRest_from_numpy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2729
 *     cdef f64[:,:,:,::1] Quv
 * 
 *     def __init__(self, wavelength, Nrays, Nspace, Noutgoing):             # <<<<<<<<<<<<<<
 *         self.wavelength = wavelength
 *         cdef int Nspect = self.wavelength.shape[0]
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_wavelength = 0;
  PyObject *__pyx_v_Nrays = 0;
  PyObject *__pyx_v_Nspace = 0;
  PyObject *__pyx_v_Noutgoing = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_wavelength,&__pyx_n_s_Nrays,&__pyx_n_s_Nspace,&__pyx_n_s_Noutgoing,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wavelength)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Nrays)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 1); __PYX_ERR(0, 2729, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Nspace)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 2); __PYX_ERR(0, 2729, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Noutgoing)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, 3); __PYX_ERR(0, 2729, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 2729, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_wavelength = values[0];
    __pyx_v_Nrays = values[1];
    __pyx_v_Nspace = values[2];
    __pyx_v_Noutgoing = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2729, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self), __pyx_v_wavelength, __pyx_v_Nrays, __pyx_v_Nspace, __pyx_v_Noutgoing);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self, PyObject *__pyx_v_wavelength, PyObject *__pyx_v_Nrays, PyObject *__pyx_v_Nspace, PyObject *__pyx_v_Noutgoing) {
  int __pyx_v_Nspect;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice __pyx_t_1 = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  __Pyx_memviewslice __pyx_t_6 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __Pyx_memviewslice __pyx_t_7 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_8;
  __pyx_t_8CmoArray_F64View3D __pyx_t_9;
  __pyx_t_8CmoArray_F64View2D __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":2730
 * 
 *     def __init__(self, wavelength, Nrays, Nspace, Noutgoing):
 *         self.wavelength = wavelength             # <<<<<<<<<<<<<<
 *         cdef int Nspect = self.wavelength.shape[0]
 *         self.I = np.zeros((Nspect, Nrays, Noutgoing))
 */
  __pyx_t_1 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_wavelength, PyBUF_WRITABLE); if (unlikely(!__pyx_t_1.memview)) __PYX_ERR(0, 2730, __pyx_L1_error)
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_1;
  __pyx_t_1.memview = NULL;
  __pyx_t_1.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2731
 *     def __init__(self, wavelength, Nrays, Nspace, Noutgoing):
 *         self.wavelength = wavelength
 *         cdef int Nspect = self.wavelength.shape[0]             # <<<<<<<<<<<<<<
 *         self.I = np.zeros((Nspect, Nrays, Noutgoing))
 *         self.J = np.zeros((Nspect, Nspace))
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2731, __pyx_L1_error)}
  __pyx_v_Nspect = (__pyx_v_self->wavelength.shape[0]);

  /* "Source/LwMiddleLayer.pyx":2732
 *         self.wavelength = wavelength
 *         cdef int Nspect = self.wavelength.shape[0]
 *         self.I = np.zeros((Nspect, Nrays, Noutgoing))             # <<<<<<<<<<<<<<
 *         self.J = np.zeros((Nspect, Nspace))
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_zeros); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_Nspect); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_3);
  __Pyx_INCREF(__pyx_v_Nrays);
  __Pyx_GIVEREF(__pyx_v_Nrays);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_Nrays);
  __Pyx_INCREF(__pyx_v_Noutgoing);
  __Pyx_GIVEREF(__pyx_v_Noutgoing);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_Noutgoing);
  __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2732, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_6 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_6.memview)) __PYX_ERR(0, 2732, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->I, 0);
  __pyx_v_self->I = __pyx_t_6;
  __pyx_t_6.memview = NULL;
  __pyx_t_6.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2733
 *         cdef int Nspect = self.wavelength.shape[0]
 *         self.I = np.zeros((Nspect, Nrays, Noutgoing))
 *         self.J = np.zeros((Nspect, Nspace))             # <<<<<<<<<<<<<<
 * 
 *         self.spect.wavelength = f64_view(self.wavelength)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_zeros); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_Nspect); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __Pyx_INCREF(__pyx_v_Nspace);
  __Pyx_GIVEREF(__pyx_v_Nspace);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_Nspace);
  __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2733, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_2, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 2733, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->J, 0);
  __pyx_v_self->J = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2735
 *         self.J = np.zeros((Nspect, Nspace))
 * 
 *         self.spect.wavelength = f64_view(self.wavelength)             # <<<<<<<<<<<<<<
 *         self.spect.I = f64_view_3(self.I)
 *         self.spect.J = f64_view_2(self.J)
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2735, __pyx_L1_error)}
  try {
    __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wavelength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2735, __pyx_L1_error)
  }
  __pyx_v_self->spect.wavelength = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":2736
 * 
 *         self.spect.wavelength = f64_view(self.wavelength)
 *         self.spect.I = f64_view_3(self.I)             # <<<<<<<<<<<<<<
 *         self.spect.J = f64_view_2(self.J)
 * 
 */
  if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2736, __pyx_L1_error)}
  try {
    __pyx_t_9 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->I);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2736, __pyx_L1_error)
  }
  __pyx_v_self->spect.I = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":2737
 *         self.spect.wavelength = f64_view(self.wavelength)
 *         self.spect.I = f64_view_3(self.I)
 *         self.spect.J = f64_view_2(self.J)             # <<<<<<<<<<<<<<
 * 
 *     def setup_stokes(self):
 */
  if (unlikely(!__pyx_v_self->J.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2737, __pyx_L1_error)}
  try {
    __pyx_t_10 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->J);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2737, __pyx_L1_error)
  }
  __pyx_v_self->spect.J = __pyx_t_10;

  /* "Source/LwMiddleLayer.pyx":2729
 *     cdef f64[:,:,:,::1] Quv
 * 
 *     def __init__(self, wavelength, Nrays, Nspace, Noutgoing):             # <<<<<<<<<<<<<<
 *         self.wavelength = wavelength
 *         cdef int Nspect = self.wavelength.shape[0]
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __PYX_XDEC_MEMVIEW(&__pyx_t_1, 1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __PYX_XDEC_MEMVIEW(&__pyx_t_6, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_7, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2739
 *         self.spect.J = f64_view_2(self.J)
 * 
 *     def setup_stokes(self):             # <<<<<<<<<<<<<<
 *         self.Quv = np.zeros((3, self.I.shape[0], self.I.shape[1], self.I.shape[2]))
 *         self.spect.Quv = f64_view_4(self.Quv)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_3setup_stokes(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_3setup_stokes(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setup_stokes (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_2setup_stokes(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_2setup_stokes(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_memviewslice __pyx_t_7 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View4D __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setup_stokes", 0);

  /* "Source/LwMiddleLayer.pyx":2740
 * 
 *     def setup_stokes(self):
 *         self.Quv = np.zeros((3, self.I.shape[0], self.I.shape[1], self.I.shape[2]))             # <<<<<<<<<<<<<<
 *         self.spect.Quv = f64_view_4(self.Quv)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_zeros); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2740, __pyx_L1_error)}
  __pyx_t_2 = PyInt_FromSsize_t((__pyx_v_self->I.shape[0])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2740, __pyx_L1_error)}
  __pyx_t_4 = PyInt_FromSsize_t((__pyx_v_self->I.shape[1])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2740, __pyx_L1_error)}
  __pyx_t_5 = PyInt_FromSsize_t((__pyx_v_self->I.shape[2])); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 2740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_int_3);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
  __pyx_t_2 = 0;
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_6);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2740, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_7.memview)) __PYX_ERR(0, 2740, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->Quv, 0);
  __pyx_v_self->Quv = __pyx_t_7;
  __pyx_t_7.memview = NULL;
  __pyx_t_7.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2741
 *     def setup_stokes(self):
 *         self.Quv = np.zeros((3, self.I.shape[0], self.I.shape[1], self.I.shape[2]))
 *         self.spect.Quv = f64_view_4(self.Quv)             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
  if (unlikely(!__pyx_v_self->Quv.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2741, __pyx_L1_error)}
  try {
    __pyx_t_8 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->Quv);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2741, __pyx_L1_error)
  }
  __pyx_v_self->spect.Quv = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":2739
 *         self.spect.J = f64_view_2(self.J)
 * 
 *     def setup_stokes(self):             # <<<<<<<<<<<<<<
 *         self.Quv = np.zeros((3, self.I.shape[0], self.I.shape[1], self.I.shape[2]))
 *         self.spect.Quv = f64_view_4(self.Quv)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __PYX_XDEC_MEMVIEW(&__pyx_t_7, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.setup_stokes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2743
 *         self.spect.Quv = f64_view_4(self.Quv)
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['wavelength'] = np.asarray(self.wavelength)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_5__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_5__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_4__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_4__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":2744
 * 
 *     def __getstate__(self):
 *         state = {}             # <<<<<<<<<<<<<<
 *         state['wavelength'] = np.asarray(self.wavelength)
 *         state['I'] = np.asarray(self.I)
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2745
 *     def __getstate__(self):
 *         state = {}
 *         state['wavelength'] = np.asarray(self.wavelength)             # <<<<<<<<<<<<<<
 *         state['I'] = np.asarray(self.I)
 *         state['J'] = np.asarray(self.J)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2745, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_wavelength, __pyx_t_1) < 0)) __PYX_ERR(0, 2745, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2746
 *         state = {}
 *         state['wavelength'] = np.asarray(self.wavelength)
 *         state['I'] = np.asarray(self.I)             # <<<<<<<<<<<<<<
 *         state['J'] = np.asarray(self.J)
 *         try:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2746, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->I, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_I, __pyx_t_1) < 0)) __PYX_ERR(0, 2746, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2747
 *         state['wavelength'] = np.asarray(self.wavelength)
 *         state['I'] = np.asarray(self.I)
 *         state['J'] = np.asarray(self.J)             # <<<<<<<<<<<<<<
 *         try:
 *             state['Quv'] = np.asarray(self.Quv)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->J.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2747, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->J, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_J, __pyx_t_1) < 0)) __PYX_ERR(0, 2747, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2748
 *         state['I'] = np.asarray(self.I)
 *         state['J'] = np.asarray(self.J)
 *         try:             # <<<<<<<<<<<<<<
 *             state['Quv'] = np.asarray(self.Quv)
 *         except AttributeError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":2749
 *         state['J'] = np.asarray(self.J)
 *         try:
 *             state['Quv'] = np.asarray(self.Quv)             # <<<<<<<<<<<<<<
 *         except AttributeError:
 *             state['Quv'] = None
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2749, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2749, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_v_self->Quv.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2749, __pyx_L3_error)}
      __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->Quv, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2749, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2749, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Quv, __pyx_t_1) < 0)) __PYX_ERR(0, 2749, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":2748
 *         state['I'] = np.asarray(self.I)
 *         state['J'] = np.asarray(self.J)
 *         try:             # <<<<<<<<<<<<<<
 *             state['Quv'] = np.asarray(self.Quv)
 *         except AttributeError:
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":2750
 *         try:
 *             state['Quv'] = np.asarray(self.Quv)
 *         except AttributeError:             # <<<<<<<<<<<<<<
 *             state['Quv'] = None
 * 
 */
    __pyx_t_8 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_8) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 2750, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "Source/LwMiddleLayer.pyx":2751
 *             state['Quv'] = np.asarray(self.Quv)
 *         except AttributeError:
 *             state['Quv'] = None             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_Quv, Py_None) < 0)) __PYX_ERR(0, 2751, __pyx_L5_except_error)
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "Source/LwMiddleLayer.pyx":2748
 *         state['I'] = np.asarray(self.I)
 *         state['J'] = np.asarray(self.J)
 *         try:             # <<<<<<<<<<<<<<
 *             state['Quv'] = np.asarray(self.Quv)
 *         except AttributeError:
 */
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L8_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":2753
 *             state['Quv'] = None
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             state['JRest'] = np.copy(JRest_to_numpy(self.spect.JRest))
 *         except AttributeError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_6, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":2754
 * 
 *         try:
 *             state['JRest'] = np.copy(JRest_to_numpy(self.spect.JRest))             # <<<<<<<<<<<<<<
 *         except AttributeError:
 *             state['JRest'] = None
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2754, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2754, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __pyx_f_11lightweaver_10LwCompiled_JRest_to_numpy(__pyx_v_self->spect.JRest); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2754, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
        }
      }
      __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2754, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_JRest, __pyx_t_3) < 0)) __PYX_ERR(0, 2754, __pyx_L11_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":2753
 *             state['Quv'] = None
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             state['JRest'] = np.copy(JRest_to_numpy(self.spect.JRest))
 *         except AttributeError:
 */
    }
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L16_try_end;
    __pyx_L11_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":2755
 *         try:
 *             state['JRest'] = np.copy(JRest_to_numpy(self.spect.JRest))
 *         except AttributeError:             # <<<<<<<<<<<<<<
 *             state['JRest'] = None
 * 
 */
    __pyx_t_8 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_8) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_1, &__pyx_t_2) < 0) __PYX_ERR(0, 2755, __pyx_L13_except_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);

      /* "Source/LwMiddleLayer.pyx":2756
 *             state['JRest'] = np.copy(JRest_to_numpy(self.spect.JRest))
 *         except AttributeError:
 *             state['JRest'] = None             # <<<<<<<<<<<<<<
 * 
 *         return state
 */
      if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_JRest, Py_None) < 0)) __PYX_ERR(0, 2756, __pyx_L13_except_error)
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L12_exception_handled;
    }
    goto __pyx_L13_except_error;
    __pyx_L13_except_error:;

    /* "Source/LwMiddleLayer.pyx":2753
 *             state['Quv'] = None
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             state['JRest'] = np.copy(JRest_to_numpy(self.spect.JRest))
 *         except AttributeError:
 */
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_6, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L12_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_6, __pyx_t_5);
    __pyx_L16_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":2758
 *             state['JRest'] = None
 * 
 *         return state             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, state):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_state);
  __pyx_r = __pyx_v_state;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2743
 *         self.spect.Quv = f64_view_4(self.Quv)
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['wavelength'] = np.asarray(self.wavelength)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2760
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.wavelength = state['wavelength']
 *         self.spect.wavelength = f64_view(self.wavelength)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_7__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_7__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_6__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_6__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __Pyx_memviewslice __pyx_t_2 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View __pyx_t_3;
  __Pyx_memviewslice __pyx_t_4 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View3D __pyx_t_5;
  __Pyx_memviewslice __pyx_t_6 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  __Pyx_memviewslice __pyx_t_10 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View4D __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":2761
 * 
 *     def __setstate__(self, state):
 *         self.wavelength = state['wavelength']             # <<<<<<<<<<<<<<
 *         self.spect.wavelength = f64_view(self.wavelength)
 *         self.I = state['I']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2761, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_2.memview)) __PYX_ERR(0, 2761, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->wavelength, 0);
  __pyx_v_self->wavelength = __pyx_t_2;
  __pyx_t_2.memview = NULL;
  __pyx_t_2.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2762
 *     def __setstate__(self, state):
 *         self.wavelength = state['wavelength']
 *         self.spect.wavelength = f64_view(self.wavelength)             # <<<<<<<<<<<<<<
 *         self.I = state['I']
 *         self.spect.I = f64_view_3(self.I)
 */
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2762, __pyx_L1_error)}
  try {
    __pyx_t_3 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_self->wavelength);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2762, __pyx_L1_error)
  }
  __pyx_v_self->spect.wavelength = __pyx_t_3;

  /* "Source/LwMiddleLayer.pyx":2763
 *         self.wavelength = state['wavelength']
 *         self.spect.wavelength = f64_view(self.wavelength)
 *         self.I = state['I']             # <<<<<<<<<<<<<<
 *         self.spect.I = f64_view_3(self.I)
 *         self.J = state['J']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_I); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2763, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(0, 2763, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->I, 0);
  __pyx_v_self->I = __pyx_t_4;
  __pyx_t_4.memview = NULL;
  __pyx_t_4.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2764
 *         self.spect.wavelength = f64_view(self.wavelength)
 *         self.I = state['I']
 *         self.spect.I = f64_view_3(self.I)             # <<<<<<<<<<<<<<
 *         self.J = state['J']
 *         self.spect.J = f64_view_2(self.J)
 */
  if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2764, __pyx_L1_error)}
  try {
    __pyx_t_5 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_v_self->I);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2764, __pyx_L1_error)
  }
  __pyx_v_self->spect.I = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":2765
 *         self.I = state['I']
 *         self.spect.I = f64_view_3(self.I)
 *         self.J = state['J']             # <<<<<<<<<<<<<<
 *         self.spect.J = f64_view_2(self.J)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_J); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2765, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_6.memview)) __PYX_ERR(0, 2765, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v_self->J, 0);
  __pyx_v_self->J = __pyx_t_6;
  __pyx_t_6.memview = NULL;
  __pyx_t_6.data = NULL;

  /* "Source/LwMiddleLayer.pyx":2766
 *         self.spect.I = f64_view_3(self.I)
 *         self.J = state['J']
 *         self.spect.J = f64_view_2(self.J)             # <<<<<<<<<<<<<<
 * 
 *         if state['Quv'] is not None:
 */
  if (unlikely(!__pyx_v_self->J.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2766, __pyx_L1_error)}
  try {
    __pyx_t_7 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_v_self->J);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 2766, __pyx_L1_error)
  }
  __pyx_v_self->spect.J = __pyx_t_7;

  /* "Source/LwMiddleLayer.pyx":2768
 *         self.spect.J = f64_view_2(self.J)
 * 
 *         if state['Quv'] is not None:             # <<<<<<<<<<<<<<
 *             self.Quv = state['Quv']
 *             self.spect.Quv = f64_view_4(self.Quv)
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Quv); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2768, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_9 = (__pyx_t_8 != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":2769
 * 
 *         if state['Quv'] is not None:
 *             self.Quv = state['Quv']             # <<<<<<<<<<<<<<
 *             self.spect.Quv = f64_view_4(self.Quv)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_Quv); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2769, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_10.memview)) __PYX_ERR(0, 2769, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_v_self->Quv, 0);
    __pyx_v_self->Quv = __pyx_t_10;
    __pyx_t_10.memview = NULL;
    __pyx_t_10.data = NULL;

    /* "Source/LwMiddleLayer.pyx":2770
 *         if state['Quv'] is not None:
 *             self.Quv = state['Quv']
 *             self.spect.Quv = f64_view_4(self.Quv)             # <<<<<<<<<<<<<<
 * 
 *         if state['JRest'] is not None:
 */
    if (unlikely(!__pyx_v_self->Quv.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2770, __pyx_L1_error)}
    try {
      __pyx_t_11 = __pyx_f_11lightweaver_10LwCompiled_f64_view_4(__pyx_v_self->Quv);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2770, __pyx_L1_error)
    }
    __pyx_v_self->spect.Quv = __pyx_t_11;

    /* "Source/LwMiddleLayer.pyx":2768
 *         self.spect.J = f64_view_2(self.J)
 * 
 *         if state['Quv'] is not None:             # <<<<<<<<<<<<<<
 *             self.Quv = state['Quv']
 *             self.spect.Quv = f64_view_4(self.Quv)
 */
  }

  /* "Source/LwMiddleLayer.pyx":2772
 *             self.spect.Quv = f64_view_4(self.Quv)
 * 
 *         if state['JRest'] is not None:             # <<<<<<<<<<<<<<
 *             JRest_from_numpy(self.spect, state['JRest'])
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_JRest); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_9 = (__pyx_t_1 != Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_8 = (__pyx_t_9 != 0);
  if (__pyx_t_8) {

    /* "Source/LwMiddleLayer.pyx":2773
 * 
 *         if state['JRest'] is not None:
 *             JRest_from_numpy(self.spect, state['JRest'])             # <<<<<<<<<<<<<<
 * 
 *     def interp_J_from_state(self, prevSpect):
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_JRest); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2773, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_6.memview)) __PYX_ERR(0, 2773, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_JRest_from_numpy(__pyx_v_self->spect, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2773, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __PYX_XDEC_MEMVIEW(&__pyx_t_6, 1);
    __pyx_t_6.memview = NULL;
    __pyx_t_6.data = NULL;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2772
 *             self.spect.Quv = f64_view_4(self.Quv)
 * 
 *         if state['JRest'] is not None:             # <<<<<<<<<<<<<<
 *             JRest_from_numpy(self.spect, state['JRest'])
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2760
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.wavelength = state['wavelength']
 *         self.spect.wavelength = f64_view(self.wavelength)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_2, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_4, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_6, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_10, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2775
 *             JRest_from_numpy(self.spect, state['JRest'])
 * 
 *     def interp_J_from_state(self, prevSpect):             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=2] J = np.asarray(self.J)
 *         cdef int k
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_9interp_J_from_state(PyObject *__pyx_v_self, PyObject *__pyx_v_prevSpect); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_9interp_J_from_state(PyObject *__pyx_v_self, PyObject *__pyx_v_prevSpect) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("interp_J_from_state (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_8interp_J_from_state(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self), ((PyObject *)__pyx_v_prevSpect));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_8interp_J_from_state(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self, PyObject *__pyx_v_prevSpect) {
  PyArrayObject *__pyx_v_J = 0;
  int __pyx_v_k;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_J;
  __Pyx_Buffer __pyx_pybuffer_J;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyArrayObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("interp_J_from_state", 0);
  __pyx_pybuffer_J.pybuffer.buf = NULL;
  __pyx_pybuffer_J.refcount = 0;
  __pyx_pybuffernd_J.data = NULL;
  __pyx_pybuffernd_J.rcbuffer = &__pyx_pybuffer_J;

  /* "Source/LwMiddleLayer.pyx":2776
 * 
 *     def interp_J_from_state(self, prevSpect):
 *         cdef np.ndarray[np.double_t, ndim=2] J = np.asarray(self.J)             # <<<<<<<<<<<<<<
 *         cdef int k
 *         for k in range(self.J.shape[1]):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->J.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2776, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->J, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2776, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 2776, __pyx_L1_error)
  __pyx_t_5 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_J.rcbuffer->pybuffer, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
      __pyx_v_J = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_J.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 2776, __pyx_L1_error)
    } else {__pyx_pybuffernd_J.diminfo[0].strides = __pyx_pybuffernd_J.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_J.diminfo[0].shape = __pyx_pybuffernd_J.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_J.diminfo[1].strides = __pyx_pybuffernd_J.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_J.diminfo[1].shape = __pyx_pybuffernd_J.rcbuffer->pybuffer.shape[1];
    }
  }
  __pyx_t_5 = 0;
  __pyx_v_J = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2778
 *         cdef np.ndarray[np.double_t, ndim=2] J = np.asarray(self.J)
 *         cdef int k
 *         for k in range(self.J.shape[1]):             # <<<<<<<<<<<<<<
 *             J[:, k] = np.interp(self.wavelength, prevSpect.wavelength, prevSpect.J[:, k])
 * 
 */
  if (unlikely(!__pyx_v_self->J.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2778, __pyx_L1_error)}
  __pyx_t_6 = (__pyx_v_self->J.shape[1]);
  __pyx_t_7 = __pyx_t_6;
  for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
    __pyx_v_k = __pyx_t_8;

    /* "Source/LwMiddleLayer.pyx":2779
 *         cdef int k
 *         for k in range(self.J.shape[1]):
 *             J[:, k] = np.interp(self.wavelength, prevSpect.wavelength, prevSpect.J[:, k])             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_interp); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2779, __pyx_L1_error)}
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_prevSpect, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_prevSpect, __pyx_n_s_J); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = __Pyx_PyInt_From_int(__pyx_v_k); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_INCREF(__pyx_slice__12);
    __Pyx_GIVEREF(__pyx_slice__12);
    PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_slice__12);
    __Pyx_GIVEREF(__pyx_t_10);
    PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_10);
    __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_GetItem(__pyx_t_9, __pyx_t_11); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    __pyx_t_11 = NULL;
    __pyx_t_12 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_12 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[4] = {__pyx_t_11, __pyx_t_3, __pyx_t_4, __pyx_t_10};
      __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2779, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_2)) {
      PyObject *__pyx_temp[4] = {__pyx_t_11, __pyx_t_3, __pyx_t_4, __pyx_t_10};
      __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_2, __pyx_temp+1-__pyx_t_12, 3+__pyx_t_12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2779, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    } else
    #endif
    {
      __pyx_t_9 = PyTuple_New(3+__pyx_t_12); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      if (__pyx_t_11) {
        __Pyx_GIVEREF(__pyx_t_11); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_11); __pyx_t_11 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_12, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_12, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_9, 2+__pyx_t_12, __pyx_t_10);
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_10 = 0;
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2779, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_k); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_9 = PyTuple_New(2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_INCREF(__pyx_slice__12);
    __Pyx_GIVEREF(__pyx_slice__12);
    PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_slice__12);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_2);
    __pyx_t_2 = 0;
    if (unlikely(PyObject_SetItem(((PyObject *)__pyx_v_J), __pyx_t_9, __pyx_t_1) < 0)) __PYX_ERR(0, 2779, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Source/LwMiddleLayer.pyx":2775
 *             JRest_from_numpy(self.spect, state['JRest'])
 * 
 *     def interp_J_from_state(self, prevSpect):             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=2] J = np.asarray(self.J)
 *         cdef int k
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_J.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.interp_J_from_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_J.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_J);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2782
 * 
 *     @property
 *     def wavelength(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Wavelength grid used [nm].
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_10wavelength_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_10wavelength_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_10wavelength___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_10wavelength___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2786
 *         Wavelength grid used [nm].
 *         '''
 *         return np.asarray(self.wavelength)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->wavelength.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2786, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->wavelength, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2786, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2782
 * 
 *     @property
 *     def wavelength(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Wavelength grid used [nm].
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.wavelength.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2789
 * 
 *     @property
 *     def I(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Intensity [J/s/m2/sr/Hz], shape is squeeze([Nlambda, Nmu, Noutgoing]).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1I_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1I_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_1I___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_1I___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2793
 *         Intensity [J/s/m2/sr/Hz], shape is squeeze([Nlambda, Nmu, Noutgoing]).
 *         '''
 *         return np.squeeze(np.asarray(self.I))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_squeeze); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2793, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->I, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2789
 * 
 *     @property
 *     def I(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Intensity [J/s/m2/sr/Hz], shape is squeeze([Nlambda, Nmu, Noutgoing]).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.I.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2796
 * 
 *     @property
 *     def J(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Angle-averaged intensity [J/s/m2/sr/Hz], shape is squeeze([Nlambda, Nspace]).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1J_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1J_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_1J___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_1J___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2800
 *         Angle-averaged intensity [J/s/m2/sr/Hz], shape is squeeze([Nlambda, Nspace]).
 *         '''
 *         return np.squeeze(np.asarray(self.J))             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_squeeze); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->J.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2800, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->J, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2796
 * 
 *     @property
 *     def J(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Angle-averaged intensity [J/s/m2/sr/Hz], shape is squeeze([Nlambda, Nspace]).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.J.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2803
 * 
 *     @property
 *     def Quv(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Q, U and V Stokes parameters [J/s/m2/sr/Hz], shape is squeeze([3,
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_3Quv_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_3Quv_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_3Quv___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_3Quv___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":2808
 *         Nlambda, Nmu, Noutgoing]).
 *         '''
 *         return np.squeeze(np.asarray(self.Quv))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_squeeze); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_v_self->Quv.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2808, __pyx_L1_error)}
  __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_self->Quv, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_2 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2803
 * 
 *     @property
 *     def Quv(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Q, U and V Stokes parameters [J/s/m2/sr/Hz], shape is squeeze([3,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.Quv.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_10__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_12__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_10LwSpectrum_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwSpectrum.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2886
 *     cdef dict __dict__
 * 
 *     def __init__(self, atmos, spect, eqPops,             # <<<<<<<<<<<<<<
 *                  ngOptions=None, initSol=None,
 *                  conserveCharge=False,
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_atmos = 0;
  PyObject *__pyx_v_spect = 0;
  PyObject *__pyx_v_eqPops = 0;
  PyObject *__pyx_v_ngOptions = 0;
  PyObject *__pyx_v_initSol = 0;
  PyObject *__pyx_v_conserveCharge = 0;
  PyObject *__pyx_v_nrHOnly = 0;
  PyObject *__pyx_v_hprd = 0;
  PyObject *__pyx_v_crswCallback = 0;
  PyObject *__pyx_v_Nthreads = 0;
  PyObject *__pyx_v_backgroundProvider = 0;
  PyObject *__pyx_v_formalSolver = 0;
  PyObject *__pyx_v_interpFn = 0;
  PyObject *__pyx_v_fsIterScheme = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atmos,&__pyx_n_s_spect,&__pyx_n_s_eqPops,&__pyx_n_s_ngOptions,&__pyx_n_s_initSol,&__pyx_n_s_conserveCharge,&__pyx_n_s_nrHOnly,&__pyx_n_s_hprd,&__pyx_n_s_crswCallback,&__pyx_n_s_Nthreads,&__pyx_n_s_backgroundProvider,&__pyx_n_s_formalSolver,&__pyx_n_s_interpFn,&__pyx_n_s_fsIterScheme,0};
    PyObject* values[14] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0};

    /* "Source/LwMiddleLayer.pyx":2887
 * 
 *     def __init__(self, atmos, spect, eqPops,
 *                  ngOptions=None, initSol=None,             # <<<<<<<<<<<<<<
 *                  conserveCharge=False,
 *                  nrHOnly=False,
 */
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":2888
 *     def __init__(self, atmos, spect, eqPops,
 *                  ngOptions=None, initSol=None,
 *                  conserveCharge=False,             # <<<<<<<<<<<<<<
 *                  nrHOnly=False,
 *                  hprd=False,
 */
    values[5] = ((PyObject *)Py_False);

    /* "Source/LwMiddleLayer.pyx":2889
 *                  ngOptions=None, initSol=None,
 *                  conserveCharge=False,
 *                  nrHOnly=False,             # <<<<<<<<<<<<<<
 *                  hprd=False,
 *                  crswCallback=None, Nthreads=1,
 */
    values[6] = ((PyObject *)Py_False);

    /* "Source/LwMiddleLayer.pyx":2890
 *                  conserveCharge=False,
 *                  nrHOnly=False,
 *                  hprd=False,             # <<<<<<<<<<<<<<
 *                  crswCallback=None, Nthreads=1,
 *                  backgroundProvider=None,
 */
    values[7] = ((PyObject *)Py_False);

    /* "Source/LwMiddleLayer.pyx":2891
 *                  nrHOnly=False,
 *                  hprd=False,
 *                  crswCallback=None, Nthreads=1,             # <<<<<<<<<<<<<<
 *                  backgroundProvider=None,
 *                  formalSolver=None,
 */
    values[8] = ((PyObject *)Py_None);
    values[9] = ((PyObject *)__pyx_int_1);

    /* "Source/LwMiddleLayer.pyx":2892
 *                  hprd=False,
 *                  crswCallback=None, Nthreads=1,
 *                  backgroundProvider=None,             # <<<<<<<<<<<<<<
 *                  formalSolver=None,
 *                  interpFn=None,
 */
    values[10] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":2893
 *                  crswCallback=None, Nthreads=1,
 *                  backgroundProvider=None,
 *                  formalSolver=None,             # <<<<<<<<<<<<<<
 *                  interpFn=None,
 *                  fsIterScheme=None):
 */
    values[11] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":2894
 *                  backgroundProvider=None,
 *                  formalSolver=None,
 *                  interpFn=None,             # <<<<<<<<<<<<<<
 *                  fsIterScheme=None):
 *         self.__dict__ = {}
 */
    values[12] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":2895
 *                  formalSolver=None,
 *                  interpFn=None,
 *                  fsIterScheme=None):             # <<<<<<<<<<<<<<
 *         self.__dict__ = {}
 *         self.kwargs = {
 */
    values[13] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_spect)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 14, 1); __PYX_ERR(0, 2886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eqPops)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 14, 2); __PYX_ERR(0, 2886, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ngOptions);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_initSol);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_conserveCharge);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nrHOnly);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_hprd);
          if (value) { values[7] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_crswCallback);
          if (value) { values[8] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_Nthreads);
          if (value) { values[9] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_backgroundProvider);
          if (value) { values[10] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_formalSolver);
          if (value) { values[11] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 12:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_interpFn);
          if (value) { values[12] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 13:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fsIterScheme);
          if (value) { values[13] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(0, 2886, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 14: values[13] = PyTuple_GET_ITEM(__pyx_args, 13);
        CYTHON_FALLTHROUGH;
        case 13: values[12] = PyTuple_GET_ITEM(__pyx_args, 12);
        CYTHON_FALLTHROUGH;
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_atmos = values[0];
    __pyx_v_spect = values[1];
    __pyx_v_eqPops = values[2];
    __pyx_v_ngOptions = values[3];
    __pyx_v_initSol = values[4];
    __pyx_v_conserveCharge = values[5];
    __pyx_v_nrHOnly = values[6];
    __pyx_v_hprd = values[7];
    __pyx_v_crswCallback = values[8];
    __pyx_v_Nthreads = values[9];
    __pyx_v_backgroundProvider = values[10];
    __pyx_v_formalSolver = values[11];
    __pyx_v_interpFn = values[12];
    __pyx_v_fsIterScheme = values[13];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 3, 14, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 2886, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_atmos, __pyx_v_spect, __pyx_v_eqPops, __pyx_v_ngOptions, __pyx_v_initSol, __pyx_v_conserveCharge, __pyx_v_nrHOnly, __pyx_v_hprd, __pyx_v_crswCallback, __pyx_v_Nthreads, __pyx_v_backgroundProvider, __pyx_v_formalSolver, __pyx_v_interpFn, __pyx_v_fsIterScheme);

  /* "Source/LwMiddleLayer.pyx":2886
 *     cdef dict __dict__
 * 
 *     def __init__(self, atmos, spect, eqPops,             # <<<<<<<<<<<<<<
 *                  ngOptions=None, initSol=None,
 *                  conserveCharge=False,
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_atmos, PyObject *__pyx_v_spect, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_ngOptions, PyObject *__pyx_v_initSol, PyObject *__pyx_v_conserveCharge, PyObject *__pyx_v_nrHOnly, PyObject *__pyx_v_hprd, PyObject *__pyx_v_crswCallback, PyObject *__pyx_v_Nthreads, PyObject *__pyx_v_backgroundProvider, PyObject *__pyx_v_formalSolver, PyObject *__pyx_v_interpFn, PyObject *__pyx_v_fsIterScheme) {
  PyObject *__pyx_v_fsIterSchemeProperties = 0;
  PyObject *__pyx_v_activeAtoms = NULL;
  PyObject *__pyx_v_detailedAtoms = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_la = 0;
  PyObject *__pyx_v_shape = NULL;
  PyObject *__pyx_8genexpr1__pyx_v_a = NULL;
  PyObject *__pyx_8genexpr2__pyx_v_a = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  bool __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":2896
 *                  interpFn=None,
 *                  fsIterScheme=None):
 *         self.__dict__ = {}             # <<<<<<<<<<<<<<
 *         self.kwargs = {
 *             'atmos': atmos,
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2896, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__dict__);
  __Pyx_DECREF(__pyx_v_self->__dict__);
  __pyx_v_self->__dict__ = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2898
 *         self.__dict__ = {}
 *         self.kwargs = {
 *             'atmos': atmos,             # <<<<<<<<<<<<<<
 *             'spect': spect,
 *             'eqPops': eqPops,
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(13); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2898, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_atmos, __pyx_v_atmos) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2899
 *         self.kwargs = {
 *             'atmos': atmos,
 *             'spect': spect,             # <<<<<<<<<<<<<<
 *             'eqPops': eqPops,
 *             'ngOptions': ngOptions,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_spect, __pyx_v_spect) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2900
 *             'atmos': atmos,
 *             'spect': spect,
 *             'eqPops': eqPops,             # <<<<<<<<<<<<<<
 *             'ngOptions': ngOptions,
 *             'initSol': initSol,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_eqPops, __pyx_v_eqPops) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2901
 *             'spect': spect,
 *             'eqPops': eqPops,
 *             'ngOptions': ngOptions,             # <<<<<<<<<<<<<<
 *             'initSol': initSol,
 *             'conserveCharge': conserveCharge,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_ngOptions, __pyx_v_ngOptions) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2902
 *             'eqPops': eqPops,
 *             'ngOptions': ngOptions,
 *             'initSol': initSol,             # <<<<<<<<<<<<<<
 *             'conserveCharge': conserveCharge,
 *             'nrHOnly': nrHOnly,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_initSol, __pyx_v_initSol) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2903
 *             'ngOptions': ngOptions,
 *             'initSol': initSol,
 *             'conserveCharge': conserveCharge,             # <<<<<<<<<<<<<<
 *             'nrHOnly': nrHOnly,
 *             'hprd': hprd,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_conserveCharge, __pyx_v_conserveCharge) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2904
 *             'initSol': initSol,
 *             'conserveCharge': conserveCharge,
 *             'nrHOnly': nrHOnly,             # <<<<<<<<<<<<<<
 *             'hprd': hprd,
 *             'Nthreads': Nthreads,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_nrHOnly, __pyx_v_nrHOnly) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2905
 *             'conserveCharge': conserveCharge,
 *             'nrHOnly': nrHOnly,
 *             'hprd': hprd,             # <<<<<<<<<<<<<<
 *             'Nthreads': Nthreads,
 *             'backgroundProvider': backgroundProvider,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_hprd, __pyx_v_hprd) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2906
 *             'nrHOnly': nrHOnly,
 *             'hprd': hprd,
 *             'Nthreads': Nthreads,             # <<<<<<<<<<<<<<
 *             'backgroundProvider': backgroundProvider,
 *             'formalSolver': formalSolver,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_Nthreads, __pyx_v_Nthreads) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2907
 *             'hprd': hprd,
 *             'Nthreads': Nthreads,
 *             'backgroundProvider': backgroundProvider,             # <<<<<<<<<<<<<<
 *             'formalSolver': formalSolver,
 *             'interpFn': interpFn,
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_backgroundProvider, __pyx_v_backgroundProvider) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2908
 *             'Nthreads': Nthreads,
 *             'backgroundProvider': backgroundProvider,
 *             'formalSolver': formalSolver,             # <<<<<<<<<<<<<<
 *             'interpFn': interpFn,
 *             'fsIterScheme': fsIterScheme
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_formalSolver, __pyx_v_formalSolver) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2909
 *             'backgroundProvider': backgroundProvider,
 *             'formalSolver': formalSolver,
 *             'interpFn': interpFn,             # <<<<<<<<<<<<<<
 *             'fsIterScheme': fsIterScheme
 *         }
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_interpFn, __pyx_v_interpFn) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2910
 *             'formalSolver': formalSolver,
 *             'interpFn': interpFn,
 *             'fsIterScheme': fsIterScheme             # <<<<<<<<<<<<<<
 *         }
 *         cdef dict fsIterSchemeProperties = self.get_fs_iter_scheme_properties(fsIterScheme)
 */
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_fsIterScheme, __pyx_v_fsIterScheme) < 0) __PYX_ERR(0, 2898, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2897
 *                  fsIterScheme=None):
 *         self.__dict__ = {}
 *         self.kwargs = {             # <<<<<<<<<<<<<<
 *             'atmos': atmos,
 *             'spect': spect,
 */
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kwargs);
  __Pyx_DECREF(__pyx_v_self->kwargs);
  __pyx_v_self->kwargs = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2912
 *             'fsIterScheme': fsIterScheme
 *         }
 *         cdef dict fsIterSchemeProperties = self.get_fs_iter_scheme_properties(fsIterScheme)             # <<<<<<<<<<<<<<
 * 
 *         self.atmos = LwAtmosphere(atmos, spect.wavelength.shape[0])
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_fs_iter_scheme_properties); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_fsIterScheme) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_fsIterScheme);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 2912, __pyx_L1_error)
  __pyx_v_fsIterSchemeProperties = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2914
 *         cdef dict fsIterSchemeProperties = self.get_fs_iter_scheme_properties(fsIterScheme)
 * 
 *         self.atmos = LwAtmosphere(atmos, spect.wavelength.shape[0])             # <<<<<<<<<<<<<<
 *         self.spect = LwSpectrum(spect.wavelength, atmos.Nrays,
 *                                 atmos.Nspace, atmos.Noutgoing)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_shape); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_atmos);
  __Pyx_GIVEREF(__pyx_v_atmos);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_atmos);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere), __pyx_t_2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->atmos);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atmos));
  __pyx_v_self->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2915
 * 
 *         self.atmos = LwAtmosphere(atmos, spect.wavelength.shape[0])
 *         self.spect = LwSpectrum(spect.wavelength, atmos.Nrays,             # <<<<<<<<<<<<<<
 *                                 atmos.Nspace, atmos.Noutgoing)
 *         self.conserveCharge = conserveCharge
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nrays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "Source/LwMiddleLayer.pyx":2916
 *         self.atmos = LwAtmosphere(atmos, spect.wavelength.shape[0])
 *         self.spect = LwSpectrum(spect.wavelength, atmos.Nrays,
 *                                 atmos.Nspace, atmos.Noutgoing)             # <<<<<<<<<<<<<<
 *         self.conserveCharge = conserveCharge
 *         self.nrHOnly = nrHOnly
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Nspace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_Noutgoing); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "Source/LwMiddleLayer.pyx":2915
 * 
 *         self.atmos = LwAtmosphere(atmos, spect.wavelength.shape[0])
 *         self.spect = LwSpectrum(spect.wavelength, atmos.Nrays,             # <<<<<<<<<<<<<<
 *                                 atmos.Nspace, atmos.Noutgoing)
 *         self.conserveCharge = conserveCharge
 */
  __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwSpectrum), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2915, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->spect);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->spect));
  __pyx_v_self->spect = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2917
 *         self.spect = LwSpectrum(spect.wavelength, atmos.Nrays,
 *                                 atmos.Nspace, atmos.Noutgoing)
 *         self.conserveCharge = conserveCharge             # <<<<<<<<<<<<<<
 *         self.nrHOnly = nrHOnly
 *         self.hprd = hprd
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_conserveCharge); if (unlikely((__pyx_t_6 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2917, __pyx_L1_error)
  __pyx_v_self->conserveCharge = __pyx_t_6;

  /* "Source/LwMiddleLayer.pyx":2918
 *                                 atmos.Nspace, atmos.Noutgoing)
 *         self.conserveCharge = conserveCharge
 *         self.nrHOnly = nrHOnly             # <<<<<<<<<<<<<<
 *         self.hprd = hprd
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_nrHOnly); if (unlikely((__pyx_t_6 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2918, __pyx_L1_error)
  __pyx_v_self->nrHOnly = __pyx_t_6;

  /* "Source/LwMiddleLayer.pyx":2919
 *         self.conserveCharge = conserveCharge
 *         self.nrHOnly = nrHOnly
 *         self.hprd = hprd             # <<<<<<<<<<<<<<
 * 
 *         self.background = LwBackground(self.atmos, eqPops, spect.radSet,
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_hprd); if (unlikely((__pyx_t_6 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2919, __pyx_L1_error)
  __pyx_v_self->hprd = __pyx_t_6;

  /* "Source/LwMiddleLayer.pyx":2921
 *         self.hprd = hprd
 * 
 *         self.background = LwBackground(self.atmos, eqPops, spect.radSet,             # <<<<<<<<<<<<<<
 *                                        spect.wavelength, provider=backgroundProvider)
 *         self.eqPops = eqPops
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_radSet); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "Source/LwMiddleLayer.pyx":2922
 * 
 *         self.background = LwBackground(self.atmos, eqPops, spect.radSet,
 *                                        spect.wavelength, provider=backgroundProvider)             # <<<<<<<<<<<<<<
 *         self.eqPops = eqPops
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);

  /* "Source/LwMiddleLayer.pyx":2921
 *         self.hprd = hprd
 * 
 *         self.background = LwBackground(self.atmos, eqPops, spect.radSet,             # <<<<<<<<<<<<<<
 *                                        spect.wavelength, provider=backgroundProvider)
 *         self.eqPops = eqPops
 */
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->atmos));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self->atmos));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self->atmos));
  __Pyx_INCREF(__pyx_v_eqPops);
  __Pyx_GIVEREF(__pyx_v_eqPops);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_eqPops);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_5);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":2922
 * 
 *         self.background = LwBackground(self.atmos, eqPops, spect.radSet,
 *                                        spect.wavelength, provider=backgroundProvider)             # <<<<<<<<<<<<<<
 *         self.eqPops = eqPops
 * 
 */
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2922, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_provider, __pyx_v_backgroundProvider) < 0) __PYX_ERR(0, 2922, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":2921
 *         self.hprd = hprd
 * 
 *         self.background = LwBackground(self.atmos, eqPops, spect.radSet,             # <<<<<<<<<<<<<<
 *                                        spect.wavelength, provider=backgroundProvider)
 *         self.eqPops = eqPops
 */
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwBackground), __pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2921, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->background);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->background));
  __pyx_v_self->background = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2923
 *         self.background = LwBackground(self.atmos, eqPops, spect.radSet,
 *                                        spect.wavelength, provider=backgroundProvider)
 *         self.eqPops = eqPops             # <<<<<<<<<<<<<<
 * 
 *         activeAtoms = spect.radSet.activeAtoms
 */
  __Pyx_INCREF(__pyx_v_eqPops);
  __Pyx_GIVEREF(__pyx_v_eqPops);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_v_eqPops;

  /* "Source/LwMiddleLayer.pyx":2925
 *         self.eqPops = eqPops
 * 
 *         activeAtoms = spect.radSet.activeAtoms             # <<<<<<<<<<<<<<
 *         detailedAtoms = spect.radSet.detailedAtoms
 *         self.activeAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_radSet); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2925, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_activeAtoms); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2925, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_activeAtoms = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "Source/LwMiddleLayer.pyx":2926
 * 
 *         activeAtoms = spect.radSet.activeAtoms
 *         detailedAtoms = spect.radSet.detailedAtoms             # <<<<<<<<<<<<<<
 *         self.activeAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 *                                    self.background, ngOptions=ngOptions,
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_radSet); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_detailedAtoms); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2926, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_detailedAtoms = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2927
 *         activeAtoms = spect.radSet.activeAtoms
 *         detailedAtoms = spect.radSet.detailedAtoms
 *         self.activeAtoms = [LwAtom(a, self.atmos, eqPops, spect,             # <<<<<<<<<<<<<<
 *                                    self.background, ngOptions=ngOptions,
 *                                    initSol=initSol,
 */
  { /* enter inner scope */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2927, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_4);

    /* "Source/LwMiddleLayer.pyx":2932
 *                                    conserveCharge=conserveCharge,
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)
 *                             for a in activeAtoms]             # <<<<<<<<<<<<<<
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 *                                      self.background, ngOptions=None,
 */
    if (likely(PyList_CheckExact(__pyx_v_activeAtoms)) || PyTuple_CheckExact(__pyx_v_activeAtoms)) {
      __pyx_t_5 = __pyx_v_activeAtoms; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
    } else {
      __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_activeAtoms); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2932, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_8 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2932, __pyx_L5_error)
    }
    for (;;) {
      if (likely(!__pyx_t_8)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2932, __pyx_L5_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2932, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2932, __pyx_L5_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2932, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_8(__pyx_t_5);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 2932, __pyx_L5_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_8genexpr1__pyx_v_a, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":2927
 *         activeAtoms = spect.radSet.activeAtoms
 *         detailedAtoms = spect.radSet.detailedAtoms
 *         self.activeAtoms = [LwAtom(a, self.atmos, eqPops, spect,             # <<<<<<<<<<<<<<
 *                                    self.background, ngOptions=ngOptions,
 *                                    initSol=initSol,
 */
      __pyx_t_3 = PyTuple_New(5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2927, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_8genexpr1__pyx_v_a);
      __Pyx_GIVEREF(__pyx_8genexpr1__pyx_v_a);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_8genexpr1__pyx_v_a);
      __Pyx_INCREF(((PyObject *)__pyx_v_self->atmos));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self->atmos));
      PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)__pyx_v_self->atmos));
      __Pyx_INCREF(__pyx_v_eqPops);
      __Pyx_GIVEREF(__pyx_v_eqPops);
      PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_eqPops);
      __Pyx_INCREF(__pyx_v_spect);
      __Pyx_GIVEREF(__pyx_v_spect);
      PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_v_spect);
      __Pyx_INCREF(((PyObject *)__pyx_v_self->background));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self->background));
      PyTuple_SET_ITEM(__pyx_t_3, 4, ((PyObject *)__pyx_v_self->background));

      /* "Source/LwMiddleLayer.pyx":2928
 *         detailedAtoms = spect.radSet.detailedAtoms
 *         self.activeAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 *                                    self.background, ngOptions=ngOptions,             # <<<<<<<<<<<<<<
 *                                    initSol=initSol,
 *                                    conserveCharge=conserveCharge,
 */
      __pyx_t_2 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2928, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_ngOptions, __pyx_v_ngOptions) < 0) __PYX_ERR(0, 2928, __pyx_L5_error)

      /* "Source/LwMiddleLayer.pyx":2929
 *         self.activeAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 *                                    self.background, ngOptions=ngOptions,
 *                                    initSol=initSol,             # <<<<<<<<<<<<<<
 *                                    conserveCharge=conserveCharge,
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)
 */
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_initSol, __pyx_v_initSol) < 0) __PYX_ERR(0, 2928, __pyx_L5_error)

      /* "Source/LwMiddleLayer.pyx":2930
 *                                    self.background, ngOptions=ngOptions,
 *                                    initSol=initSol,
 *                                    conserveCharge=conserveCharge,             # <<<<<<<<<<<<<<
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)
 *                             for a in activeAtoms]
 */
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_conserveCharge, __pyx_v_conserveCharge) < 0) __PYX_ERR(0, 2928, __pyx_L5_error)

      /* "Source/LwMiddleLayer.pyx":2931
 *                                    initSol=initSol,
 *                                    conserveCharge=conserveCharge,
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)             # <<<<<<<<<<<<<<
 *                             for a in activeAtoms]
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 */
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_fsIterSchemeProperties, __pyx_v_fsIterSchemeProperties) < 0) __PYX_ERR(0, 2928, __pyx_L5_error)

      /* "Source/LwMiddleLayer.pyx":2927
 *         activeAtoms = spect.radSet.activeAtoms
 *         detailedAtoms = spect.radSet.detailedAtoms
 *         self.activeAtoms = [LwAtom(a, self.atmos, eqPops, spect,             # <<<<<<<<<<<<<<
 *                                    self.background, ngOptions=ngOptions,
 *                                    initSol=initSol,
 */
      __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwAtom), __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2927, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_1))) __PYX_ERR(0, 2927, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":2932
 *                                    conserveCharge=conserveCharge,
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)
 *                             for a in activeAtoms]             # <<<<<<<<<<<<<<
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 *                                      self.background, ngOptions=None,
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_a); __pyx_8genexpr1__pyx_v_a = 0;
    goto __pyx_L8_exit_scope;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_a); __pyx_8genexpr1__pyx_v_a = 0;
    goto __pyx_L1_error;
    __pyx_L8_exit_scope:;
  } /* exit inner scope */

  /* "Source/LwMiddleLayer.pyx":2927
 *         activeAtoms = spect.radSet.activeAtoms
 *         detailedAtoms = spect.radSet.detailedAtoms
 *         self.activeAtoms = [LwAtom(a, self.atmos, eqPops, spect,             # <<<<<<<<<<<<<<
 *                                    self.background, ngOptions=ngOptions,
 *                                    initSol=initSol,
 */
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->activeAtoms);
  __Pyx_DECREF(__pyx_v_self->activeAtoms);
  __pyx_v_self->activeAtoms = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2933
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)
 *                             for a in activeAtoms]
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,             # <<<<<<<<<<<<<<
 *                                      self.background, ngOptions=None,
 *                                      initSol=InitialSolution.Lte, detailed=True,
 */
  { /* enter inner scope */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2933, __pyx_L11_error)
    __Pyx_GOTREF(__pyx_t_4);

    /* "Source/LwMiddleLayer.pyx":2937
 *                                      initSol=InitialSolution.Lte, detailed=True,
 *                                      fsIterSchemeProperties=fsIterSchemeProperties)
 *                               for a in detailedAtoms]             # <<<<<<<<<<<<<<
 * 
 *         self.ctx.atmos = &self.atmos.atmos
 */
    if (likely(PyList_CheckExact(__pyx_v_detailedAtoms)) || PyTuple_CheckExact(__pyx_v_detailedAtoms)) {
      __pyx_t_5 = __pyx_v_detailedAtoms; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
    } else {
      __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_detailedAtoms); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2937, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_8 = Py_TYPE(__pyx_t_5)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 2937, __pyx_L11_error)
    }
    for (;;) {
      if (likely(!__pyx_t_8)) {
        if (likely(PyList_CheckExact(__pyx_t_5))) {
          if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2937, __pyx_L11_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2937, __pyx_L11_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2937, __pyx_L11_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2937, __pyx_L11_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_8(__pyx_t_5);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 2937, __pyx_L11_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_8genexpr2__pyx_v_a, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":2933
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)
 *                             for a in activeAtoms]
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,             # <<<<<<<<<<<<<<
 *                                      self.background, ngOptions=None,
 *                                      initSol=InitialSolution.Lte, detailed=True,
 */
      __pyx_t_1 = PyTuple_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2933, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_8genexpr2__pyx_v_a);
      __Pyx_GIVEREF(__pyx_8genexpr2__pyx_v_a);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_8genexpr2__pyx_v_a);
      __Pyx_INCREF(((PyObject *)__pyx_v_self->atmos));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self->atmos));
      PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self->atmos));
      __Pyx_INCREF(__pyx_v_eqPops);
      __Pyx_GIVEREF(__pyx_v_eqPops);
      PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_eqPops);
      __Pyx_INCREF(__pyx_v_spect);
      __Pyx_GIVEREF(__pyx_v_spect);
      PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_v_spect);
      __Pyx_INCREF(((PyObject *)__pyx_v_self->background));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_self->background));
      PyTuple_SET_ITEM(__pyx_t_1, 4, ((PyObject *)__pyx_v_self->background));

      /* "Source/LwMiddleLayer.pyx":2934
 *                             for a in activeAtoms]
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 *                                      self.background, ngOptions=None,             # <<<<<<<<<<<<<<
 *                                      initSol=InitialSolution.Lte, detailed=True,
 *                                      fsIterSchemeProperties=fsIterSchemeProperties)
 */
      __pyx_t_2 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2934, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_ngOptions, Py_None) < 0) __PYX_ERR(0, 2934, __pyx_L11_error)

      /* "Source/LwMiddleLayer.pyx":2935
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,
 *                                      self.background, ngOptions=None,
 *                                      initSol=InitialSolution.Lte, detailed=True,             # <<<<<<<<<<<<<<
 *                                      fsIterSchemeProperties=fsIterSchemeProperties)
 *                               for a in detailedAtoms]
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_InitialSolution); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2935, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_Lte); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2935, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_initSol, __pyx_t_9) < 0) __PYX_ERR(0, 2934, __pyx_L11_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_detailed, Py_True) < 0) __PYX_ERR(0, 2934, __pyx_L11_error)

      /* "Source/LwMiddleLayer.pyx":2936
 *                                      self.background, ngOptions=None,
 *                                      initSol=InitialSolution.Lte, detailed=True,
 *                                      fsIterSchemeProperties=fsIterSchemeProperties)             # <<<<<<<<<<<<<<
 *                               for a in detailedAtoms]
 * 
 */
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_fsIterSchemeProperties, __pyx_v_fsIterSchemeProperties) < 0) __PYX_ERR(0, 2934, __pyx_L11_error)

      /* "Source/LwMiddleLayer.pyx":2933
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)
 *                             for a in activeAtoms]
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,             # <<<<<<<<<<<<<<
 *                                      self.background, ngOptions=None,
 *                                      initSol=InitialSolution.Lte, detailed=True,
 */
      __pyx_t_9 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwAtom), __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2933, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_9))) __PYX_ERR(0, 2933, __pyx_L11_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

      /* "Source/LwMiddleLayer.pyx":2937
 *                                      initSol=InitialSolution.Lte, detailed=True,
 *                                      fsIterSchemeProperties=fsIterSchemeProperties)
 *                               for a in detailedAtoms]             # <<<<<<<<<<<<<<
 * 
 *         self.ctx.atmos = &self.atmos.atmos
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_a); __pyx_8genexpr2__pyx_v_a = 0;
    goto __pyx_L14_exit_scope;
    __pyx_L11_error:;
    __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_a); __pyx_8genexpr2__pyx_v_a = 0;
    goto __pyx_L1_error;
    __pyx_L14_exit_scope:;
  } /* exit inner scope */

  /* "Source/LwMiddleLayer.pyx":2933
 *                                    fsIterSchemeProperties=fsIterSchemeProperties)
 *                             for a in activeAtoms]
 *         self.detailedAtoms = [LwAtom(a, self.atmos, eqPops, spect,             # <<<<<<<<<<<<<<
 *                                      self.background, ngOptions=None,
 *                                      initSol=InitialSolution.Lte, detailed=True,
 */
  __Pyx_GIVEREF(__pyx_t_4);
  __Pyx_GOTREF(__pyx_v_self->detailedAtoms);
  __Pyx_DECREF(__pyx_v_self->detailedAtoms);
  __pyx_v_self->detailedAtoms = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2939
 *                               for a in detailedAtoms]
 * 
 *         self.ctx.atmos = &self.atmos.atmos             # <<<<<<<<<<<<<<
 *         self.ctx.spect = &self.spect.spect
 *         self.ctx.background = &self.background.background
 */
  __pyx_v_self->ctx.atmos = (&__pyx_v_self->atmos->atmos);

  /* "Source/LwMiddleLayer.pyx":2940
 * 
 *         self.ctx.atmos = &self.atmos.atmos
 *         self.ctx.spect = &self.spect.spect             # <<<<<<<<<<<<<<
 *         self.ctx.background = &self.background.background
 * 
 */
  __pyx_v_self->ctx.spect = (&__pyx_v_self->spect->spect);

  /* "Source/LwMiddleLayer.pyx":2941
 *         self.ctx.atmos = &self.atmos.atmos
 *         self.ctx.spect = &self.spect.spect
 *         self.ctx.background = &self.background.background             # <<<<<<<<<<<<<<
 * 
 *         cdef LwAtom la
 */
  __pyx_v_self->ctx.background = (&__pyx_v_self->background->background);

  /* "Source/LwMiddleLayer.pyx":2944
 * 
 *         cdef LwAtom la
 *         for la in self.activeAtoms:             # <<<<<<<<<<<<<<
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:
 */
  if (unlikely(__pyx_v_self->activeAtoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 2944, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_v_self->activeAtoms; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2944, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2944, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 2944, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_la, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "Source/LwMiddleLayer.pyx":2945
 *         cdef LwAtom la
 *         for la in self.activeAtoms:
 *             self.ctx.activeAtoms.push_back(&la.atom)             # <<<<<<<<<<<<<<
 *         for la in self.detailedAtoms:
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 */
    try {
      __pyx_v_self->ctx.activeAtoms.push_back((&__pyx_v_la->atom));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2945, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":2944
 * 
 *         cdef LwAtom la
 *         for la in self.activeAtoms:             # <<<<<<<<<<<<<<
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2946
 *         for la in self.activeAtoms:
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:             # <<<<<<<<<<<<<<
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 * 
 */
  if (unlikely(__pyx_v_self->detailedAtoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 2946, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_v_self->detailedAtoms; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 2946, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2946, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 2946, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_la, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "Source/LwMiddleLayer.pyx":2947
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:
 *             self.ctx.detailedAtoms.push_back(&la.atom)             # <<<<<<<<<<<<<<
 * 
 *         if self.hprd:
 */
    try {
      __pyx_v_self->ctx.detailedAtoms.push_back((&__pyx_v_la->atom));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 2947, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":2946
 *         for la in self.activeAtoms:
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:             # <<<<<<<<<<<<<<
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2949
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 * 
 *         if self.hprd:             # <<<<<<<<<<<<<<
 *             self.configure_hprd_coeffs()
 * 
 */
  __pyx_t_10 = (__pyx_v_self->hprd != 0);
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":2950
 * 
 *         if self.hprd:
 *             self.configure_hprd_coeffs()             # <<<<<<<<<<<<<<
 * 
 *         if crswCallback is None:
 */
    __pyx_t_4 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->configure_hprd_coeffs(__pyx_v_self); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2950, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":2949
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 * 
 *         if self.hprd:             # <<<<<<<<<<<<<<
 *             self.configure_hprd_coeffs()
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":2952
 *             self.configure_hprd_coeffs()
 * 
 *         if crswCallback is None:             # <<<<<<<<<<<<<<
 *             self.crswCallback = UnityCrswIterator()
 *             self.crswDone = True
 */
  __pyx_t_10 = (__pyx_v_crswCallback == Py_None);
  __pyx_t_11 = (__pyx_t_10 != 0);
  if (__pyx_t_11) {

    /* "Source/LwMiddleLayer.pyx":2953
 * 
 *         if crswCallback is None:
 *             self.crswCallback = UnityCrswIterator()             # <<<<<<<<<<<<<<
 *             self.crswDone = True
 *         else:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_UnityCrswIterator); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_9 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_9)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_9);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_4 = (__pyx_t_9) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_9) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_GOTREF(__pyx_v_self->crswCallback);
    __Pyx_DECREF(__pyx_v_self->crswCallback);
    __pyx_v_self->crswCallback = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":2954
 *         if crswCallback is None:
 *             self.crswCallback = UnityCrswIterator()
 *             self.crswDone = True             # <<<<<<<<<<<<<<
 *         else:
 *             self.crswCallback = crswCallback
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->crswDone);
    __Pyx_DECREF(__pyx_v_self->crswDone);
    __pyx_v_self->crswDone = Py_True;

    /* "Source/LwMiddleLayer.pyx":2952
 *             self.configure_hprd_coeffs()
 * 
 *         if crswCallback is None:             # <<<<<<<<<<<<<<
 *             self.crswCallback = UnityCrswIterator()
 *             self.crswDone = True
 */
    goto __pyx_L20;
  }

  /* "Source/LwMiddleLayer.pyx":2956
 *             self.crswDone = True
 *         else:
 *             self.crswCallback = crswCallback             # <<<<<<<<<<<<<<
 *             self.crswDone = False
 * 
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_v_crswCallback);
    __Pyx_GIVEREF(__pyx_v_crswCallback);
    __Pyx_GOTREF(__pyx_v_self->crswCallback);
    __Pyx_DECREF(__pyx_v_self->crswCallback);
    __pyx_v_self->crswCallback = __pyx_v_crswCallback;

    /* "Source/LwMiddleLayer.pyx":2957
 *         else:
 *             self.crswCallback = crswCallback
 *             self.crswDone = False             # <<<<<<<<<<<<<<
 * 
 *         shape = (self.spect.I.shape[0], self.atmos.Nrays, self.atmos.Nspace)
 */
    __Pyx_INCREF(Py_False);
    __Pyx_GIVEREF(Py_False);
    __Pyx_GOTREF(__pyx_v_self->crswDone);
    __Pyx_DECREF(__pyx_v_self->crswDone);
    __pyx_v_self->crswDone = Py_False;
  }
  __pyx_L20:;

  /* "Source/LwMiddleLayer.pyx":2959
 *             self.crswDone = False
 * 
 *         shape = (self.spect.I.shape[0], self.atmos.Nrays, self.atmos.Nspace)             # <<<<<<<<<<<<<<
 *         self.depthData = LwDepthData(*shape)
 *         self.ctx.depthData = &self.depthData.depthData
 */
  if (unlikely(!__pyx_v_self->spect->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 2959, __pyx_L1_error)}
  __pyx_t_4 = PyInt_FromSsize_t((__pyx_v_self->spect->I.shape[0])); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nrays); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2959, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_9);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_9);
  __pyx_t_4 = 0;
  __pyx_t_5 = 0;
  __pyx_t_9 = 0;
  __pyx_v_shape = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":2960
 * 
 *         shape = (self.spect.I.shape[0], self.atmos.Nrays, self.atmos.Nspace)
 *         self.depthData = LwDepthData(*shape)             # <<<<<<<<<<<<<<
 *         self.ctx.depthData = &self.depthData.depthData
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwDepthData), __pyx_v_shape, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_self->depthData);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->depthData));
  __pyx_v_self->depthData = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":2961
 *         shape = (self.spect.I.shape[0], self.atmos.Nrays, self.atmos.Nspace)
 *         self.depthData = LwDepthData(*shape)
 *         self.ctx.depthData = &self.depthData.depthData             # <<<<<<<<<<<<<<
 * 
 *         self.set_formal_solver(formalSolver, inConstructor=True)
 */
  __pyx_v_self->ctx.depthData = (&__pyx_v_self->depthData->depthData);

  /* "Source/LwMiddleLayer.pyx":2963
 *         self.ctx.depthData = &self.depthData.depthData
 * 
 *         self.set_formal_solver(formalSolver, inConstructor=True)             # <<<<<<<<<<<<<<
 *         self.set_interp_fn(interpFn)
 *         self.set_fs_iter_scheme(fsIterScheme)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_formal_solver); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2963, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_9 = PyTuple_New(1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 2963, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_9);
  __Pyx_INCREF(__pyx_v_formalSolver);
  __Pyx_GIVEREF(__pyx_v_formalSolver);
  PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_v_formalSolver);
  __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2963, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_inConstructor, Py_True) < 0) __PYX_ERR(0, 2963, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_9, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2963, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2964
 * 
 *         self.set_formal_solver(formalSolver, inConstructor=True)
 *         self.set_interp_fn(interpFn)             # <<<<<<<<<<<<<<
 *         self.set_fs_iter_scheme(fsIterScheme)
 *         self.setup_threads(Nthreads)
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_interp_fn); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_4 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_9, __pyx_v_interpFn) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_interpFn);
  __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2965
 *         self.set_formal_solver(formalSolver, inConstructor=True)
 *         self.set_interp_fn(interpFn)
 *         self.set_fs_iter_scheme(fsIterScheme)             # <<<<<<<<<<<<<<
 *         self.setup_threads(Nthreads)
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_fs_iter_scheme); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 2965, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_9 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_9 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_9)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_9);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
    }
  }
  __pyx_t_4 = (__pyx_t_9) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_9, __pyx_v_fsIterScheme) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_v_fsIterScheme);
  __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2965, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2966
 *         self.set_interp_fn(interpFn)
 *         self.set_fs_iter_scheme(fsIterScheme)
 *         self.setup_threads(Nthreads)             # <<<<<<<<<<<<<<
 * 
 *         self.compute_profiles()
 */
  __pyx_t_12 = __Pyx_PyInt_As_int(__pyx_v_Nthreads); if (unlikely((__pyx_t_12 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 2966, __pyx_L1_error)
  __pyx_t_4 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->setup_threads(__pyx_v_self, __pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2966, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2968
 *         self.setup_threads(Nthreads)
 * 
 *         self.compute_profiles()             # <<<<<<<<<<<<<<
 * 
 *     def __getstate__(self):
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->compute_profiles(__pyx_v_self, 0, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 2968, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":2886
 *     cdef dict __dict__
 * 
 *     def __init__(self, atmos, spect, eqPops,             # <<<<<<<<<<<<<<
 *                  ngOptions=None, initSol=None,
 *                  conserveCharge=False,
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_fsIterSchemeProperties);
  __Pyx_XDECREF(__pyx_v_activeAtoms);
  __Pyx_XDECREF(__pyx_v_detailedAtoms);
  __Pyx_XDECREF((PyObject *)__pyx_v_la);
  __Pyx_XDECREF(__pyx_v_shape);
  __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_a);
  __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_a);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2970
 *         self.compute_profiles()
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['kwargs'] = self.kwargs
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_3__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_3__getstate__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_2__getstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_2__getstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getstate__", 0);

  /* "Source/LwMiddleLayer.pyx":2971
 * 
 *     def __getstate__(self):
 *         state = {}             # <<<<<<<<<<<<<<
 *         state['kwargs'] = self.kwargs
 *         state['eqPops'] = self.eqPops
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2971, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2972
 *     def __getstate__(self):
 *         state = {}
 *         state['kwargs'] = self.kwargs             # <<<<<<<<<<<<<<
 *         state['eqPops'] = self.eqPops
 *         state['activeAtoms'] = self.activeAtoms
 */
  __pyx_t_1 = __pyx_v_self->kwargs;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_kwargs, __pyx_t_1) < 0)) __PYX_ERR(0, 2972, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2973
 *         state = {}
 *         state['kwargs'] = self.kwargs
 *         state['eqPops'] = self.eqPops             # <<<<<<<<<<<<<<
 *         state['activeAtoms'] = self.activeAtoms
 *         state['detailedAtoms'] = self.detailedAtoms
 */
  __pyx_t_1 = __pyx_v_self->eqPops;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_eqPops, __pyx_t_1) < 0)) __PYX_ERR(0, 2973, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2974
 *         state['kwargs'] = self.kwargs
 *         state['eqPops'] = self.eqPops
 *         state['activeAtoms'] = self.activeAtoms             # <<<<<<<<<<<<<<
 *         state['detailedAtoms'] = self.detailedAtoms
 *         state['conserveCharge'] = self.conserveCharge
 */
  __pyx_t_1 = __pyx_v_self->activeAtoms;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_activeAtoms, __pyx_t_1) < 0)) __PYX_ERR(0, 2974, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2975
 *         state['eqPops'] = self.eqPops
 *         state['activeAtoms'] = self.activeAtoms
 *         state['detailedAtoms'] = self.detailedAtoms             # <<<<<<<<<<<<<<
 *         state['conserveCharge'] = self.conserveCharge
 *         state['nrHOnly'] = self.nrHOnly
 */
  __pyx_t_1 = __pyx_v_self->detailedAtoms;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_detailedAtoms, __pyx_t_1) < 0)) __PYX_ERR(0, 2975, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2976
 *         state['activeAtoms'] = self.activeAtoms
 *         state['detailedAtoms'] = self.detailedAtoms
 *         state['conserveCharge'] = self.conserveCharge             # <<<<<<<<<<<<<<
 *         state['nrHOnly'] = self.nrHOnly
 *         state['hprd'] = self.hprd
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->conserveCharge); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2976, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_conserveCharge, __pyx_t_1) < 0)) __PYX_ERR(0, 2976, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2977
 *         state['detailedAtoms'] = self.detailedAtoms
 *         state['conserveCharge'] = self.conserveCharge
 *         state['nrHOnly'] = self.nrHOnly             # <<<<<<<<<<<<<<
 *         state['hprd'] = self.hprd
 *         state['atmos'] = self.atmos
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->nrHOnly); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2977, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_nrHOnly, __pyx_t_1) < 0)) __PYX_ERR(0, 2977, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2978
 *         state['conserveCharge'] = self.conserveCharge
 *         state['nrHOnly'] = self.nrHOnly
 *         state['hprd'] = self.hprd             # <<<<<<<<<<<<<<
 *         state['atmos'] = self.atmos
 *         state['spect'] = self.spect
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->hprd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2978, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_hprd, __pyx_t_1) < 0)) __PYX_ERR(0, 2978, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2979
 *         state['nrHOnly'] = self.nrHOnly
 *         state['hprd'] = self.hprd
 *         state['atmos'] = self.atmos             # <<<<<<<<<<<<<<
 *         state['spect'] = self.spect
 *         state['background'] = self.background
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->atmos);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_atmos, __pyx_t_1) < 0)) __PYX_ERR(0, 2979, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2980
 *         state['hprd'] = self.hprd
 *         state['atmos'] = self.atmos
 *         state['spect'] = self.spect             # <<<<<<<<<<<<<<
 *         state['background'] = self.background
 *         state['crswDone'] = self.crswDone
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->spect);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_spect, __pyx_t_1) < 0)) __PYX_ERR(0, 2980, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2981
 *         state['atmos'] = self.atmos
 *         state['spect'] = self.spect
 *         state['background'] = self.background             # <<<<<<<<<<<<<<
 *         state['crswDone'] = self.crswDone
 *         if not self.crswDone:
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->background);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_background, __pyx_t_1) < 0)) __PYX_ERR(0, 2981, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2982
 *         state['spect'] = self.spect
 *         state['background'] = self.background
 *         state['crswDone'] = self.crswDone             # <<<<<<<<<<<<<<
 *         if not self.crswDone:
 *             state['crswCallback'] = self.crswCallback
 */
  __pyx_t_1 = __pyx_v_self->crswDone;
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_crswDone, __pyx_t_1) < 0)) __PYX_ERR(0, 2982, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2983
 *         state['background'] = self.background
 *         state['crswDone'] = self.crswDone
 *         if not self.crswDone:             # <<<<<<<<<<<<<<
 *             state['crswCallback'] = self.crswCallback
 *         else:
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_self->crswDone); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 2983, __pyx_L1_error)
  __pyx_t_3 = ((!__pyx_t_2) != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":2984
 *         state['crswDone'] = self.crswDone
 *         if not self.crswDone:
 *             state['crswCallback'] = self.crswCallback             # <<<<<<<<<<<<<<
 *         else:
 *             state['crswCallback'] = None
 */
    __pyx_t_1 = __pyx_v_self->crswCallback;
    __Pyx_INCREF(__pyx_t_1);
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_crswCallback, __pyx_t_1) < 0)) __PYX_ERR(0, 2984, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":2983
 *         state['background'] = self.background
 *         state['crswDone'] = self.crswDone
 *         if not self.crswDone:             # <<<<<<<<<<<<<<
 *             state['crswCallback'] = self.crswCallback
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":2986
 *             state['crswCallback'] = self.crswCallback
 *         else:
 *             state['crswCallback'] = None             # <<<<<<<<<<<<<<
 *         state['depthData'] = self.depthData
 *         return state
 */
  /*else*/ {
    if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_crswCallback, Py_None) < 0)) __PYX_ERR(0, 2986, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":2987
 *         else:
 *             state['crswCallback'] = None
 *         state['depthData'] = self.depthData             # <<<<<<<<<<<<<<
 *         return state
 * 
 */
  __pyx_t_1 = ((PyObject *)__pyx_v_self->depthData);
  __Pyx_INCREF(__pyx_t_1);
  if (unlikely(PyDict_SetItem(__pyx_v_state, __pyx_n_u_depthData, __pyx_t_1) < 0)) __PYX_ERR(0, 2987, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2988
 *             state['crswCallback'] = None
 *         state['depthData'] = self.depthData
 *         return state             # <<<<<<<<<<<<<<
 * 
 *     def __setstate__(self, state):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_state);
  __pyx_r = __pyx_v_state;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":2970
 *         self.compute_profiles()
 * 
 *     def __getstate__(self):             # <<<<<<<<<<<<<<
 *         state = {}
 *         state['kwargs'] = self.kwargs
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.__getstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2990
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.kwargs = state['kwargs']
 *         self.eqPops = state['eqPops']
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_5__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_5__setstate__(PyObject *__pyx_v_self, PyObject *__pyx_v_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_4__setstate__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_4__setstate__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_state) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_la = 0;
  CYTHON_UNUSED PyObject *__pyx_v_shape = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  bool __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate__", 0);

  /* "Source/LwMiddleLayer.pyx":2991
 * 
 *     def __setstate__(self, state):
 *         self.kwargs = state['kwargs']             # <<<<<<<<<<<<<<
 *         self.eqPops = state['eqPops']
 *         self.atmos = state['atmos']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2991, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 2991, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kwargs);
  __Pyx_DECREF(__pyx_v_self->kwargs);
  __pyx_v_self->kwargs = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2992
 *     def __setstate__(self, state):
 *         self.kwargs = state['kwargs']
 *         self.eqPops = state['eqPops']             # <<<<<<<<<<<<<<
 *         self.atmos = state['atmos']
 *         self.activeAtoms = state['activeAtoms']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_eqPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2992, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2993
 *         self.kwargs = state['kwargs']
 *         self.eqPops = state['eqPops']
 *         self.atmos = state['atmos']             # <<<<<<<<<<<<<<
 *         self.activeAtoms = state['activeAtoms']
 *         self.detailedAtoms = state['detailedAtoms']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_atmos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere))))) __PYX_ERR(0, 2993, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->atmos);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->atmos));
  __pyx_v_self->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2994
 *         self.eqPops = state['eqPops']
 *         self.atmos = state['atmos']
 *         self.activeAtoms = state['activeAtoms']             # <<<<<<<<<<<<<<
 *         self.detailedAtoms = state['detailedAtoms']
 *         self.conserveCharge = state['conserveCharge']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_activeAtoms); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2994, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 2994, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->activeAtoms);
  __Pyx_DECREF(__pyx_v_self->activeAtoms);
  __pyx_v_self->activeAtoms = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2995
 *         self.atmos = state['atmos']
 *         self.activeAtoms = state['activeAtoms']
 *         self.detailedAtoms = state['detailedAtoms']             # <<<<<<<<<<<<<<
 *         self.conserveCharge = state['conserveCharge']
 *         self.nrHOnly = state['nrHOnly']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_detailedAtoms); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2995, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 2995, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->detailedAtoms);
  __Pyx_DECREF(__pyx_v_self->detailedAtoms);
  __pyx_v_self->detailedAtoms = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2996
 *         self.activeAtoms = state['activeAtoms']
 *         self.detailedAtoms = state['detailedAtoms']
 *         self.conserveCharge = state['conserveCharge']             # <<<<<<<<<<<<<<
 *         self.nrHOnly = state['nrHOnly']
 *         self.hprd = state['hprd']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_conserveCharge); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2996, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2996, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->conserveCharge = __pyx_t_2;

  /* "Source/LwMiddleLayer.pyx":2997
 *         self.detailedAtoms = state['detailedAtoms']
 *         self.conserveCharge = state['conserveCharge']
 *         self.nrHOnly = state['nrHOnly']             # <<<<<<<<<<<<<<
 *         self.hprd = state['hprd']
 *         self.spect = state['spect']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_nrHOnly); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2997, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2997, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->nrHOnly = __pyx_t_2;

  /* "Source/LwMiddleLayer.pyx":2998
 *         self.conserveCharge = state['conserveCharge']
 *         self.nrHOnly = state['nrHOnly']
 *         self.hprd = state['hprd']             # <<<<<<<<<<<<<<
 *         self.spect = state['spect']
 *         self.background = state['background']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_hprd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2998, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_2 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2998, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_self->hprd = __pyx_t_2;

  /* "Source/LwMiddleLayer.pyx":2999
 *         self.nrHOnly = state['nrHOnly']
 *         self.hprd = state['hprd']
 *         self.spect = state['spect']             # <<<<<<<<<<<<<<
 *         self.background = state['background']
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_spect); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2999, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwSpectrum))))) __PYX_ERR(0, 2999, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->spect);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->spect));
  __pyx_v_self->spect = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3000
 *         self.hprd = state['hprd']
 *         self.spect = state['spect']
 *         self.background = state['background']             # <<<<<<<<<<<<<<
 * 
 *         self.crswDone = state['crswDone']
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_background); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwBackground))))) __PYX_ERR(0, 3000, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->background);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->background));
  __pyx_v_self->background = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3002
 *         self.background = state['background']
 * 
 *         self.crswDone = state['crswDone']             # <<<<<<<<<<<<<<
 *         if state['crswCallback'] is None:
 *             self.crswCallback = UnityCrswIterator()
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_crswDone); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->crswDone);
  __Pyx_DECREF(__pyx_v_self->crswDone);
  __pyx_v_self->crswDone = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3003
 * 
 *         self.crswDone = state['crswDone']
 *         if state['crswCallback'] is None:             # <<<<<<<<<<<<<<
 *             self.crswCallback = UnityCrswIterator()
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_crswCallback); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3003, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "Source/LwMiddleLayer.pyx":3004
 *         self.crswDone = state['crswDone']
 *         if state['crswCallback'] is None:
 *             self.crswCallback = UnityCrswIterator()             # <<<<<<<<<<<<<<
 *         else:
 *             self.crswCallback = state['crswCallback']
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_UnityCrswIterator); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3004, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_6) : __Pyx_PyObject_CallNoArg(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3004, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->crswCallback);
    __Pyx_DECREF(__pyx_v_self->crswCallback);
    __pyx_v_self->crswCallback = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3003
 * 
 *         self.crswDone = state['crswDone']
 *         if state['crswCallback'] is None:             # <<<<<<<<<<<<<<
 *             self.crswCallback = UnityCrswIterator()
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3006
 *             self.crswCallback = UnityCrswIterator()
 *         else:
 *             self.crswCallback = state['crswCallback']             # <<<<<<<<<<<<<<
 * 
 *         self.ctx.atmos = &self.atmos.atmos
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_crswCallback); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3006, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_GOTREF(__pyx_v_self->crswCallback);
    __Pyx_DECREF(__pyx_v_self->crswCallback);
    __pyx_v_self->crswCallback = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3008
 *             self.crswCallback = state['crswCallback']
 * 
 *         self.ctx.atmos = &self.atmos.atmos             # <<<<<<<<<<<<<<
 *         self.ctx.spect = &self.spect.spect
 *         self.ctx.background = &self.background.background
 */
  __pyx_v_self->ctx.atmos = (&__pyx_v_self->atmos->atmos);

  /* "Source/LwMiddleLayer.pyx":3009
 * 
 *         self.ctx.atmos = &self.atmos.atmos
 *         self.ctx.spect = &self.spect.spect             # <<<<<<<<<<<<<<
 *         self.ctx.background = &self.background.background
 * 
 */
  __pyx_v_self->ctx.spect = (&__pyx_v_self->spect->spect);

  /* "Source/LwMiddleLayer.pyx":3010
 *         self.ctx.atmos = &self.atmos.atmos
 *         self.ctx.spect = &self.spect.spect
 *         self.ctx.background = &self.background.background             # <<<<<<<<<<<<<<
 * 
 *         cdef LwAtom la
 */
  __pyx_v_self->ctx.background = (&__pyx_v_self->background->background);

  /* "Source/LwMiddleLayer.pyx":3013
 * 
 *         cdef LwAtom la
 *         for la in self.activeAtoms:             # <<<<<<<<<<<<<<
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:
 */
  if (unlikely(__pyx_v_self->activeAtoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 3013, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->activeAtoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 3013, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3013, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3013, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_la, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "Source/LwMiddleLayer.pyx":3014
 *         cdef LwAtom la
 *         for la in self.activeAtoms:
 *             self.ctx.activeAtoms.push_back(&la.atom)             # <<<<<<<<<<<<<<
 *         for la in self.detailedAtoms:
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 */
    try {
      __pyx_v_self->ctx.activeAtoms.push_back((&__pyx_v_la->atom));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 3014, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":3013
 * 
 *         cdef LwAtom la
 *         for la in self.activeAtoms:             # <<<<<<<<<<<<<<
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3015
 *         for la in self.activeAtoms:
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:             # <<<<<<<<<<<<<<
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 * 
 */
  if (unlikely(__pyx_v_self->detailedAtoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 3015, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->detailedAtoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 3015, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3015, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3015, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_la, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_5));
    __pyx_t_5 = 0;

    /* "Source/LwMiddleLayer.pyx":3016
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:
 *             self.ctx.detailedAtoms.push_back(&la.atom)             # <<<<<<<<<<<<<<
 * 
 *         if self.hprd:
 */
    try {
      __pyx_v_self->ctx.detailedAtoms.push_back((&__pyx_v_la->atom));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 3016, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":3015
 *         for la in self.activeAtoms:
 *             self.ctx.activeAtoms.push_back(&la.atom)
 *         for la in self.detailedAtoms:             # <<<<<<<<<<<<<<
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3018
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 * 
 *         if self.hprd:             # <<<<<<<<<<<<<<
 *             self.configure_hprd_coeffs()
 * 
 */
  __pyx_t_4 = (__pyx_v_self->hprd != 0);
  if (__pyx_t_4) {

    /* "Source/LwMiddleLayer.pyx":3019
 * 
 *         if self.hprd:
 *             self.configure_hprd_coeffs()             # <<<<<<<<<<<<<<
 * 
 *         shape = (self.spect.I.shape[0], self.atmos.Nrays, self.atmos.Nspace)
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->configure_hprd_coeffs(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3019, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3018
 *             self.ctx.detailedAtoms.push_back(&la.atom)
 * 
 *         if self.hprd:             # <<<<<<<<<<<<<<
 *             self.configure_hprd_coeffs()
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3021
 *             self.configure_hprd_coeffs()
 * 
 *         shape = (self.spect.I.shape[0], self.atmos.Nrays, self.atmos.Nspace)             # <<<<<<<<<<<<<<
 *         self.depthData = state['depthData']
 *         self.ctx.depthData = &self.depthData.depthData
 */
  if (unlikely(!__pyx_v_self->spect->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3021, __pyx_L1_error)}
  __pyx_t_1 = PyInt_FromSsize_t((__pyx_v_self->spect->I.shape[0])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3021, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nrays); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3021, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_Nspace); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3021, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3021, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_t_6);
  __pyx_t_1 = 0;
  __pyx_t_5 = 0;
  __pyx_t_6 = 0;
  __pyx_v_shape = ((PyObject*)__pyx_t_8);
  __pyx_t_8 = 0;

  /* "Source/LwMiddleLayer.pyx":3022
 * 
 *         shape = (self.spect.I.shape[0], self.atmos.Nrays, self.atmos.Nspace)
 *         self.depthData = state['depthData']             # <<<<<<<<<<<<<<
 *         self.ctx.depthData = &self.depthData.depthData
 *         self.set_formal_solver(self.kwargs['formalSolver'], inConstructor=True)
 */
  __pyx_t_8 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_depthData); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3022, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (!(likely(((__pyx_t_8) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_8, __pyx_ptype_11lightweaver_10LwCompiled_LwDepthData))))) __PYX_ERR(0, 3022, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_8);
  __Pyx_GOTREF(__pyx_v_self->depthData);
  __Pyx_DECREF(((PyObject *)__pyx_v_self->depthData));
  __pyx_v_self->depthData = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)__pyx_t_8);
  __pyx_t_8 = 0;

  /* "Source/LwMiddleLayer.pyx":3023
 *         shape = (self.spect.I.shape[0], self.atmos.Nrays, self.atmos.Nspace)
 *         self.depthData = state['depthData']
 *         self.ctx.depthData = &self.depthData.depthData             # <<<<<<<<<<<<<<
 *         self.set_formal_solver(self.kwargs['formalSolver'], inConstructor=True)
 *         self.set_interp_fn(self.kwargs['interpFn'])
 */
  __pyx_v_self->ctx.depthData = (&__pyx_v_self->depthData->depthData);

  /* "Source/LwMiddleLayer.pyx":3024
 *         self.depthData = state['depthData']
 *         self.ctx.depthData = &self.depthData.depthData
 *         self.set_formal_solver(self.kwargs['formalSolver'], inConstructor=True)             # <<<<<<<<<<<<<<
 *         self.set_interp_fn(self.kwargs['interpFn'])
 *         self.set_fs_iter_scheme(self.kwargs['fsIterScheme'])
 */
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_formal_solver); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3024, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (unlikely(__pyx_v_self->kwargs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 3024, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_PyDict_GetItem(__pyx_v_self->kwargs, __pyx_n_u_formalSolver); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3024, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3024, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
  __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3024, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_inConstructor, Py_True) < 0) __PYX_ERR(0, 3024, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3024, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3025
 *         self.ctx.depthData = &self.depthData.depthData
 *         self.set_formal_solver(self.kwargs['formalSolver'], inConstructor=True)
 *         self.set_interp_fn(self.kwargs['interpFn'])             # <<<<<<<<<<<<<<
 *         self.set_fs_iter_scheme(self.kwargs['fsIterScheme'])
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_interp_fn); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (unlikely(__pyx_v_self->kwargs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 3025, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_self->kwargs, __pyx_n_u_interpFn); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3026
 *         self.set_formal_solver(self.kwargs['formalSolver'], inConstructor=True)
 *         self.set_interp_fn(self.kwargs['interpFn'])
 *         self.set_fs_iter_scheme(self.kwargs['fsIterScheme'])             # <<<<<<<<<<<<<<
 * 
 *         self.setup_threads(self.kwargs['Nthreads'])
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_fs_iter_scheme); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (unlikely(__pyx_v_self->kwargs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 3026, __pyx_L1_error)
  }
  __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_self->kwargs, __pyx_n_u_fsIterScheme); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_8, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3028
 *         self.set_fs_iter_scheme(self.kwargs['fsIterScheme'])
 * 
 *         self.setup_threads(self.kwargs['Nthreads'])             # <<<<<<<<<<<<<<
 * 
 *     def set_formal_solver(self, formalSolver, inConstructor=False):
 */
  if (unlikely(__pyx_v_self->kwargs == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 3028, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyDict_GetItem(__pyx_v_self->kwargs, __pyx_n_u_Nthreads); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3028, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->setup_threads(__pyx_v_self, __pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3028, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":2990
 *         return state
 * 
 *     def __setstate__(self, state):             # <<<<<<<<<<<<<<
 *         self.kwargs = state['kwargs']
 *         self.eqPops = state['eqPops']
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.__setstate__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_la);
  __Pyx_XDECREF(__pyx_v_shape);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3030
 *         self.setup_threads(self.kwargs['Nthreads'])
 * 
 *     def set_formal_solver(self, formalSolver, inConstructor=False):             # <<<<<<<<<<<<<<
 *         '''
 *         For internal use. Set the formal solver through the constructor.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_7set_formal_solver(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_6set_formal_solver[] = "\n        For internal use. Set the formal solver through the constructor.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_7set_formal_solver(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_formalSolver = 0;
  PyObject *__pyx_v_inConstructor = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_formal_solver (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_formalSolver,&__pyx_n_s_inConstructor,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_formalSolver)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_inConstructor);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_formal_solver") < 0)) __PYX_ERR(0, 3030, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_formalSolver = values[0];
    __pyx_v_inConstructor = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_formal_solver", 0, 1, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3030, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.set_formal_solver", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6set_formal_solver(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_formalSolver, __pyx_v_inConstructor);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_6set_formal_solver(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_formalSolver, PyObject *__pyx_v_inConstructor) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_fsMan = 0;
  int __pyx_v_fsIdx;
  FormalSolver __pyx_v_fs;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_formal_solver", 0);

  /* "Source/LwMiddleLayer.pyx":3034
 *         For internal use. Set the formal solver through the constructor.
 *         '''
 *         cdef LwFormalSolverManager fsMan = FormalSolvers             # <<<<<<<<<<<<<<
 *         cdef int fsIdx
 *         if formalSolver is not None:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_FormalSolvers); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3034, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwFormalSolverManager))))) __PYX_ERR(0, 3034, __pyx_L1_error)
  __pyx_v_fsMan = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3036
 *         cdef LwFormalSolverManager fsMan = FormalSolvers
 *         cdef int fsIdx
 *         if formalSolver is not None:             # <<<<<<<<<<<<<<
 *             fsIdx = fsMan.names.index(formalSolver)
 *         else:
 */
  __pyx_t_2 = (__pyx_v_formalSolver != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":3037
 *         cdef int fsIdx
 *         if formalSolver is not None:
 *             fsIdx = fsMan.names.index(formalSolver)             # <<<<<<<<<<<<<<
 *         else:
 *             fsIdx = fsMan.default_formal_solver(self.ctx.atmos.Ndim)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_fsMan->names, __pyx_n_s_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3037, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_formalSolver) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_formalSolver);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3037, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3037, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_fsIdx = __pyx_t_6;

    /* "Source/LwMiddleLayer.pyx":3036
 *         cdef LwFormalSolverManager fsMan = FormalSolvers
 *         cdef int fsIdx
 *         if formalSolver is not None:             # <<<<<<<<<<<<<<
 *             fsIdx = fsMan.names.index(formalSolver)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3039
 *             fsIdx = fsMan.names.index(formalSolver)
 *         else:
 *             fsIdx = fsMan.default_formal_solver(self.ctx.atmos.Ndim)             # <<<<<<<<<<<<<<
 *         cdef FormalSolver fs = fsMan.manager.formalSolvers[fsIdx]
 *         self.ctx.formalSolver = fs
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_fsMan), __pyx_n_s_default_formal_solver); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3039, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_self->ctx.atmos->Ndim); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3039, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3039, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3039, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_fsIdx = __pyx_t_6;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3040
 *         else:
 *             fsIdx = fsMan.default_formal_solver(self.ctx.atmos.Ndim)
 *         cdef FormalSolver fs = fsMan.manager.formalSolvers[fsIdx]             # <<<<<<<<<<<<<<
 *         self.ctx.formalSolver = fs
 * 
 */
  __pyx_v_fs = (__pyx_v_fsMan->manager.formalSolvers[__pyx_v_fsIdx]);

  /* "Source/LwMiddleLayer.pyx":3041
 *             fsIdx = fsMan.default_formal_solver(self.ctx.atmos.Ndim)
 *         cdef FormalSolver fs = fsMan.manager.formalSolvers[fsIdx]
 *         self.ctx.formalSolver = fs             # <<<<<<<<<<<<<<
 * 
 *         # NOTE(cmo): If the FS is wide we may need to reconfigure the wide backing stores.
 */
  __pyx_v_self->ctx.formalSolver = __pyx_v_fs;

  /* "Source/LwMiddleLayer.pyx":3045
 *         # NOTE(cmo): If the FS is wide we may need to reconfigure the wide backing stores.
 *         # But we haven't initialised that system yet when calling in the constructor.
 *         if not inConstructor:             # <<<<<<<<<<<<<<
 *             self.update_threads()
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_v_inConstructor); if (unlikely(__pyx_t_3 < 0)) __PYX_ERR(0, 3045, __pyx_L1_error)
  __pyx_t_2 = ((!__pyx_t_3) != 0);
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":3046
 *         # But we haven't initialised that system yet when calling in the constructor.
 *         if not inConstructor:
 *             self.update_threads()             # <<<<<<<<<<<<<<
 * 
 *     def set_interp_fn(self, interpFn):
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->update_threads(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3046, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3045
 *         # NOTE(cmo): If the FS is wide we may need to reconfigure the wide backing stores.
 *         # But we haven't initialised that system yet when calling in the constructor.
 *         if not inConstructor:             # <<<<<<<<<<<<<<
 *             self.update_threads()
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3030
 *         self.setup_threads(self.kwargs['Nthreads'])
 * 
 *     def set_formal_solver(self, formalSolver, inConstructor=False):             # <<<<<<<<<<<<<<
 *         '''
 *         For internal use. Set the formal solver through the constructor.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.set_formal_solver", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_fsMan);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3048
 *             self.update_threads()
 * 
 *     def set_interp_fn(self, interpFn):             # <<<<<<<<<<<<<<
 *         '''
 *         For internal use. Set the interpolation function through the
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_9set_interp_fn(PyObject *__pyx_v_self, PyObject *__pyx_v_interpFn); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_8set_interp_fn[] = "\n        For internal use. Set the interpolation function through the\n        constructor.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_9set_interp_fn(PyObject *__pyx_v_self, PyObject *__pyx_v_interpFn) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_interp_fn (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8set_interp_fn(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_interpFn));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_8set_interp_fn(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_interpFn) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_interpMan = 0;
  int __pyx_v_interpIdx;
  InterpFn __pyx_v_interp;
  PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  char const *__pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_interp_fn", 0);

  /* "Source/LwMiddleLayer.pyx":3053
 *         constructor.
 *         '''
 *         cdef LwInterpFnManager interpMan = InterpFns             # <<<<<<<<<<<<<<
 *         cdef int interpIdx
 *         cdef InterpFn interp
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_InterpFns); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwInterpFnManager))))) __PYX_ERR(0, 3053, __pyx_L1_error)
  __pyx_v_interpMan = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3056
 *         cdef int interpIdx
 *         cdef InterpFn interp
 *         try:             # <<<<<<<<<<<<<<
 *             if interpFn is not None:
 *                 interpIdx = interpMan.names.index(interpFn)
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":3057
 *         cdef InterpFn interp
 *         try:
 *             if interpFn is not None:             # <<<<<<<<<<<<<<
 *                 interpIdx = interpMan.names.index(interpFn)
 *             else:
 */
      __pyx_t_5 = (__pyx_v_interpFn != Py_None);
      __pyx_t_6 = (__pyx_t_5 != 0);
      if (__pyx_t_6) {

        /* "Source/LwMiddleLayer.pyx":3058
 *         try:
 *             if interpFn is not None:
 *                 interpIdx = interpMan.names.index(interpFn)             # <<<<<<<<<<<<<<
 *             else:
 *                 interpIdx = interpMan.default_interp(self.ctx.atmos.Ndim)
 */
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_v_interpMan->names, __pyx_n_s_index); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3058, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_8)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_8);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_v_interpFn) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_v_interpFn);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3058, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3058, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_v_interpIdx = __pyx_t_9;

        /* "Source/LwMiddleLayer.pyx":3057
 *         cdef InterpFn interp
 *         try:
 *             if interpFn is not None:             # <<<<<<<<<<<<<<
 *                 interpIdx = interpMan.names.index(interpFn)
 *             else:
 */
        goto __pyx_L9;
      }

      /* "Source/LwMiddleLayer.pyx":3060
 *                 interpIdx = interpMan.names.index(interpFn)
 *             else:
 *                 interpIdx = interpMan.default_interp(self.ctx.atmos.Ndim)             # <<<<<<<<<<<<<<
 *             interp = interpMan.manager.fns[interpIdx]
 *             self.ctx.interpFn = interp
 */
      /*else*/ {
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_interpMan), __pyx_n_s_default_interp); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3060, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = __Pyx_PyInt_From_int(__pyx_v_self->ctx.atmos->Ndim); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3060, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_10 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
          }
        }
        __pyx_t_1 = (__pyx_t_10) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_10, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3060, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_9 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_9 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3060, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_v_interpIdx = __pyx_t_9;
      }
      __pyx_L9:;

      /* "Source/LwMiddleLayer.pyx":3061
 *             else:
 *                 interpIdx = interpMan.default_interp(self.ctx.atmos.Ndim)
 *             interp = interpMan.manager.fns[interpIdx]             # <<<<<<<<<<<<<<
 *             self.ctx.interpFn = interp
 *             return
 */
      __pyx_v_interp = (__pyx_v_interpMan->manager.fns[__pyx_v_interpIdx]);

      /* "Source/LwMiddleLayer.pyx":3062
 *                 interpIdx = interpMan.default_interp(self.ctx.atmos.Ndim)
 *             interp = interpMan.manager.fns[interpIdx]
 *             self.ctx.interpFn = interp             # <<<<<<<<<<<<<<
 *             return
 *         except ValueError as e:
 */
      __pyx_v_self->ctx.interpFn = __pyx_v_interp;

      /* "Source/LwMiddleLayer.pyx":3063
 *             interp = interpMan.manager.fns[interpIdx]
 *             self.ctx.interpFn = interp
 *             return             # <<<<<<<<<<<<<<
 *         except ValueError as e:
 *             if self.ctx.atmos.Ndim > 1:
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_r = Py_None; __Pyx_INCREF(Py_None);
      goto __pyx_L7_try_return;

      /* "Source/LwMiddleLayer.pyx":3056
 *         cdef int interpIdx
 *         cdef InterpFn interp
 *         try:             # <<<<<<<<<<<<<<
 *             if interpFn is not None:
 *                 interpIdx = interpMan.names.index(interpFn)
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "Source/LwMiddleLayer.pyx":3064
 *             self.ctx.interpFn = interp
 *             return
 *         except ValueError as e:             # <<<<<<<<<<<<<<
 *             if self.ctx.atmos.Ndim > 1:
 *                 raise e
 */
    __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
    if (__pyx_t_9) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.set_interp_fn", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_7, &__pyx_t_8) < 0) __PYX_ERR(0, 3064, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_INCREF(__pyx_t_7);
      __pyx_v_e = __pyx_t_7;
      /*try:*/ {

        /* "Source/LwMiddleLayer.pyx":3065
 *             return
 *         except ValueError as e:
 *             if self.ctx.atmos.Ndim > 1:             # <<<<<<<<<<<<<<
 *                 raise e
 * 
 */
        __pyx_t_6 = ((__pyx_v_self->ctx.atmos->Ndim > 1) != 0);
        if (unlikely(__pyx_t_6)) {

          /* "Source/LwMiddleLayer.pyx":3066
 *         except ValueError as e:
 *             if self.ctx.atmos.Ndim > 1:
 *                 raise e             # <<<<<<<<<<<<<<
 * 
 *     def set_fs_iter_scheme(self, fsIterScheme):
 */
          __Pyx_Raise(__pyx_v_e, 0, 0, 0);
          __PYX_ERR(0, 3066, __pyx_L15_error)

          /* "Source/LwMiddleLayer.pyx":3065
 *             return
 *         except ValueError as e:
 *             if self.ctx.atmos.Ndim > 1:             # <<<<<<<<<<<<<<
 *                 raise e
 * 
 */
        }
      }

      /* "Source/LwMiddleLayer.pyx":3064
 *             self.ctx.interpFn = interp
 *             return
 *         except ValueError as e:             # <<<<<<<<<<<<<<
 *             if self.ctx.atmos.Ndim > 1:
 *                 raise e
 */
      /*finally:*/ {
        /*normal exit:*/{
          __Pyx_DECREF(__pyx_v_e);
          __pyx_v_e = NULL;
          goto __pyx_L16;
        }
        __pyx_L15_error:;
        /*exception exit:*/{
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __pyx_t_13 = 0; __pyx_t_14 = 0; __pyx_t_15 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0;
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_16, &__pyx_t_17, &__pyx_t_18);
          if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_13, &__pyx_t_14, &__pyx_t_15) < 0)) __Pyx_ErrFetch(&__pyx_t_13, &__pyx_t_14, &__pyx_t_15);
          __Pyx_XGOTREF(__pyx_t_13);
          __Pyx_XGOTREF(__pyx_t_14);
          __Pyx_XGOTREF(__pyx_t_15);
          __Pyx_XGOTREF(__pyx_t_16);
          __Pyx_XGOTREF(__pyx_t_17);
          __Pyx_XGOTREF(__pyx_t_18);
          __pyx_t_9 = __pyx_lineno; __pyx_t_11 = __pyx_clineno; __pyx_t_12 = __pyx_filename;
          {
            __Pyx_DECREF(__pyx_v_e);
            __pyx_v_e = NULL;
          }
          if (PY_MAJOR_VERSION >= 3) {
            __Pyx_XGIVEREF(__pyx_t_16);
            __Pyx_XGIVEREF(__pyx_t_17);
            __Pyx_XGIVEREF(__pyx_t_18);
            __Pyx_ExceptionReset(__pyx_t_16, __pyx_t_17, __pyx_t_18);
          }
          __Pyx_XGIVEREF(__pyx_t_13);
          __Pyx_XGIVEREF(__pyx_t_14);
          __Pyx_XGIVEREF(__pyx_t_15);
          __Pyx_ErrRestore(__pyx_t_13, __pyx_t_14, __pyx_t_15);
          __pyx_t_13 = 0; __pyx_t_14 = 0; __pyx_t_15 = 0; __pyx_t_16 = 0; __pyx_t_17 = 0; __pyx_t_18 = 0;
          __pyx_lineno = __pyx_t_9; __pyx_clineno = __pyx_t_11; __pyx_filename = __pyx_t_12;
          goto __pyx_L5_except_error;
        }
        __pyx_L16:;
      }
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "Source/LwMiddleLayer.pyx":3056
 *         cdef int interpIdx
 *         cdef InterpFn interp
 *         try:             # <<<<<<<<<<<<<<
 *             if interpFn is not None:
 *                 interpIdx = interpMan.names.index(interpFn)
 */
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L0;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
  }

  /* "Source/LwMiddleLayer.pyx":3048
 *             self.update_threads()
 * 
 *     def set_interp_fn(self, interpFn):             # <<<<<<<<<<<<<<
 *         '''
 *         For internal use. Set the interpolation function through the
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.set_interp_fn", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_interpMan);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3068
 *                 raise e
 * 
 *     def set_fs_iter_scheme(self, fsIterScheme):             # <<<<<<<<<<<<<<
 *         cdef LwFsIterationManager manager = FsIterationSchemes
 *         cdef int iterIdx
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_11set_fs_iter_scheme(PyObject *__pyx_v_self, PyObject *__pyx_v_fsIterScheme); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_11set_fs_iter_scheme(PyObject *__pyx_v_self, PyObject *__pyx_v_fsIterScheme) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fs_iter_scheme (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_10set_fs_iter_scheme(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_fsIterScheme));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_10set_fs_iter_scheme(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_fsIterScheme) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_manager = 0;
  int __pyx_v_iterIdx;
  FsIterationFns __pyx_v_iterFns;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_fs_iter_scheme", 0);

  /* "Source/LwMiddleLayer.pyx":3069
 * 
 *     def set_fs_iter_scheme(self, fsIterScheme):
 *         cdef LwFsIterationManager manager = FsIterationSchemes             # <<<<<<<<<<<<<<
 *         cdef int iterIdx
 *         cdef FsIterationFns iterFns
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_FsIterationSchemes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3069, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwFsIterationManager))))) __PYX_ERR(0, 3069, __pyx_L1_error)
  __pyx_v_manager = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3073
 *         cdef FsIterationFns iterFns
 * 
 *         if fsIterScheme is not None:             # <<<<<<<<<<<<<<
 *             iterIdx = manager.names.index(fsIterScheme)
 *         else:
 */
  __pyx_t_2 = (__pyx_v_fsIterScheme != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":3074
 * 
 *         if fsIterScheme is not None:
 *             iterIdx = manager.names.index(fsIterScheme)             # <<<<<<<<<<<<<<
 *         else:
 *             iterIdx = manager.default_scheme()
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_manager->names, __pyx_n_s_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_fsIterScheme) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_fsIterScheme);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3074, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3074, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_iterIdx = __pyx_t_6;

    /* "Source/LwMiddleLayer.pyx":3073
 *         cdef FsIterationFns iterFns
 * 
 *         if fsIterScheme is not None:             # <<<<<<<<<<<<<<
 *             iterIdx = manager.names.index(fsIterScheme)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3076
 *             iterIdx = manager.names.index(fsIterScheme)
 *         else:
 *             iterIdx = manager.default_scheme()             # <<<<<<<<<<<<<<
 *         iterFns = manager.manager.fns[iterIdx]
 *         self.ctx.iterFns = iterFns
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_manager), __pyx_n_s_default_scheme); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3076, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3076, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3076, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_iterIdx = __pyx_t_6;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3077
 *         else:
 *             iterIdx = manager.default_scheme()
 *         iterFns = manager.manager.fns[iterIdx]             # <<<<<<<<<<<<<<
 *         self.ctx.iterFns = iterFns
 * 
 */
  __pyx_v_iterFns = (__pyx_v_manager->manager.fns[__pyx_v_iterIdx]);

  /* "Source/LwMiddleLayer.pyx":3078
 *             iterIdx = manager.default_scheme()
 *         iterFns = manager.manager.fns[iterIdx]
 *         self.ctx.iterFns = iterFns             # <<<<<<<<<<<<<<
 * 
 *     def get_fs_iter_scheme_properties(self, fsIterScheme):
 */
  __pyx_v_self->ctx.iterFns = __pyx_v_iterFns;

  /* "Source/LwMiddleLayer.pyx":3068
 *                 raise e
 * 
 *     def set_fs_iter_scheme(self, fsIterScheme):             # <<<<<<<<<<<<<<
 *         cdef LwFsIterationManager manager = FsIterationSchemes
 *         cdef int iterIdx
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.set_fs_iter_scheme", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_manager);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3080
 *         self.ctx.iterFns = iterFns
 * 
 *     def get_fs_iter_scheme_properties(self, fsIterScheme):             # <<<<<<<<<<<<<<
 *         cdef LwFsIterationManager manager = FsIterationSchemes
 *         cdef FsIterationFns iterFns
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_13get_fs_iter_scheme_properties(PyObject *__pyx_v_self, PyObject *__pyx_v_fsIterScheme); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_13get_fs_iter_scheme_properties(PyObject *__pyx_v_self, PyObject *__pyx_v_fsIterScheme) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_fs_iter_scheme_properties (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_12get_fs_iter_scheme_properties(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_fsIterScheme));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_12get_fs_iter_scheme_properties(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_fsIterScheme) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_manager = 0;
  PyObject *__pyx_v_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_fs_iter_scheme_properties", 0);

  /* "Source/LwMiddleLayer.pyx":3081
 * 
 *     def get_fs_iter_scheme_properties(self, fsIterScheme):
 *         cdef LwFsIterationManager manager = FsIterationSchemes             # <<<<<<<<<<<<<<
 *         cdef FsIterationFns iterFns
 *         cdef dict result
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_FsIterationSchemes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3081, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwFsIterationManager))))) __PYX_ERR(0, 3081, __pyx_L1_error)
  __pyx_v_manager = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3085
 *         cdef dict result
 * 
 *         if fsIterScheme is not None:             # <<<<<<<<<<<<<<
 *             result = manager.scheme_properties(fsIterScheme)
 *         else:
 */
  __pyx_t_2 = (__pyx_v_fsIterScheme != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":3086
 * 
 *         if fsIterScheme is not None:
 *             result = manager.scheme_properties(fsIterScheme)             # <<<<<<<<<<<<<<
 *         else:
 *             result = manager.scheme_properties(manager.default_scheme_name())
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_manager), __pyx_n_s_scheme_properties); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3086, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_v_fsIterScheme) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_fsIterScheme);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3086, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 3086, __pyx_L1_error)
    __pyx_v_result = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3085
 *         cdef dict result
 * 
 *         if fsIterScheme is not None:             # <<<<<<<<<<<<<<
 *             result = manager.scheme_properties(fsIterScheme)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3088
 *             result = manager.scheme_properties(fsIterScheme)
 *         else:
 *             result = manager.scheme_properties(manager.default_scheme_name())             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  /*else*/ {
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_manager), __pyx_n_s_scheme_properties); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_manager), __pyx_n_s_default_scheme_name); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_5 = (__pyx_t_7) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_7) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_1 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3088, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(PyDict_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(0, 3088, __pyx_L1_error)
    __pyx_v_result = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3089
 *         else:
 *             result = manager.scheme_properties(manager.default_scheme_name())
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3080
 *         self.ctx.iterFns = iterFns
 * 
 *     def get_fs_iter_scheme_properties(self, fsIterScheme):             # <<<<<<<<<<<<<<
 *         cdef LwFsIterationManager manager = FsIterationSchemes
 *         cdef FsIterationFns iterFns
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.get_fs_iter_scheme_properties", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_manager);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3092
 * 
 *     @property
 *     def Nthreads(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of threads used by the formal solver. A new value can be
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_8Nthreads_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_8Nthreads_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8Nthreads___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_8Nthreads___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":3098
 *         automatically allocated.
 *         '''
 *         return self.ctx.Nthreads             # <<<<<<<<<<<<<<
 * 
 *     @Nthreads.setter
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->ctx.Nthreads); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3092
 * 
 *     @property
 *     def Nthreads(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The number of threads used by the formal solver. A new value can be
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.Nthreads.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3101
 * 
 *     @Nthreads.setter
 *     def Nthreads(self, value):             # <<<<<<<<<<<<<<
 *         cdef int prevValue = self.ctx.Nthreads
 *         self.ctx.Nthreads = int(value)
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8Nthreads_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8Nthreads_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8Nthreads_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8Nthreads_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_v_prevValue;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "Source/LwMiddleLayer.pyx":3102
 *     @Nthreads.setter
 *     def Nthreads(self, value):
 *         cdef int prevValue = self.ctx.Nthreads             # <<<<<<<<<<<<<<
 *         self.ctx.Nthreads = int(value)
 *         if prevValue != value:
 */
  __pyx_t_1 = __pyx_v_self->ctx.Nthreads;
  __pyx_v_prevValue = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":3103
 *     def Nthreads(self, value):
 *         cdef int prevValue = self.ctx.Nthreads
 *         self.ctx.Nthreads = int(value)             # <<<<<<<<<<<<<<
 *         if prevValue != value:
 *             self.update_threads()
 */
  __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_v_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_t_2); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3103, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->ctx.Nthreads = __pyx_t_1;

  /* "Source/LwMiddleLayer.pyx":3104
 *         cdef int prevValue = self.ctx.Nthreads
 *         self.ctx.Nthreads = int(value)
 *         if prevValue != value:             # <<<<<<<<<<<<<<
 *             self.update_threads()
 * 
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_prevValue); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_v_value, Py_NE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(0, 3104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "Source/LwMiddleLayer.pyx":3105
 *         self.ctx.Nthreads = int(value)
 *         if prevValue != value:
 *             self.update_threads()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
    __pyx_t_3 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->update_threads(__pyx_v_self, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3105, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3104
 *         cdef int prevValue = self.ctx.Nthreads
 *         self.ctx.Nthreads = int(value)
 *         if prevValue != value:             # <<<<<<<<<<<<<<
 *             self.update_threads()
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3101
 * 
 *     @Nthreads.setter
 *     def Nthreads(self, value):             # <<<<<<<<<<<<<<
 *         cdef int prevValue = self.ctx.Nthreads
 *         self.ctx.Nthreads = int(value)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.Nthreads.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3108
 * 
 *     @property
 *     def hprd(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Whether PRD calculations are using the Hybrid PRD mode.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_4hprd_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_4hprd_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_4hprd___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_4hprd___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":3112
 *         Whether PRD calculations are using the Hybrid PRD mode.
 *         '''
 *         return self.hprd             # <<<<<<<<<<<<<<
 * 
 *     cdef setup_threads(self, int Nthreads):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->hprd); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3108
 * 
 *     @property
 *     def hprd(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Whether PRD calculations are using the Hybrid PRD mode.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.hprd.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3114
 *         return self.hprd
 * 
 *     cdef setup_threads(self, int Nthreads):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_setup_threads(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_v_Nthreads) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setup_threads", 0);

  /* "Source/LwMiddleLayer.pyx":3118
 *         Internal.
 *         '''
 *         self.ctx.Nthreads = Nthreads             # <<<<<<<<<<<<<<
 *         self.ctx.initialise_threads()
 * 
 */
  __pyx_v_self->ctx.Nthreads = __pyx_v_Nthreads;

  /* "Source/LwMiddleLayer.pyx":3119
 *         '''
 *         self.ctx.Nthreads = Nthreads
 *         self.ctx.initialise_threads()             # <<<<<<<<<<<<<<
 * 
 *     cpdef update_threads(self):
 */
  __pyx_v_self->ctx.initialise_threads();

  /* "Source/LwMiddleLayer.pyx":3114
 *         return self.hprd
 * 
 *     cdef setup_threads(self, int Nthreads):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3121
 *         self.ctx.initialise_threads()
 * 
 *     cpdef update_threads(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_15update_threads(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_threads(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_threads", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_threads); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3121, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_15update_threads)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3121, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3125
 *         Internal.
 *         '''
 *         self.ctx.update_threads()             # <<<<<<<<<<<<<<
 * 
 *     cpdef compute_profiles(self, polarised=False):
 */
  __pyx_v_self->ctx.update_threads();

  /* "Source/LwMiddleLayer.pyx":3121
 *         self.ctx.initialise_threads()
 * 
 *     cpdef update_threads(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_threads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_15update_threads(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_14update_threads[] = "\n        Internal.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_15update_threads(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_threads (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_14update_threads(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_14update_threads(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_threads", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_9LwContext_update_threads(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_threads", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3127
 *         self.ctx.update_threads()
 * 
 *     cpdef compute_profiles(self, polarised=False):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the line profiles for the spectral lines on all active and
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_17compute_profiles(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_compute_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_compute_profiles *__pyx_optional_args) {
  PyObject *__pyx_v_polarised = ((PyObject *)Py_False);
  PyObject *__pyx_v_atoms = NULL;
  PyObject *__pyx_v_atom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_profiles", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_polarised = __pyx_optional_args->polarised;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_compute_profiles); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3127, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_17compute_profiles)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_polarised) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_polarised);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3127, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3139
 *             computed (default: False).
 *         '''
 *         atoms = self.activeAtoms + self.detailedAtoms             # <<<<<<<<<<<<<<
 *         for atom in atoms:
 *             atom.compute_profiles(polarised=polarised)
 */
  __pyx_t_1 = PyNumber_Add(__pyx_v_self->activeAtoms, __pyx_v_self->detailedAtoms); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_atoms = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3140
 *         '''
 *         atoms = self.activeAtoms + self.detailedAtoms
 *         for atom in atoms:             # <<<<<<<<<<<<<<
 *             atom.compute_profiles(polarised=polarised)
 * 
 */
  __pyx_t_1 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 3140, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_atom, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3141
 *         atoms = self.activeAtoms + self.detailedAtoms
 *         for atom in atoms:
 *             atom.compute_profiles(polarised=polarised)             # <<<<<<<<<<<<<<
 * 
 *     cpdef formal_sol_gamma_matrices(self, fixCollisionalRates=False, lambdaIterate=False,
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_compute_profiles); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_polarised, __pyx_v_polarised) < 0) __PYX_ERR(0, 3141, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3140
 *         '''
 *         atoms = self.activeAtoms + self.detailedAtoms
 *         for atom in atoms:             # <<<<<<<<<<<<<<
 *             atom.compute_profiles(polarised=polarised)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3127
 *         self.ctx.update_threads()
 * 
 *     cpdef compute_profiles(self, polarised=False):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the line profiles for the spectral lines on all active and
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.compute_profiles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_atoms);
  __Pyx_XDECREF(__pyx_v_atom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_17compute_profiles(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_16compute_profiles[] = "\n        Compute the line profiles for the spectral lines on all active and\n        detailed atoms.\n\n        Parameters\n        ----------\n        polarised : bool, optional\n            If True, and the lines are polarised, then the full Stokes line\n            profiles will be computed, otherwise the scalar case will be\n            computed (default: False).\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_17compute_profiles(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_polarised = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_profiles (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_polarised,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_polarised);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_profiles") < 0)) __PYX_ERR(0, 3127, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_polarised = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_profiles", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3127, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.compute_profiles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_16compute_profiles(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_polarised);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_16compute_profiles(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_polarised) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_compute_profiles __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_profiles", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.polarised = __pyx_v_polarised;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->compute_profiles(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.compute_profiles", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3143
 *             atom.compute_profiles(polarised=polarised)
 * 
 *     cpdef formal_sol_gamma_matrices(self, fixCollisionalRates=False, lambdaIterate=False,             # <<<<<<<<<<<<<<
 *                                     printUpdate=None, extraParams=None):
 *         '''
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_19formal_sol_gamma_matrices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices *__pyx_optional_args) {
  PyObject *__pyx_v_fixCollisionalRates = ((PyObject *)Py_False);
  PyObject *__pyx_v_lambdaIterate = ((PyObject *)Py_False);

  /* "Source/LwMiddleLayer.pyx":3144
 * 
 *     cpdef formal_sol_gamma_matrices(self, fixCollisionalRates=False, lambdaIterate=False,
 *                                     printUpdate=None, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the formal solution across all wavelengths and fill in the
 */
  PyObject *__pyx_v_printUpdate = ((PyObject *)Py_None);
  PyObject *__pyx_v_extraParams = ((PyObject *)Py_None);
  ExtraParams __pyx_v_params;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  PyArrayObject *__pyx_v_Gamma = 0;
  __pyx_t_8CmoArray_f64 __pyx_v_crswVal;
  IterationResult __pyx_v_maxChange;
  PyObject *__pyx_v_update = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_Gamma;
  __Pyx_Buffer __pyx_pybuffer_Gamma;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  __pyx_t_8CmoArray_f64 __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  PyArrayObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  bool __pyx_t_16;
  IterationResult __pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("formal_sol_gamma_matrices", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_fixCollisionalRates = __pyx_optional_args->fixCollisionalRates;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_lambdaIterate = __pyx_optional_args->lambdaIterate;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_printUpdate = __pyx_optional_args->printUpdate;
          if (__pyx_optional_args->__pyx_n > 3) {
            __pyx_v_extraParams = __pyx_optional_args->extraParams;
          }
        }
      }
    }
  }
  __Pyx_INCREF(__pyx_v_printUpdate);
  __Pyx_INCREF(__pyx_v_extraParams);
  __pyx_pybuffer_Gamma.pybuffer.buf = NULL;
  __pyx_pybuffer_Gamma.refcount = 0;
  __pyx_pybuffernd_Gamma.data = NULL;
  __pyx_pybuffernd_Gamma.rcbuffer = &__pyx_pybuffer_Gamma;

  /* "Source/LwMiddleLayer.pyx":3143
 *             atom.compute_profiles(polarised=polarised)
 * 
 *     cpdef formal_sol_gamma_matrices(self, fixCollisionalRates=False, lambdaIterate=False,             # <<<<<<<<<<<<<<
 *                                     printUpdate=None, extraParams=None):
 *         '''
 */
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_formal_sol_gamma_matrices); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3143, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_19formal_sol_gamma_matrices)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, __pyx_v_fixCollisionalRates, __pyx_v_lambdaIterate, __pyx_v_printUpdate, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3143, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, __pyx_v_fixCollisionalRates, __pyx_v_lambdaIterate, __pyx_v_printUpdate, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3143, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(4+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3143, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(__pyx_v_fixCollisionalRates);
          __Pyx_GIVEREF(__pyx_v_fixCollisionalRates);
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_fixCollisionalRates);
          __Pyx_INCREF(__pyx_v_lambdaIterate);
          __Pyx_GIVEREF(__pyx_v_lambdaIterate);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_lambdaIterate);
          __Pyx_INCREF(__pyx_v_printUpdate);
          __Pyx_GIVEREF(__pyx_v_printUpdate);
          PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_printUpdate);
          __Pyx_INCREF(__pyx_v_extraParams);
          __Pyx_GIVEREF(__pyx_v_extraParams);
          PyTuple_SET_ITEM(__pyx_t_6, 3+__pyx_t_5, __pyx_v_extraParams);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3143, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3174
 *             `IterationUpdate` for details.
 *         '''
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
  __pyx_t_7 = (__pyx_v_printUpdate == Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "Source/LwMiddleLayer.pyx":3175
 *         '''
 *         if printUpdate is None:
 *             printUpdate = True             # <<<<<<<<<<<<<<
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 */
    __Pyx_INCREF(Py_True);
    __Pyx_DECREF_SET(__pyx_v_printUpdate, Py_True);

    /* "Source/LwMiddleLayer.pyx":3174
 *             `IterationUpdate` for details.
 *         '''
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3177
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         if extraParams is None:
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3177, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3179
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  __pyx_t_8 = (__pyx_v_extraParams == Py_None);
  __pyx_t_7 = (__pyx_t_8 != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3180
 * 
 *         if extraParams is None:
 *             extraParams = {}             # <<<<<<<<<<<<<<
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_extraParams, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3179
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3181
 *         if extraParams is None:
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)             # <<<<<<<<<<<<<<
 * 
 *         cdef LwAtom atom
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_extraParams))||((__pyx_v_extraParams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_extraParams)->tp_name), 0))) __PYX_ERR(0, 3181, __pyx_L1_error)
  __pyx_v_params = __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(((PyObject*)__pyx_v_extraParams));

  /* "Source/LwMiddleLayer.pyx":3185
 *         cdef LwAtom atom
 *         cdef np.ndarray[np.double_t, ndim=3] Gamma
 *         cdef f64 crswVal = self.crswCallback()             # <<<<<<<<<<<<<<
 *         if crswVal == 1.0:
 *             self.crswDone = True
 */
  __Pyx_INCREF(__pyx_v_self->crswCallback);
  __pyx_t_2 = __pyx_v_self->crswCallback; __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3185, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_crswVal = __pyx_t_9;

  /* "Source/LwMiddleLayer.pyx":3186
 *         cdef np.ndarray[np.double_t, ndim=3] Gamma
 *         cdef f64 crswVal = self.crswCallback()
 *         if crswVal == 1.0:             # <<<<<<<<<<<<<<
 *             self.crswDone = True
 * 
 */
  __pyx_t_7 = ((__pyx_v_crswVal == 1.0) != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3187
 *         cdef f64 crswVal = self.crswCallback()
 *         if crswVal == 1.0:
 *             self.crswDone = True             # <<<<<<<<<<<<<<
 * 
 *         for atom in self.activeAtoms:
 */
    __Pyx_INCREF(Py_True);
    __Pyx_GIVEREF(Py_True);
    __Pyx_GOTREF(__pyx_v_self->crswDone);
    __Pyx_DECREF(__pyx_v_self->crswDone);
    __pyx_v_self->crswDone = Py_True;

    /* "Source/LwMiddleLayer.pyx":3186
 *         cdef np.ndarray[np.double_t, ndim=3] Gamma
 *         cdef f64 crswVal = self.crswCallback()
 *         if crswVal == 1.0:             # <<<<<<<<<<<<<<
 *             self.crswDone = True
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3189
 *             self.crswDone = True
 * 
 *         for atom in self.activeAtoms:             # <<<<<<<<<<<<<<
 *             Gamma = np.asarray(atom.Gamma)
 *             Gamma.fill(0.0)
 */
  if (unlikely(__pyx_v_self->activeAtoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 3189, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->activeAtoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_10 = 0;
  for (;;) {
    if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_2); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 3189, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3189, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3190
 * 
 *         for atom in self.activeAtoms:
 *             Gamma = np.asarray(atom.Gamma)             # <<<<<<<<<<<<<<
 *             Gamma.fill(0.0)
 *             if not fixCollisionalRates:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_v_atom->Gamma.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3190, __pyx_L1_error)}
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_atom->Gamma, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 3190, __pyx_L1_error)
    __pyx_t_11 = ((PyArrayObject *)__pyx_t_2);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer);
      __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer, (PyObject*)__pyx_t_11, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack);
      if (unlikely(__pyx_t_5 < 0)) {
        PyErr_Fetch(&__pyx_t_12, &__pyx_t_13, &__pyx_t_14);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer, (PyObject*)__pyx_v_Gamma, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_12); Py_XDECREF(__pyx_t_13); Py_XDECREF(__pyx_t_14);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_12, __pyx_t_13, __pyx_t_14);
        }
        __pyx_t_12 = __pyx_t_13 = __pyx_t_14 = 0;
      }
      __pyx_pybuffernd_Gamma.diminfo[0].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_Gamma.diminfo[0].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_Gamma.diminfo[1].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_Gamma.diminfo[1].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[1]; __pyx_pybuffernd_Gamma.diminfo[2].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[2]; __pyx_pybuffernd_Gamma.diminfo[2].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[2];
      if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 3190, __pyx_L1_error)
    }
    __pyx_t_11 = 0;
    __Pyx_XDECREF_SET(__pyx_v_Gamma, ((PyArrayObject *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3191
 *         for atom in self.activeAtoms:
 *             Gamma = np.asarray(atom.Gamma)
 *             Gamma.fill(0.0)             # <<<<<<<<<<<<<<
 *             if not fixCollisionalRates:
 *                 atom.compute_collisions()
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_Gamma), __pyx_n_s_fill); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_3, __pyx_float_0_0) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_float_0_0);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3192
 *             Gamma = np.asarray(atom.Gamma)
 *             Gamma.fill(0.0)
 *             if not fixCollisionalRates:             # <<<<<<<<<<<<<<
 *                 atom.compute_collisions()
 *             Gamma += crswVal * np.asarray(atom.C)
 */
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_fixCollisionalRates); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 3192, __pyx_L1_error)
    __pyx_t_8 = ((!__pyx_t_7) != 0);
    if (__pyx_t_8) {

      /* "Source/LwMiddleLayer.pyx":3193
 *             Gamma.fill(0.0)
 *             if not fixCollisionalRates:
 *                 atom.compute_collisions()             # <<<<<<<<<<<<<<
 *             Gamma += crswVal * np.asarray(atom.C)
 * 
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_atom), __pyx_n_s_compute_collisions); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3193, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3193, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":3192
 *             Gamma = np.asarray(atom.Gamma)
 *             Gamma.fill(0.0)
 *             if not fixCollisionalRates:             # <<<<<<<<<<<<<<
 *                 atom.compute_collisions()
 *             Gamma += crswVal * np.asarray(atom.C)
 */
    }

    /* "Source/LwMiddleLayer.pyx":3194
 *             if not fixCollisionalRates:
 *                 atom.compute_collisions()
 *             Gamma += crswVal * np.asarray(atom.C)             # <<<<<<<<<<<<<<
 * 
 *         self.atmos.compute_bcs(self.spect)
 */
    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_crswVal); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_v_atom->C.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3194, __pyx_L1_error)}
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_atom->C, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_15 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_15)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_15);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_6 = (__pyx_t_15) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_15, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Multiply(__pyx_t_2, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_Gamma), __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 3194, __pyx_L1_error)
    __pyx_t_11 = ((PyArrayObject *)__pyx_t_6);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer);
      __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer, (PyObject*)__pyx_t_11, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack);
      if (unlikely(__pyx_t_5 < 0)) {
        PyErr_Fetch(&__pyx_t_14, &__pyx_t_13, &__pyx_t_12);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer, (PyObject*)__pyx_v_Gamma, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_14); Py_XDECREF(__pyx_t_13); Py_XDECREF(__pyx_t_12);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_14, __pyx_t_13, __pyx_t_12);
        }
        __pyx_t_14 = __pyx_t_13 = __pyx_t_12 = 0;
      }
      __pyx_pybuffernd_Gamma.diminfo[0].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_Gamma.diminfo[0].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_Gamma.diminfo[1].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_Gamma.diminfo[1].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[1]; __pyx_pybuffernd_Gamma.diminfo[2].strides = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.strides[2]; __pyx_pybuffernd_Gamma.diminfo[2].shape = __pyx_pybuffernd_Gamma.rcbuffer->pybuffer.shape[2];
      if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 3194, __pyx_L1_error)
    }
    __pyx_t_11 = 0;
    __Pyx_DECREF_SET(__pyx_v_Gamma, ((PyArrayObject *)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":3189
 *             self.crswDone = True
 * 
 *         for atom in self.activeAtoms:             # <<<<<<<<<<<<<<
 *             Gamma = np.asarray(atom.Gamma)
 *             Gamma.fill(0.0)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3196
 *             Gamma += crswVal * np.asarray(atom.C)
 * 
 *         self.atmos.compute_bcs(self.spect)             # <<<<<<<<<<<<<<
 * 
 *         cdef IterationResult maxChange = formal_sol_gamma_matrices(self.ctx, lambdaIterate, params)
 */
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_compute_bcs); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_6);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_6, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_4, ((PyObject *)__pyx_v_self->spect)) : __Pyx_PyObject_CallOneArg(__pyx_t_6, ((PyObject *)__pyx_v_self->spect));
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3198
 *         self.atmos.compute_bcs(self.spect)
 * 
 *         cdef IterationResult maxChange = formal_sol_gamma_matrices(self.ctx, lambdaIterate, params)             # <<<<<<<<<<<<<<
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 *         update.crsw = crswVal
 */
  __pyx_t_16 = __Pyx_PyObject_IsTrue(__pyx_v_lambdaIterate); if (unlikely((__pyx_t_16 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 3198, __pyx_L1_error)
  try {
    __pyx_t_17 = formal_sol_gamma_matrices(__pyx_v_self->ctx, __pyx_t_16, __pyx_v_params);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 3198, __pyx_L1_error)
  }
  __pyx_v_maxChange = __pyx_t_17;

  /* "Source/LwMiddleLayer.pyx":3199
 * 
 *         cdef IterationResult maxChange = formal_sol_gamma_matrices(self.ctx, lambdaIterate, params)
 *         update = IterationUpdate_from_IterationResult(self, maxChange)             # <<<<<<<<<<<<<<
 *         update.crsw = crswVal
 *         return update
 */
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_IterationUpdate_from_IterationResult(__pyx_v_self, __pyx_v_maxChange); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_update = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3200
 *         cdef IterationResult maxChange = formal_sol_gamma_matrices(self.ctx, lambdaIterate, params)
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 *         update.crsw = crswVal             # <<<<<<<<<<<<<<
 *         return update
 * 
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_crswVal); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_v_update, __pyx_n_s_crsw, __pyx_t_1) < 0) __PYX_ERR(0, 3200, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3201
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 *         update.crsw = crswVal
 *         return update             # <<<<<<<<<<<<<<
 * 
 *     cpdef formal_sol(self, upOnly=True, extraParams=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_update);
  __pyx_r = __pyx_v_update;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3143
 *             atom.compute_profiles(polarised=polarised)
 * 
 *     cpdef formal_sol_gamma_matrices(self, fixCollisionalRates=False, lambdaIterate=False,             # <<<<<<<<<<<<<<
 *                                     printUpdate=None, extraParams=None):
 *         '''
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_15);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.formal_sol_gamma_matrices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Gamma.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XDECREF((PyObject *)__pyx_v_Gamma);
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XDECREF(__pyx_v_printUpdate);
  __Pyx_XDECREF(__pyx_v_extraParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_19formal_sol_gamma_matrices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_18formal_sol_gamma_matrices[] = "\n        Compute the formal solution across all wavelengths and fill in the\n        Gamma matrix for each active atom, allowing the populations to then\n        be updated using the radiative information.\n\n        Will use Nthreads for the formal solution.\n\n        Parameters\n        ----------\n        fixCollisionalRates : bool, optional\n            Whether to not recompute the collisional rates (default: False\n            i.e. recompute them).\n        lambdaIterate : bool, optional\n            Whether to use Lambda iteration (setting the approximate Lambda\n            term to zero), may be useful in certain unstable situations\n            (default: False).\n        printUpdate : bool, optional\n            Whether to print the maximum relative change in J and any changes in\n            CRSW (default: True). (Deprecated)\n        extraParams : dict, optional\n            Dict of extra parameters to be converted through the\n            `dict2ExtraParams` function and passed onto the C++ core.\n\n        Returns\n        -------\n        update: IterationUpdate\n            An object representing the updates to the model. See\n            `IterationUpdate` for details.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_19formal_sol_gamma_matrices(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_fixCollisionalRates = 0;
  PyObject *__pyx_v_lambdaIterate = 0;
  PyObject *__pyx_v_printUpdate = 0;
  PyObject *__pyx_v_extraParams = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("formal_sol_gamma_matrices (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_fixCollisionalRates,&__pyx_n_s_lambdaIterate,&__pyx_n_s_printUpdate,&__pyx_n_s_extraParams,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)Py_False);
    values[1] = ((PyObject *)Py_False);

    /* "Source/LwMiddleLayer.pyx":3144
 * 
 *     cpdef formal_sol_gamma_matrices(self, fixCollisionalRates=False, lambdaIterate=False,
 *                                     printUpdate=None, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the formal solution across all wavelengths and fill in the
 */
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fixCollisionalRates);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_lambdaIterate);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_printUpdate);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_extraParams);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "formal_sol_gamma_matrices") < 0)) __PYX_ERR(0, 3143, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_fixCollisionalRates = values[0];
    __pyx_v_lambdaIterate = values[1];
    __pyx_v_printUpdate = values[2];
    __pyx_v_extraParams = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("formal_sol_gamma_matrices", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3143, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.formal_sol_gamma_matrices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_18formal_sol_gamma_matrices(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_fixCollisionalRates, __pyx_v_lambdaIterate, __pyx_v_printUpdate, __pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3143
 *             atom.compute_profiles(polarised=polarised)
 * 
 *     cpdef formal_sol_gamma_matrices(self, fixCollisionalRates=False, lambdaIterate=False,             # <<<<<<<<<<<<<<
 *                                     printUpdate=None, extraParams=None):
 *         '''
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_18formal_sol_gamma_matrices(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_fixCollisionalRates, PyObject *__pyx_v_lambdaIterate, PyObject *__pyx_v_printUpdate, PyObject *__pyx_v_extraParams) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("formal_sol_gamma_matrices", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 4;
  __pyx_t_2.fixCollisionalRates = __pyx_v_fixCollisionalRates;
  __pyx_t_2.lambdaIterate = __pyx_v_lambdaIterate;
  __pyx_t_2.printUpdate = __pyx_v_printUpdate;
  __pyx_t_2.extraParams = __pyx_v_extraParams;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->formal_sol_gamma_matrices(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.formal_sol_gamma_matrices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3203
 *         return update
 * 
 *     cpdef formal_sol(self, upOnly=True, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the formal solution across all wavelengths (used by
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_21formal_sol(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_formal_sol(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol *__pyx_optional_args) {
  PyObject *__pyx_v_upOnly = ((PyObject *)Py_True);
  PyObject *__pyx_v_extraParams = ((PyObject *)Py_None);
  ExtraParams __pyx_v_params;
  IterationResult __pyx_v_maxChange;
  PyObject *__pyx_v_update = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  bool __pyx_t_9;
  IterationResult __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("formal_sol", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_upOnly = __pyx_optional_args->upOnly;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_extraParams = __pyx_optional_args->extraParams;
      }
    }
  }
  __Pyx_INCREF(__pyx_v_extraParams);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_formal_sol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3203, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_21formal_sol)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_upOnly, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3203, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[3] = {__pyx_t_4, __pyx_v_upOnly, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 2+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3203, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(2+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3203, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(__pyx_v_upOnly);
          __Pyx_GIVEREF(__pyx_v_upOnly);
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_upOnly);
          __Pyx_INCREF(__pyx_v_extraParams);
          __Pyx_GIVEREF(__pyx_v_extraParams);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_extraParams);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3203, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3224
 *         '''
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  __pyx_t_7 = (__pyx_v_extraParams == Py_None);
  __pyx_t_8 = (__pyx_t_7 != 0);
  if (__pyx_t_8) {

    /* "Source/LwMiddleLayer.pyx":3225
 * 
 *         if extraParams is None:
 *             extraParams = {}             # <<<<<<<<<<<<<<
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_extraParams, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3224
 *         '''
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3226
 *         if extraParams is None:
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)             # <<<<<<<<<<<<<<
 * 
 *         self.atmos.compute_bcs(self.spect)
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_extraParams))||((__pyx_v_extraParams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_extraParams)->tp_name), 0))) __PYX_ERR(0, 3226, __pyx_L1_error)
  __pyx_v_params = __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(((PyObject*)__pyx_v_extraParams));

  /* "Source/LwMiddleLayer.pyx":3228
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 *         self.atmos.compute_bcs(self.spect)             # <<<<<<<<<<<<<<
 * 
 *         cdef IterationResult maxChange = formal_sol(self.ctx, upOnly, params)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_compute_bcs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, ((PyObject *)__pyx_v_self->spect)) : __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_self->spect));
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3230
 *         self.atmos.compute_bcs(self.spect)
 * 
 *         cdef IterationResult maxChange = formal_sol(self.ctx, upOnly, params)             # <<<<<<<<<<<<<<
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 *         return update
 */
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_upOnly); if (unlikely((__pyx_t_9 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 3230, __pyx_L1_error)
  try {
    __pyx_t_10 = formal_sol(__pyx_v_self->ctx, __pyx_t_9, __pyx_v_params);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 3230, __pyx_L1_error)
  }
  __pyx_v_maxChange = __pyx_t_10;

  /* "Source/LwMiddleLayer.pyx":3231
 * 
 *         cdef IterationResult maxChange = formal_sol(self.ctx, upOnly, params)
 *         update = IterationUpdate_from_IterationResult(self, maxChange)             # <<<<<<<<<<<<<<
 *         return update
 * 
 */
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_IterationUpdate_from_IterationResult(__pyx_v_self, __pyx_v_maxChange); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_update = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3232
 *         cdef IterationResult maxChange = formal_sol(self.ctx, upOnly, params)
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 *         return update             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_update);
  __pyx_r = __pyx_v_update;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3203
 *         return update
 * 
 *     cpdef formal_sol(self, upOnly=True, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the formal solution across all wavelengths (used by
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.formal_sol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XDECREF(__pyx_v_extraParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_21formal_sol(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_20formal_sol[] = "\n        Compute the formal solution across all wavelengths (used by\n        `compute_rays`). Only computes upgoing rays by default, which has\n        implication on boundary conditions in 2D.\n\n        Parameters\n        ----------\n        upOnly : bool, optional\n            Only compute upgoing rays, (default: True)\n        extraParams : dict, optional\n            Dict of extra parameters to be converted through the\n            `dict2ExtraParams` function and passed onto the C++ core.\n\n        Returns\n        -------\n        update: IterationUpdate\n            An object representing the updates to the model. See\n            `IterationUpdate` for details.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_21formal_sol(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_upOnly = 0;
  PyObject *__pyx_v_extraParams = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("formal_sol (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_upOnly,&__pyx_n_s_extraParams,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_True);
    values[1] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_upOnly);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_extraParams);
          if (value) { values[1] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "formal_sol") < 0)) __PYX_ERR(0, 3203, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_upOnly = values[0];
    __pyx_v_extraParams = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("formal_sol", 0, 0, 2, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3203, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.formal_sol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_20formal_sol(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_upOnly, __pyx_v_extraParams);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_20formal_sol(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_upOnly, PyObject *__pyx_v_extraParams) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("formal_sol", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 2;
  __pyx_t_2.upOnly = __pyx_v_upOnly;
  __pyx_t_2.extraParams = __pyx_v_extraParams;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->formal_sol(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.formal_sol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3235
 * 
 * 
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,             # <<<<<<<<<<<<<<
 *                       vlos=True, B=True, background=True, hprd=True,
 *                       quiet=True):
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_23update_deps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_deps(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_update_deps *__pyx_optional_args) {
  PyObject *__pyx_v_temperature = ((PyObject *)Py_True);
  PyObject *__pyx_v_ne = ((PyObject *)Py_True);
  PyObject *__pyx_v_vturb = ((PyObject *)Py_True);

  /* "Source/LwMiddleLayer.pyx":3236
 * 
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,
 *                       vlos=True, B=True, background=True, hprd=True,             # <<<<<<<<<<<<<<
 *                       quiet=True):
 *         '''
 */
  PyObject *__pyx_v_vlos = ((PyObject *)Py_True);
  PyObject *__pyx_v_B = ((PyObject *)Py_True);
  PyObject *__pyx_v_background = ((PyObject *)Py_True);
  PyObject *__pyx_v_hprd = ((PyObject *)Py_True);

  /* "Source/LwMiddleLayer.pyx":3237
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,
 *                       vlos=True, B=True, background=True, hprd=True,
 *                       quiet=True):             # <<<<<<<<<<<<<<
 *         '''
 *         Update various dependent parameters in the simulation after changes
 */
  PyObject *__pyx_v_quiet = ((PyObject *)Py_True);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_deps", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_temperature = __pyx_optional_args->temperature;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_ne = __pyx_optional_args->ne;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_vturb = __pyx_optional_args->vturb;
          if (__pyx_optional_args->__pyx_n > 3) {
            __pyx_v_vlos = __pyx_optional_args->vlos;
            if (__pyx_optional_args->__pyx_n > 4) {
              __pyx_v_B = __pyx_optional_args->B;
              if (__pyx_optional_args->__pyx_n > 5) {
                __pyx_v_background = __pyx_optional_args->background;
                if (__pyx_optional_args->__pyx_n > 6) {
                  __pyx_v_hprd = __pyx_optional_args->hprd;
                  if (__pyx_optional_args->__pyx_n > 7) {
                    __pyx_v_quiet = __pyx_optional_args->quiet;
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  /* "Source/LwMiddleLayer.pyx":3235
 * 
 * 
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,             # <<<<<<<<<<<<<<
 *                       vlos=True, B=True, background=True, hprd=True,
 *                       quiet=True):
 */
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_deps); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_23update_deps)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[9] = {__pyx_t_4, __pyx_v_temperature, __pyx_v_ne, __pyx_v_vturb, __pyx_v_vlos, __pyx_v_B, __pyx_v_background, __pyx_v_hprd, __pyx_v_quiet};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 8+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3235, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[9] = {__pyx_t_4, __pyx_v_temperature, __pyx_v_ne, __pyx_v_vturb, __pyx_v_vlos, __pyx_v_B, __pyx_v_background, __pyx_v_hprd, __pyx_v_quiet};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 8+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3235, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(8+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3235, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(__pyx_v_temperature);
          __Pyx_GIVEREF(__pyx_v_temperature);
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_temperature);
          __Pyx_INCREF(__pyx_v_ne);
          __Pyx_GIVEREF(__pyx_v_ne);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_ne);
          __Pyx_INCREF(__pyx_v_vturb);
          __Pyx_GIVEREF(__pyx_v_vturb);
          PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_vturb);
          __Pyx_INCREF(__pyx_v_vlos);
          __Pyx_GIVEREF(__pyx_v_vlos);
          PyTuple_SET_ITEM(__pyx_t_6, 3+__pyx_t_5, __pyx_v_vlos);
          __Pyx_INCREF(__pyx_v_B);
          __Pyx_GIVEREF(__pyx_v_B);
          PyTuple_SET_ITEM(__pyx_t_6, 4+__pyx_t_5, __pyx_v_B);
          __Pyx_INCREF(__pyx_v_background);
          __Pyx_GIVEREF(__pyx_v_background);
          PyTuple_SET_ITEM(__pyx_t_6, 5+__pyx_t_5, __pyx_v_background);
          __Pyx_INCREF(__pyx_v_hprd);
          __Pyx_GIVEREF(__pyx_v_hprd);
          PyTuple_SET_ITEM(__pyx_t_6, 6+__pyx_t_5, __pyx_v_hprd);
          __Pyx_INCREF(__pyx_v_quiet);
          __Pyx_GIVEREF(__pyx_v_quiet);
          PyTuple_SET_ITEM(__pyx_t_6, 7+__pyx_t_5, __pyx_v_quiet);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3235, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3265
 *             (default: True).
 *         '''
 *         if vlos or B:             # <<<<<<<<<<<<<<
 *             self.atmos.update_projections()
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_vlos); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3265, __pyx_L1_error)
  if (!__pyx_t_8) {
  } else {
    __pyx_t_7 = __pyx_t_8;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_B); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3265, __pyx_L1_error)
  __pyx_t_7 = __pyx_t_8;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3266
 *         '''
 *         if vlos or B:
 *             self.atmos.update_projections()             # <<<<<<<<<<<<<<
 * 
 *         if temperature or vturb:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_update_projections); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3266, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3266, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3265
 *             (default: True).
 *         '''
 *         if vlos or B:             # <<<<<<<<<<<<<<
 *             self.atmos.update_projections()
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3268
 *             self.atmos.update_projections()
 * 
 *         if temperature or vturb:             # <<<<<<<<<<<<<<
 *             self.compute_profiles()
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_temperature); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3268, __pyx_L1_error)
  if (!__pyx_t_8) {
  } else {
    __pyx_t_7 = __pyx_t_8;
    goto __pyx_L7_bool_binop_done;
  }
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_vturb); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3268, __pyx_L1_error)
  __pyx_t_7 = __pyx_t_8;
  __pyx_L7_bool_binop_done:;
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3269
 * 
 *         if temperature or vturb:
 *             self.compute_profiles()             # <<<<<<<<<<<<<<
 * 
 *         if temperature or ne:
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->compute_profiles(__pyx_v_self, 0, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3269, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3268
 *             self.atmos.update_projections()
 * 
 *         if temperature or vturb:             # <<<<<<<<<<<<<<
 *             self.compute_profiles()
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3271
 *             self.compute_profiles()
 * 
 *         if temperature or ne:             # <<<<<<<<<<<<<<
 *             self.eqPops.update_lte_atoms_Hmin_pops(self.kwargs['atmos'], conserveCharge=self.conserveCharge,
 *                                                    updateTotals=True, quiet=quiet)
 */
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_temperature); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3271, __pyx_L1_error)
  if (!__pyx_t_8) {
  } else {
    __pyx_t_7 = __pyx_t_8;
    goto __pyx_L10_bool_binop_done;
  }
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_ne); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3271, __pyx_L1_error)
  __pyx_t_7 = __pyx_t_8;
  __pyx_L10_bool_binop_done:;
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3272
 * 
 *         if temperature or ne:
 *             self.eqPops.update_lte_atoms_Hmin_pops(self.kwargs['atmos'], conserveCharge=self.conserveCharge,             # <<<<<<<<<<<<<<
 *                                                    updateTotals=True, quiet=quiet)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->eqPops, __pyx_n_s_update_lte_atoms_Hmin_pops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (unlikely(__pyx_v_self->kwargs == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 3272, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_PyDict_GetItem(__pyx_v_self->kwargs, __pyx_n_u_atmos); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyBool_FromLong(__pyx_v_self->conserveCharge); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_conserveCharge, __pyx_t_6) < 0) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":3273
 *         if temperature or ne:
 *             self.eqPops.update_lte_atoms_Hmin_pops(self.kwargs['atmos'], conserveCharge=self.conserveCharge,
 *                                                    updateTotals=True, quiet=quiet)             # <<<<<<<<<<<<<<
 * 
 *         if background and any([temperature, ne, vturb, vlos]):
 */
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_updateTotals, Py_True) < 0) __PYX_ERR(0, 3272, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_quiet, __pyx_v_quiet) < 0) __PYX_ERR(0, 3272, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3272
 * 
 *         if temperature or ne:
 *             self.eqPops.update_lte_atoms_Hmin_pops(self.kwargs['atmos'], conserveCharge=self.conserveCharge,             # <<<<<<<<<<<<<<
 *                                                    updateTotals=True, quiet=quiet)
 * 
 */
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3272, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":3271
 *             self.compute_profiles()
 * 
 *         if temperature or ne:             # <<<<<<<<<<<<<<
 *             self.eqPops.update_lte_atoms_Hmin_pops(self.kwargs['atmos'], conserveCharge=self.conserveCharge,
 *                                                    updateTotals=True, quiet=quiet)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3275
 *                                                    updateTotals=True, quiet=quiet)
 * 
 *         if background and any([temperature, ne, vturb, vlos]):             # <<<<<<<<<<<<<<
 *             self.background.update_background(self.atmos)
 * 
 */
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_background); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3275, __pyx_L1_error)
  if (__pyx_t_8) {
  } else {
    __pyx_t_7 = __pyx_t_8;
    goto __pyx_L13_bool_binop_done;
  }
  __pyx_t_6 = PyList_New(4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_INCREF(__pyx_v_temperature);
  __Pyx_GIVEREF(__pyx_v_temperature);
  PyList_SET_ITEM(__pyx_t_6, 0, __pyx_v_temperature);
  __Pyx_INCREF(__pyx_v_ne);
  __Pyx_GIVEREF(__pyx_v_ne);
  PyList_SET_ITEM(__pyx_t_6, 1, __pyx_v_ne);
  __Pyx_INCREF(__pyx_v_vturb);
  __Pyx_GIVEREF(__pyx_v_vturb);
  PyList_SET_ITEM(__pyx_t_6, 2, __pyx_v_vturb);
  __Pyx_INCREF(__pyx_v_vlos);
  __Pyx_GIVEREF(__pyx_v_vlos);
  PyList_SET_ITEM(__pyx_t_6, 3, __pyx_v_vlos);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_any, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3275, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = __pyx_t_8;
  __pyx_L13_bool_binop_done:;
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3276
 * 
 *         if background and any([temperature, ne, vturb, vlos]):
 *             self.background.update_background(self.atmos)             # <<<<<<<<<<<<<<
 * 
 *         if self.hprd and hprd:
 */
    __pyx_t_2 = ((PyObject *)__pyx_v_self->atmos);
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_6 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwBackground *)__pyx_v_self->background->__pyx_vtab)->update_background(__pyx_v_self->background, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_2), 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3276, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":3275
 *                                                    updateTotals=True, quiet=quiet)
 * 
 *         if background and any([temperature, ne, vturb, vlos]):             # <<<<<<<<<<<<<<
 *             self.background.update_background(self.atmos)
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3278
 *             self.background.update_background(self.atmos)
 * 
 *         if self.hprd and hprd:             # <<<<<<<<<<<<<<
 *             self.update_hprd_coeffs()
 * 
 */
  __pyx_t_8 = (__pyx_v_self->hprd != 0);
  if (__pyx_t_8) {
  } else {
    __pyx_t_7 = __pyx_t_8;
    goto __pyx_L16_bool_binop_done;
  }
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_v_hprd); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3278, __pyx_L1_error)
  __pyx_t_7 = __pyx_t_8;
  __pyx_L16_bool_binop_done:;
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3279
 * 
 *         if self.hprd and hprd:
 *             self.update_hprd_coeffs()             # <<<<<<<<<<<<<<
 * 
 *     cpdef rel_diff_pops(self, printUpdate=None):
 */
    __pyx_t_6 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->update_hprd_coeffs(__pyx_v_self, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3279, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "Source/LwMiddleLayer.pyx":3278
 *             self.background.update_background(self.atmos)
 * 
 *         if self.hprd and hprd:             # <<<<<<<<<<<<<<
 *             self.update_hprd_coeffs()
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3235
 * 
 * 
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,             # <<<<<<<<<<<<<<
 *                       vlos=True, B=True, background=True, hprd=True,
 *                       quiet=True):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_deps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_23update_deps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_22update_deps[] = "\n        Update various dependent parameters in the simulation after changes\n        to different components. If a component has not been adjust then its\n        associated argument can be set to False. By default, all standard\n        dependent components are recomputed (e.g. projected velocities, line\n        profiles, LTE populations, background terms).\n\n        Parameters\n        ----------\n        temperature : bool, optional\n            Whether the temperature has been modified.\n        ne : bool, optional\n            Whether the electron density has been modified.\n        vturb : bool, optional\n            Whether the microturbulent velocity has been modified.\n        vlos : bool, optional\n            Whether the bulk velocity field has been modified.\n        B : bool, optional\n            Whether the magnetic field has been modified.\n        background : bool, optional\n            Whether the background needs updating.\n        hprd : bool, optional\n            Whether the hybrid PRD terms need updating.\n        quiet : bool, optional\n            Whether to print any update information from these functions\n            (default: True).\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_23update_deps(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_temperature = 0;
  PyObject *__pyx_v_ne = 0;
  PyObject *__pyx_v_vturb = 0;
  PyObject *__pyx_v_vlos = 0;
  PyObject *__pyx_v_B = 0;
  PyObject *__pyx_v_background = 0;
  PyObject *__pyx_v_hprd = 0;
  PyObject *__pyx_v_quiet = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_deps (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature,&__pyx_n_s_ne,&__pyx_n_s_vturb,&__pyx_n_s_vlos,&__pyx_n_s_B,&__pyx_n_s_background,&__pyx_n_s_hprd,&__pyx_n_s_quiet,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    values[0] = ((PyObject *)Py_True);
    values[1] = ((PyObject *)Py_True);
    values[2] = ((PyObject *)Py_True);

    /* "Source/LwMiddleLayer.pyx":3236
 * 
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,
 *                       vlos=True, B=True, background=True, hprd=True,             # <<<<<<<<<<<<<<
 *                       quiet=True):
 *         '''
 */
    values[3] = ((PyObject *)Py_True);
    values[4] = ((PyObject *)Py_True);
    values[5] = ((PyObject *)Py_True);
    values[6] = ((PyObject *)Py_True);

    /* "Source/LwMiddleLayer.pyx":3237
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,
 *                       vlos=True, B=True, background=True, hprd=True,
 *                       quiet=True):             # <<<<<<<<<<<<<<
 *         '''
 *         Update various dependent parameters in the simulation after changes
 */
    values[7] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_temperature);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ne);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_vturb);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_vlos);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_B);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_background);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_hprd);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_quiet);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "update_deps") < 0)) __PYX_ERR(0, 3235, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_temperature = values[0];
    __pyx_v_ne = values[1];
    __pyx_v_vturb = values[2];
    __pyx_v_vlos = values[3];
    __pyx_v_B = values[4];
    __pyx_v_background = values[5];
    __pyx_v_hprd = values[6];
    __pyx_v_quiet = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_deps", 0, 0, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3235, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_deps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_22update_deps(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_temperature, __pyx_v_ne, __pyx_v_vturb, __pyx_v_vlos, __pyx_v_B, __pyx_v_background, __pyx_v_hprd, __pyx_v_quiet);

  /* "Source/LwMiddleLayer.pyx":3235
 * 
 * 
 *     cpdef update_deps(self, temperature=True, ne=True, vturb=True,             # <<<<<<<<<<<<<<
 *                       vlos=True, B=True, background=True, hprd=True,
 *                       quiet=True):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_22update_deps(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_temperature, PyObject *__pyx_v_ne, PyObject *__pyx_v_vturb, PyObject *__pyx_v_vlos, PyObject *__pyx_v_B, PyObject *__pyx_v_background, PyObject *__pyx_v_hprd, PyObject *__pyx_v_quiet) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_update_deps __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_deps", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 8;
  __pyx_t_2.temperature = __pyx_v_temperature;
  __pyx_t_2.ne = __pyx_v_ne;
  __pyx_t_2.vturb = __pyx_v_vturb;
  __pyx_t_2.vlos = __pyx_v_vlos;
  __pyx_t_2.B = __pyx_v_B;
  __pyx_t_2.background = __pyx_v_background;
  __pyx_t_2.hprd = __pyx_v_hprd;
  __pyx_t_2.quiet = __pyx_v_quiet;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->update_deps(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_deps", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3281
 *             self.update_hprd_coeffs()
 * 
 *     cpdef rel_diff_pops(self, printUpdate=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_25rel_diff_pops(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops *__pyx_optional_args) {
  PyObject *__pyx_v_printUpdate = ((PyObject *)Py_None);
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  Atom *__pyx_v_a;
  NgChange __pyx_v_maxChange;
  __pyx_t_8CmoArray_f64 __pyx_v_delta;
  __pyx_t_8CmoArray_f64 __pyx_v_maxDelta;
  CYTHON_UNUSED int __pyx_v_i;
  PyObject *__pyx_v_atoms = NULL;
  PyObject *__pyx_v_update = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  __pyx_t_8CmoArray_f64 __pyx_t_9;
  __pyx_t_8CmoArray_f64 __pyx_t_10;
  __pyx_t_8CmoArray_f64 __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rel_diff_pops", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_printUpdate = __pyx_optional_args->printUpdate;
    }
  }
  __Pyx_INCREF(__pyx_v_printUpdate);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rel_diff_pops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3281, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_25rel_diff_pops)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_printUpdate) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_printUpdate);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3281, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3289
 *         cdef NgChange maxChange
 *         cdef f64 delta
 *         cdef f64 maxDelta = 0.0             # <<<<<<<<<<<<<<
 *         cdef int i
 *         atoms = self.activeAtoms
 */
  __pyx_v_maxDelta = 0.0;

  /* "Source/LwMiddleLayer.pyx":3291
 *         cdef f64 maxDelta = 0.0
 *         cdef int i
 *         atoms = self.activeAtoms             # <<<<<<<<<<<<<<
 *         if printUpdate is None:
 *             printUpdate = True
 */
  __pyx_t_1 = __pyx_v_self->activeAtoms;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_atoms = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3292
 *         cdef int i
 *         atoms = self.activeAtoms
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
  __pyx_t_5 = (__pyx_v_printUpdate == Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3293
 *         atoms = self.activeAtoms
 *         if printUpdate is None:
 *             printUpdate = True             # <<<<<<<<<<<<<<
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 */
    __Pyx_INCREF(Py_True);
    __Pyx_DECREF_SET(__pyx_v_printUpdate, Py_True);

    /* "Source/LwMiddleLayer.pyx":3292
 *         cdef int i
 *         atoms = self.activeAtoms
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3295
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         update = IterationUpdate(self, updatedPops=True)
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3295, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3297
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 *         update = IterationUpdate(self, updatedPops=True)             # <<<<<<<<<<<<<<
 * 
 *         for i, atom in enumerate(atoms):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_IterationUpdate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_updatedPops, Py_True) < 0) __PYX_ERR(0, 3297, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3297, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_update = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":3299
 *         update = IterationUpdate(self, updatedPops=True)
 * 
 *         for i, atom in enumerate(atoms):             # <<<<<<<<<<<<<<
 *             a = &atom.atom
 *             maxChange = a.ng.relative_change_from_prev(a.n.flatten())
 */
  __pyx_t_7 = 0;
  __pyx_t_4 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_4); __pyx_t_8 = 0;
  for (;;) {
    if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 3299, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3299, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3299, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_3));
    __pyx_t_3 = 0;
    __pyx_v_i = __pyx_t_7;
    __pyx_t_7 = (__pyx_t_7 + 1);

    /* "Source/LwMiddleLayer.pyx":3300
 * 
 *         for i, atom in enumerate(atoms):
 *             a = &atom.atom             # <<<<<<<<<<<<<<
 *             maxChange = a.ng.relative_change_from_prev(a.n.flatten())
 *             delta = maxChange.dMax
 */
    __pyx_v_a = (&__pyx_v_atom->atom);

    /* "Source/LwMiddleLayer.pyx":3301
 *         for i, atom in enumerate(atoms):
 *             a = &atom.atom
 *             maxChange = a.ng.relative_change_from_prev(a.n.flatten())             # <<<<<<<<<<<<<<
 *             delta = maxChange.dMax
 *             maxDelta = max(maxDelta, delta)
 */
    __pyx_v_maxChange = __pyx_v_a->ng.relative_change_from_prev(__pyx_v_a->n.flatten());

    /* "Source/LwMiddleLayer.pyx":3302
 *             a = &atom.atom
 *             maxChange = a.ng.relative_change_from_prev(a.n.flatten())
 *             delta = maxChange.dMax             # <<<<<<<<<<<<<<
 *             maxDelta = max(maxDelta, delta)
 *             update.dPops.append(maxChange.dMax)
 */
    __pyx_t_9 = __pyx_v_maxChange.dMax;
    __pyx_v_delta = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":3303
 *             maxChange = a.ng.relative_change_from_prev(a.n.flatten())
 *             delta = maxChange.dMax
 *             maxDelta = max(maxDelta, delta)             # <<<<<<<<<<<<<<
 *             update.dPops.append(maxChange.dMax)
 *             update.dPopsMaxIdx.append(maxChange.dMaxIdx)
 */
    __pyx_t_9 = __pyx_v_delta;
    __pyx_t_10 = __pyx_v_maxDelta;
    if (((__pyx_t_9 > __pyx_t_10) != 0)) {
      __pyx_t_11 = __pyx_t_9;
    } else {
      __pyx_t_11 = __pyx_t_10;
    }
    __pyx_v_maxDelta = __pyx_t_11;

    /* "Source/LwMiddleLayer.pyx":3304
 *             delta = maxChange.dMax
 *             maxDelta = max(maxDelta, delta)
 *             update.dPops.append(maxChange.dMax)             # <<<<<<<<<<<<<<
 *             update.dPopsMaxIdx.append(maxChange.dMaxIdx)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_update, __pyx_n_s_dPops); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_maxChange.dMax); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3304, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_2); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 3304, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3305
 *             maxDelta = max(maxDelta, delta)
 *             update.dPops.append(maxChange.dMax)
 *             update.dPopsMaxIdx.append(maxChange.dMaxIdx)             # <<<<<<<<<<<<<<
 * 
 *         return update
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_update, __pyx_n_s_dPopsMaxIdx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyInt_From_int64_t(__pyx_v_maxChange.dMaxIdx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3305, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_3); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 3305, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3299
 *         update = IterationUpdate(self, updatedPops=True)
 * 
 *         for i, atom in enumerate(atoms):             # <<<<<<<<<<<<<<
 *             a = &atom.atom
 *             maxChange = a.ng.relative_change_from_prev(a.n.flatten())
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":3307
 *             update.dPopsMaxIdx.append(maxChange.dMaxIdx)
 * 
 *         return update             # <<<<<<<<<<<<<<
 * 
 *     cpdef rel_diff_ng_accelerate(self, printUpdate=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_update);
  __pyx_r = __pyx_v_update;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3281
 *             self.update_hprd_coeffs()
 * 
 *     cpdef rel_diff_pops(self, printUpdate=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.rel_diff_pops", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XDECREF(__pyx_v_atoms);
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XDECREF(__pyx_v_printUpdate);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_25rel_diff_pops(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_24rel_diff_pops[] = "\n        Internal.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_25rel_diff_pops(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_printUpdate = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rel_diff_pops (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_printUpdate,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_printUpdate);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rel_diff_pops") < 0)) __PYX_ERR(0, 3281, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_printUpdate = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rel_diff_pops", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3281, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.rel_diff_pops", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_24rel_diff_pops(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_printUpdate);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_24rel_diff_pops(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_printUpdate) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rel_diff_pops", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.printUpdate = __pyx_v_printUpdate;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->rel_diff_pops(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.rel_diff_pops", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3309
 *         return update
 * 
 *     cpdef rel_diff_ng_accelerate(self, printUpdate=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_27rel_diff_ng_accelerate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate *__pyx_optional_args) {
  PyObject *__pyx_v_printUpdate = ((PyObject *)Py_None);
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  Atom *__pyx_v_a;
  NgChange __pyx_v_maxChange;
  __pyx_t_8CmoArray_f64 __pyx_v_delta;
  __pyx_t_8CmoArray_f64 __pyx_v_maxDelta;
  CYTHON_UNUSED int __pyx_v_i;
  PyObject *__pyx_v_atoms = NULL;
  PyObject *__pyx_v_update = NULL;
  bool __pyx_v_accelerated;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  __pyx_t_8CmoArray_f64 __pyx_t_9;
  __pyx_t_8CmoArray_f64 __pyx_t_10;
  __pyx_t_8CmoArray_f64 __pyx_t_11;
  int __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rel_diff_ng_accelerate", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_printUpdate = __pyx_optional_args->printUpdate;
    }
  }
  __Pyx_INCREF(__pyx_v_printUpdate);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rel_diff_ng_accelerate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3309, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_27rel_diff_ng_accelerate)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_printUpdate) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_printUpdate);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3309, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3317
 *         cdef NgChange maxChange
 *         cdef f64 delta
 *         cdef f64 maxDelta = 0.0             # <<<<<<<<<<<<<<
 *         cdef int i
 *         atoms = self.activeAtoms
 */
  __pyx_v_maxDelta = 0.0;

  /* "Source/LwMiddleLayer.pyx":3319
 *         cdef f64 maxDelta = 0.0
 *         cdef int i
 *         atoms = self.activeAtoms             # <<<<<<<<<<<<<<
 *         if printUpdate is None:
 *             printUpdate = True
 */
  __pyx_t_1 = __pyx_v_self->activeAtoms;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_atoms = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3320
 *         cdef int i
 *         atoms = self.activeAtoms
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
  __pyx_t_5 = (__pyx_v_printUpdate == Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3321
 *         atoms = self.activeAtoms
 *         if printUpdate is None:
 *             printUpdate = True             # <<<<<<<<<<<<<<
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 */
    __Pyx_INCREF(Py_True);
    __Pyx_DECREF_SET(__pyx_v_printUpdate, Py_True);

    /* "Source/LwMiddleLayer.pyx":3320
 *         cdef int i
 *         atoms = self.activeAtoms
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3323
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         update = IterationUpdate(self, updatedPops=True)
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3325
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 *         update = IterationUpdate(self, updatedPops=True)             # <<<<<<<<<<<<<<
 * 
 *         for i, atom in enumerate(atoms):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_IterationUpdate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_updatedPops, Py_True) < 0) __PYX_ERR(0, 3325, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3325, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_update = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":3327
 *         update = IterationUpdate(self, updatedPops=True)
 * 
 *         for i, atom in enumerate(atoms):             # <<<<<<<<<<<<<<
 *             a = &atom.atom
 *             accelerated = a.ng.accelerate(a.n.flatten())
 */
  __pyx_t_7 = 0;
  __pyx_t_4 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_4); __pyx_t_8 = 0;
  for (;;) {
    if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 3327, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3327, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3327, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_3));
    __pyx_t_3 = 0;
    __pyx_v_i = __pyx_t_7;
    __pyx_t_7 = (__pyx_t_7 + 1);

    /* "Source/LwMiddleLayer.pyx":3328
 * 
 *         for i, atom in enumerate(atoms):
 *             a = &atom.atom             # <<<<<<<<<<<<<<
 *             accelerated = a.ng.accelerate(a.n.flatten())
 *             maxChange = a.ng.max_change()
 */
    __pyx_v_a = (&__pyx_v_atom->atom);

    /* "Source/LwMiddleLayer.pyx":3329
 *         for i, atom in enumerate(atoms):
 *             a = &atom.atom
 *             accelerated = a.ng.accelerate(a.n.flatten())             # <<<<<<<<<<<<<<
 *             maxChange = a.ng.max_change()
 *             delta = maxChange.dMax
 */
    __pyx_v_accelerated = __pyx_v_a->ng.accelerate(__pyx_v_a->n.flatten());

    /* "Source/LwMiddleLayer.pyx":3330
 *             a = &atom.atom
 *             accelerated = a.ng.accelerate(a.n.flatten())
 *             maxChange = a.ng.max_change()             # <<<<<<<<<<<<<<
 *             delta = maxChange.dMax
 *             maxDelta = max(maxDelta, delta)
 */
    __pyx_v_maxChange = __pyx_v_a->ng.max_change();

    /* "Source/LwMiddleLayer.pyx":3331
 *             accelerated = a.ng.accelerate(a.n.flatten())
 *             maxChange = a.ng.max_change()
 *             delta = maxChange.dMax             # <<<<<<<<<<<<<<
 *             maxDelta = max(maxDelta, delta)
 *             update.dPops.append(maxChange.dMax)
 */
    __pyx_t_9 = __pyx_v_maxChange.dMax;
    __pyx_v_delta = __pyx_t_9;

    /* "Source/LwMiddleLayer.pyx":3332
 *             maxChange = a.ng.max_change()
 *             delta = maxChange.dMax
 *             maxDelta = max(maxDelta, delta)             # <<<<<<<<<<<<<<
 *             update.dPops.append(maxChange.dMax)
 *             update.dPopsMaxIdx.append(maxChange.dMaxIdx)
 */
    __pyx_t_9 = __pyx_v_delta;
    __pyx_t_10 = __pyx_v_maxDelta;
    if (((__pyx_t_9 > __pyx_t_10) != 0)) {
      __pyx_t_11 = __pyx_t_9;
    } else {
      __pyx_t_11 = __pyx_t_10;
    }
    __pyx_v_maxDelta = __pyx_t_11;

    /* "Source/LwMiddleLayer.pyx":3333
 *             delta = maxChange.dMax
 *             maxDelta = max(maxDelta, delta)
 *             update.dPops.append(maxChange.dMax)             # <<<<<<<<<<<<<<
 *             update.dPopsMaxIdx.append(maxChange.dMaxIdx)
 *             update.ngAccelerated = accelerated
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_update, __pyx_n_s_dPops); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_maxChange.dMax); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3333, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_t_2); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 3333, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3334
 *             maxDelta = max(maxDelta, delta)
 *             update.dPops.append(maxChange.dMax)
 *             update.dPopsMaxIdx.append(maxChange.dMaxIdx)             # <<<<<<<<<<<<<<
 *             update.ngAccelerated = accelerated
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_update, __pyx_n_s_dPopsMaxIdx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3334, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyInt_From_int64_t(__pyx_v_maxChange.dMaxIdx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3334, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_12 = __Pyx_PyObject_Append(__pyx_t_2, __pyx_t_3); if (unlikely(__pyx_t_12 == ((int)-1))) __PYX_ERR(0, 3334, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3335
 *             update.dPops.append(maxChange.dMax)
 *             update.dPopsMaxIdx.append(maxChange.dMaxIdx)
 *             update.ngAccelerated = accelerated             # <<<<<<<<<<<<<<
 * 
 *         return update
 */
    __pyx_t_3 = __Pyx_PyBool_FromLong(__pyx_v_accelerated); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3335, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_update, __pyx_n_s_ngAccelerated, __pyx_t_3) < 0) __PYX_ERR(0, 3335, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3327
 *         update = IterationUpdate(self, updatedPops=True)
 * 
 *         for i, atom in enumerate(atoms):             # <<<<<<<<<<<<<<
 *             a = &atom.atom
 *             accelerated = a.ng.accelerate(a.n.flatten())
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":3337
 *             update.ngAccelerated = accelerated
 * 
 *         return update             # <<<<<<<<<<<<<<
 * 
 *     cpdef time_dep_update(self, f64 dt, prevTimePops=None, ngUpdate=None,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_update);
  __pyx_r = __pyx_v_update;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3309
 *         return update
 * 
 *     cpdef rel_diff_ng_accelerate(self, printUpdate=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.rel_diff_ng_accelerate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XDECREF(__pyx_v_atoms);
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XDECREF(__pyx_v_printUpdate);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_27rel_diff_ng_accelerate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_26rel_diff_ng_accelerate[] = "\n        Internal.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_27rel_diff_ng_accelerate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_printUpdate = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rel_diff_ng_accelerate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_printUpdate,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_printUpdate);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "rel_diff_ng_accelerate") < 0)) __PYX_ERR(0, 3309, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_printUpdate = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("rel_diff_ng_accelerate", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3309, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.rel_diff_ng_accelerate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_26rel_diff_ng_accelerate(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_printUpdate);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_26rel_diff_ng_accelerate(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_printUpdate) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rel_diff_ng_accelerate", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.printUpdate = __pyx_v_printUpdate;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->rel_diff_ng_accelerate(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3309, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.rel_diff_ng_accelerate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3339
 *         return update
 * 
 *     cpdef time_dep_update(self, f64 dt, prevTimePops=None, ngUpdate=None,             # <<<<<<<<<<<<<<
 *                           printUpdate=None, int chunkSize=20, extraParams=None):
 *         '''
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_29time_dep_update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_time_dep_update(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, __pyx_t_8CmoArray_f64 __pyx_v_dt, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_time_dep_update *__pyx_optional_args) {
  PyObject *__pyx_v_prevTimePops = ((PyObject *)Py_None);
  PyObject *__pyx_v_ngUpdate = ((PyObject *)Py_None);

  /* "Source/LwMiddleLayer.pyx":3340
 * 
 *     cpdef time_dep_update(self, f64 dt, prevTimePops=None, ngUpdate=None,
 *                           printUpdate=None, int chunkSize=20, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Update the populations of active atoms using the current values of
 */
  PyObject *__pyx_v_printUpdate = ((PyObject *)Py_None);
  int __pyx_v_chunkSize = ((int)20);
  PyObject *__pyx_v_extraParams = ((PyObject *)Py_None);
  PyObject *__pyx_v_atoms = NULL;
  ExtraParams __pyx_v_params;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  Atom *__pyx_v_a;
  CYTHON_UNUSED __pyx_t_8CmoArray_f64 __pyx_v_maxDelta;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_update = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_8genexpr3__pyx_v_atom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  __Pyx_memviewslice __pyx_t_15 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_16;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate __pyx_t_17;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops __pyx_t_18;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("time_dep_update", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_prevTimePops = __pyx_optional_args->prevTimePops;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_ngUpdate = __pyx_optional_args->ngUpdate;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_printUpdate = __pyx_optional_args->printUpdate;
          if (__pyx_optional_args->__pyx_n > 3) {
            __pyx_v_chunkSize = __pyx_optional_args->chunkSize;
            if (__pyx_optional_args->__pyx_n > 4) {
              __pyx_v_extraParams = __pyx_optional_args->extraParams;
            }
          }
        }
      }
    }
  }
  __Pyx_INCREF(__pyx_v_prevTimePops);
  __Pyx_INCREF(__pyx_v_ngUpdate);
  __Pyx_INCREF(__pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3339
 *         return update
 * 
 *     cpdef time_dep_update(self, f64 dt, prevTimePops=None, ngUpdate=None,             # <<<<<<<<<<<<<<
 *                           printUpdate=None, int chunkSize=20, extraParams=None):
 *         '''
 */
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_time_dep_update); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3339, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_29time_dep_update)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = PyFloat_FromDouble(__pyx_v_dt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3339, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_chunkSize); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3339, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[7] = {__pyx_t_6, __pyx_t_3, __pyx_v_prevTimePops, __pyx_v_ngUpdate, __pyx_v_printUpdate, __pyx_t_4, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 6+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3339, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[7] = {__pyx_t_6, __pyx_t_3, __pyx_v_prevTimePops, __pyx_v_ngUpdate, __pyx_v_printUpdate, __pyx_t_4, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 6+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3339, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(6+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3339, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
          __Pyx_INCREF(__pyx_v_prevTimePops);
          __Pyx_GIVEREF(__pyx_v_prevTimePops);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_prevTimePops);
          __Pyx_INCREF(__pyx_v_ngUpdate);
          __Pyx_GIVEREF(__pyx_v_ngUpdate);
          PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_v_ngUpdate);
          __Pyx_INCREF(__pyx_v_printUpdate);
          __Pyx_GIVEREF(__pyx_v_printUpdate);
          PyTuple_SET_ITEM(__pyx_t_8, 3+__pyx_t_7, __pyx_v_printUpdate);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 4+__pyx_t_7, __pyx_t_4);
          __Pyx_INCREF(__pyx_v_extraParams);
          __Pyx_GIVEREF(__pyx_v_extraParams);
          PyTuple_SET_ITEM(__pyx_t_8, 5+__pyx_t_7, __pyx_v_extraParams);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3339, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3381
 *             again for this timestep.
 *         '''
 *         atoms = self.activeAtoms             # <<<<<<<<<<<<<<
 * 
 *         if ngUpdate is None:
 */
  __pyx_t_1 = __pyx_v_self->activeAtoms;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_atoms = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3383
 *         atoms = self.activeAtoms
 * 
 *         if ngUpdate is None:             # <<<<<<<<<<<<<<
 *             if self.conserveCharge:
 *                 ngUpdate = False
 */
  __pyx_t_9 = (__pyx_v_ngUpdate == Py_None);
  __pyx_t_10 = (__pyx_t_9 != 0);
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":3384
 * 
 *         if ngUpdate is None:
 *             if self.conserveCharge:             # <<<<<<<<<<<<<<
 *                 ngUpdate = False
 *             else:
 */
    __pyx_t_10 = (__pyx_v_self->conserveCharge != 0);
    if (__pyx_t_10) {

      /* "Source/LwMiddleLayer.pyx":3385
 *         if ngUpdate is None:
 *             if self.conserveCharge:
 *                 ngUpdate = False             # <<<<<<<<<<<<<<
 *             else:
 *                 ngUpdate = True
 */
      __Pyx_INCREF(Py_False);
      __Pyx_DECREF_SET(__pyx_v_ngUpdate, Py_False);

      /* "Source/LwMiddleLayer.pyx":3384
 * 
 *         if ngUpdate is None:
 *             if self.conserveCharge:             # <<<<<<<<<<<<<<
 *                 ngUpdate = False
 *             else:
 */
      goto __pyx_L4;
    }

    /* "Source/LwMiddleLayer.pyx":3387
 *                 ngUpdate = False
 *             else:
 *                 ngUpdate = True             # <<<<<<<<<<<<<<
 * 
 *         if printUpdate is not None:
 */
    /*else*/ {
      __Pyx_INCREF(Py_True);
      __Pyx_DECREF_SET(__pyx_v_ngUpdate, Py_True);
    }
    __pyx_L4:;

    /* "Source/LwMiddleLayer.pyx":3383
 *         atoms = self.activeAtoms
 * 
 *         if ngUpdate is None:             # <<<<<<<<<<<<<<
 *             if self.conserveCharge:
 *                 ngUpdate = False
 */
  }

  /* "Source/LwMiddleLayer.pyx":3389
 *                 ngUpdate = True
 * 
 *         if printUpdate is not None:             # <<<<<<<<<<<<<<
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 */
  __pyx_t_10 = (__pyx_v_printUpdate != Py_None);
  __pyx_t_9 = (__pyx_t_10 != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":3390
 * 
 *         if printUpdate is not None:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         if extraParams is None:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3390, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3389
 *                 ngUpdate = True
 * 
 *         if printUpdate is not None:             # <<<<<<<<<<<<<<
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3392
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  __pyx_t_9 = (__pyx_v_extraParams == Py_None);
  __pyx_t_10 = (__pyx_t_9 != 0);
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":3393
 * 
 *         if extraParams is None:
 *             extraParams = {}             # <<<<<<<<<<<<<<
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3393, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_extraParams, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3392
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3394
 *         if extraParams is None:
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)             # <<<<<<<<<<<<<<
 * 
 *         cdef LwAtom atom
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_extraParams))||((__pyx_v_extraParams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_extraParams)->tp_name), 0))) __PYX_ERR(0, 3394, __pyx_L1_error)
  __pyx_v_params = __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(((PyObject*)__pyx_v_extraParams));

  /* "Source/LwMiddleLayer.pyx":3399
 *         cdef Atom* a
 *         cdef f64 delta
 *         cdef f64 maxDelta = 0.0             # <<<<<<<<<<<<<<
 *         cdef bool_t accelerated
 *         cdef vector[F64View2D] prevTimePopsVec
 */
  __pyx_v_maxDelta = 0.0;

  /* "Source/LwMiddleLayer.pyx":3403
 *         cdef vector[F64View2D] prevTimePopsVec
 * 
 *         if prevTimePops is None:             # <<<<<<<<<<<<<<
 *             prevTimePops = [np.copy(atom.n) for atom in atoms]
 * 
 */
  __pyx_t_10 = (__pyx_v_prevTimePops == Py_None);
  __pyx_t_9 = (__pyx_t_10 != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":3404
 * 
 *         if prevTimePops is None:
 *             prevTimePops = [np.copy(atom.n) for atom in atoms]             # <<<<<<<<<<<<<<
 * 
 *         for atom in atoms:
 */
    { /* enter inner scope */
      __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3404, __pyx_L10_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (unlikely(__pyx_v_atoms == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
        __PYX_ERR(0, 3404, __pyx_L10_error)
      }
      __pyx_t_2 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_2); __pyx_t_11 = 0;
      for (;;) {
        if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_5); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 3404, __pyx_L10_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3404, __pyx_L10_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3404, __pyx_L10_error)
        __Pyx_XDECREF_SET(__pyx_8genexpr3__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_5));
        __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_np); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3404, __pyx_L10_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_copy); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3404, __pyx_L10_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_8genexpr3__pyx_v_atom->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3404, __pyx_L10_error)}
        __pyx_t_8 = __pyx_memoryview_fromslice(__pyx_8genexpr3__pyx_v_atom->n, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3404, __pyx_L10_error)
        __Pyx_GOTREF(__pyx_t_8);
        __pyx_t_3 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_5 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_3, __pyx_t_8) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_8);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3404, __pyx_L10_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 3404, __pyx_L10_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF((PyObject *)__pyx_8genexpr3__pyx_v_atom); __pyx_8genexpr3__pyx_v_atom = 0;
      goto __pyx_L13_exit_scope;
      __pyx_L10_error:;
      __Pyx_XDECREF((PyObject *)__pyx_8genexpr3__pyx_v_atom); __pyx_8genexpr3__pyx_v_atom = 0;
      goto __pyx_L1_error;
      __pyx_L13_exit_scope:;
    } /* exit inner scope */
    __Pyx_DECREF_SET(__pyx_v_prevTimePops, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3403
 *         cdef vector[F64View2D] prevTimePopsVec
 * 
 *         if prevTimePops is None:             # <<<<<<<<<<<<<<
 *             prevTimePops = [np.copy(atom.n) for atom in atoms]
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3406
 *             prevTimePops = [np.copy(atom.n) for atom in atoms]
 * 
 *         for atom in atoms:             # <<<<<<<<<<<<<<
 *             a = &atom.atom
 *             if not a.ng.init:
 */
  if (unlikely(__pyx_v_atoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 3406, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_11 = 0;
  for (;;) {
    if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 3406, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3406, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3406, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3407
 * 
 *         for atom in atoms:
 *             a = &atom.atom             # <<<<<<<<<<<<<<
 *             if not a.ng.init:
 *                 a.ng.accelerate(a.n.flatten())
 */
    __pyx_v_a = (&__pyx_v_atom->atom);

    /* "Source/LwMiddleLayer.pyx":3408
 *         for atom in atoms:
 *             a = &atom.atom
 *             if not a.ng.init:             # <<<<<<<<<<<<<<
 *                 a.ng.accelerate(a.n.flatten())
 * 
 */
    __pyx_t_9 = ((!(__pyx_v_a->ng.init != 0)) != 0);
    if (__pyx_t_9) {

      /* "Source/LwMiddleLayer.pyx":3409
 *             a = &atom.atom
 *             if not a.ng.init:
 *                 a.ng.accelerate(a.n.flatten())             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
      (void)(__pyx_v_a->ng.accelerate(__pyx_v_a->n.flatten()));

      /* "Source/LwMiddleLayer.pyx":3408
 *         for atom in atoms:
 *             a = &atom.atom
 *             if not a.ng.init:             # <<<<<<<<<<<<<<
 *                 a.ng.accelerate(a.n.flatten())
 * 
 */
    }

    /* "Source/LwMiddleLayer.pyx":3406
 *             prevTimePops = [np.copy(atom.n) for atom in atoms]
 * 
 *         for atom in atoms:             # <<<<<<<<<<<<<<
 *             a = &atom.atom
 *             if not a.ng.init:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3411
 *                 a.ng.accelerate(a.n.flatten())
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             for i, atom in enumerate(atoms):
 *                 a = &atom.atom
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_12, &__pyx_t_13, &__pyx_t_14);
    __Pyx_XGOTREF(__pyx_t_12);
    __Pyx_XGOTREF(__pyx_t_13);
    __Pyx_XGOTREF(__pyx_t_14);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":3412
 * 
 *         try:
 *             for i, atom in enumerate(atoms):             # <<<<<<<<<<<<<<
 *                 a = &atom.atom
 *                 time_dependent_update(self.ctx, a, f64_view_2(prevTimePops[i]), dt, params)
 */
      __Pyx_INCREF(__pyx_int_0);
      __pyx_t_1 = __pyx_int_0;
      __pyx_t_2 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_2); __pyx_t_11 = 0;
      for (;;) {
        if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_5); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 3412, __pyx_L17_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3412, __pyx_L17_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
        if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3412, __pyx_L17_error)
        __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_5));
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
        __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3412, __pyx_L17_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1);
        __pyx_t_1 = __pyx_t_5;
        __pyx_t_5 = 0;

        /* "Source/LwMiddleLayer.pyx":3413
 *         try:
 *             for i, atom in enumerate(atoms):
 *                 a = &atom.atom             # <<<<<<<<<<<<<<
 *                 time_dependent_update(self.ctx, a, f64_view_2(prevTimePops[i]), dt, params)
 *         except:
 */
        __pyx_v_a = (&__pyx_v_atom->atom);

        /* "Source/LwMiddleLayer.pyx":3414
 *             for i, atom in enumerate(atoms):
 *                 a = &atom.atom
 *                 time_dependent_update(self.ctx, a, f64_view_2(prevTimePops[i]), dt, params)             # <<<<<<<<<<<<<<
 *         except:
 *             raise ExplodingMatrixError('Singular Matrix')
 */
        __pyx_t_5 = __Pyx_PyObject_GetItem(__pyx_v_prevTimePops, __pyx_v_i); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3414, __pyx_L17_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_15 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_5, PyBUF_WRITABLE); if (unlikely(!__pyx_t_15.memview)) __PYX_ERR(0, 3414, __pyx_L17_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        try {
          __pyx_t_16 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_t_15);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 3414, __pyx_L17_error)
        }
        __PYX_XDEC_MEMVIEW(&__pyx_t_15, 1);
        __pyx_t_15.memview = NULL;
        __pyx_t_15.data = NULL;
        try {
          time_dependent_update(__pyx_v_self->ctx, __pyx_v_a, __pyx_t_16, __pyx_v_dt, __pyx_v_params);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 3414, __pyx_L17_error)
        }

        /* "Source/LwMiddleLayer.pyx":3412
 * 
 *         try:
 *             for i, atom in enumerate(atoms):             # <<<<<<<<<<<<<<
 *                 a = &atom.atom
 *                 time_dependent_update(self.ctx, a, f64_view_2(prevTimePops[i]), dt, params)
 */
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":3411
 *                 a.ng.accelerate(a.n.flatten())
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             for i, atom in enumerate(atoms):
 *                 a = &atom.atom
 */
    }
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
    goto __pyx_L22_try_end;
    __pyx_L17_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_t_15, 1);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "Source/LwMiddleLayer.pyx":3415
 *                 a = &atom.atom
 *                 time_dependent_update(self.ctx, a, f64_view_2(prevTimePops[i]), dt, params)
 *         except:             # <<<<<<<<<<<<<<
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 */
    /*except:*/ {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.time_dep_update", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_5) < 0) __PYX_ERR(0, 3415, __pyx_L19_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_5);

      /* "Source/LwMiddleLayer.pyx":3416
 *                 time_dependent_update(self.ctx, a, f64_view_2(prevTimePops[i]), dt, params)
 *         except:
 *             raise ExplodingMatrixError('Singular Matrix')             # <<<<<<<<<<<<<<
 * 
 *         if ngUpdate:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_ExplodingMatrixError); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3416, __pyx_L19_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_3 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_8);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_8, function);
        }
      }
      __pyx_t_4 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_3, __pyx_kp_u_Singular_Matrix) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_kp_u_Singular_Matrix);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3416, __pyx_L19_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_ERR(0, 3416, __pyx_L19_except_error)
    }
    __pyx_L19_except_error:;

    /* "Source/LwMiddleLayer.pyx":3411
 *                 a.ng.accelerate(a.n.flatten())
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             for i, atom in enumerate(atoms):
 *                 a = &atom.atom
 */
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_XGIVEREF(__pyx_t_13);
    __Pyx_XGIVEREF(__pyx_t_14);
    __Pyx_ExceptionReset(__pyx_t_12, __pyx_t_13, __pyx_t_14);
    goto __pyx_L1_error;
    __pyx_L22_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":3418
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 *         if ngUpdate:             # <<<<<<<<<<<<<<
 *             update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)
 *         else:
 */
  __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_v_ngUpdate); if (unlikely(__pyx_t_9 < 0)) __PYX_ERR(0, 3418, __pyx_L1_error)
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":3419
 * 
 *         if ngUpdate:
 *             update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)             # <<<<<<<<<<<<<<
 *         else:
 *             update = self.rel_diff_pops(printUpdate=printUpdate)
 */
    __pyx_t_17.__pyx_n = 1;
    __pyx_t_17.printUpdate = __pyx_v_printUpdate;
    __pyx_t_5 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->rel_diff_ng_accelerate(__pyx_v_self, 0, &__pyx_t_17); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3419, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_v_update = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "Source/LwMiddleLayer.pyx":3418
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 *         if ngUpdate:             # <<<<<<<<<<<<<<
 *             update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)
 *         else:
 */
    goto __pyx_L27;
  }

  /* "Source/LwMiddleLayer.pyx":3421
 *             update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)
 *         else:
 *             update = self.rel_diff_pops(printUpdate=printUpdate)             # <<<<<<<<<<<<<<
 * 
 *         return update, prevTimePops
 */
  /*else*/ {
    __pyx_t_18.__pyx_n = 1;
    __pyx_t_18.printUpdate = __pyx_v_printUpdate;
    __pyx_t_5 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->rel_diff_pops(__pyx_v_self, 0, &__pyx_t_18); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3421, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_v_update = __pyx_t_5;
    __pyx_t_5 = 0;
  }
  __pyx_L27:;

  /* "Source/LwMiddleLayer.pyx":3423
 *             update = self.rel_diff_pops(printUpdate=printUpdate)
 * 
 *         return update, prevTimePops             # <<<<<<<<<<<<<<
 * 
 *     cpdef time_dep_restore_prev_pops(self, prevTimePops):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 3423, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_v_update);
  __Pyx_GIVEREF(__pyx_v_update);
  PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_update);
  __Pyx_INCREF(__pyx_v_prevTimePops);
  __Pyx_GIVEREF(__pyx_v_prevTimePops);
  PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_prevTimePops);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3339
 *         return update
 * 
 *     cpdef time_dep_update(self, f64 dt, prevTimePops=None, ngUpdate=None,             # <<<<<<<<<<<<<<
 *                           printUpdate=None, int chunkSize=20, extraParams=None):
 *         '''
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __PYX_XDEC_MEMVIEW(&__pyx_t_15, 1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.time_dep_update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_atoms);
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XDECREF((PyObject *)__pyx_8genexpr3__pyx_v_atom);
  __Pyx_XDECREF(__pyx_v_prevTimePops);
  __Pyx_XDECREF(__pyx_v_ngUpdate);
  __Pyx_XDECREF(__pyx_v_extraParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_29time_dep_update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_28time_dep_update[] = "\n        Update the populations of active atoms using the current values of\n        their Gamma matrices. This function solves the time-dependent kinetic\n        equilibrium equations (ignoring advective terms). Currently uses a\n        fully implicit (theta = 0) integrator.\n\n        Parameters\n        ----------\n        dt : float\n            The timestep length [s].\n        prevTimePops : list of np.ndarray or None\n            The NLTE populations for each active atom at the start of the\n            timestep (order matching that of Context.activeAtoms). This does\n            not need to be provided the first time time_dep_update is called\n            for a timestep, as if this parameter is None then this list will\n            be constructed, and returned as the second return value, and can\n            then be passed in again for additional iterations on a timestep.\n        ngUpdate : bool, optional\n            Whether to apply Ng Acceleration (default: None, to apply automatic\n            behaviour), will only accelerate if the counter on the Ng accelerator\n            has seen enough steps since the previous acceleration (set in Context\n            initialisation).\n        printUpdate : bool, optional\n            Whether to print information on the size of the update (default:\n            None, to apply automatic behaviour). Deprecated.\n        chunkSize : int, optional\n            Not currently used.\n        extraParams : dict, optional\n            Dict of extra parameters to be converted through the\n            `dict2ExtraParams` function and passed onto the C++ core.\n\n        Returns\n        -------\n        update: IterationUpdate\n            An object representing the updates to the model. See\n            `IterationUpdate` for details.\n        prevTimePops : list of np.ndarray\n            The input needed as `prevTimePops` if this function is to be called\n            again for this timestep.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_29time_dep_update(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  __pyx_t_8CmoArray_f64 __pyx_v_dt;
  PyObject *__pyx_v_prevTimePops = 0;
  PyObject *__pyx_v_ngUpdate = 0;
  PyObject *__pyx_v_printUpdate = 0;
  int __pyx_v_chunkSize;
  PyObject *__pyx_v_extraParams = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("time_dep_update (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dt,&__pyx_n_s_prevTimePops,&__pyx_n_s_ngUpdate,&__pyx_n_s_printUpdate,&__pyx_n_s_chunkSize,&__pyx_n_s_extraParams,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":3340
 * 
 *     cpdef time_dep_update(self, f64 dt, prevTimePops=None, ngUpdate=None,
 *                           printUpdate=None, int chunkSize=20, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Update the populations of active atoms using the current values of
 */
    values[3] = ((PyObject *)Py_None);
    values[5] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dt)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_prevTimePops);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ngUpdate);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_printUpdate);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chunkSize);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_extraParams);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "time_dep_update") < 0)) __PYX_ERR(0, 3339, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dt = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_dt == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3339, __pyx_L3_error)
    __pyx_v_prevTimePops = values[1];
    __pyx_v_ngUpdate = values[2];
    __pyx_v_printUpdate = values[3];
    if (values[4]) {
      __pyx_v_chunkSize = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_chunkSize == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3340, __pyx_L3_error)
    } else {
      __pyx_v_chunkSize = ((int)20);
    }
    __pyx_v_extraParams = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("time_dep_update", 0, 1, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3339, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.time_dep_update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_28time_dep_update(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_dt, __pyx_v_prevTimePops, __pyx_v_ngUpdate, __pyx_v_printUpdate, __pyx_v_chunkSize, __pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3339
 *         return update
 * 
 *     cpdef time_dep_update(self, f64 dt, prevTimePops=None, ngUpdate=None,             # <<<<<<<<<<<<<<
 *                           printUpdate=None, int chunkSize=20, extraParams=None):
 *         '''
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_28time_dep_update(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, __pyx_t_8CmoArray_f64 __pyx_v_dt, PyObject *__pyx_v_prevTimePops, PyObject *__pyx_v_ngUpdate, PyObject *__pyx_v_printUpdate, int __pyx_v_chunkSize, PyObject *__pyx_v_extraParams) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_time_dep_update __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("time_dep_update", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 5;
  __pyx_t_2.prevTimePops = __pyx_v_prevTimePops;
  __pyx_t_2.ngUpdate = __pyx_v_ngUpdate;
  __pyx_t_2.printUpdate = __pyx_v_printUpdate;
  __pyx_t_2.chunkSize = __pyx_v_chunkSize;
  __pyx_t_2.extraParams = __pyx_v_extraParams;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->time_dep_update(__pyx_v_self, __pyx_v_dt, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.time_dep_update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3425
 *         return update, prevTimePops
 * 
 *     cpdef time_dep_restore_prev_pops(self, prevTimePops):             # <<<<<<<<<<<<<<
 *         '''
 *         Restore the populations to their state prior to the time-dependent
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_31time_dep_restore_prev_pops(PyObject *__pyx_v_self, PyObject *__pyx_v_prevTimePops); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_time_dep_restore_prev_pops(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_prevTimePops, int __pyx_skip_dispatch) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  int __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("time_dep_restore_prev_pops", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_time_dep_restore_prev_pops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3425, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_31time_dep_restore_prev_pops)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_prevTimePops) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_prevTimePops);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3425, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3438
 *         cdef LwAtom atom
 *         cdef int i
 *         for i, atom in enumerate(self.activeAtoms):             # <<<<<<<<<<<<<<
 *             np.asarray(atom.n)[:] = prevTimePops[i]
 * 
 */
  __pyx_t_5 = 0;
  __pyx_t_1 = __pyx_v_self->activeAtoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_6 = 0;
  for (;;) {
    if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_6); __Pyx_INCREF(__pyx_t_2); __pyx_t_6++; if (unlikely(0 < 0)) __PYX_ERR(0, 3438, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3438, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3438, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_2));
    __pyx_t_2 = 0;
    __pyx_v_i = __pyx_t_5;
    __pyx_t_5 = (__pyx_t_5 + 1);

    /* "Source/LwMiddleLayer.pyx":3439
 *         cdef int i
 *         for i, atom in enumerate(self.activeAtoms):
 *             np.asarray(atom.n)[:] = prevTimePops[i]             # <<<<<<<<<<<<<<
 * 
 *         np.asarray(self.spect.I).fill(0.0)
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_prevTimePops, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3439, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3439, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3439, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_v_atom->n.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3439, __pyx_L1_error)}
    __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_atom->n, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3439, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_3 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3439, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (__Pyx_PyObject_SetSlice(__pyx_t_3, __pyx_t_2, 0, 0, NULL, NULL, &__pyx_slice__12, 0, 0, 1) < 0) __PYX_ERR(0, 3439, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3438
 *         cdef LwAtom atom
 *         cdef int i
 *         for i, atom in enumerate(self.activeAtoms):             # <<<<<<<<<<<<<<
 *             np.asarray(atom.n)[:] = prevTimePops[i]
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3441
 *             np.asarray(atom.n)[:] = prevTimePops[i]
 * 
 *         np.asarray(self.spect.I).fill(0.0)             # <<<<<<<<<<<<<<
 *         np.asarray(self.spect.J).fill(0.0)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_asarray); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_v_self->spect->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3441, __pyx_L1_error)}
  __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_self->spect->I, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_fill); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_2, __pyx_float_0_0) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_float_0_0);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3442
 * 
 *         np.asarray(self.spect.I).fill(0.0)
 *         np.asarray(self.spect.J).fill(0.0)             # <<<<<<<<<<<<<<
 * 
 *     cpdef clear_ng(self):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_asarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_v_self->spect->J.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3442, __pyx_L1_error)}
  __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->spect->J, 2, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_fill); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_7, __pyx_float_0_0) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_float_0_0);
  __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3425
 *         return update, prevTimePops
 * 
 *     cpdef time_dep_restore_prev_pops(self, prevTimePops):             # <<<<<<<<<<<<<<
 *         '''
 *         Restore the populations to their state prior to the time-dependent
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.time_dep_restore_prev_pops", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_31time_dep_restore_prev_pops(PyObject *__pyx_v_self, PyObject *__pyx_v_prevTimePops); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_30time_dep_restore_prev_pops[] = "\n        Restore the populations to their state prior to the time-dependent\n        updates for this timestep. Also resets I and J to 0. May be useful in\n        cases where a problem was encountered.\n\n        Parameters\n        ----------\n        prevTimePops : list of np.ndarray\n            `prevTimePops` returned by time_dep_update.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_31time_dep_restore_prev_pops(PyObject *__pyx_v_self, PyObject *__pyx_v_prevTimePops) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("time_dep_restore_prev_pops (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_30time_dep_restore_prev_pops(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_prevTimePops));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_30time_dep_restore_prev_pops(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_prevTimePops) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("time_dep_restore_prev_pops", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_9LwContext_time_dep_restore_prev_pops(__pyx_v_self, __pyx_v_prevTimePops, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3425, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.time_dep_restore_prev_pops", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3444
 *         np.asarray(self.spect.J).fill(0.0)
 * 
 *     cpdef clear_ng(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Resets Ng acceleration objects on all active atoms.
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_33clear_ng(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_clear_ng(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear_ng", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_clear_ng); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3444, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_33clear_ng)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3444, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3449
 *         '''
 *         cdef LwAtom atom
 *         for atom in self.activeAtoms:             # <<<<<<<<<<<<<<
 *             atom.atom.ng.clear()
 * 
 */
  if (unlikely(__pyx_v_self->activeAtoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 3449, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_self->activeAtoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
  for (;;) {
    if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 3449, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3449, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3449, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3450
 *         cdef LwAtom atom
 *         for atom in self.activeAtoms:
 *             atom.atom.ng.clear()             # <<<<<<<<<<<<<<
 * 
 *     cpdef stat_equil(self, printUpdate=None, int chunkSize=20, extraParams=None):
 */
    __pyx_v_atom->atom.ng.clear();

    /* "Source/LwMiddleLayer.pyx":3449
 *         '''
 *         cdef LwAtom atom
 *         for atom in self.activeAtoms:             # <<<<<<<<<<<<<<
 *             atom.atom.ng.clear()
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3444
 *         np.asarray(self.spect.J).fill(0.0)
 * 
 *     cpdef clear_ng(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Resets Ng acceleration objects on all active atoms.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.clear_ng", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_33clear_ng(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_32clear_ng[] = "\n        Resets Ng acceleration objects on all active atoms.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_33clear_ng(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear_ng (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_32clear_ng(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_32clear_ng(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear_ng", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_9LwContext_clear_ng(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.clear_ng", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3452
 *             atom.atom.ng.clear()
 * 
 *     cpdef stat_equil(self, printUpdate=None, int chunkSize=20, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Update the populations of active atoms using the current values of
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_35stat_equil(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_stat_equil(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_stat_equil *__pyx_optional_args) {
  PyObject *__pyx_v_printUpdate = ((PyObject *)Py_None);
  int __pyx_v_chunkSize = ((int)20);
  PyObject *__pyx_v_extraParams = ((PyObject *)Py_None);
  PyObject *__pyx_v_atoms = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  Atom *__pyx_v_a;
  __pyx_t_8CmoArray_f64 __pyx_v_maxDelta;
  ExtraParams __pyx_v_params;
  PyObject *__pyx_v_neStart = NULL;
  PyObject *__pyx_v_update = NULL;
  PyObject *__pyx_v_neDiff = NULL;
  PyObject *__pyx_v_neDiffMaxIdx = NULL;
  PyObject *__pyx_v_neDiffMax = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate __pyx_t_14;
  __pyx_t_8CmoArray_f64 __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("stat_equil", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_printUpdate = __pyx_optional_args->printUpdate;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_chunkSize = __pyx_optional_args->chunkSize;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_extraParams = __pyx_optional_args->extraParams;
        }
      }
    }
  }
  __Pyx_INCREF(__pyx_v_printUpdate);
  __Pyx_INCREF(__pyx_v_extraParams);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_stat_equil); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3452, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_35stat_equil)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_chunkSize); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3452, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = __pyx_t_1; __pyx_t_5 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_6 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_v_printUpdate, __pyx_t_3, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3452, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_4)) {
          PyObject *__pyx_temp[4] = {__pyx_t_5, __pyx_v_printUpdate, __pyx_t_3, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_4, __pyx_temp+1-__pyx_t_6, 3+__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3452, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        } else
        #endif
        {
          __pyx_t_7 = PyTuple_New(3+__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3452, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_7);
          if (__pyx_t_5) {
            __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_5); __pyx_t_5 = NULL;
          }
          __Pyx_INCREF(__pyx_v_printUpdate);
          __Pyx_GIVEREF(__pyx_v_printUpdate);
          PyTuple_SET_ITEM(__pyx_t_7, 0+__pyx_t_6, __pyx_v_printUpdate);
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_7, 1+__pyx_t_6, __pyx_t_3);
          __Pyx_INCREF(__pyx_v_extraParams);
          __Pyx_GIVEREF(__pyx_v_extraParams);
          PyTuple_SET_ITEM(__pyx_t_7, 2+__pyx_t_6, __pyx_v_extraParams);
          __pyx_t_3 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_7, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3452, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3475
 *             `IterationUpdate` for details.
 *         '''
 *         atoms = self.activeAtoms             # <<<<<<<<<<<<<<
 * 
 *         cdef LwAtom atom
 */
  __pyx_t_1 = __pyx_v_self->activeAtoms;
  __Pyx_INCREF(__pyx_t_1);
  __pyx_v_atoms = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3480
 *         cdef Atom* a
 *         cdef f64 delta
 *         cdef f64 maxDelta = 0.0             # <<<<<<<<<<<<<<
 *         cdef bool_t accelerated
 *         cdef LwTransition t
 */
  __pyx_v_maxDelta = 0.0;

  /* "Source/LwMiddleLayer.pyx":3486
 *         cdef np.ndarray[np.double_t, ndim=1] deltaNe
 * 
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
  __pyx_t_8 = (__pyx_v_printUpdate == Py_None);
  __pyx_t_9 = (__pyx_t_8 != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":3487
 * 
 *         if printUpdate is None:
 *             printUpdate = True             # <<<<<<<<<<<<<<
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 */
    __Pyx_INCREF(Py_True);
    __Pyx_DECREF_SET(__pyx_v_printUpdate, Py_True);

    /* "Source/LwMiddleLayer.pyx":3486
 *         cdef np.ndarray[np.double_t, ndim=1] deltaNe
 * 
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3489
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         if extraParams is None:
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3489, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3491
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  __pyx_t_9 = (__pyx_v_extraParams == Py_None);
  __pyx_t_8 = (__pyx_t_9 != 0);
  if (__pyx_t_8) {

    /* "Source/LwMiddleLayer.pyx":3492
 * 
 *         if extraParams is None:
 *             extraParams = {}             # <<<<<<<<<<<<<<
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3492, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_extraParams, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3491
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3493
 *         if extraParams is None:
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)             # <<<<<<<<<<<<<<
 * 
 *         for atom in atoms:
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_extraParams))||((__pyx_v_extraParams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_extraParams)->tp_name), 0))) __PYX_ERR(0, 3493, __pyx_L1_error)
  __pyx_v_params = __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(((PyObject*)__pyx_v_extraParams));

  /* "Source/LwMiddleLayer.pyx":3495
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 *         for atom in atoms:             # <<<<<<<<<<<<<<
 *             a = &atom.atom
 *             if not a.ng.init:
 */
  if (unlikely(__pyx_v_atoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 3495, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_10 = 0;
  for (;;) {
    if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_2); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 3495, __pyx_L1_error)
    #else
    __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3495, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    #endif
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3495, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_2));
    __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3496
 * 
 *         for atom in atoms:
 *             a = &atom.atom             # <<<<<<<<<<<<<<
 *             if not a.ng.init:
 *                 a.ng.accelerate(a.n.flatten())
 */
    __pyx_v_a = (&__pyx_v_atom->atom);

    /* "Source/LwMiddleLayer.pyx":3497
 *         for atom in atoms:
 *             a = &atom.atom
 *             if not a.ng.init:             # <<<<<<<<<<<<<<
 *                 a.ng.accelerate(a.n.flatten())
 * 
 */
    __pyx_t_8 = ((!(__pyx_v_a->ng.init != 0)) != 0);
    if (__pyx_t_8) {

      /* "Source/LwMiddleLayer.pyx":3498
 *             a = &atom.atom
 *             if not a.ng.init:
 *                 a.ng.accelerate(a.n.flatten())             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
      (void)(__pyx_v_a->ng.accelerate(__pyx_v_a->n.flatten()));

      /* "Source/LwMiddleLayer.pyx":3497
 *         for atom in atoms:
 *             a = &atom.atom
 *             if not a.ng.init:             # <<<<<<<<<<<<<<
 *                 a.ng.accelerate(a.n.flatten())
 * 
 */
    }

    /* "Source/LwMiddleLayer.pyx":3495
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 *         for atom in atoms:             # <<<<<<<<<<<<<<
 *             a = &atom.atom
 *             if not a.ng.init:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3500
 *                 a.ng.accelerate(a.n.flatten())
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             for atom in atoms:
 *                 a = &atom.atom
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
    __Pyx_XGOTREF(__pyx_t_11);
    __Pyx_XGOTREF(__pyx_t_12);
    __Pyx_XGOTREF(__pyx_t_13);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":3501
 * 
 *         try:
 *             for atom in atoms:             # <<<<<<<<<<<<<<
 *                 a = &atom.atom
 *                 stat_eq(self.ctx, a, params)
 */
      if (unlikely(__pyx_v_atoms == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
        __PYX_ERR(0, 3501, __pyx_L8_error)
      }
      __pyx_t_1 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_10 = 0;
      for (;;) {
        if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_2); __pyx_t_10++; if (unlikely(0 < 0)) __PYX_ERR(0, 3501, __pyx_L8_error)
        #else
        __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3501, __pyx_L8_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
        if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3501, __pyx_L8_error)
        __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_2));
        __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":3502
 *         try:
 *             for atom in atoms:
 *                 a = &atom.atom             # <<<<<<<<<<<<<<
 *                 stat_eq(self.ctx, a, params)
 *         except:
 */
        __pyx_v_a = (&__pyx_v_atom->atom);

        /* "Source/LwMiddleLayer.pyx":3503
 *             for atom in atoms:
 *                 a = &atom.atom
 *                 stat_eq(self.ctx, a, params)             # <<<<<<<<<<<<<<
 *         except:
 *             raise ExplodingMatrixError('Singular Matrix')
 */
        try {
          stat_eq(__pyx_v_self->ctx, __pyx_v_a, __pyx_v_params);
        } catch(...) {
          __Pyx_CppExn2PyErr();
          __PYX_ERR(0, 3503, __pyx_L8_error)
        }

        /* "Source/LwMiddleLayer.pyx":3501
 * 
 *         try:
 *             for atom in atoms:             # <<<<<<<<<<<<<<
 *                 a = &atom.atom
 *                 stat_eq(self.ctx, a, params)
 */
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":3500
 *                 a.ng.accelerate(a.n.flatten())
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             for atom in atoms:
 *                 a = &atom.atom
 */
    }
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    goto __pyx_L13_try_end;
    __pyx_L8_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Source/LwMiddleLayer.pyx":3504
 *                 a = &atom.atom
 *                 stat_eq(self.ctx, a, params)
 *         except:             # <<<<<<<<<<<<<<
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 */
    /*except:*/ {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.stat_equil", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_4) < 0) __PYX_ERR(0, 3504, __pyx_L10_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_4);

      /* "Source/LwMiddleLayer.pyx":3505
 *                 stat_eq(self.ctx, a, params)
 *         except:
 *             raise ExplodingMatrixError('Singular Matrix')             # <<<<<<<<<<<<<<
 * 
 *         if self.conserveCharge:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_ExplodingMatrixError); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3505, __pyx_L10_except_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_7 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_kp_u_Singular_Matrix) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_kp_u_Singular_Matrix);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3505, __pyx_L10_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_7, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __PYX_ERR(0, 3505, __pyx_L10_except_error)
    }
    __pyx_L10_except_error:;

    /* "Source/LwMiddleLayer.pyx":3500
 *                 a.ng.accelerate(a.n.flatten())
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             for atom in atoms:
 *                 a = &atom.atom
 */
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_XGIVEREF(__pyx_t_13);
    __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
    goto __pyx_L1_error;
    __pyx_L13_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":3507
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 *         if self.conserveCharge:             # <<<<<<<<<<<<<<
 *             neStart = np.copy(self.atmos.ne)
 *             self.nr_post_update(ngUpdate=False, hOnly=self.nrHOnly)
 */
  __pyx_t_8 = (__pyx_v_self->conserveCharge != 0);
  if (__pyx_t_8) {

    /* "Source/LwMiddleLayer.pyx":3508
 * 
 *         if self.conserveCharge:
 *             neStart = np.copy(self.atmos.ne)             # <<<<<<<<<<<<<<
 *             self.nr_post_update(ngUpdate=False, hOnly=self.nrHOnly)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_v_self->atmos->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3508, __pyx_L1_error)}
    __pyx_t_2 = __pyx_memoryview_fromslice(__pyx_v_self->atmos->ne, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_7, __pyx_t_2) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_2);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3508, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_neStart = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3509
 *         if self.conserveCharge:
 *             neStart = np.copy(self.atmos.ne)
 *             self.nr_post_update(ngUpdate=False, hOnly=self.nrHOnly)             # <<<<<<<<<<<<<<
 * 
 *         update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_nr_post_update); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_ngUpdate, Py_False) < 0) __PYX_ERR(0, 3509, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_self->nrHOnly); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_hOnly, __pyx_t_2) < 0) __PYX_ERR(0, 3509, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3509, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3507
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 *         if self.conserveCharge:             # <<<<<<<<<<<<<<
 *             neStart = np.copy(self.atmos.ne)
 *             self.nr_post_update(ngUpdate=False, hOnly=self.nrHOnly)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3511
 *             self.nr_post_update(ngUpdate=False, hOnly=self.nrHOnly)
 * 
 *         update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)             # <<<<<<<<<<<<<<
 *         if self.conserveCharge:
 *             neDiff = ((np.asarray(self.atmos.ne) - neStart)
 */
  __pyx_t_14.__pyx_n = 1;
  __pyx_t_14.printUpdate = __pyx_v_printUpdate;
  __pyx_t_2 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->rel_diff_ng_accelerate(__pyx_v_self, 0, &__pyx_t_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3511, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_update = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":3512
 * 
 *         update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)
 *         if self.conserveCharge:             # <<<<<<<<<<<<<<
 *             neDiff = ((np.asarray(self.atmos.ne) - neStart)
 *                       / np.asarray(self.atmos.ne))
 */
  __pyx_t_8 = (__pyx_v_self->conserveCharge != 0);
  if (__pyx_t_8) {

    /* "Source/LwMiddleLayer.pyx":3513
 *         update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)
 *         if self.conserveCharge:
 *             neDiff = ((np.asarray(self.atmos.ne) - neStart)             # <<<<<<<<<<<<<<
 *                       / np.asarray(self.atmos.ne))
 *             neDiffMaxIdx = neDiff.argmax()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_v_self->atmos->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3513, __pyx_L1_error)}
    __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->atmos->ne, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_7, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_v_neStart)) { __Pyx_RaiseUnboundLocalError("neStart"); __PYX_ERR(0, 3513, __pyx_L1_error) }
    __pyx_t_4 = PyNumber_Subtract(__pyx_t_2, __pyx_v_neStart); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3513, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "Source/LwMiddleLayer.pyx":3514
 *         if self.conserveCharge:
 *             neDiff = ((np.asarray(self.atmos.ne) - neStart)
 *                       / np.asarray(self.atmos.ne))             # <<<<<<<<<<<<<<
 *             neDiffMaxIdx = neDiff.argmax()
 *             neDiffMax = neDiff[neDiffMaxIdx]
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_v_self->atmos->ne.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3514, __pyx_L1_error)}
    __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_self->atmos->ne, 1, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_2 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_3, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_t_4, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_neDiff = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "Source/LwMiddleLayer.pyx":3515
 *             neDiff = ((np.asarray(self.atmos.ne) - neStart)
 *                       / np.asarray(self.atmos.ne))
 *             neDiffMaxIdx = neDiff.argmax()             # <<<<<<<<<<<<<<
 *             neDiffMax = neDiff[neDiffMaxIdx]
 *             maxDelta = max(maxDelta, neDiffMax)
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_neDiff, __pyx_n_s_argmax); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3515, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_7 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3515, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_neDiffMaxIdx = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "Source/LwMiddleLayer.pyx":3516
 *                       / np.asarray(self.atmos.ne))
 *             neDiffMaxIdx = neDiff.argmax()
 *             neDiffMax = neDiff[neDiffMaxIdx]             # <<<<<<<<<<<<<<
 *             maxDelta = max(maxDelta, neDiffMax)
 *             update.updatedNe = True
 */
    __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_v_neDiff, __pyx_v_neDiffMaxIdx); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 3516, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_v_neDiffMax = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "Source/LwMiddleLayer.pyx":3517
 *             neDiffMaxIdx = neDiff.argmax()
 *             neDiffMax = neDiff[neDiffMaxIdx]
 *             maxDelta = max(maxDelta, neDiffMax)             # <<<<<<<<<<<<<<
 *             update.updatedNe = True
 *             update.dNeMax = neDiffMax
 */
    __Pyx_INCREF(__pyx_v_neDiffMax);
    __pyx_t_7 = __pyx_v_neDiffMax;
    __pyx_t_15 = __pyx_v_maxDelta;
    __pyx_t_4 = PyFloat_FromDouble(__pyx_t_15); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3517, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_7, __pyx_t_4, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3517, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_8 < 0)) __PYX_ERR(0, 3517, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__pyx_t_8) {
      __Pyx_INCREF(__pyx_t_7);
      __pyx_t_2 = __pyx_t_7;
    } else {
      __pyx_t_1 = PyFloat_FromDouble(__pyx_t_15); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3517, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __pyx_t_1;
      __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_15 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_15 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3517, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_maxDelta = __pyx_t_15;

    /* "Source/LwMiddleLayer.pyx":3518
 *             neDiffMax = neDiff[neDiffMaxIdx]
 *             maxDelta = max(maxDelta, neDiffMax)
 *             update.updatedNe = True             # <<<<<<<<<<<<<<
 *             update.dNeMax = neDiffMax
 *             update.dNeMaxIdx = neDiffMaxIdx
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_update, __pyx_n_s_updatedNe, Py_True) < 0) __PYX_ERR(0, 3518, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3519
 *             maxDelta = max(maxDelta, neDiffMax)
 *             update.updatedNe = True
 *             update.dNeMax = neDiffMax             # <<<<<<<<<<<<<<
 *             update.dNeMaxIdx = neDiffMaxIdx
 * 
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_update, __pyx_n_s_dNeMax, __pyx_v_neDiffMax) < 0) __PYX_ERR(0, 3519, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3520
 *             update.updatedNe = True
 *             update.dNeMax = neDiffMax
 *             update.dNeMaxIdx = neDiffMaxIdx             # <<<<<<<<<<<<<<
 * 
 *         return update
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_update, __pyx_n_s_dNeMaxIdx, __pyx_v_neDiffMaxIdx) < 0) __PYX_ERR(0, 3520, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3512
 * 
 *         update = self.rel_diff_ng_accelerate(printUpdate=printUpdate)
 *         if self.conserveCharge:             # <<<<<<<<<<<<<<
 *             neDiff = ((np.asarray(self.atmos.ne) - neStart)
 *                       / np.asarray(self.atmos.ne))
 */
  }

  /* "Source/LwMiddleLayer.pyx":3522
 *             update.dNeMaxIdx = neDiffMaxIdx
 * 
 *         return update             # <<<<<<<<<<<<<<
 * 
 *     def _nr_post_update_impl(self, atoms, dC, f64[::1] backgroundNe,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_update);
  __pyx_r = __pyx_v_update;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3452
 *             atom.atom.ng.clear()
 * 
 *     cpdef stat_equil(self, printUpdate=None, int chunkSize=20, extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Update the populations of active atoms using the current values of
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.stat_equil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_atoms);
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XDECREF(__pyx_v_neStart);
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XDECREF(__pyx_v_neDiff);
  __Pyx_XDECREF(__pyx_v_neDiffMaxIdx);
  __Pyx_XDECREF(__pyx_v_neDiffMax);
  __Pyx_XDECREF(__pyx_v_printUpdate);
  __Pyx_XDECREF(__pyx_v_extraParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_35stat_equil(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_34stat_equil[] = "\n        Update the populations of active atoms using the current values of\n        their Gamma matrices. This function solves the time-independent statistical\n        equilibrium equations.\n\n        Parameters\n        ----------\n        printUpdate : bool, optional\n            Whether to print information on the size of the update (default:\n            True). Deprecated.\n        chunkSize : int, optional\n            Not currently used.\n        extraParams : dict, optional\n            Dict of extra parameters to be converted through the\n            `dict2ExtraParams` function and passed onto the C++ core.\n\n        Returns\n        -------\n        update: IterationUpdate\n            An object representing the updates to the model. See\n            `IterationUpdate` for details.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_35stat_equil(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_printUpdate = 0;
  int __pyx_v_chunkSize;
  PyObject *__pyx_v_extraParams = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("stat_equil (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_printUpdate,&__pyx_n_s_chunkSize,&__pyx_n_s_extraParams,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_printUpdate);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chunkSize);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_extraParams);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "stat_equil") < 0)) __PYX_ERR(0, 3452, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_printUpdate = values[0];
    if (values[1]) {
      __pyx_v_chunkSize = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_chunkSize == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3452, __pyx_L3_error)
    } else {
      __pyx_v_chunkSize = ((int)20);
    }
    __pyx_v_extraParams = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("stat_equil", 0, 0, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3452, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.stat_equil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_34stat_equil(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_printUpdate, __pyx_v_chunkSize, __pyx_v_extraParams);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_34stat_equil(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_printUpdate, int __pyx_v_chunkSize, PyObject *__pyx_v_extraParams) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_stat_equil __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("stat_equil", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 3;
  __pyx_t_2.printUpdate = __pyx_v_printUpdate;
  __pyx_t_2.chunkSize = __pyx_v_chunkSize;
  __pyx_t_2.extraParams = __pyx_v_extraParams;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->stat_equil(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3452, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.stat_equil", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3524
 *         return update
 * 
 *     def _nr_post_update_impl(self, atoms, dC, f64[::1] backgroundNe,             # <<<<<<<<<<<<<<
 *                              timeDependentData=None, int chunkSize=5, extraParams=None):
 *         crswVal = self.crswCallback.val
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_37_nr_post_update_impl(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_37_nr_post_update_impl(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_atoms = 0;
  PyObject *__pyx_v_dC = 0;
  __Pyx_memviewslice __pyx_v_backgroundNe = { 0, 0, { 0 }, { 0 }, { 0 } };
  PyObject *__pyx_v_timeDependentData = 0;
  CYTHON_UNUSED int __pyx_v_chunkSize;
  PyObject *__pyx_v_extraParams = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_nr_post_update_impl (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_atoms,&__pyx_n_s_dC,&__pyx_n_s_backgroundNe,&__pyx_n_s_timeDependentData,&__pyx_n_s_chunkSize,&__pyx_n_s_extraParams,0};
    PyObject* values[6] = {0,0,0,0,0,0};

    /* "Source/LwMiddleLayer.pyx":3525
 * 
 *     def _nr_post_update_impl(self, atoms, dC, f64[::1] backgroundNe,
 *                              timeDependentData=None, int chunkSize=5, extraParams=None):             # <<<<<<<<<<<<<<
 *         crswVal = self.crswCallback.val
 *         cdef f64 crsw = crswVal
 */
    values[3] = ((PyObject *)Py_None);
    values[5] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atoms)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dC)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_nr_post_update_impl", 0, 3, 6, 1); __PYX_ERR(0, 3524, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_backgroundNe)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("_nr_post_update_impl", 0, 3, 6, 2); __PYX_ERR(0, 3524, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_timeDependentData);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_chunkSize);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_extraParams);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "_nr_post_update_impl") < 0)) __PYX_ERR(0, 3524, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_atoms = values[0];
    __pyx_v_dC = values[1];
    __pyx_v_backgroundNe = __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(values[2], PyBUF_WRITABLE); if (unlikely(!__pyx_v_backgroundNe.memview)) __PYX_ERR(0, 3524, __pyx_L3_error)
    __pyx_v_timeDependentData = values[3];
    if (values[4]) {
      __pyx_v_chunkSize = __Pyx_PyInt_As_int(values[4]); if (unlikely((__pyx_v_chunkSize == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3525, __pyx_L3_error)
    } else {
      __pyx_v_chunkSize = ((int)5);
    }
    __pyx_v_extraParams = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_nr_post_update_impl", 0, 3, 6, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3524, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext._nr_post_update_impl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_36_nr_post_update_impl(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_atoms, __pyx_v_dC, __pyx_v_backgroundNe, __pyx_v_timeDependentData, __pyx_v_chunkSize, __pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3524
 *         return update
 * 
 *     def _nr_post_update_impl(self, atoms, dC, f64[::1] backgroundNe,             # <<<<<<<<<<<<<<
 *                              timeDependentData=None, int chunkSize=5, extraParams=None):
 *         crswVal = self.crswCallback.val
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_36_nr_post_update_impl(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_atoms, PyObject *__pyx_v_dC, __Pyx_memviewslice __pyx_v_backgroundNe, PyObject *__pyx_v_timeDependentData, CYTHON_UNUSED int __pyx_v_chunkSize, PyObject *__pyx_v_extraParams) {
  PyObject *__pyx_v_crswVal = NULL;
  __pyx_t_8CmoArray_f64 __pyx_v_crsw;
  std::vector<Atom *>  __pyx_v_atomVec;
  std::vector<__pyx_t_8CmoArray_F64View3D>  __pyx_v_dCVec;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_atom = 0;
  NrTimeDependentData __pyx_v_td;
  int __pyx_v_i;
  ExtraParams __pyx_v_params;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_8CmoArray_f64 __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_memviewslice __pyx_t_9 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View2D __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  __Pyx_memviewslice __pyx_t_12 = { 0, 0, { 0 }, { 0 }, { 0 } };
  __pyx_t_8CmoArray_F64View3D __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  __pyx_t_8CmoArray_F64View __pyx_t_17;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_nr_post_update_impl", 0);
  __Pyx_INCREF(__pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3526
 *     def _nr_post_update_impl(self, atoms, dC, f64[::1] backgroundNe,
 *                              timeDependentData=None, int chunkSize=5, extraParams=None):
 *         crswVal = self.crswCallback.val             # <<<<<<<<<<<<<<
 *         cdef f64 crsw = crswVal
 *         cdef vector[Atom*] atomVec
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->crswCallback, __pyx_n_s_val); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3526, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_crswVal = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3527
 *                              timeDependentData=None, int chunkSize=5, extraParams=None):
 *         crswVal = self.crswCallback.val
 *         cdef f64 crsw = crswVal             # <<<<<<<<<<<<<<
 *         cdef vector[Atom*] atomVec
 *         cdef vector[F64View3D] dCVec
 */
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_crswVal); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3527, __pyx_L1_error)
  __pyx_v_crsw = __pyx_t_2;

  /* "Source/LwMiddleLayer.pyx":3535
 *         cdef int i
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  __pyx_t_3 = (__pyx_v_extraParams == Py_None);
  __pyx_t_4 = (__pyx_t_3 != 0);
  if (__pyx_t_4) {

    /* "Source/LwMiddleLayer.pyx":3536
 * 
 *         if extraParams is None:
 *             extraParams = {}             # <<<<<<<<<<<<<<
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3536, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_extraParams, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3535
 *         cdef int i
 * 
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3537
 *         if extraParams is None:
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)             # <<<<<<<<<<<<<<
 * 
 *         if timeDependentData is not None:
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_extraParams))||((__pyx_v_extraParams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_extraParams)->tp_name), 0))) __PYX_ERR(0, 3537, __pyx_L1_error)
  __pyx_v_params = __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(((PyObject*)__pyx_v_extraParams));

  /* "Source/LwMiddleLayer.pyx":3539
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 *         if timeDependentData is not None:             # <<<<<<<<<<<<<<
 *             td.dt = timeDependentData['dt']
 *             td.nPrev.reserve(len(timeDependentData['nPrev']))
 */
  __pyx_t_4 = (__pyx_v_timeDependentData != Py_None);
  __pyx_t_3 = (__pyx_t_4 != 0);
  if (__pyx_t_3) {

    /* "Source/LwMiddleLayer.pyx":3540
 * 
 *         if timeDependentData is not None:
 *             td.dt = timeDependentData['dt']             # <<<<<<<<<<<<<<
 *             td.nPrev.reserve(len(timeDependentData['nPrev']))
 *             for i in range(len(timeDependentData['nPrev'])):
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_timeDependentData, __pyx_n_u_dt); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3540, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3540, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_td.dt = __pyx_t_2;

    /* "Source/LwMiddleLayer.pyx":3541
 *         if timeDependentData is not None:
 *             td.dt = timeDependentData['dt']
 *             td.nPrev.reserve(len(timeDependentData['nPrev']))             # <<<<<<<<<<<<<<
 *             for i in range(len(timeDependentData['nPrev'])):
 *                 td.nPrev.push_back(f64_view_2(timeDependentData['nPrev'][i]))
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_timeDependentData, __pyx_n_u_nPrev); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 3541, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_td.nPrev.reserve(__pyx_t_5);

    /* "Source/LwMiddleLayer.pyx":3542
 *             td.dt = timeDependentData['dt']
 *             td.nPrev.reserve(len(timeDependentData['nPrev']))
 *             for i in range(len(timeDependentData['nPrev'])):             # <<<<<<<<<<<<<<
 *                 td.nPrev.push_back(f64_view_2(timeDependentData['nPrev'][i]))
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_timeDependentData, __pyx_n_u_nPrev); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3542, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 3542, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __pyx_t_5;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_i = __pyx_t_7;

      /* "Source/LwMiddleLayer.pyx":3543
 *             td.nPrev.reserve(len(timeDependentData['nPrev']))
 *             for i in range(len(timeDependentData['nPrev'])):
 *                 td.nPrev.push_back(f64_view_2(timeDependentData['nPrev'][i]))             # <<<<<<<<<<<<<<
 * 
 *         atomVec.reserve(len(atoms))
 */
      __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_timeDependentData, __pyx_n_u_nPrev); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3543, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_i, int, 1, __Pyx_PyInt_From_int, 0, 1, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3543, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_9 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_8, PyBUF_WRITABLE); if (unlikely(!__pyx_t_9.memview)) __PYX_ERR(0, 3543, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      try {
        __pyx_t_10 = __pyx_f_11lightweaver_10LwCompiled_f64_view_2(__pyx_t_9);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 3543, __pyx_L1_error)
      }
      __PYX_XDEC_MEMVIEW(&__pyx_t_9, 1);
      __pyx_t_9.memview = NULL;
      __pyx_t_9.data = NULL;
      try {
        __pyx_v_td.nPrev.push_back(__pyx_t_10);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 3543, __pyx_L1_error)
      }
    }

    /* "Source/LwMiddleLayer.pyx":3539
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 *         if timeDependentData is not None:             # <<<<<<<<<<<<<<
 *             td.dt = timeDependentData['dt']
 *             td.nPrev.reserve(len(timeDependentData['nPrev']))
 */
  }

  /* "Source/LwMiddleLayer.pyx":3545
 *                 td.nPrev.push_back(f64_view_2(timeDependentData['nPrev'][i]))
 * 
 *         atomVec.reserve(len(atoms))             # <<<<<<<<<<<<<<
 *         for atom in atoms:
 *             atomVec.push_back(&atom.atom)
 */
  __pyx_t_5 = PyObject_Length(__pyx_v_atoms); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 3545, __pyx_L1_error)
  __pyx_v_atomVec.reserve(__pyx_t_5);

  /* "Source/LwMiddleLayer.pyx":3546
 * 
 *         atomVec.reserve(len(atoms))
 *         for atom in atoms:             # <<<<<<<<<<<<<<
 *             atomVec.push_back(&atom.atom)
 *         dCVec.reserve(len(dC))
 */
  if (likely(PyList_CheckExact(__pyx_v_atoms)) || PyTuple_CheckExact(__pyx_v_atoms)) {
    __pyx_t_8 = __pyx_v_atoms; __Pyx_INCREF(__pyx_t_8); __pyx_t_5 = 0;
    __pyx_t_11 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_v_atoms); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3546, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 3546, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_11)) {
      if (likely(PyList_CheckExact(__pyx_t_8))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_8)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 3546, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3546, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 3546, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3546, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_11(__pyx_t_8);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 3546, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3546, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_atom, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3547
 *         atomVec.reserve(len(atoms))
 *         for atom in atoms:
 *             atomVec.push_back(&atom.atom)             # <<<<<<<<<<<<<<
 *         dCVec.reserve(len(dC))
 *         for c in dC:
 */
    try {
      __pyx_v_atomVec.push_back((&__pyx_v_atom->atom));
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 3547, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":3546
 * 
 *         atomVec.reserve(len(atoms))
 *         for atom in atoms:             # <<<<<<<<<<<<<<
 *             atomVec.push_back(&atom.atom)
 *         dCVec.reserve(len(dC))
 */
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "Source/LwMiddleLayer.pyx":3548
 *         for atom in atoms:
 *             atomVec.push_back(&atom.atom)
 *         dCVec.reserve(len(dC))             # <<<<<<<<<<<<<<
 *         for c in dC:
 *             dCVec.push_back(f64_view_3(c))
 */
  __pyx_t_5 = PyObject_Length(__pyx_v_dC); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 3548, __pyx_L1_error)
  __pyx_v_dCVec.reserve(__pyx_t_5);

  /* "Source/LwMiddleLayer.pyx":3549
 *             atomVec.push_back(&atom.atom)
 *         dCVec.reserve(len(dC))
 *         for c in dC:             # <<<<<<<<<<<<<<
 *             dCVec.push_back(f64_view_3(c))
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_dC)) || PyTuple_CheckExact(__pyx_v_dC)) {
    __pyx_t_8 = __pyx_v_dC; __Pyx_INCREF(__pyx_t_8); __pyx_t_5 = 0;
    __pyx_t_11 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_8 = PyObject_GetIter(__pyx_v_dC); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3549, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = Py_TYPE(__pyx_t_8)->tp_iternext; if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 3549, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_11)) {
      if (likely(PyList_CheckExact(__pyx_t_8))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_8)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_8, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 3549, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3549, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_8)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_8, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(0, 3549, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_8, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3549, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_11(__pyx_t_8);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 3549, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3550
 *         dCVec.reserve(len(dC))
 *         for c in dC:
 *             dCVec.push_back(f64_view_3(c))             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
    __pyx_t_12 = __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_v_c, PyBUF_WRITABLE); if (unlikely(!__pyx_t_12.memview)) __PYX_ERR(0, 3550, __pyx_L1_error)
    try {
      __pyx_t_13 = __pyx_f_11lightweaver_10LwCompiled_f64_view_3(__pyx_t_12);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 3550, __pyx_L1_error)
    }
    __PYX_XDEC_MEMVIEW(&__pyx_t_12, 1);
    __pyx_t_12.memview = NULL;
    __pyx_t_12.data = NULL;
    try {
      __pyx_v_dCVec.push_back(__pyx_t_13);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 3550, __pyx_L1_error)
    }

    /* "Source/LwMiddleLayer.pyx":3549
 *             atomVec.push_back(&atom.atom)
 *         dCVec.reserve(len(dC))
 *         for c in dC:             # <<<<<<<<<<<<<<
 *             dCVec.push_back(f64_view_3(c))
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "Source/LwMiddleLayer.pyx":3552
 *             dCVec.push_back(f64_view_3(c))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             nr_post_update(self.ctx, &atomVec, dCVec, f64_view(backgroundNe), td, crsw, params);
 *         except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_14, &__pyx_t_15, &__pyx_t_16);
    __Pyx_XGOTREF(__pyx_t_14);
    __Pyx_XGOTREF(__pyx_t_15);
    __Pyx_XGOTREF(__pyx_t_16);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":3553
 * 
 *         try:
 *             nr_post_update(self.ctx, &atomVec, dCVec, f64_view(backgroundNe), td, crsw, params);             # <<<<<<<<<<<<<<
 *         except:
 *             raise ExplodingMatrixError('Singular Matrix')
 */
      try {
        __pyx_t_17 = __pyx_f_11lightweaver_10LwCompiled_f64_view(__pyx_v_backgroundNe);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 3553, __pyx_L11_error)
      }
      try {
        nr_post_update(__pyx_v_self->ctx, (&__pyx_v_atomVec), __pyx_v_dCVec, __pyx_t_17, __pyx_v_td, __pyx_v_crsw, __pyx_v_params);
      } catch(...) {
        __Pyx_CppExn2PyErr();
        __PYX_ERR(0, 3553, __pyx_L11_error)
      }

      /* "Source/LwMiddleLayer.pyx":3552
 *             dCVec.push_back(f64_view_3(c))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             nr_post_update(self.ctx, &atomVec, dCVec, f64_view(backgroundNe), td, crsw, params);
 *         except:
 */
    }
    __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
    goto __pyx_L16_try_end;
    __pyx_L11_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_t_12, 1);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __PYX_XDEC_MEMVIEW(&__pyx_t_9, 1);

    /* "Source/LwMiddleLayer.pyx":3554
 *         try:
 *             nr_post_update(self.ctx, &atomVec, dCVec, f64_view(backgroundNe), td, crsw, params);
 *         except:             # <<<<<<<<<<<<<<
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 */
    /*except:*/ {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext._nr_post_update_impl", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_8, &__pyx_t_1, &__pyx_t_18) < 0) __PYX_ERR(0, 3554, __pyx_L13_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_18);

      /* "Source/LwMiddleLayer.pyx":3555
 *             nr_post_update(self.ctx, &atomVec, dCVec, f64_view(backgroundNe), td, crsw, params);
 *         except:
 *             raise ExplodingMatrixError('Singular Matrix')             # <<<<<<<<<<<<<<
 * 
 *     cpdef update_projections(self):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_20, __pyx_n_s_ExplodingMatrixError); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 3555, __pyx_L13_except_error)
      __Pyx_GOTREF(__pyx_t_20);
      __pyx_t_21 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_20))) {
        __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_20);
        if (likely(__pyx_t_21)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
          __Pyx_INCREF(__pyx_t_21);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_20, function);
        }
      }
      __pyx_t_19 = (__pyx_t_21) ? __Pyx_PyObject_Call2Args(__pyx_t_20, __pyx_t_21, __pyx_kp_u_Singular_Matrix) : __Pyx_PyObject_CallOneArg(__pyx_t_20, __pyx_kp_u_Singular_Matrix);
      __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
      if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 3555, __pyx_L13_except_error)
      __Pyx_GOTREF(__pyx_t_19);
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
      __Pyx_Raise(__pyx_t_19, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      __PYX_ERR(0, 3555, __pyx_L13_except_error)
    }
    __pyx_L13_except_error:;

    /* "Source/LwMiddleLayer.pyx":3552
 *             dCVec.push_back(f64_view_3(c))
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             nr_post_update(self.ctx, &atomVec, dCVec, f64_view(backgroundNe), td, crsw, params);
 *         except:
 */
    __Pyx_XGIVEREF(__pyx_t_14);
    __Pyx_XGIVEREF(__pyx_t_15);
    __Pyx_XGIVEREF(__pyx_t_16);
    __Pyx_ExceptionReset(__pyx_t_14, __pyx_t_15, __pyx_t_16);
    goto __pyx_L1_error;
    __pyx_L16_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":3524
 *         return update
 * 
 *     def _nr_post_update_impl(self, atoms, dC, f64[::1] backgroundNe,             # <<<<<<<<<<<<<<
 *                              timeDependentData=None, int chunkSize=5, extraParams=None):
 *         crswVal = self.crswCallback.val
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_8);
  __PYX_XDEC_MEMVIEW(&__pyx_t_9, 1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_12, 1);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext._nr_post_update_impl", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_crswVal);
  __Pyx_XDECREF((PyObject *)__pyx_v_atom);
  __Pyx_XDECREF(__pyx_v_c);
  __PYX_XDEC_MEMVIEW(&__pyx_v_backgroundNe, 1);
  __Pyx_XDECREF(__pyx_v_extraParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3557
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 *     cpdef update_projections(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Update all arrays of projected terms in the atmospheric model.
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_39update_projections(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_projections(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_projections", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_projections); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3557, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_39update_projections)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3557, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3561
 *         Update all arrays of projected terms in the atmospheric model.
 *         '''
 *         self.atmos.update_projections()             # <<<<<<<<<<<<<<
 * 
 *     cpdef setup_stokes(self, recompute=False):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_update_projections); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3557
 *             raise ExplodingMatrixError('Singular Matrix')
 * 
 *     cpdef update_projections(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Update all arrays of projected terms in the atmospheric model.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_projections", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_39update_projections(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_38update_projections[] = "\n        Update all arrays of projected terms in the atmospheric model.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_39update_projections(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_projections (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_38update_projections(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_38update_projections(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_projections", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_9LwContext_update_projections(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_projections", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3563
 *         self.atmos.update_projections()
 * 
 *     cpdef setup_stokes(self, recompute=False):             # <<<<<<<<<<<<<<
 *         '''
 *         Configure the Context for Full Stokes radiative transfer.
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_41setup_stokes(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_setup_stokes(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_setup_stokes *__pyx_optional_args) {
  PyObject *__pyx_v_recompute = ((PyObject *)Py_False);
  PyObject *__pyx_v_atoms = NULL;
  int __pyx_v_atomsHavePolarisedProfile;
  PyObject *__pyx_v_atom = NULL;
  PyObject *__pyx_v_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  PyObject *(*__pyx_t_13)(PyObject *);
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setup_stokes", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_recompute = __pyx_optional_args->recompute;
    }
  }
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_setup_stokes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3563, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_41setup_stokes)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_recompute) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_recompute);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3563, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3573
 *             the line profiles will be recomputed.
 *         '''
 *         try:             # <<<<<<<<<<<<<<
 *             if self.atmos.B.shape[0] == 0:
 *                 raise ValueError('Please specify B-field')
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":3574
 *         '''
 *         try:
 *             if self.atmos.B.shape[0] == 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Please specify B-field')
 *         except:
 */
      if (unlikely(!__pyx_v_self->atmos->B.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3574, __pyx_L3_error)}
      __pyx_t_8 = (((__pyx_v_self->atmos->B.shape[0]) == 0) != 0);
      if (unlikely(__pyx_t_8)) {

        /* "Source/LwMiddleLayer.pyx":3575
 *         try:
 *             if self.atmos.B.shape[0] == 0:
 *                 raise ValueError('Please specify B-field')             # <<<<<<<<<<<<<<
 *         except:
 *             raise ValueError('Please specify B-field')
 */
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3575, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_Raise(__pyx_t_1, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __PYX_ERR(0, 3575, __pyx_L3_error)

        /* "Source/LwMiddleLayer.pyx":3574
 *         '''
 *         try:
 *             if self.atmos.B.shape[0] == 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Please specify B-field')
 *         except:
 */
      }

      /* "Source/LwMiddleLayer.pyx":3573
 *             the line profiles will be recomputed.
 *         '''
 *         try:             # <<<<<<<<<<<<<<
 *             if self.atmos.B.shape[0] == 0:
 *                 raise ValueError('Please specify B-field')
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3576
 *             if self.atmos.B.shape[0] == 0:
 *                 raise ValueError('Please specify B-field')
 *         except:             # <<<<<<<<<<<<<<
 *             raise ValueError('Please specify B-field')
 * 
 */
    /*except:*/ {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.setup_stokes", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 3576, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);

      /* "Source/LwMiddleLayer.pyx":3577
 *                 raise ValueError('Please specify B-field')
 *         except:
 *             raise ValueError('Please specify B-field')             # <<<<<<<<<<<<<<
 * 
 *         atoms = self.activeAtoms + self.detailedAtoms
 */
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3577, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __PYX_ERR(0, 3577, __pyx_L5_except_error)
    }
    __pyx_L5_except_error:;

    /* "Source/LwMiddleLayer.pyx":3573
 *             the line profiles will be recomputed.
 *         '''
 *         try:             # <<<<<<<<<<<<<<
 *             if self.atmos.B.shape[0] == 0:
 *                 raise ValueError('Please specify B-field')
 */
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":3579
 *             raise ValueError('Please specify B-field')
 * 
 *         atoms = self.activeAtoms + self.detailedAtoms             # <<<<<<<<<<<<<<
 *         atomsHavePolarisedProfile = True
 *         try:
 */
  __pyx_t_3 = PyNumber_Add(__pyx_v_self->activeAtoms, __pyx_v_self->detailedAtoms); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_atoms = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":3580
 * 
 *         atoms = self.activeAtoms + self.detailedAtoms
 *         atomsHavePolarisedProfile = True             # <<<<<<<<<<<<<<
 *         try:
 *             atoms[0].phiQ
 */
  __pyx_v_atomsHavePolarisedProfile = 1;

  /* "Source/LwMiddleLayer.pyx":3581
 *         atoms = self.activeAtoms + self.detailedAtoms
 *         atomsHavePolarisedProfile = True
 *         try:             # <<<<<<<<<<<<<<
 *             atoms[0].phiQ
 *         except AttributeError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_6, &__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_5);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":3582
 *         atomsHavePolarisedProfile = True
 *         try:
 *             atoms[0].phiQ             # <<<<<<<<<<<<<<
 *         except AttributeError:
 *             atomsHavePolarisedProfile = False
 */
      __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_atoms, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3582, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_phiQ); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3582, __pyx_L12_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":3581
 *         atoms = self.activeAtoms + self.detailedAtoms
 *         atomsHavePolarisedProfile = True
 *         try:             # <<<<<<<<<<<<<<
 *             atoms[0].phiQ
 *         except AttributeError:
 */
    }
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L17_try_end;
    __pyx_L12_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3583
 *         try:
 *             atoms[0].phiQ
 *         except AttributeError:             # <<<<<<<<<<<<<<
 *             atomsHavePolarisedProfile = False
 * 
 */
    __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_9) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.setup_stokes", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_3, &__pyx_t_1) < 0) __PYX_ERR(0, 3583, __pyx_L14_except_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GOTREF(__pyx_t_1);

      /* "Source/LwMiddleLayer.pyx":3584
 *             atoms[0].phiQ
 *         except AttributeError:
 *             atomsHavePolarisedProfile = False             # <<<<<<<<<<<<<<
 * 
 *         if recompute or not atomsHavePolarisedProfile:
 */
      __pyx_v_atomsHavePolarisedProfile = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L13_exception_handled;
    }
    goto __pyx_L14_except_error;
    __pyx_L14_except_error:;

    /* "Source/LwMiddleLayer.pyx":3581
 *         atoms = self.activeAtoms + self.detailedAtoms
 *         atomsHavePolarisedProfile = True
 *         try:             # <<<<<<<<<<<<<<
 *             atoms[0].phiQ
 *         except AttributeError:
 */
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_6, __pyx_t_5);
    goto __pyx_L1_error;
    __pyx_L13_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_6, __pyx_t_5);
    __pyx_L17_try_end:;
  }

  /* "Source/LwMiddleLayer.pyx":3586
 *             atomsHavePolarisedProfile = False
 * 
 *         if recompute or not atomsHavePolarisedProfile:             # <<<<<<<<<<<<<<
 *             for atom in self.activeAtoms:
 *                 for t in atom.trans:
 */
  __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_v_recompute); if (unlikely(__pyx_t_10 < 0)) __PYX_ERR(0, 3586, __pyx_L1_error)
  if (!__pyx_t_10) {
  } else {
    __pyx_t_8 = __pyx_t_10;
    goto __pyx_L21_bool_binop_done;
  }
  __pyx_t_10 = ((!(__pyx_v_atomsHavePolarisedProfile != 0)) != 0);
  __pyx_t_8 = __pyx_t_10;
  __pyx_L21_bool_binop_done:;
  if (__pyx_t_8) {

    /* "Source/LwMiddleLayer.pyx":3587
 * 
 *         if recompute or not atomsHavePolarisedProfile:
 *             for atom in self.activeAtoms:             # <<<<<<<<<<<<<<
 *                 for t in atom.trans:
 *                     t.compute_polarised_profiles()
 */
    if (unlikely(__pyx_v_self->activeAtoms == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 3587, __pyx_L1_error)
    }
    __pyx_t_1 = __pyx_v_self->activeAtoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_11 = 0;
    for (;;) {
      if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_11); __Pyx_INCREF(__pyx_t_3); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 3587, __pyx_L1_error)
      #else
      __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3587, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      #endif
      __Pyx_XDECREF_SET(__pyx_v_atom, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":3588
 *         if recompute or not atomsHavePolarisedProfile:
 *             for atom in self.activeAtoms:
 *                 for t in atom.trans:             # <<<<<<<<<<<<<<
 *                     t.compute_polarised_profiles()
 *             for atom in self.detailedAtoms:
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_trans); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3588, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
        __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_12 = 0;
        __pyx_t_13 = NULL;
      } else {
        __pyx_t_12 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3588, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_13 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 3588, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      for (;;) {
        if (likely(!__pyx_t_13)) {
          if (likely(PyList_CheckExact(__pyx_t_2))) {
            if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_12); __Pyx_INCREF(__pyx_t_3); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 3588, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3588, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          } else {
            if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_12); __Pyx_INCREF(__pyx_t_3); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 3588, __pyx_L1_error)
            #else
            __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3588, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_3);
            #endif
          }
        } else {
          __pyx_t_3 = __pyx_t_13(__pyx_t_2);
          if (unlikely(!__pyx_t_3)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 3588, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_3);
        }
        __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "Source/LwMiddleLayer.pyx":3589
 *             for atom in self.activeAtoms:
 *                 for t in atom.trans:
 *                     t.compute_polarised_profiles()             # <<<<<<<<<<<<<<
 *             for atom in self.detailedAtoms:
 *                 for t in atom.trans:
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_compute_polarised_profiles); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3589, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_14 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_3 = (__pyx_t_14) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_14) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3589, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "Source/LwMiddleLayer.pyx":3588
 *         if recompute or not atomsHavePolarisedProfile:
 *             for atom in self.activeAtoms:
 *                 for t in atom.trans:             # <<<<<<<<<<<<<<
 *                     t.compute_polarised_profiles()
 *             for atom in self.detailedAtoms:
 */
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":3587
 * 
 *         if recompute or not atomsHavePolarisedProfile:
 *             for atom in self.activeAtoms:             # <<<<<<<<<<<<<<
 *                 for t in atom.trans:
 *                     t.compute_polarised_profiles()
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3590
 *                 for t in atom.trans:
 *                     t.compute_polarised_profiles()
 *             for atom in self.detailedAtoms:             # <<<<<<<<<<<<<<
 *                 for t in atom.trans:
 *                     t.compute_polarised_profiles()
 */
    if (unlikely(__pyx_v_self->detailedAtoms == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
      __PYX_ERR(0, 3590, __pyx_L1_error)
    }
    __pyx_t_1 = __pyx_v_self->detailedAtoms; __Pyx_INCREF(__pyx_t_1); __pyx_t_11 = 0;
    for (;;) {
      if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_1)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_11); __Pyx_INCREF(__pyx_t_2); __pyx_t_11++; if (unlikely(0 < 0)) __PYX_ERR(0, 3590, __pyx_L1_error)
      #else
      __pyx_t_2 = PySequence_ITEM(__pyx_t_1, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3590, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      #endif
      __Pyx_XDECREF_SET(__pyx_v_atom, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":3591
 *                     t.compute_polarised_profiles()
 *             for atom in self.detailedAtoms:
 *                 for t in atom.trans:             # <<<<<<<<<<<<<<
 *                     t.compute_polarised_profiles()
 * 
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atom, __pyx_n_s_trans); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3591, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
        __pyx_t_3 = __pyx_t_2; __Pyx_INCREF(__pyx_t_3); __pyx_t_12 = 0;
        __pyx_t_13 = NULL;
      } else {
        __pyx_t_12 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3591, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_13 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 3591, __pyx_L1_error)
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      for (;;) {
        if (likely(!__pyx_t_13)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_12); __Pyx_INCREF(__pyx_t_2); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 3591, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3591, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            if (__pyx_t_12 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_12); __Pyx_INCREF(__pyx_t_2); __pyx_t_12++; if (unlikely(0 < 0)) __PYX_ERR(0, 3591, __pyx_L1_error)
            #else
            __pyx_t_2 = PySequence_ITEM(__pyx_t_3, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3591, __pyx_L1_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_13(__pyx_t_3);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 3591, __pyx_L1_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":3592
 *             for atom in self.detailedAtoms:
 *                 for t in atom.trans:
 *                     t.compute_polarised_profiles()             # <<<<<<<<<<<<<<
 * 
 *         self.spect.setup_stokes()
 */
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_t, __pyx_n_s_compute_polarised_profiles); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3592, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_14 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
          }
        }
        __pyx_t_2 = (__pyx_t_14) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_14) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3592, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":3591
 *                     t.compute_polarised_profiles()
 *             for atom in self.detailedAtoms:
 *                 for t in atom.trans:             # <<<<<<<<<<<<<<
 *                     t.compute_polarised_profiles()
 * 
 */
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":3590
 *                 for t in atom.trans:
 *                     t.compute_polarised_profiles()
 *             for atom in self.detailedAtoms:             # <<<<<<<<<<<<<<
 *                 for t in atom.trans:
 *                     t.compute_polarised_profiles()
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3586
 *             atomsHavePolarisedProfile = False
 * 
 *         if recompute or not atomsHavePolarisedProfile:             # <<<<<<<<<<<<<<
 *             for atom in self.activeAtoms:
 *                 for t in atom.trans:
 */
  }

  /* "Source/LwMiddleLayer.pyx":3594
 *                     t.compute_polarised_profiles()
 * 
 *         self.spect.setup_stokes()             # <<<<<<<<<<<<<<
 * 
 *     cpdef single_stokes_fs(self, recompute=False, updateJ=False, upOnly=True,
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->spect), __pyx_n_s_setup_stokes); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3594, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3563
 *         self.atmos.update_projections()
 * 
 *     cpdef setup_stokes(self, recompute=False):             # <<<<<<<<<<<<<<
 *         '''
 *         Configure the Context for Full Stokes radiative transfer.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.setup_stokes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_atoms);
  __Pyx_XDECREF(__pyx_v_atom);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_41setup_stokes(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_40setup_stokes[] = "\n        Configure the Context for Full Stokes radiative transfer.\n\n        Parameters\n        ----------\n        recompute : bool, optional\n            If previously called, and called again with `recompute = True`\n            the line profiles will be recomputed.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_41setup_stokes(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_recompute = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("setup_stokes (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_recompute,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_False);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_recompute);
          if (value) { values[0] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "setup_stokes") < 0)) __PYX_ERR(0, 3563, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_recompute = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("setup_stokes", 0, 0, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3563, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.setup_stokes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_40setup_stokes(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_recompute);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_40setup_stokes(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_recompute) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_setup_stokes __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setup_stokes", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.recompute = __pyx_v_recompute;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->setup_stokes(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.setup_stokes", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3596
 *         self.spect.setup_stokes()
 * 
 *     cpdef single_stokes_fs(self, recompute=False, updateJ=False, upOnly=True,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_43single_stokes_fs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs *__pyx_optional_args) {
  PyObject *__pyx_v_recompute = ((PyObject *)Py_False);
  PyObject *__pyx_v_updateJ = ((PyObject *)Py_False);
  PyObject *__pyx_v_upOnly = ((PyObject *)Py_True);

  /* "Source/LwMiddleLayer.pyx":3597
 * 
 *     cpdef single_stokes_fs(self, recompute=False, updateJ=False, upOnly=True,
 *                            extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute a full Stokes formal solution across all wakelengths in the
 */
  PyObject *__pyx_v_extraParams = ((PyObject *)Py_None);
  ExtraParams __pyx_v_params;
  IterationResult __pyx_v_maxChange;
  PyObject *__pyx_v_update = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_setup_stokes __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  bool __pyx_t_10;
  bool __pyx_t_11;
  IterationResult __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("single_stokes_fs", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_recompute = __pyx_optional_args->recompute;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_updateJ = __pyx_optional_args->updateJ;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_upOnly = __pyx_optional_args->upOnly;
          if (__pyx_optional_args->__pyx_n > 3) {
            __pyx_v_extraParams = __pyx_optional_args->extraParams;
          }
        }
      }
    }
  }
  __Pyx_INCREF(__pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3596
 *         self.spect.setup_stokes()
 * 
 *     cpdef single_stokes_fs(self, recompute=False, updateJ=False, upOnly=True,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_single_stokes_fs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3596, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_43single_stokes_fs)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        __pyx_t_5 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_5 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, __pyx_v_recompute, __pyx_v_updateJ, __pyx_v_upOnly, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3596, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_3)) {
          PyObject *__pyx_temp[5] = {__pyx_t_4, __pyx_v_recompute, __pyx_v_updateJ, __pyx_v_upOnly, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_3, __pyx_temp+1-__pyx_t_5, 4+__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3596, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_GOTREF(__pyx_t_2);
        } else
        #endif
        {
          __pyx_t_6 = PyTuple_New(4+__pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 3596, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_4); PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_4); __pyx_t_4 = NULL;
          }
          __Pyx_INCREF(__pyx_v_recompute);
          __Pyx_GIVEREF(__pyx_v_recompute);
          PyTuple_SET_ITEM(__pyx_t_6, 0+__pyx_t_5, __pyx_v_recompute);
          __Pyx_INCREF(__pyx_v_updateJ);
          __Pyx_GIVEREF(__pyx_v_updateJ);
          PyTuple_SET_ITEM(__pyx_t_6, 1+__pyx_t_5, __pyx_v_updateJ);
          __Pyx_INCREF(__pyx_v_upOnly);
          __Pyx_GIVEREF(__pyx_v_upOnly);
          PyTuple_SET_ITEM(__pyx_t_6, 2+__pyx_t_5, __pyx_v_upOnly);
          __Pyx_INCREF(__pyx_v_extraParams);
          __Pyx_GIVEREF(__pyx_v_extraParams);
          PyTuple_SET_ITEM(__pyx_t_6, 3+__pyx_t_5, __pyx_v_extraParams);
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3596, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3627
 *             `IterationUpdate` for details.
 *         '''
 *         self.setup_stokes(recompute=recompute)             # <<<<<<<<<<<<<<
 *         if extraParams is None:
 *             extraParams = {}
 */
  __pyx_t_7.__pyx_n = 1;
  __pyx_t_7.recompute = __pyx_v_recompute;
  __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->setup_stokes(__pyx_v_self, 0, &__pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3627, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3628
 *         '''
 *         self.setup_stokes(recompute=recompute)
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  __pyx_t_8 = (__pyx_v_extraParams == Py_None);
  __pyx_t_9 = (__pyx_t_8 != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":3629
 *         self.setup_stokes(recompute=recompute)
 *         if extraParams is None:
 *             extraParams = {}             # <<<<<<<<<<<<<<
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3629, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_extraParams, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3628
 *         '''
 *         self.setup_stokes(recompute=recompute)
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3630
 *         if extraParams is None:
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)             # <<<<<<<<<<<<<<
 * 
 *         self.atmos.compute_bcs(self.spect)
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_extraParams))||((__pyx_v_extraParams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_extraParams)->tp_name), 0))) __PYX_ERR(0, 3630, __pyx_L1_error)
  __pyx_v_params = __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(((PyObject*)__pyx_v_extraParams));

  /* "Source/LwMiddleLayer.pyx":3632
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 *         self.atmos.compute_bcs(self.spect)             # <<<<<<<<<<<<<<
 *         cdef IterationResult maxChange = formal_sol_full_stokes(self.ctx, updateJ,
 *                                                                 upOnly, params)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->atmos), __pyx_n_s_compute_bcs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, ((PyObject *)__pyx_v_self->spect)) : __Pyx_PyObject_CallOneArg(__pyx_t_2, ((PyObject *)__pyx_v_self->spect));
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3633
 * 
 *         self.atmos.compute_bcs(self.spect)
 *         cdef IterationResult maxChange = formal_sol_full_stokes(self.ctx, updateJ,             # <<<<<<<<<<<<<<
 *                                                                 upOnly, params)
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 */
  __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_v_updateJ); if (unlikely((__pyx_t_10 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 3633, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":3634
 *         self.atmos.compute_bcs(self.spect)
 *         cdef IterationResult maxChange = formal_sol_full_stokes(self.ctx, updateJ,
 *                                                                 upOnly, params)             # <<<<<<<<<<<<<<
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 *         return update
 */
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_v_upOnly); if (unlikely((__pyx_t_11 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 3634, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":3633
 * 
 *         self.atmos.compute_bcs(self.spect)
 *         cdef IterationResult maxChange = formal_sol_full_stokes(self.ctx, updateJ,             # <<<<<<<<<<<<<<
 *                                                                 upOnly, params)
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 */
  try {
    __pyx_t_12 = formal_sol_full_stokes(__pyx_v_self->ctx, __pyx_t_10, __pyx_t_11, __pyx_v_params);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 3633, __pyx_L1_error)
  }
  __pyx_v_maxChange = __pyx_t_12;

  /* "Source/LwMiddleLayer.pyx":3635
 *         cdef IterationResult maxChange = formal_sol_full_stokes(self.ctx, updateJ,
 *                                                                 upOnly, params)
 *         update = IterationUpdate_from_IterationResult(self, maxChange)             # <<<<<<<<<<<<<<
 *         return update
 * 
 */
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_IterationUpdate_from_IterationResult(__pyx_v_self, __pyx_v_maxChange); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_update = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3636
 *                                                                 upOnly, params)
 *         update = IterationUpdate_from_IterationResult(self, maxChange)
 *         return update             # <<<<<<<<<<<<<<
 * 
 *     cpdef prd_redistribute(self, int maxIter=3, f64 tol=1e-2, printUpdate=None,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_update);
  __pyx_r = __pyx_v_update;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3596
 *         self.spect.setup_stokes()
 * 
 *     cpdef single_stokes_fs(self, recompute=False, updateJ=False, upOnly=True,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.single_stokes_fs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XDECREF(__pyx_v_extraParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_43single_stokes_fs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_42single_stokes_fs[] = "\n        Compute a full Stokes formal solution across all wakelengths in the\n        grid, setting up the Context first (it is rarely necessary to call\n        setup_stokes directly).\n\n        The full Stokes formal solution is not currently multi-threaded, as\n        it is usually only called once at the end of a simulation, however\n        this could easily be changed.\n\n        Parameters\n        ----------\n        recompute : bool, optional\n            If previously called, and called again with `recompute = True`\n            the line profiles will be recomputed. (Default: False)\n        updateJ : bool, optional\n            Whether to update J on the Context during the calculation (Default: False)\n        upOnly : bool, optional\n            Whether to compute the formal solver only for upgoing rays (used in\n            final synthesis).\n        extraParams : dict, optional\n            Dict of extra parameters to be converted through the\n            `dict2ExtraParams` function and passed onto the C++ core.\n\n        Returns\n        -------\n        update: IterationUpdate\n            An object representing the updates to the model. See\n            `IterationUpdate` for details.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_43single_stokes_fs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_recompute = 0;
  PyObject *__pyx_v_updateJ = 0;
  PyObject *__pyx_v_upOnly = 0;
  PyObject *__pyx_v_extraParams = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("single_stokes_fs (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_recompute,&__pyx_n_s_updateJ,&__pyx_n_s_upOnly,&__pyx_n_s_extraParams,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)Py_False);
    values[1] = ((PyObject *)Py_False);
    values[2] = ((PyObject *)Py_True);

    /* "Source/LwMiddleLayer.pyx":3597
 * 
 *     cpdef single_stokes_fs(self, recompute=False, updateJ=False, upOnly=True,
 *                            extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute a full Stokes formal solution across all wakelengths in the
 */
    values[3] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_recompute);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_updateJ);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_upOnly);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_extraParams);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "single_stokes_fs") < 0)) __PYX_ERR(0, 3596, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_recompute = values[0];
    __pyx_v_updateJ = values[1];
    __pyx_v_upOnly = values[2];
    __pyx_v_extraParams = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("single_stokes_fs", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3596, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.single_stokes_fs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_42single_stokes_fs(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_recompute, __pyx_v_updateJ, __pyx_v_upOnly, __pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3596
 *         self.spect.setup_stokes()
 * 
 *     cpdef single_stokes_fs(self, recompute=False, updateJ=False, upOnly=True,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_42single_stokes_fs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_recompute, PyObject *__pyx_v_updateJ, PyObject *__pyx_v_upOnly, PyObject *__pyx_v_extraParams) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("single_stokes_fs", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 4;
  __pyx_t_2.recompute = __pyx_v_recompute;
  __pyx_t_2.updateJ = __pyx_v_updateJ;
  __pyx_t_2.upOnly = __pyx_v_upOnly;
  __pyx_t_2.extraParams = __pyx_v_extraParams;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->single_stokes_fs(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3596, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.single_stokes_fs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3638
 *         return update
 * 
 *     cpdef prd_redistribute(self, int maxIter=3, f64 tol=1e-2, printUpdate=None,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_45prd_redistribute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_prd_redistribute(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_prd_redistribute *__pyx_optional_args) {
  int __pyx_v_maxIter = ((int)3);
  __pyx_t_8CmoArray_f64 __pyx_v_tol = ((__pyx_t_8CmoArray_f64)1e-2);
  PyObject *__pyx_v_printUpdate = ((PyObject *)Py_None);

  /* "Source/LwMiddleLayer.pyx":3639
 * 
 *     cpdef prd_redistribute(self, int maxIter=3, f64 tol=1e-2, printUpdate=None,
 *                            extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Update emission profile ratio rho by computing the scattering integral
 */
  PyObject *__pyx_v_extraParams = ((PyObject *)Py_None);
  ExtraParams __pyx_v_params;
  IterationResult __pyx_v_prdIter;
  PyObject *__pyx_v_update = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_t_10;
  IterationResult __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prd_redistribute", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_maxIter = __pyx_optional_args->maxIter;
      if (__pyx_optional_args->__pyx_n > 1) {
        __pyx_v_tol = __pyx_optional_args->tol;
        if (__pyx_optional_args->__pyx_n > 2) {
          __pyx_v_printUpdate = __pyx_optional_args->printUpdate;
          if (__pyx_optional_args->__pyx_n > 3) {
            __pyx_v_extraParams = __pyx_optional_args->extraParams;
          }
        }
      }
    }
  }
  __Pyx_INCREF(__pyx_v_printUpdate);
  __Pyx_INCREF(__pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3638
 *         return update
 * 
 *     cpdef prd_redistribute(self, int maxIter=3, f64 tol=1e-2, printUpdate=None,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_prd_redistribute); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3638, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_45prd_redistribute)) {
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_maxIter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3638, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_4 = PyFloat_FromDouble(__pyx_v_tol); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3638, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_5 = __pyx_t_1; __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #if CYTHON_FAST_PYCALL
        if (PyFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[5] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_v_printUpdate, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 4+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3638, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        #if CYTHON_FAST_PYCCALL
        if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
          PyObject *__pyx_temp[5] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_v_printUpdate, __pyx_v_extraParams};
          __pyx_t_2 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_7, 4+__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3638, __pyx_L1_error)
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        } else
        #endif
        {
          __pyx_t_8 = PyTuple_New(4+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 3638, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_8);
          if (__pyx_t_6) {
            __Pyx_GIVEREF(__pyx_t_6); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_6); __pyx_t_6 = NULL;
          }
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_4);
          PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_t_4);
          __Pyx_INCREF(__pyx_v_printUpdate);
          __Pyx_GIVEREF(__pyx_v_printUpdate);
          PyTuple_SET_ITEM(__pyx_t_8, 2+__pyx_t_7, __pyx_v_printUpdate);
          __Pyx_INCREF(__pyx_v_extraParams);
          __Pyx_GIVEREF(__pyx_v_extraParams);
          PyTuple_SET_ITEM(__pyx_t_8, 3+__pyx_t_7, __pyx_v_extraParams);
          __pyx_t_3 = 0;
          __pyx_t_4 = 0;
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3638, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3665
 *             `IterationUpdate` for details.
 *         '''
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
  __pyx_t_9 = (__pyx_v_printUpdate == Py_None);
  __pyx_t_10 = (__pyx_t_9 != 0);
  if (__pyx_t_10) {

    /* "Source/LwMiddleLayer.pyx":3666
 *         '''
 *         if printUpdate is None:
 *             printUpdate = True             # <<<<<<<<<<<<<<
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 */
    __Pyx_INCREF(Py_True);
    __Pyx_DECREF_SET(__pyx_v_printUpdate, Py_True);

    /* "Source/LwMiddleLayer.pyx":3665
 *             `IterationUpdate` for details.
 *         '''
 *         if printUpdate is None:             # <<<<<<<<<<<<<<
 *             printUpdate = True
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3668
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 *         if extraParams is None:
 *             extraParams = {}
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3668, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3669
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  __pyx_t_10 = (__pyx_v_extraParams == Py_None);
  __pyx_t_9 = (__pyx_t_10 != 0);
  if (__pyx_t_9) {

    /* "Source/LwMiddleLayer.pyx":3670
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 *         if extraParams is None:
 *             extraParams = {}             # <<<<<<<<<<<<<<
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 */
    __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3670, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF_SET(__pyx_v_extraParams, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3669
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)
 *         if extraParams is None:             # <<<<<<<<<<<<<<
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3671
 *         if extraParams is None:
 *             extraParams = {}
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)             # <<<<<<<<<<<<<<
 * 
 *         cdef IterationResult prdIter = redistribute_prd_lines(self.ctx, maxIter, tol, params)
 */
  if (!(likely(PyDict_CheckExact(__pyx_v_extraParams))||((__pyx_v_extraParams) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_extraParams)->tp_name), 0))) __PYX_ERR(0, 3671, __pyx_L1_error)
  __pyx_v_params = __pyx_f_11lightweaver_10LwCompiled_dict2ExtraParams(((PyObject*)__pyx_v_extraParams));

  /* "Source/LwMiddleLayer.pyx":3673
 *         cdef ExtraParams params = dict2ExtraParams(extraParams)
 * 
 *         cdef IterationResult prdIter = redistribute_prd_lines(self.ctx, maxIter, tol, params)             # <<<<<<<<<<<<<<
 *         update = IterationUpdate_from_IterationResult(self, prdIter)
 *         return update
 */
  try {
    __pyx_t_11 = redistribute_prd_lines(__pyx_v_self->ctx, __pyx_v_maxIter, __pyx_v_tol, __pyx_v_params);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 3673, __pyx_L1_error)
  }
  __pyx_v_prdIter = __pyx_t_11;

  /* "Source/LwMiddleLayer.pyx":3674
 * 
 *         cdef IterationResult prdIter = redistribute_prd_lines(self.ctx, maxIter, tol, params)
 *         update = IterationUpdate_from_IterationResult(self, prdIter)             # <<<<<<<<<<<<<<
 *         return update
 * 
 */
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_IterationUpdate_from_IterationResult(__pyx_v_self, __pyx_v_prdIter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3674, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_update = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3675
 *         cdef IterationResult prdIter = redistribute_prd_lines(self.ctx, maxIter, tol, params)
 *         update = IterationUpdate_from_IterationResult(self, prdIter)
 *         return update             # <<<<<<<<<<<<<<
 * 
 *     cdef configure_hprd_coeffs(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_update);
  __pyx_r = __pyx_v_update;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3638
 *         return update
 * 
 *     cpdef prd_redistribute(self, int maxIter=3, f64 tol=1e-2, printUpdate=None,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.prd_redistribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XDECREF(__pyx_v_printUpdate);
  __Pyx_XDECREF(__pyx_v_extraParams);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_45prd_redistribute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_44prd_redistribute[] = "\n        Update emission profile ratio rho by computing the scattering integral\n        for each prd line. Does not affect the populations, interleave before\n        each formal solution for a standard problem.\n\n        Parameters\n        ----------\n        maxIter : int, optional\n            The maximum number of iterations of updating rho to be taken (Default: 3).\n        tol : float, optional\n            The default stopping tolerance for relative changes in rho. If the\n            relative change in rho falls below this threshold then this function\n            returns i.e. `maxIter` iterations do not need to be taken (Default: 1e-2).\n        printUpdate : bool, optional\n            Whether to print information about the iteration process i.e. the size of the update to rho and the number of iterations taken (Default: True). Deprecated.\n        extraParams : dict, optional\n            Dict of extra parameters to be converted through the\n            `dict2ExtraParams` function and passed onto the C++ core.\n\n        Returns\n        -------\n        update: IterationUpdate\n            An object representing the updates to the model. See\n            `IterationUpdate` for details.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_45prd_redistribute(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_maxIter;
  __pyx_t_8CmoArray_f64 __pyx_v_tol;
  PyObject *__pyx_v_printUpdate = 0;
  PyObject *__pyx_v_extraParams = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("prd_redistribute (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_maxIter,&__pyx_n_s_tol,&__pyx_n_s_printUpdate,&__pyx_n_s_extraParams,0};
    PyObject* values[4] = {0,0,0,0};
    values[2] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":3639
 * 
 *     cpdef prd_redistribute(self, int maxIter=3, f64 tol=1e-2, printUpdate=None,
 *                            extraParams=None):             # <<<<<<<<<<<<<<
 *         '''
 *         Update emission profile ratio rho by computing the scattering integral
 */
    values[3] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_maxIter);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_tol);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_printUpdate);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_extraParams);
          if (value) { values[3] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "prd_redistribute") < 0)) __PYX_ERR(0, 3638, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    if (values[0]) {
      __pyx_v_maxIter = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_maxIter == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 3638, __pyx_L3_error)
    } else {
      __pyx_v_maxIter = ((int)3);
    }
    if (values[1]) {
      __pyx_v_tol = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_tol == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 3638, __pyx_L3_error)
    } else {
      __pyx_v_tol = ((__pyx_t_8CmoArray_f64)1e-2);
    }
    __pyx_v_printUpdate = values[2];
    __pyx_v_extraParams = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("prd_redistribute", 0, 0, 4, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3638, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.prd_redistribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_44prd_redistribute(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_maxIter, __pyx_v_tol, __pyx_v_printUpdate, __pyx_v_extraParams);

  /* "Source/LwMiddleLayer.pyx":3638
 *         return update
 * 
 *     cpdef prd_redistribute(self, int maxIter=3, f64 tol=1e-2, printUpdate=None,             # <<<<<<<<<<<<<<
 *                            extraParams=None):
 *         '''
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_44prd_redistribute(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_v_maxIter, __pyx_t_8CmoArray_f64 __pyx_v_tol, PyObject *__pyx_v_printUpdate, PyObject *__pyx_v_extraParams) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_prd_redistribute __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("prd_redistribute", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2.__pyx_n = 4;
  __pyx_t_2.maxIter = __pyx_v_maxIter;
  __pyx_t_2.tol = __pyx_v_tol;
  __pyx_t_2.printUpdate = __pyx_v_printUpdate;
  __pyx_t_2.extraParams = __pyx_v_extraParams;
  __pyx_t_1 = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext->prd_redistribute(__pyx_v_self, 1, &__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3638, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.prd_redistribute", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3677
 *         return update
 * 
 *     cdef configure_hprd_coeffs(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_configure_hprd_coeffs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("configure_hprd_coeffs", 0);

  /* "Source/LwMiddleLayer.pyx":3681
 *         Internal.
 *         '''
 *         configure_hprd_coeffs(self.ctx)             # <<<<<<<<<<<<<<
 * 
 *     cpdef update_hprd_coeffs(self):
 */
  configure_hprd_coeffs(__pyx_v_self->ctx);

  /* "Source/LwMiddleLayer.pyx":3677
 *         return update
 * 
 *     cdef configure_hprd_coeffs(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Internal.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3683
 *         configure_hprd_coeffs(self.ctx)
 * 
 *     cpdef update_hprd_coeffs(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Update the values of the H-PRD coefficients, this needs to be called
 */

static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_47update_hprd_coeffs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_hprd_coeffs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_hprd_coeffs", 0);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overridden in Python */
  else if (unlikely((Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0) || (Py_TYPE(((PyObject *)__pyx_v_self))->tp_flags & (Py_TPFLAGS_IS_ABSTRACT | Py_TPFLAGS_HEAPTYPE)))) {
    #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    static PY_UINT64_T __pyx_tp_dict_version = __PYX_DICT_VERSION_INIT, __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
    if (unlikely(!__Pyx_object_dict_version_matches(((PyObject *)__pyx_v_self), __pyx_tp_dict_version, __pyx_obj_dict_version))) {
      PY_UINT64_T __pyx_type_dict_guard = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      #endif
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_update_hprd_coeffs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3683, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)(void*)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_47update_hprd_coeffs)) {
        __Pyx_XDECREF(__pyx_r);
        __Pyx_INCREF(__pyx_t_1);
        __pyx_t_3 = __pyx_t_1; __pyx_t_4 = NULL;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_2 = (__pyx_t_4) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3683, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_r = __pyx_t_2;
        __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L0;
      }
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
      __pyx_tp_dict_version = __Pyx_get_tp_dict_version(((PyObject *)__pyx_v_self));
      __pyx_obj_dict_version = __Pyx_get_object_dict_version(((PyObject *)__pyx_v_self));
      if (unlikely(__pyx_type_dict_guard != __pyx_tp_dict_version)) {
        __pyx_tp_dict_version = __pyx_obj_dict_version = __PYX_DICT_VERSION_INIT;
      }
      #endif
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      #if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
    }
    #endif
  }

  /* "Source/LwMiddleLayer.pyx":3689
 *         interpolation parameters are correct.
 *         '''
 *         self.configure_hprd_coeffs()             # <<<<<<<<<<<<<<
 *         # NOTE(cmo): configure_hprd_coeffs throws away all of the interpolation
 *         # stuff stored on each line, and allocates a new block for it, this
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->configure_hprd_coeffs(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3696
 *         # context. This is a bit wasteful, but at 8 threads it takes < 3 ms, vs
 *         # 500 ms+ for the coeffs on an average CaII + MgII case.
 *         self.update_threads()             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self->__pyx_vtab)->update_threads(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3696, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3683
 *         configure_hprd_coeffs(self.ctx)
 * 
 *     cpdef update_hprd_coeffs(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Update the values of the H-PRD coefficients, this needs to be called
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_hprd_coeffs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_47update_hprd_coeffs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_46update_hprd_coeffs[] = "\n        Update the values of the H-PRD coefficients, this needs to be called\n        if changes are made to the atmospheric structure to ensure that the\n        interpolation parameters are correct.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_47update_hprd_coeffs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_hprd_coeffs (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_46update_hprd_coeffs(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_46update_hprd_coeffs(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_hprd_coeffs", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_11lightweaver_10LwCompiled_9LwContext_update_hprd_coeffs(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3683, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.update_hprd_coeffs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3699
 * 
 *     @property
 *     def activeAtoms(self):             # <<<<<<<<<<<<<<
 *         '''
 *         All active computational atomic models (LwAtom).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_11activeAtoms_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_11activeAtoms_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_11activeAtoms___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_11activeAtoms___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":3703
 *         All active computational atomic models (LwAtom).
 *         '''
 *         return self.activeAtoms             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->activeAtoms);
  __pyx_r = __pyx_v_self->activeAtoms;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3699
 * 
 *     @property
 *     def activeAtoms(self):             # <<<<<<<<<<<<<<
 *         '''
 *         All active computational atomic models (LwAtom).
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3706
 * 
 *     @property
 *     def detailedAtoms(self):             # <<<<<<<<<<<<<<
 *         '''
 *         All detailed static computational atomic models (LwAtom).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_13detailedAtoms_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_13detailedAtoms_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_13detailedAtoms___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_13detailedAtoms___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":3710
 *         All detailed static computational atomic models (LwAtom).
 *         '''
 *         return self.detailedAtoms             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->detailedAtoms);
  __pyx_r = __pyx_v_self->detailedAtoms;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3706
 * 
 *     @property
 *     def detailedAtoms(self):             # <<<<<<<<<<<<<<
 *         '''
 *         All detailed static computational atomic models (LwAtom).
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3713
 * 
 *     @property
 *     def spect(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The spectrum storage object (LwSpectrum).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_5spect_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_5spect_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_5spect___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_5spect___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":3717
 *         The spectrum storage object (LwSpectrum).
 *         '''
 *         return self.spect             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->spect));
  __pyx_r = ((PyObject *)__pyx_v_self->spect);
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3713
 * 
 *     @property
 *     def spect(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The spectrum storage object (LwSpectrum).
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3720
 * 
 *     @property
 *     def atmos(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The atmospheric model storage object (LwAtmosphere).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_5atmos_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_5atmos_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_5atmos___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_5atmos___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":3724
 *         The atmospheric model storage object (LwAtmosphere).
 *         '''
 *         return self.atmos             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->atmos));
  __pyx_r = ((PyObject *)__pyx_v_self->atmos);
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3720
 * 
 *     @property
 *     def atmos(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The atmospheric model storage object (LwAtmosphere).
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3727
 * 
 *     @property
 *     def background(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The background storage object (LwBackground).
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_10background_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_10background_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_10background___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_10background___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":3731
 *         The background storage object (LwBackground).
 *         '''
 *         return self.background             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->background));
  __pyx_r = ((PyObject *)__pyx_v_self->background);
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3727
 * 
 *     @property
 *     def background(self):             # <<<<<<<<<<<<<<
 *         '''
 *         The background storage object (LwBackground).
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3734
 * 
 *     @property
 *     def depthData(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Configuration and storage for full depth-dependent data of large
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_9depthData_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_9depthData_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_9depthData___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_9depthData___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "Source/LwMiddleLayer.pyx":3739
 *         parameters (LwDepthData).
 *         '''
 *         return self.depthData             # <<<<<<<<<<<<<<
 * 
 *     def state_dict(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_self->depthData));
  __pyx_r = ((PyObject *)__pyx_v_self->depthData);
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3734
 * 
 *     @property
 *     def depthData(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Configuration and storage for full depth-dependent data of large
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3741
 *         return self.depthData
 * 
 *     def state_dict(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Return the state dictionary for the Context, which can be used to
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_49state_dict(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_48state_dict[] = "\n        Return the state dictionary for the Context, which can be used to\n        serialise the entire Context and/or reconstruct it.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_49state_dict(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("state_dict (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_48state_dict(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_48state_dict(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("state_dict", 0);

  /* "Source/LwMiddleLayer.pyx":3746
 *         serialise the entire Context and/or reconstruct it.
 *         '''
 *         return self.__getstate__()             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_getstate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3746, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3741
 *         return self.depthData
 * 
 *     def state_dict(self):             # <<<<<<<<<<<<<<
 *         '''
 *         Return the state dictionary for the Context, which can be used to
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.state_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3749
 * 
 *     @staticmethod
 *     def construct_from_state_dict_with(sd, atmos=None, spect=None, eqPops=None,             # <<<<<<<<<<<<<<
 *                                        ngOptions=None, initSol=None, conserveCharge=None,
 *                                        nrHOnly=None, hprd=None, preserveProfiles=False,
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_51construct_from_state_dict_with(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_50construct_from_state_dict_with[] = "\n        Construct a new Context informed by a state dictionary with changes\n        provided to this function. This function is primarily aimed at making\n        similar versions of a Context, as this can be duplicated much more\n        easily by `deepcopy` or `pickle.loads(pickle.dumps(ctx))`. For\n        example, wanting to replace the SpectrumConfiguration to run a\n        different set of active atoms in the same atmospheric model.\n        N.B. stateDict will not be deepcopied by this function -- do that\n        yourself if needed.\n\n        Parameters\n        ----------\n        sd : dict\n            The state dictionary, from Context.state_dict.\n        atmos : Atmosphere, optional\n            Atmospheric model to use instead of the one present in stateDict.\n        spect : SpectrumConfiguration, optional\n            Spectral configuration to use instead of the one present in\n            stateDict.\n        eqPops : SpeciesStateTable, optional\n            Species population object to use instead of the one present in\n            stateDict.\n        ngOptions : NgOptions, optional\n            Ng acceleration options to use.\n        initSol : InitialSolution, optional\n            Initial solution to use, only matters if `fromScratch` is True.\n        conserveCharge : bool, optional\n            Whether to conserve charge.\n        nrHOnly : bool, optional\n            Whether to only consider Hydrogen in charge conservation calculations.\n        hprd : bool, optional\n            Whether to use Hybrid-PRD.\n        preserveProfiles : bool, optional\n            Whether to copy the current line profiles, or compute new ones\n            (default: recompute).\n        fromScratch : bool, optional\n            Whether to construct the new Context, but not make any\n            modifications, such as copying profiles and rates.\n        backgroundProvider : BackgroundProvider, optional\n            The background package to use instead of the"" one present in\n            stateDict.\n\n        Returns\n        -------\n        ctx : Context\n            The new context object for the simulation.\n        ";
static PyMethodDef __pyx_mdef_11lightweaver_10LwCompiled_9LwContext_51construct_from_state_dict_with = {"construct_from_state_dict_with", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_51construct_from_state_dict_with, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_50construct_from_state_dict_with};
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_51construct_from_state_dict_with(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_sd = 0;
  PyObject *__pyx_v_atmos = 0;
  PyObject *__pyx_v_spect = 0;
  PyObject *__pyx_v_eqPops = 0;
  PyObject *__pyx_v_ngOptions = 0;
  PyObject *__pyx_v_initSol = 0;
  PyObject *__pyx_v_conserveCharge = 0;
  PyObject *__pyx_v_nrHOnly = 0;
  PyObject *__pyx_v_hprd = 0;
  PyObject *__pyx_v_preserveProfiles = 0;
  PyObject *__pyx_v_fromScratch = 0;
  PyObject *__pyx_v_backgroundProvider = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("construct_from_state_dict_with (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_sd,&__pyx_n_s_atmos,&__pyx_n_s_spect,&__pyx_n_s_eqPops,&__pyx_n_s_ngOptions,&__pyx_n_s_initSol,&__pyx_n_s_conserveCharge,&__pyx_n_s_nrHOnly,&__pyx_n_s_hprd,&__pyx_n_s_preserveProfiles,&__pyx_n_s_fromScratch,&__pyx_n_s_backgroundProvider,0};
    PyObject* values[12] = {0,0,0,0,0,0,0,0,0,0,0,0};
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":3750
 *     @staticmethod
 *     def construct_from_state_dict_with(sd, atmos=None, spect=None, eqPops=None,
 *                                        ngOptions=None, initSol=None, conserveCharge=None,             # <<<<<<<<<<<<<<
 *                                        nrHOnly=None, hprd=None, preserveProfiles=False,
 *                                        fromScratch=False, backgroundProvider=None):
 */
    values[4] = ((PyObject *)Py_None);
    values[5] = ((PyObject *)Py_None);
    values[6] = ((PyObject *)Py_None);

    /* "Source/LwMiddleLayer.pyx":3751
 *     def construct_from_state_dict_with(sd, atmos=None, spect=None, eqPops=None,
 *                                        ngOptions=None, initSol=None, conserveCharge=None,
 *                                        nrHOnly=None, hprd=None, preserveProfiles=False,             # <<<<<<<<<<<<<<
 *                                        fromScratch=False, backgroundProvider=None):
 *         """
 */
    values[7] = ((PyObject *)Py_None);
    values[8] = ((PyObject *)Py_None);
    values[9] = ((PyObject *)Py_False);

    /* "Source/LwMiddleLayer.pyx":3752
 *                                        ngOptions=None, initSol=None, conserveCharge=None,
 *                                        nrHOnly=None, hprd=None, preserveProfiles=False,
 *                                        fromScratch=False, backgroundProvider=None):             # <<<<<<<<<<<<<<
 *         """
 *         Construct a new Context informed by a state dictionary with changes
 */
    values[10] = ((PyObject *)Py_False);
    values[11] = ((PyObject *)Py_None);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_sd)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_atmos);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_spect);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_eqPops);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_ngOptions);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_initSol);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_conserveCharge);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_nrHOnly);
          if (value) { values[7] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  8:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_hprd);
          if (value) { values[8] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  9:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_preserveProfiles);
          if (value) { values[9] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 10:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_fromScratch);
          if (value) { values[10] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case 11:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_backgroundProvider);
          if (value) { values[11] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "construct_from_state_dict_with") < 0)) __PYX_ERR(0, 3749, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case 12: values[11] = PyTuple_GET_ITEM(__pyx_args, 11);
        CYTHON_FALLTHROUGH;
        case 11: values[10] = PyTuple_GET_ITEM(__pyx_args, 10);
        CYTHON_FALLTHROUGH;
        case 10: values[9] = PyTuple_GET_ITEM(__pyx_args, 9);
        CYTHON_FALLTHROUGH;
        case  9: values[8] = PyTuple_GET_ITEM(__pyx_args, 8);
        CYTHON_FALLTHROUGH;
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_sd = values[0];
    __pyx_v_atmos = values[1];
    __pyx_v_spect = values[2];
    __pyx_v_eqPops = values[3];
    __pyx_v_ngOptions = values[4];
    __pyx_v_initSol = values[5];
    __pyx_v_conserveCharge = values[6];
    __pyx_v_nrHOnly = values[7];
    __pyx_v_hprd = values[8];
    __pyx_v_preserveProfiles = values[9];
    __pyx_v_fromScratch = values[10];
    __pyx_v_backgroundProvider = values[11];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("construct_from_state_dict_with", 0, 1, 12, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3749, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.construct_from_state_dict_with", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_50construct_from_state_dict_with(__pyx_v_sd, __pyx_v_atmos, __pyx_v_spect, __pyx_v_eqPops, __pyx_v_ngOptions, __pyx_v_initSol, __pyx_v_conserveCharge, __pyx_v_nrHOnly, __pyx_v_hprd, __pyx_v_preserveProfiles, __pyx_v_fromScratch, __pyx_v_backgroundProvider);

  /* "Source/LwMiddleLayer.pyx":3749
 * 
 *     @staticmethod
 *     def construct_from_state_dict_with(sd, atmos=None, spect=None, eqPops=None,             # <<<<<<<<<<<<<<
 *                                        ngOptions=None, initSol=None, conserveCharge=None,
 *                                        nrHOnly=None, hprd=None, preserveProfiles=False,
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_50construct_from_state_dict_with(PyObject *__pyx_v_sd, PyObject *__pyx_v_atmos, PyObject *__pyx_v_spect, PyObject *__pyx_v_eqPops, PyObject *__pyx_v_ngOptions, PyObject *__pyx_v_initSol, PyObject *__pyx_v_conserveCharge, PyObject *__pyx_v_nrHOnly, PyObject *__pyx_v_hprd, PyObject *__pyx_v_preserveProfiles, PyObject *__pyx_v_fromScratch, PyObject *__pyx_v_backgroundProvider) {
  PyObject *__pyx_v_args = NULL;
  PyObject *__pyx_v_wavelengthSubset = NULL;
  PyObject *__pyx_v_prevSpect = NULL;
  PyObject *__pyx_v_prevInitSol = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_ctx = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *__pyx_v_a = 0;
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_v_levels = NULL;
  PyObject *__pyx_v_trans = NULL;
  int __pyx_v_popsOnly;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("construct_from_state_dict_with", 0);
  __Pyx_INCREF(__pyx_v_sd);

  /* "Source/LwMiddleLayer.pyx":3800
 *             The new context object for the simulation.
 *         """
 *         sd = copy(sd)             # <<<<<<<<<<<<<<
 *         sd['kwargs'] = copy(sd['kwargs'])
 *         args = sd['kwargs']
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_sd) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_sd);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF_SET(__pyx_v_sd, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3801
 *         """
 *         sd = copy(sd)
 *         sd['kwargs'] = copy(sd['kwargs'])             # <<<<<<<<<<<<<<
 *         args = sd['kwargs']
 *         wavelengthSubset = False
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_sd, __pyx_n_u_kwargs); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3801, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (unlikely(PyObject_SetItem(__pyx_v_sd, __pyx_n_u_kwargs, __pyx_t_1) < 0)) __PYX_ERR(0, 3801, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3802
 *         sd = copy(sd)
 *         sd['kwargs'] = copy(sd['kwargs'])
 *         args = sd['kwargs']             # <<<<<<<<<<<<<<
 *         wavelengthSubset = False
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_sd, __pyx_n_u_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_args = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3803
 *         sd['kwargs'] = copy(sd['kwargs'])
 *         args = sd['kwargs']
 *         wavelengthSubset = False             # <<<<<<<<<<<<<<
 * 
 *         if ngOptions is not None:
 */
  __Pyx_INCREF(Py_False);
  __pyx_v_wavelengthSubset = Py_False;

  /* "Source/LwMiddleLayer.pyx":3805
 *         wavelengthSubset = False
 * 
 *         if ngOptions is not None:             # <<<<<<<<<<<<<<
 *             args['ngOptions'] = ngOptions
 *         if initSol is not None:
 */
  __pyx_t_5 = (__pyx_v_ngOptions != Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3806
 * 
 *         if ngOptions is not None:
 *             args['ngOptions'] = ngOptions             # <<<<<<<<<<<<<<
 *         if initSol is not None:
 *             args['initSol'] = initSol
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_ngOptions, __pyx_v_ngOptions) < 0)) __PYX_ERR(0, 3806, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3805
 *         wavelengthSubset = False
 * 
 *         if ngOptions is not None:             # <<<<<<<<<<<<<<
 *             args['ngOptions'] = ngOptions
 *         if initSol is not None:
 */
  }

  /* "Source/LwMiddleLayer.pyx":3807
 *         if ngOptions is not None:
 *             args['ngOptions'] = ngOptions
 *         if initSol is not None:             # <<<<<<<<<<<<<<
 *             args['initSol'] = initSol
 *         if conserveCharge is not None:
 */
  __pyx_t_6 = (__pyx_v_initSol != Py_None);
  __pyx_t_5 = (__pyx_t_6 != 0);
  if (__pyx_t_5) {

    /* "Source/LwMiddleLayer.pyx":3808
 *             args['ngOptions'] = ngOptions
 *         if initSol is not None:
 *             args['initSol'] = initSol             # <<<<<<<<<<<<<<
 *         if conserveCharge is not None:
 *             args['conserveCharge'] = conserveCharge
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_initSol, __pyx_v_initSol) < 0)) __PYX_ERR(0, 3808, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3807
 *         if ngOptions is not None:
 *             args['ngOptions'] = ngOptions
 *         if initSol is not None:             # <<<<<<<<<<<<<<
 *             args['initSol'] = initSol
 *         if conserveCharge is not None:
 */
  }

  /* "Source/LwMiddleLayer.pyx":3809
 *         if initSol is not None:
 *             args['initSol'] = initSol
 *         if conserveCharge is not None:             # <<<<<<<<<<<<<<
 *             args['conserveCharge'] = conserveCharge
 *         if nrHOnly is not None:
 */
  __pyx_t_5 = (__pyx_v_conserveCharge != Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3810
 *             args['initSol'] = initSol
 *         if conserveCharge is not None:
 *             args['conserveCharge'] = conserveCharge             # <<<<<<<<<<<<<<
 *         if nrHOnly is not None:
 *             args['nrHOnly'] = nrHOnly
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_conserveCharge, __pyx_v_conserveCharge) < 0)) __PYX_ERR(0, 3810, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3809
 *         if initSol is not None:
 *             args['initSol'] = initSol
 *         if conserveCharge is not None:             # <<<<<<<<<<<<<<
 *             args['conserveCharge'] = conserveCharge
 *         if nrHOnly is not None:
 */
  }

  /* "Source/LwMiddleLayer.pyx":3811
 *         if conserveCharge is not None:
 *             args['conserveCharge'] = conserveCharge
 *         if nrHOnly is not None:             # <<<<<<<<<<<<<<
 *             args['nrHOnly'] = nrHOnly
 *         if hprd is not None:
 */
  __pyx_t_6 = (__pyx_v_nrHOnly != Py_None);
  __pyx_t_5 = (__pyx_t_6 != 0);
  if (__pyx_t_5) {

    /* "Source/LwMiddleLayer.pyx":3812
 *             args['conserveCharge'] = conserveCharge
 *         if nrHOnly is not None:
 *             args['nrHOnly'] = nrHOnly             # <<<<<<<<<<<<<<
 *         if hprd is not None:
 *             args['hprd'] = hprd
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_nrHOnly, __pyx_v_nrHOnly) < 0)) __PYX_ERR(0, 3812, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3811
 *         if conserveCharge is not None:
 *             args['conserveCharge'] = conserveCharge
 *         if nrHOnly is not None:             # <<<<<<<<<<<<<<
 *             args['nrHOnly'] = nrHOnly
 *         if hprd is not None:
 */
  }

  /* "Source/LwMiddleLayer.pyx":3813
 *         if nrHOnly is not None:
 *             args['nrHOnly'] = nrHOnly
 *         if hprd is not None:             # <<<<<<<<<<<<<<
 *             args['hprd'] = hprd
 *         if backgroundProvider is not None:
 */
  __pyx_t_5 = (__pyx_v_hprd != Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3814
 *             args['nrHOnly'] = nrHOnly
 *         if hprd is not None:
 *             args['hprd'] = hprd             # <<<<<<<<<<<<<<
 *         if backgroundProvider is not None:
 *             args['backgroundProvider'] = backgroundProvider
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_hprd, __pyx_v_hprd) < 0)) __PYX_ERR(0, 3814, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3813
 *         if nrHOnly is not None:
 *             args['nrHOnly'] = nrHOnly
 *         if hprd is not None:             # <<<<<<<<<<<<<<
 *             args['hprd'] = hprd
 *         if backgroundProvider is not None:
 */
  }

  /* "Source/LwMiddleLayer.pyx":3815
 *         if hprd is not None:
 *             args['hprd'] = hprd
 *         if backgroundProvider is not None:             # <<<<<<<<<<<<<<
 *             args['backgroundProvider'] = backgroundProvider
 * 
 */
  __pyx_t_6 = (__pyx_v_backgroundProvider != Py_None);
  __pyx_t_5 = (__pyx_t_6 != 0);
  if (__pyx_t_5) {

    /* "Source/LwMiddleLayer.pyx":3816
 *             args['hprd'] = hprd
 *         if backgroundProvider is not None:
 *             args['backgroundProvider'] = backgroundProvider             # <<<<<<<<<<<<<<
 * 
 *         if atmos is not None:
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_backgroundProvider, __pyx_v_backgroundProvider) < 0)) __PYX_ERR(0, 3816, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3815
 *         if hprd is not None:
 *             args['hprd'] = hprd
 *         if backgroundProvider is not None:             # <<<<<<<<<<<<<<
 *             args['backgroundProvider'] = backgroundProvider
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3818
 *             args['backgroundProvider'] = backgroundProvider
 * 
 *         if atmos is not None:             # <<<<<<<<<<<<<<
 *             args['atmos'] = atmos
 *             if not eqPops:
 */
  __pyx_t_5 = (__pyx_v_atmos != Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3819
 * 
 *         if atmos is not None:
 *             args['atmos'] = atmos             # <<<<<<<<<<<<<<
 *             if not eqPops:
 *                 # TODO(cmo); This should also probably recompute ICE
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_atmos, __pyx_v_atmos) < 0)) __PYX_ERR(0, 3819, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3820
 *         if atmos is not None:
 *             args['atmos'] = atmos
 *             if not eqPops:             # <<<<<<<<<<<<<<
 *                 # TODO(cmo); This should also probably recompute ICE
 *                 args['eqPops'] = copy(args['eqPops'])
 */
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_eqPops); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 3820, __pyx_L1_error)
    __pyx_t_5 = ((!__pyx_t_6) != 0);
    if (__pyx_t_5) {

      /* "Source/LwMiddleLayer.pyx":3822
 *             if not eqPops:
 *                 # TODO(cmo); This should also probably recompute ICE
 *                 args['eqPops'] = copy(args['eqPops'])             # <<<<<<<<<<<<<<
 *                 args['eqPops'].atmos = atmos
 *                 args['eqPops'].update_lte_atoms_Hmin_pops(args['atmos'], conserveCharge=args['conserveCharge'])
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_args, __pyx_n_u_eqPops); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
        }
      }
      __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3822, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_eqPops, __pyx_t_1) < 0)) __PYX_ERR(0, 3822, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":3823
 *                 # TODO(cmo); This should also probably recompute ICE
 *                 args['eqPops'] = copy(args['eqPops'])
 *                 args['eqPops'].atmos = atmos             # <<<<<<<<<<<<<<
 *                 args['eqPops'].update_lte_atoms_Hmin_pops(args['atmos'], conserveCharge=args['conserveCharge'])
 *         if eqPops is not None:
 */
      __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_args, __pyx_n_u_eqPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3823, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      if (__Pyx_PyObject_SetAttrStr(__pyx_t_1, __pyx_n_s_atmos, __pyx_v_atmos) < 0) __PYX_ERR(0, 3823, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":3824
 *                 args['eqPops'] = copy(args['eqPops'])
 *                 args['eqPops'].atmos = atmos
 *                 args['eqPops'].update_lte_atoms_Hmin_pops(args['atmos'], conserveCharge=args['conserveCharge'])             # <<<<<<<<<<<<<<
 *         if eqPops is not None:
 *             args['eqPops'] = eqPops
 */
      __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_args, __pyx_n_u_eqPops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3824, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_update_lte_atoms_Hmin_pops); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3824, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_args, __pyx_n_u_atmos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3824, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3824, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3824, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_args, __pyx_n_u_conserveCharge); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3824, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_conserveCharge, __pyx_t_4) < 0) __PYX_ERR(0, 3824, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3824, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "Source/LwMiddleLayer.pyx":3820
 *         if atmos is not None:
 *             args['atmos'] = atmos
 *             if not eqPops:             # <<<<<<<<<<<<<<
 *                 # TODO(cmo); This should also probably recompute ICE
 *                 args['eqPops'] = copy(args['eqPops'])
 */
    }

    /* "Source/LwMiddleLayer.pyx":3818
 *             args['backgroundProvider'] = backgroundProvider
 * 
 *         if atmos is not None:             # <<<<<<<<<<<<<<
 *             args['atmos'] = atmos
 *             if not eqPops:
 */
  }

  /* "Source/LwMiddleLayer.pyx":3825
 *                 args['eqPops'].atmos = atmos
 *                 args['eqPops'].update_lte_atoms_Hmin_pops(args['atmos'], conserveCharge=args['conserveCharge'])
 *         if eqPops is not None:             # <<<<<<<<<<<<<<
 *             args['eqPops'] = eqPops
 *         if spect is not None:
 */
  __pyx_t_5 = (__pyx_v_eqPops != Py_None);
  __pyx_t_6 = (__pyx_t_5 != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3826
 *                 args['eqPops'].update_lte_atoms_Hmin_pops(args['atmos'], conserveCharge=args['conserveCharge'])
 *         if eqPops is not None:
 *             args['eqPops'] = eqPops             # <<<<<<<<<<<<<<
 *         if spect is not None:
 *             prevSpect = args['spect']
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_eqPops, __pyx_v_eqPops) < 0)) __PYX_ERR(0, 3826, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3825
 *                 args['eqPops'].atmos = atmos
 *                 args['eqPops'].update_lte_atoms_Hmin_pops(args['atmos'], conserveCharge=args['conserveCharge'])
 *         if eqPops is not None:             # <<<<<<<<<<<<<<
 *             args['eqPops'] = eqPops
 *         if spect is not None:
 */
  }

  /* "Source/LwMiddleLayer.pyx":3827
 *         if eqPops is not None:
 *             args['eqPops'] = eqPops
 *         if spect is not None:             # <<<<<<<<<<<<<<
 *             prevSpect = args['spect']
 *             args['spect'] = spect
 */
  __pyx_t_6 = (__pyx_v_spect != Py_None);
  __pyx_t_5 = (__pyx_t_6 != 0);
  if (__pyx_t_5) {

    /* "Source/LwMiddleLayer.pyx":3828
 *             args['eqPops'] = eqPops
 *         if spect is not None:
 *             prevSpect = args['spect']             # <<<<<<<<<<<<<<
 *             args['spect'] = spect
 *             wavelengthSubset = spect.wavelength[0] >= prevSpect.wavelength[0] and spect.wavelength[-1] <= prevSpect.wavelength[-1]
 */
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_args, __pyx_n_u_spect); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3828, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_prevSpect = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3829
 *         if spect is not None:
 *             prevSpect = args['spect']
 *             args['spect'] = spect             # <<<<<<<<<<<<<<
 *             wavelengthSubset = spect.wavelength[0] >= prevSpect.wavelength[0] and spect.wavelength[-1] <= prevSpect.wavelength[-1]
 *         if not fromScratch:
 */
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_spect, __pyx_v_spect) < 0)) __PYX_ERR(0, 3829, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3830
 *             prevSpect = args['spect']
 *             args['spect'] = spect
 *             wavelengthSubset = spect.wavelength[0] >= prevSpect.wavelength[0] and spect.wavelength[-1] <= prevSpect.wavelength[-1]             # <<<<<<<<<<<<<<
 *         if not fromScratch:
 *             prevInitSol = args['initSol']
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_prevSpect, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_3, __pyx_t_2, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 3830, __pyx_L1_error)
    if (__pyx_t_5) {
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_4 = __pyx_t_1;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L13_bool_binop_done;
    }
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_spect, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_1, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_prevSpect, __pyx_n_s_wavelength); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_RichCompare(__pyx_t_2, __pyx_t_3, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3830, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_t_1);
    __pyx_t_4 = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_L13_bool_binop_done:;
    __Pyx_DECREF_SET(__pyx_v_wavelengthSubset, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3827
 *         if eqPops is not None:
 *             args['eqPops'] = eqPops
 *         if spect is not None:             # <<<<<<<<<<<<<<
 *             prevSpect = args['spect']
 *             args['spect'] = spect
 */
  }

  /* "Source/LwMiddleLayer.pyx":3831
 *             args['spect'] = spect
 *             wavelengthSubset = spect.wavelength[0] >= prevSpect.wavelength[0] and spect.wavelength[-1] <= prevSpect.wavelength[-1]
 *         if not fromScratch:             # <<<<<<<<<<<<<<
 *             prevInitSol = args['initSol']
 *             args['initSol'] = InitialSolution.Lte
 */
  __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_fromScratch); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 3831, __pyx_L1_error)
  __pyx_t_6 = ((!__pyx_t_5) != 0);
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3832
 *             wavelengthSubset = spect.wavelength[0] >= prevSpect.wavelength[0] and spect.wavelength[-1] <= prevSpect.wavelength[-1]
 *         if not fromScratch:
 *             prevInitSol = args['initSol']             # <<<<<<<<<<<<<<
 *             args['initSol'] = InitialSolution.Lte
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_args, __pyx_n_u_initSol); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3832, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_v_prevInitSol = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3833
 *         if not fromScratch:
 *             prevInitSol = args['initSol']
 *             args['initSol'] = InitialSolution.Lte             # <<<<<<<<<<<<<<
 * 
 *         ctx = LwContext(**args)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_InitialSolution); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_Lte); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(PyObject_SetItem(__pyx_v_args, __pyx_n_u_initSol, __pyx_t_1) < 0)) __PYX_ERR(0, 3833, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3831
 *             args['spect'] = spect
 *             wavelengthSubset = spect.wavelength[0] >= prevSpect.wavelength[0] and spect.wavelength[-1] <= prevSpect.wavelength[-1]
 *         if not fromScratch:             # <<<<<<<<<<<<<<
 *             prevInitSol = args['initSol']
 *             args['initSol'] = InitialSolution.Lte
 */
  }

  /* "Source/LwMiddleLayer.pyx":3835
 *             args['initSol'] = InitialSolution.Lte
 * 
 *         ctx = LwContext(**args)             # <<<<<<<<<<<<<<
 * 
 *         if fromScratch:
 */
  if (unlikely(__pyx_v_args == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
    __PYX_ERR(0, 3835, __pyx_L1_error)
  }
  if (likely(PyDict_CheckExact(__pyx_v_args))) {
    __pyx_t_1 = PyDict_Copy(__pyx_v_args); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3835, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  } else {
    __pyx_t_1 = PyObject_CallFunctionObjArgs((PyObject*)&PyDict_Type, __pyx_v_args, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3835, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
  }
  __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwContext), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3835, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_ctx = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":3837
 *         ctx = LwContext(**args)
 * 
 *         if fromScratch:             # <<<<<<<<<<<<<<
 *             return ctx
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_fromScratch); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 3837, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3838
 * 
 *         if fromScratch:
 *             return ctx             # <<<<<<<<<<<<<<
 * 
 *         if wavelengthSubset:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_ctx));
    __pyx_r = ((PyObject *)__pyx_v_ctx);
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":3837
 *         ctx = LwContext(**args)
 * 
 *         if fromScratch:             # <<<<<<<<<<<<<<
 *             return ctx
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3840
 *             return ctx
 * 
 *         if wavelengthSubset:             # <<<<<<<<<<<<<<
 *             ctx.spect.interp_J_from_state(sd['spect'])
 * 
 */
  __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_wavelengthSubset); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 3840, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "Source/LwMiddleLayer.pyx":3841
 * 
 *         if wavelengthSubset:
 *             ctx.spect.interp_J_from_state(sd['spect'])             # <<<<<<<<<<<<<<
 * 
 *         # TODO(cmo): I don't really like the way we use __getstate__ here, for
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_ctx->spect), __pyx_n_s_interp_J_from_state); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3841, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_sd, __pyx_n_u_spect); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3841, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3841, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3840
 *             return ctx
 * 
 *         if wavelengthSubset:             # <<<<<<<<<<<<<<
 *             ctx.spect.interp_J_from_state(sd['spect'])
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":3847
 *         # negligble...
 *         cdef LwAtom a
 *         for a in ctx.activeAtoms:             # <<<<<<<<<<<<<<
 *             for s in sd['activeAtoms']:
 *                 if a.atomicModel.element == s.atomicModel.element:
 */
  if (unlikely(__pyx_v_ctx->activeAtoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 3847, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_v_ctx->activeAtoms; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_1 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_1); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 3847, __pyx_L1_error)
    #else
    __pyx_t_1 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3847, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    #endif
    if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3847, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_a, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_1));
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3848
 *         cdef LwAtom a
 *         for a in ctx.activeAtoms:
 *             for s in sd['activeAtoms']:             # <<<<<<<<<<<<<<
 *                 if a.atomicModel.element == s.atomicModel.element:
 *                     levels = a.atomicModel.levels == s.atomicModel.levels
 */
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_sd, __pyx_n_u_activeAtoms); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3848, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3848, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 3848, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 3848, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3848, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_1); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 3848, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3848, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_9(__pyx_t_3);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 3848, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_s, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":3849
 *         for a in ctx.activeAtoms:
 *             for s in sd['activeAtoms']:
 *                 if a.atomicModel.element == s.atomicModel.element:             # <<<<<<<<<<<<<<
 *                     levels = a.atomicModel.levels == s.atomicModel.levels
 *                     if not levels:
 */
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_a->atomicModel, __pyx_n_s_element); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3849, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_atomicModel); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3849, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_element); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3849, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_t_10, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3849, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 3849, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_6) {

        /* "Source/LwMiddleLayer.pyx":3850
 *             for s in sd['activeAtoms']:
 *                 if a.atomicModel.element == s.atomicModel.element:
 *                     levels = a.atomicModel.levels == s.atomicModel.levels             # <<<<<<<<<<<<<<
 *                     if not levels:
 *                         break
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_a->atomicModel, __pyx_n_s_levels); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3850, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_atomicModel); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3850, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_levels); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3850, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = PyObject_RichCompare(__pyx_t_2, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3850, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_v_levels, __pyx_t_10);
        __pyx_t_10 = 0;

        /* "Source/LwMiddleLayer.pyx":3851
 *                 if a.atomicModel.element == s.atomicModel.element:
 *                     levels = a.atomicModel.levels == s.atomicModel.levels
 *                     if not levels:             # <<<<<<<<<<<<<<
 *                         break
 *                     trans = a.atomicModel.lines == s.atomicModel.lines
 */
        __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_v_levels); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 3851, __pyx_L1_error)
        __pyx_t_5 = ((!__pyx_t_6) != 0);
        if (__pyx_t_5) {

          /* "Source/LwMiddleLayer.pyx":3852
 *                     levels = a.atomicModel.levels == s.atomicModel.levels
 *                     if not levels:
 *                         break             # <<<<<<<<<<<<<<
 *                     trans = a.atomicModel.lines == s.atomicModel.lines
 *                     trans = trans and a.atomicModel.continua == s.atomicModel.continua
 */
          goto __pyx_L21_break;

          /* "Source/LwMiddleLayer.pyx":3851
 *                 if a.atomicModel.element == s.atomicModel.element:
 *                     levels = a.atomicModel.levels == s.atomicModel.levels
 *                     if not levels:             # <<<<<<<<<<<<<<
 *                         break
 *                     trans = a.atomicModel.lines == s.atomicModel.lines
 */
        }

        /* "Source/LwMiddleLayer.pyx":3853
 *                     if not levels:
 *                         break
 *                     trans = a.atomicModel.lines == s.atomicModel.lines             # <<<<<<<<<<<<<<
 *                     trans = trans and a.atomicModel.continua == s.atomicModel.continua
 *                     popsOnly = False
 */
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_a->atomicModel, __pyx_n_s_lines); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3853, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_atomicModel); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3853, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_lines); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3853, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __pyx_t_1 = PyObject_RichCompare(__pyx_t_10, __pyx_t_2, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3853, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_trans, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "Source/LwMiddleLayer.pyx":3854
 *                         break
 *                     trans = a.atomicModel.lines == s.atomicModel.lines
 *                     trans = trans and a.atomicModel.continua == s.atomicModel.continua             # <<<<<<<<<<<<<<
 *                     popsOnly = False
 *                     if not trans:
 */
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_trans); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 3854, __pyx_L1_error)
        if (__pyx_t_5) {
        } else {
          __Pyx_INCREF(__pyx_v_trans);
          __pyx_t_1 = __pyx_v_trans;
          goto __pyx_L24_bool_binop_done;
        }
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_a->atomicModel, __pyx_n_s_continua); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3854, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_atomicModel); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3854, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_continua); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 3854, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = PyObject_RichCompare(__pyx_t_2, __pyx_t_11, Py_EQ); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3854, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_INCREF(__pyx_t_10);
        __pyx_t_1 = __pyx_t_10;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_L24_bool_binop_done:;
        __Pyx_DECREF_SET(__pyx_v_trans, __pyx_t_1);
        __pyx_t_1 = 0;

        /* "Source/LwMiddleLayer.pyx":3855
 *                     trans = a.atomicModel.lines == s.atomicModel.lines
 *                     trans = trans and a.atomicModel.continua == s.atomicModel.continua
 *                     popsOnly = False             # <<<<<<<<<<<<<<
 *                     if not trans:
 *                         popsOnly = True
 */
        __pyx_v_popsOnly = 0;

        /* "Source/LwMiddleLayer.pyx":3856
 *                     trans = trans and a.atomicModel.continua == s.atomicModel.continua
 *                     popsOnly = False
 *                     if not trans:             # <<<<<<<<<<<<<<
 *                         popsOnly = True
 *                     a.load_pops_rates_prd_from_state(s.__getstate__(), popsOnly=popsOnly, preserveProfiles=preserveProfiles)
 */
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_v_trans); if (unlikely(__pyx_t_5 < 0)) __PYX_ERR(0, 3856, __pyx_L1_error)
        __pyx_t_6 = ((!__pyx_t_5) != 0);
        if (__pyx_t_6) {

          /* "Source/LwMiddleLayer.pyx":3857
 *                     popsOnly = False
 *                     if not trans:
 *                         popsOnly = True             # <<<<<<<<<<<<<<
 *                     a.load_pops_rates_prd_from_state(s.__getstate__(), popsOnly=popsOnly, preserveProfiles=preserveProfiles)
 *                     break
 */
          __pyx_v_popsOnly = 1;

          /* "Source/LwMiddleLayer.pyx":3856
 *                     trans = trans and a.atomicModel.continua == s.atomicModel.continua
 *                     popsOnly = False
 *                     if not trans:             # <<<<<<<<<<<<<<
 *                         popsOnly = True
 *                     a.load_pops_rates_prd_from_state(s.__getstate__(), popsOnly=popsOnly, preserveProfiles=preserveProfiles)
 */
        }

        /* "Source/LwMiddleLayer.pyx":3858
 *                     if not trans:
 *                         popsOnly = True
 *                     a.load_pops_rates_prd_from_state(s.__getstate__(), popsOnly=popsOnly, preserveProfiles=preserveProfiles)             # <<<<<<<<<<<<<<
 *                     break
 *             else:
 */
        __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_a), __pyx_n_s_load_pops_rates_prd_from_state); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3858, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_getstate); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 3858, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_11))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_11);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_11, function);
          }
        }
        __pyx_t_10 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_11, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_11);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3858, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = PyTuple_New(1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 3858, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_GIVEREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_10);
        __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3858, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_popsOnly); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3858, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_popsOnly, __pyx_t_2) < 0) __PYX_ERR(0, 3858, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (PyDict_SetItem(__pyx_t_10, __pyx_n_s_preserveProfiles, __pyx_v_preserveProfiles) < 0) __PYX_ERR(0, 3858, __pyx_L1_error)
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_11, __pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3858, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":3859
 *                         popsOnly = True
 *                     a.load_pops_rates_prd_from_state(s.__getstate__(), popsOnly=popsOnly, preserveProfiles=preserveProfiles)
 *                     break             # <<<<<<<<<<<<<<
 *             else:
 *                 if prevInitSol == InitialSolution.EscapeProbability:
 */
        goto __pyx_L21_break;

        /* "Source/LwMiddleLayer.pyx":3849
 *         for a in ctx.activeAtoms:
 *             for s in sd['activeAtoms']:
 *                 if a.atomicModel.element == s.atomicModel.element:             # <<<<<<<<<<<<<<
 *                     levels = a.atomicModel.levels == s.atomicModel.levels
 *                     if not levels:
 */
      }

      /* "Source/LwMiddleLayer.pyx":3848
 *         cdef LwAtom a
 *         for a in ctx.activeAtoms:
 *             for s in sd['activeAtoms']:             # <<<<<<<<<<<<<<
 *                 if a.atomicModel.element == s.atomicModel.element:
 *                     levels = a.atomicModel.levels == s.atomicModel.levels
 */
    }
    /*else*/ {

      /* "Source/LwMiddleLayer.pyx":3861
 *                     break
 *             else:
 *                 if prevInitSol == InitialSolution.EscapeProbability:             # <<<<<<<<<<<<<<
 *                     a.set_pops_escape_probability(ctx.atmos, ctx.background, conserveCharge=ctx.conserveCharge)
 * 
 */
      if (unlikely(!__pyx_v_prevInitSol)) { __Pyx_RaiseUnboundLocalError("prevInitSol"); __PYX_ERR(0, 3861, __pyx_L1_error) }
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_InitialSolution); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3861, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_EscapeProbability); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3861, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_RichCompare(__pyx_v_prevInitSol, __pyx_t_10, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3861, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 3861, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_6) {

        /* "Source/LwMiddleLayer.pyx":3862
 *             else:
 *                 if prevInitSol == InitialSolution.EscapeProbability:
 *                     a.set_pops_escape_probability(ctx.atmos, ctx.background, conserveCharge=ctx.conserveCharge)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_2 = ((PyObject *)__pyx_v_ctx->atmos);
        __Pyx_INCREF(__pyx_t_2);
        __pyx_t_10 = ((PyObject *)__pyx_v_ctx->background);
        __Pyx_INCREF(__pyx_t_10);
        __pyx_t_11 = __Pyx_PyBool_FromLong(__pyx_v_ctx->conserveCharge); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 3862, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_12.__pyx_n = 1;
        __pyx_t_12.conserveCharge = __pyx_t_11;
        __pyx_t_1 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwAtom *)__pyx_v_a->__pyx_vtab)->set_pops_escape_probability(__pyx_v_a, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_2), ((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)__pyx_t_10), 0, &__pyx_t_12); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3862, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "Source/LwMiddleLayer.pyx":3861
 *                     break
 *             else:
 *                 if prevInitSol == InitialSolution.EscapeProbability:             # <<<<<<<<<<<<<<
 *                     a.set_pops_escape_probability(ctx.atmos, ctx.background, conserveCharge=ctx.conserveCharge)
 * 
 */
      }
    }

    /* "Source/LwMiddleLayer.pyx":3848
 *         cdef LwAtom a
 *         for a in ctx.activeAtoms:
 *             for s in sd['activeAtoms']:             # <<<<<<<<<<<<<<
 *                 if a.atomicModel.element == s.atomicModel.element:
 *                     levels = a.atomicModel.levels == s.atomicModel.levels
 */
    __pyx_L21_break:;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3847
 *         # negligble...
 *         cdef LwAtom a
 *         for a in ctx.activeAtoms:             # <<<<<<<<<<<<<<
 *             for s in sd['activeAtoms']:
 *                 if a.atomicModel.element == s.atomicModel.element:
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":3865
 * 
 * 
 *         for a in ctx.detailedAtoms:             # <<<<<<<<<<<<<<
 *             for s in sd['detailedAtoms']:
 *                 if a.atomicModel == s.atomicModel:
 */
  if (unlikely(__pyx_v_ctx->detailedAtoms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 3865, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_v_ctx->detailedAtoms; __Pyx_INCREF(__pyx_t_4); __pyx_t_7 = 0;
  for (;;) {
    if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_4)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(0, 3865, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3865, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_11lightweaver_10LwCompiled_LwAtom))))) __PYX_ERR(0, 3865, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_a, ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3866
 * 
 *         for a in ctx.detailedAtoms:
 *             for s in sd['detailedAtoms']:             # <<<<<<<<<<<<<<
 *                 if a.atomicModel == s.atomicModel:
 *                     a.load_pops_rates_prd_from_state(s.__getstate__())
 */
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_sd, __pyx_n_u_detailedAtoms); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3866, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_1 = __pyx_t_3; __Pyx_INCREF(__pyx_t_1); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3866, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 3866, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 3866, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3866, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely(0 < 0)) __PYX_ERR(0, 3866, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3866, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_9(__pyx_t_1);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 3866, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_s, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":3867
 *         for a in ctx.detailedAtoms:
 *             for s in sd['detailedAtoms']:
 *                 if a.atomicModel == s.atomicModel:             # <<<<<<<<<<<<<<
 *                     a.load_pops_rates_prd_from_state(s.__getstate__())
 *                     break
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_atomicModel); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3867, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_11 = PyObject_RichCompare(__pyx_v_a->atomicModel, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_11); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 3867, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_11); if (unlikely(__pyx_t_6 < 0)) __PYX_ERR(0, 3867, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (__pyx_t_6) {

        /* "Source/LwMiddleLayer.pyx":3868
 *             for s in sd['detailedAtoms']:
 *                 if a.atomicModel == s.atomicModel:
 *                     a.load_pops_rates_prd_from_state(s.__getstate__())             # <<<<<<<<<<<<<<
 *                     break
 * 
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_a), __pyx_n_s_load_pops_rates_prd_from_state); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3868, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_s, __pyx_n_s_getstate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3868, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_13 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_13)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_13);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
          }
        }
        __pyx_t_10 = (__pyx_t_13) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_13) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 3868, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = NULL;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_2)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_2);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
          }
        }
        __pyx_t_11 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_10) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_10);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 3868, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

        /* "Source/LwMiddleLayer.pyx":3869
 *                 if a.atomicModel == s.atomicModel:
 *                     a.load_pops_rates_prd_from_state(s.__getstate__())
 *                     break             # <<<<<<<<<<<<<<
 * 
 *         return ctx
 */
        goto __pyx_L32_break;

        /* "Source/LwMiddleLayer.pyx":3867
 *         for a in ctx.detailedAtoms:
 *             for s in sd['detailedAtoms']:
 *                 if a.atomicModel == s.atomicModel:             # <<<<<<<<<<<<<<
 *                     a.load_pops_rates_prd_from_state(s.__getstate__())
 *                     break
 */
      }

      /* "Source/LwMiddleLayer.pyx":3866
 * 
 *         for a in ctx.detailedAtoms:
 *             for s in sd['detailedAtoms']:             # <<<<<<<<<<<<<<
 *                 if a.atomicModel == s.atomicModel:
 *                     a.load_pops_rates_prd_from_state(s.__getstate__())
 */
    }
    __pyx_L32_break:;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3865
 * 
 * 
 *         for a in ctx.detailedAtoms:             # <<<<<<<<<<<<<<
 *             for s in sd['detailedAtoms']:
 *                 if a.atomicModel == s.atomicModel:
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":3871
 *                     break
 * 
 *         return ctx             # <<<<<<<<<<<<<<
 * 
 *     def compute_rays(self, wavelengths=None, mus=None, stokes=False,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ctx));
  __pyx_r = ((PyObject *)__pyx_v_ctx);
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":3749
 * 
 *     @staticmethod
 *     def construct_from_state_dict_with(sd, atmos=None, spect=None, eqPops=None,             # <<<<<<<<<<<<<<
 *                                        ngOptions=None, initSol=None, conserveCharge=None,
 *                                        nrHOnly=None, hprd=None, preserveProfiles=False,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.construct_from_state_dict_with", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_wavelengthSubset);
  __Pyx_XDECREF(__pyx_v_prevSpect);
  __Pyx_XDECREF(__pyx_v_prevInitSol);
  __Pyx_XDECREF((PyObject *)__pyx_v_ctx);
  __Pyx_XDECREF((PyObject *)__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XDECREF(__pyx_v_levels);
  __Pyx_XDECREF(__pyx_v_trans);
  __Pyx_XDECREF(__pyx_v_sd);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3873
 *         return ctx
 * 
 *     def compute_rays(self, wavelengths=None, mus=None, stokes=False,             # <<<<<<<<<<<<<<
 *                      updateBcs=None, upOnly=True, returnCtx=False,
 *                      refinePrd=False, squeeze=True):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_53compute_rays(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_9LwContext_52compute_rays[] = "\n        Compute the formal solution through a converged simulation for a\n        particular ray (or set of rays). The wavelength range can be adjusted\n        to focus on particular lines.\n\n        Parameters\n        ----------\n        wavelengths : np.ndarray, optional\n            The wavelengths at which to compute the solution (default: None,\n            i.e. the original grid).\n        mus : float or sequence of float or dict\n            The cosines of the angles between the rays and the z-axis to use,\n            if a float or sequence of float then these are taken as muz. If a\n            dict, then it is expected to be dictionary unpackable\n            (double-splat) into atmos.rays, and can then be used for\n            multi-dimensional atmospheres.\n        stokes : bool, optional\n            Whether to compute a full Stokes solution (default: False).\n        updateBcs : Callable[[Atmosphere], None]\n            Function to be applied to the Atmosphere (intended to update the\n            boundary conditions if needed) before constructing the new\n            Context for these rays. If a ray doesn't intersect the boundary\n            (i.e. x and y boundaries for muz == 1), then the boundary\n            condition can be ignored.\n        upOnly : bool, optional\n            Whether to only compute upgoing rays. Mostly affects the handling of\n            boundary conditions for 2D atmospheres. (Default: True).\n        returnCtx : bool, optional\n            Whether to return the Context used to compute the formal solution\n            for these rays. If true, it will be returned as the second value.\n            Default: False.\n        refinePrd : bool, optional\n            Whether to update the rhoPrd term by reevaluating the scattering\n            integral on the new wavelength grid. This can sometimes visually\n            improve the final solution, but is quite computationally costly.\n            (default: False i.e. not reevalu""ated, instead if the wavelength\n            grid is different, rhoPrd is interpolated onto the new grid).\n        squeeze : bool, optional\n            Whether to squeeze singular dimensions from the output array\n            (default: True).\n\n        Returns\n        -------\n        intensity : np.ndarray\n            The outgoing intensity for the chosen rays. If `stokes=True` then\n            the first dimension indicates, in order, the I, Q, U, V\n            components.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_53compute_rays(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_wavelengths = 0;
  PyObject *__pyx_v_mus = 0;
  PyObject *__pyx_v_stokes = 0;
  PyObject *__pyx_v_updateBcs = 0;
  PyObject *__pyx_v_upOnly = 0;
  PyObject *__pyx_v_returnCtx = 0;
  PyObject *__pyx_v_refinePrd = 0;
  PyObject *__pyx_v_squeeze = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("compute_rays (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_wavelengths,&__pyx_n_s_mus,&__pyx_n_s_stokes,&__pyx_n_s_updateBcs,&__pyx_n_s_upOnly,&__pyx_n_s_returnCtx,&__pyx_n_s_refinePrd,&__pyx_n_s_squeeze,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_False);

    /* "Source/LwMiddleLayer.pyx":3874
 * 
 *     def compute_rays(self, wavelengths=None, mus=None, stokes=False,
 *                      updateBcs=None, upOnly=True, returnCtx=False,             # <<<<<<<<<<<<<<
 *                      refinePrd=False, squeeze=True):
 *         '''
 */
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_True);
    values[5] = ((PyObject *)Py_False);

    /* "Source/LwMiddleLayer.pyx":3875
 *     def compute_rays(self, wavelengths=None, mus=None, stokes=False,
 *                      updateBcs=None, upOnly=True, returnCtx=False,
 *                      refinePrd=False, squeeze=True):             # <<<<<<<<<<<<<<
 *         '''
 *         Compute the formal solution through a converged simulation for a
 */
    values[6] = ((PyObject *)Py_False);
    values[7] = ((PyObject *)Py_True);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_wavelengths);
          if (value) { values[0] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_mus);
          if (value) { values[1] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_stokes);
          if (value) { values[2] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_updateBcs);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_upOnly);
          if (value) { values[4] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_returnCtx);
          if (value) { values[5] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  6:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_refinePrd);
          if (value) { values[6] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  7:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_squeeze);
          if (value) { values[7] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "compute_rays") < 0)) __PYX_ERR(0, 3873, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  8: values[7] = PyTuple_GET_ITEM(__pyx_args, 7);
        CYTHON_FALLTHROUGH;
        case  7: values[6] = PyTuple_GET_ITEM(__pyx_args, 6);
        CYTHON_FALLTHROUGH;
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_wavelengths = values[0];
    __pyx_v_mus = values[1];
    __pyx_v_stokes = values[2];
    __pyx_v_updateBcs = values[3];
    __pyx_v_upOnly = values[4];
    __pyx_v_returnCtx = values[5];
    __pyx_v_refinePrd = values[6];
    __pyx_v_squeeze = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("compute_rays", 0, 0, 8, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(0, 3873, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.compute_rays", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_52compute_rays(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), __pyx_v_wavelengths, __pyx_v_mus, __pyx_v_stokes, __pyx_v_updateBcs, __pyx_v_upOnly, __pyx_v_returnCtx, __pyx_v_refinePrd, __pyx_v_squeeze);

  /* "Source/LwMiddleLayer.pyx":3873
 *         return ctx
 * 
 *     def compute_rays(self, wavelengths=None, mus=None, stokes=False,             # <<<<<<<<<<<<<<
 *                      updateBcs=None, upOnly=True, returnCtx=False,
 *                      refinePrd=False, squeeze=True):
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_52compute_rays(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_wavelengths, PyObject *__pyx_v_mus, PyObject *__pyx_v_stokes, PyObject *__pyx_v_updateBcs, PyObject *__pyx_v_upOnly, PyObject *__pyx_v_returnCtx, PyObject *__pyx_v_refinePrd, PyObject *__pyx_v_squeeze) {
  PyObject *__pyx_v_state = NULL;
  PyObject *__pyx_v_spect = NULL;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_rhoCtx = 0;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_rayCtx = 0;
  PyObject *__pyx_v_sd = NULL;
  PyObject *__pyx_v_atmos = NULL;
  PyObject *__pyx_v_Iwav = NULL;
  PyObject *__pyx_v_quv = NULL;
  PyObject *__pyx_v_Iquv = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_prd_redistribute __pyx_t_8;
  struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("compute_rays", 0);

  /* "Source/LwMiddleLayer.pyx":3924
 *             components.
 *         '''
 *         state = deepcopy(self.state_dict())             # <<<<<<<<<<<<<<
 *         if wavelengths is not None:
 *             spect = state['kwargs']['spect'].subset_configuration(wavelengths)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_deepcopy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3924, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_state_dict); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3924, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
    }
  }
  __pyx_t_3 = (__pyx_t_5) ? __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_5) : __Pyx_PyObject_CallNoArg(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3924, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_4, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3924, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_state = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":3925
 *         '''
 *         state = deepcopy(self.state_dict())
 *         if wavelengths is not None:             # <<<<<<<<<<<<<<
 *             spect = state['kwargs']['spect'].subset_configuration(wavelengths)
 *         else:
 */
  __pyx_t_6 = (__pyx_v_wavelengths != Py_None);
  __pyx_t_7 = (__pyx_t_6 != 0);
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3926
 *         state = deepcopy(self.state_dict())
 *         if wavelengths is not None:
 *             spect = state['kwargs']['spect'].subset_configuration(wavelengths)             # <<<<<<<<<<<<<<
 *         else:
 *             spect = None
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3926, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_t_2, __pyx_n_u_spect); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3926, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_subset_configuration); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3926, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
      }
    }
    __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_wavelengths) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_wavelengths);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3926, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_spect = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3925
 *         '''
 *         state = deepcopy(self.state_dict())
 *         if wavelengths is not None:             # <<<<<<<<<<<<<<
 *             spect = state['kwargs']['spect'].subset_configuration(wavelengths)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "Source/LwMiddleLayer.pyx":3928
 *             spect = state['kwargs']['spect'].subset_configuration(wavelengths)
 *         else:
 *             spect = None             # <<<<<<<<<<<<<<
 * 
 *         cdef LwContext rhoCtx, rayCtx
 */
  /*else*/ {
    __Pyx_INCREF(Py_None);
    __pyx_v_spect = Py_None;
  }
  __pyx_L3:;

  /* "Source/LwMiddleLayer.pyx":3931
 * 
 *         cdef LwContext rhoCtx, rayCtx
 *         if refinePrd:             # <<<<<<<<<<<<<<
 *             rhoCtx = self.construct_from_state_dict_with(state, spect=spect)
 *             rhoCtx.prd_redistribute(maxIter=100)
 */
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_refinePrd); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 3931, __pyx_L1_error)
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3932
 *         cdef LwContext rhoCtx, rayCtx
 *         if refinePrd:
 *             rhoCtx = self.construct_from_state_dict_with(state, spect=spect)             # <<<<<<<<<<<<<<
 *             rhoCtx.prd_redistribute(maxIter=100)
 *             sd = rhoCtx.state_dict()
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_construct_from_state_dict_with); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3932, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3932, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_state);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3932, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_spect, __pyx_v_spect) < 0) __PYX_ERR(0, 3932, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3932, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_11lightweaver_10LwCompiled_LwContext))))) __PYX_ERR(0, 3932, __pyx_L1_error)
    __pyx_v_rhoCtx = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3933
 *         if refinePrd:
 *             rhoCtx = self.construct_from_state_dict_with(state, spect=spect)
 *             rhoCtx.prd_redistribute(maxIter=100)             # <<<<<<<<<<<<<<
 *             sd = rhoCtx.state_dict()
 *             atmos = sd['kwargs']['atmos']
 */
    __pyx_t_8.__pyx_n = 1;
    __pyx_t_8.maxIter = 0x64;
    __pyx_t_4 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_rhoCtx->__pyx_vtab)->prd_redistribute(__pyx_v_rhoCtx, 0, &__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3933, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3934
 *             rhoCtx = self.construct_from_state_dict_with(state, spect=spect)
 *             rhoCtx.prd_redistribute(maxIter=100)
 *             sd = rhoCtx.state_dict()             # <<<<<<<<<<<<<<
 *             atmos = sd['kwargs']['atmos']
 *             if mus is not None:
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rhoCtx), __pyx_n_s_state_dict); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_4 = (__pyx_t_2) ? __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2) : __Pyx_PyObject_CallNoArg(__pyx_t_3);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3934, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_sd = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "Source/LwMiddleLayer.pyx":3935
 *             rhoCtx.prd_redistribute(maxIter=100)
 *             sd = rhoCtx.state_dict()
 *             atmos = sd['kwargs']['atmos']             # <<<<<<<<<<<<<<
 *             if mus is not None:
 *                 if isinstance(mus, dict):
 */
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_v_sd, __pyx_n_u_kwargs); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3935, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_u_atmos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3935, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_atmos = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3936
 *             sd = rhoCtx.state_dict()
 *             atmos = sd['kwargs']['atmos']
 *             if mus is not None:             # <<<<<<<<<<<<<<
 *                 if isinstance(mus, dict):
 *                     atmos.rays(**mus, upOnly=upOnly)
 */
    __pyx_t_7 = (__pyx_v_mus != Py_None);
    __pyx_t_6 = (__pyx_t_7 != 0);
    if (__pyx_t_6) {

      /* "Source/LwMiddleLayer.pyx":3937
 *             atmos = sd['kwargs']['atmos']
 *             if mus is not None:
 *                 if isinstance(mus, dict):             # <<<<<<<<<<<<<<
 *                     atmos.rays(**mus, upOnly=upOnly)
 *                 else:
 */
      __pyx_t_6 = PyDict_Check(__pyx_v_mus); 
      __pyx_t_7 = (__pyx_t_6 != 0);
      if (__pyx_t_7) {

        /* "Source/LwMiddleLayer.pyx":3938
 *             if mus is not None:
 *                 if isinstance(mus, dict):
 *                     atmos.rays(**mus, upOnly=upOnly)             # <<<<<<<<<<<<<<
 *                 else:
 *                     atmos.rays(mus, upOnly=upOnly)
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_rays); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3938, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (unlikely(__pyx_v_mus == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
          __PYX_ERR(0, 3938, __pyx_L1_error)
        }
        if (likely(PyDict_CheckExact(__pyx_v_mus))) {
          __pyx_t_4 = PyDict_Copy(__pyx_v_mus); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3938, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
        } else {
          __pyx_t_4 = PyObject_CallFunctionObjArgs((PyObject*)&PyDict_Type, __pyx_v_mus, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3938, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
        }
        if (unlikely(PyDict_Contains(__pyx_t_4, __pyx_n_s_upOnly))) {
          __Pyx_RaiseDoubleKeywordsError("function", __pyx_n_s_upOnly); __PYX_ERR(0, 3938, __pyx_L1_error)
        }
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_upOnly, __pyx_v_upOnly) < 0) __PYX_ERR(0, 3938, __pyx_L1_error)
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3938, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "Source/LwMiddleLayer.pyx":3937
 *             atmos = sd['kwargs']['atmos']
 *             if mus is not None:
 *                 if isinstance(mus, dict):             # <<<<<<<<<<<<<<
 *                     atmos.rays(**mus, upOnly=upOnly)
 *                 else:
 */
        goto __pyx_L6;
      }

      /* "Source/LwMiddleLayer.pyx":3940
 *                     atmos.rays(**mus, upOnly=upOnly)
 *                 else:
 *                     atmos.rays(mus, upOnly=upOnly)             # <<<<<<<<<<<<<<
 *             if updateBcs is not None:
 *                 updateBcs(atmos)
 */
      /*else*/ {
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_rays); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3940, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3940, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_v_mus);
        __Pyx_GIVEREF(__pyx_v_mus);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_mus);
        __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3940, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_upOnly, __pyx_v_upOnly) < 0) __PYX_ERR(0, 3940, __pyx_L1_error)
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_4, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3940, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __pyx_L6:;

      /* "Source/LwMiddleLayer.pyx":3936
 *             sd = rhoCtx.state_dict()
 *             atmos = sd['kwargs']['atmos']
 *             if mus is not None:             # <<<<<<<<<<<<<<
 *                 if isinstance(mus, dict):
 *                     atmos.rays(**mus, upOnly=upOnly)
 */
    }

    /* "Source/LwMiddleLayer.pyx":3941
 *                 else:
 *                     atmos.rays(mus, upOnly=upOnly)
 *             if updateBcs is not None:             # <<<<<<<<<<<<<<
 *                 updateBcs(atmos)
 *             rayCtx = self.construct_from_state_dict_with(sd)
 */
    __pyx_t_7 = (__pyx_v_updateBcs != Py_None);
    __pyx_t_6 = (__pyx_t_7 != 0);
    if (__pyx_t_6) {

      /* "Source/LwMiddleLayer.pyx":3942
 *                     atmos.rays(mus, upOnly=upOnly)
 *             if updateBcs is not None:
 *                 updateBcs(atmos)             # <<<<<<<<<<<<<<
 *             rayCtx = self.construct_from_state_dict_with(sd)
 *         else:
 */
      __Pyx_INCREF(__pyx_v_updateBcs);
      __pyx_t_3 = __pyx_v_updateBcs; __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_atmos) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_atmos);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3942, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "Source/LwMiddleLayer.pyx":3941
 *                 else:
 *                     atmos.rays(mus, upOnly=upOnly)
 *             if updateBcs is not None:             # <<<<<<<<<<<<<<
 *                 updateBcs(atmos)
 *             rayCtx = self.construct_from_state_dict_with(sd)
 */
    }

    /* "Source/LwMiddleLayer.pyx":3943
 *             if updateBcs is not None:
 *                 updateBcs(atmos)
 *             rayCtx = self.construct_from_state_dict_with(sd)             # <<<<<<<<<<<<<<
 *         else:
 *             atmos = state['kwargs']['atmos']
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_construct_from_state_dict_with); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3943, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_v_sd) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_sd);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3943, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwContext))))) __PYX_ERR(0, 3943, __pyx_L1_error)
    __pyx_v_rayCtx = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "Source/LwMiddleLayer.pyx":3931
 * 
 *         cdef LwContext rhoCtx, rayCtx
 *         if refinePrd:             # <<<<<<<<<<<<<<
 *             rhoCtx = self.construct_from_state_dict_with(state, spect=spect)
 *             rhoCtx.prd_redistribute(maxIter=100)
 */
    goto __pyx_L4;
  }

  /* "Source/LwMiddleLayer.pyx":3945
 *             rayCtx = self.construct_from_state_dict_with(sd)
 *         else:
 *             atmos = state['kwargs']['atmos']             # <<<<<<<<<<<<<<
 *             if mus is not None:
 *                 if isinstance(mus, dict):
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Dict_GetItem(__pyx_v_state, __pyx_n_u_kwargs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_t_1, __pyx_n_u_atmos); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3945, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_atmos = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3946
 *         else:
 *             atmos = state['kwargs']['atmos']
 *             if mus is not None:             # <<<<<<<<<<<<<<
 *                 if isinstance(mus, dict):
 *                     atmos.rays(**mus, upOnly=upOnly)
 */
    __pyx_t_6 = (__pyx_v_mus != Py_None);
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":3947
 *             atmos = state['kwargs']['atmos']
 *             if mus is not None:
 *                 if isinstance(mus, dict):             # <<<<<<<<<<<<<<
 *                     atmos.rays(**mus, upOnly=upOnly)
 *                 else:
 */
      __pyx_t_7 = PyDict_Check(__pyx_v_mus); 
      __pyx_t_6 = (__pyx_t_7 != 0);
      if (__pyx_t_6) {

        /* "Source/LwMiddleLayer.pyx":3948
 *             if mus is not None:
 *                 if isinstance(mus, dict):
 *                     atmos.rays(**mus, upOnly=upOnly)             # <<<<<<<<<<<<<<
 *                 else:
 *                     atmos.rays(mus, upOnly=upOnly)
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_rays); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3948, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (unlikely(__pyx_v_mus == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
          __PYX_ERR(0, 3948, __pyx_L1_error)
        }
        if (likely(PyDict_CheckExact(__pyx_v_mus))) {
          __pyx_t_1 = PyDict_Copy(__pyx_v_mus); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3948, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
        } else {
          __pyx_t_1 = PyObject_CallFunctionObjArgs((PyObject*)&PyDict_Type, __pyx_v_mus, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3948, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
        }
        if (unlikely(PyDict_Contains(__pyx_t_1, __pyx_n_s_upOnly))) {
          __Pyx_RaiseDoubleKeywordsError("function", __pyx_n_s_upOnly); __PYX_ERR(0, 3948, __pyx_L1_error)
        }
        if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_upOnly, __pyx_v_upOnly) < 0) __PYX_ERR(0, 3948, __pyx_L1_error)
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3948, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "Source/LwMiddleLayer.pyx":3947
 *             atmos = state['kwargs']['atmos']
 *             if mus is not None:
 *                 if isinstance(mus, dict):             # <<<<<<<<<<<<<<
 *                     atmos.rays(**mus, upOnly=upOnly)
 *                 else:
 */
        goto __pyx_L9;
      }

      /* "Source/LwMiddleLayer.pyx":3950
 *                     atmos.rays(**mus, upOnly=upOnly)
 *                 else:
 *                     atmos.rays(mus, upOnly=upOnly)             # <<<<<<<<<<<<<<
 *             if updateBcs is not None:
 *                 updateBcs(atmos)
 */
      /*else*/ {
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_atmos, __pyx_n_s_rays); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3950, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3950, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_INCREF(__pyx_v_mus);
        __Pyx_GIVEREF(__pyx_v_mus);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_mus);
        __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3950, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_upOnly, __pyx_v_upOnly) < 0) __PYX_ERR(0, 3950, __pyx_L1_error)
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3950, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }
      __pyx_L9:;

      /* "Source/LwMiddleLayer.pyx":3946
 *         else:
 *             atmos = state['kwargs']['atmos']
 *             if mus is not None:             # <<<<<<<<<<<<<<
 *                 if isinstance(mus, dict):
 *                     atmos.rays(**mus, upOnly=upOnly)
 */
    }

    /* "Source/LwMiddleLayer.pyx":3951
 *                 else:
 *                     atmos.rays(mus, upOnly=upOnly)
 *             if updateBcs is not None:             # <<<<<<<<<<<<<<
 *                 updateBcs(atmos)
 *             rayCtx = self.construct_from_state_dict_with(state, spect=spect)
 */
    __pyx_t_6 = (__pyx_v_updateBcs != Py_None);
    __pyx_t_7 = (__pyx_t_6 != 0);
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":3952
 *                     atmos.rays(mus, upOnly=upOnly)
 *             if updateBcs is not None:
 *                 updateBcs(atmos)             # <<<<<<<<<<<<<<
 *             rayCtx = self.construct_from_state_dict_with(state, spect=spect)
 * 
 */
      __Pyx_INCREF(__pyx_v_updateBcs);
      __pyx_t_3 = __pyx_v_updateBcs; __pyx_t_1 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
        }
      }
      __pyx_t_2 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_1, __pyx_v_atmos) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_v_atmos);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3952, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "Source/LwMiddleLayer.pyx":3951
 *                 else:
 *                     atmos.rays(mus, upOnly=upOnly)
 *             if updateBcs is not None:             # <<<<<<<<<<<<<<
 *                 updateBcs(atmos)
 *             rayCtx = self.construct_from_state_dict_with(state, spect=spect)
 */
    }

    /* "Source/LwMiddleLayer.pyx":3953
 *             if updateBcs is not None:
 *                 updateBcs(atmos)
 *             rayCtx = self.construct_from_state_dict_with(state, spect=spect)             # <<<<<<<<<<<<<<
 * 
 *         if stokes:
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_construct_from_state_dict_with); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_state);
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_spect, __pyx_v_spect) < 0) __PYX_ERR(0, 3953, __pyx_L1_error)
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3953, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_11lightweaver_10LwCompiled_LwContext))))) __PYX_ERR(0, 3953, __pyx_L1_error)
    __pyx_v_rayCtx = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_t_4);
    __pyx_t_4 = 0;
  }
  __pyx_L4:;

  /* "Source/LwMiddleLayer.pyx":3955
 *             rayCtx = self.construct_from_state_dict_with(state, spect=spect)
 * 
 *         if stokes:             # <<<<<<<<<<<<<<
 *             rayCtx.single_stokes_fs(upOnly=upOnly)
 *             Iwav = np.asarray(rayCtx.spect.I)
 */
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_stokes); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 3955, __pyx_L1_error)
  if (__pyx_t_7) {

    /* "Source/LwMiddleLayer.pyx":3956
 * 
 *         if stokes:
 *             rayCtx.single_stokes_fs(upOnly=upOnly)             # <<<<<<<<<<<<<<
 *             Iwav = np.asarray(rayCtx.spect.I)
 *             quv = np.asarray(rayCtx.spect.Quv)
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_rayCtx), __pyx_n_s_single_stokes_fs); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_upOnly, __pyx_v_upOnly) < 0) __PYX_ERR(0, 3956, __pyx_L1_error)
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3956, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3957
 *         if stokes:
 *             rayCtx.single_stokes_fs(upOnly=upOnly)
 *             Iwav = np.asarray(rayCtx.spect.I)             # <<<<<<<<<<<<<<
 *             quv = np.asarray(rayCtx.spect.Quv)
 *             if squeeze:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_asarray); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_v_rayCtx->spect->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3957, __pyx_L1_error)}
    __pyx_t_1 = __pyx_memoryview_fromslice(__pyx_v_rayCtx->spect->I, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3957, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_Iwav = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3958
 *             rayCtx.single_stokes_fs(upOnly=upOnly)
 *             Iwav = np.asarray(rayCtx.spect.I)
 *             quv = np.asarray(rayCtx.spect.Quv)             # <<<<<<<<<<<<<<
 *             if squeeze:
 *                 Iwav = np.squeeze(Iwav)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_v_rayCtx->spect->Quv.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3958, __pyx_L1_error)}
    __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_rayCtx->spect->Quv, 4, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3958, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_quv = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3959
 *             Iwav = np.asarray(rayCtx.spect.I)
 *             quv = np.asarray(rayCtx.spect.Quv)
 *             if squeeze:             # <<<<<<<<<<<<<<
 *                 Iwav = np.squeeze(Iwav)
 *                 quv = np.squeeze(quv)
 */
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_squeeze); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 3959, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":3960
 *             quv = np.asarray(rayCtx.spect.Quv)
 *             if squeeze:
 *                 Iwav = np.squeeze(Iwav)             # <<<<<<<<<<<<<<
 *                 quv = np.squeeze(quv)
 *             Iquv = np.zeros((4, *Iwav.shape))
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3960, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_squeeze); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3960, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_1, __pyx_v_Iwav) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_Iwav);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3960, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF_SET(__pyx_v_Iwav, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":3961
 *             if squeeze:
 *                 Iwav = np.squeeze(Iwav)
 *                 quv = np.squeeze(quv)             # <<<<<<<<<<<<<<
 *             Iquv = np.zeros((4, *Iwav.shape))
 *             Iquv[0, :] = Iwav
 */
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3961, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_squeeze); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3961, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_4)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_4);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
        }
      }
      __pyx_t_3 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_4, __pyx_v_quv) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v_quv);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3961, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF_SET(__pyx_v_quv, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":3959
 *             Iwav = np.asarray(rayCtx.spect.I)
 *             quv = np.asarray(rayCtx.spect.Quv)
 *             if squeeze:             # <<<<<<<<<<<<<<
 *                 Iwav = np.squeeze(Iwav)
 *                 quv = np.squeeze(quv)
 */
    }

    /* "Source/LwMiddleLayer.pyx":3962
 *                 Iwav = np.squeeze(Iwav)
 *                 quv = np.squeeze(quv)
 *             Iquv = np.zeros((4, *Iwav.shape))             # <<<<<<<<<<<<<<
 *             Iquv[0, :] = Iwav
 *             Iquv[1:, :] = quv
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_zeros); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_int_4);
    __Pyx_GIVEREF(__pyx_int_4);
    PyList_SET_ITEM(__pyx_t_2, 0, __pyx_int_4);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_Iwav, __pyx_n_s_shape); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__Pyx_PyList_Extend(__pyx_t_1, __pyx_t_2) < 0) __PYX_ERR(0, 3962, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    {
      PyObject *__pyx_temp = PyList_AsTuple(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_1);
      __pyx_t_1 = __pyx_temp; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3962, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
    }
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_2, __pyx_t_1) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_1);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3962, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_v_Iquv = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3963
 *                 quv = np.squeeze(quv)
 *             Iquv = np.zeros((4, *Iwav.shape))
 *             Iquv[0, :] = Iwav             # <<<<<<<<<<<<<<
 *             Iquv[1:, :] = quv
 *             if returnCtx:
 */
    if (unlikely(PyObject_SetItem(__pyx_v_Iquv, __pyx_tuple__32, __pyx_v_Iwav) < 0)) __PYX_ERR(0, 3963, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3964
 *             Iquv = np.zeros((4, *Iwav.shape))
 *             Iquv[0, :] = Iwav
 *             Iquv[1:, :] = quv             # <<<<<<<<<<<<<<
 *             if returnCtx:
 *                 return Iquv, rayCtx
 */
    if (unlikely(PyObject_SetItem(__pyx_v_Iquv, __pyx_tuple__34, __pyx_v_quv) < 0)) __PYX_ERR(0, 3964, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":3965
 *             Iquv[0, :] = Iwav
 *             Iquv[1:, :] = quv
 *             if returnCtx:             # <<<<<<<<<<<<<<
 *                 return Iquv, rayCtx
 *             else:
 */
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_returnCtx); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 3965, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":3966
 *             Iquv[1:, :] = quv
 *             if returnCtx:
 *                 return Iquv, rayCtx             # <<<<<<<<<<<<<<
 *             else:
 *                 return Iquv
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3966, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_v_Iquv);
      __Pyx_GIVEREF(__pyx_v_Iquv);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_Iquv);
      __Pyx_INCREF(((PyObject *)__pyx_v_rayCtx));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_rayCtx));
      PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)__pyx_v_rayCtx));
      __pyx_r = __pyx_t_3;
      __pyx_t_3 = 0;
      goto __pyx_L0;

      /* "Source/LwMiddleLayer.pyx":3965
 *             Iquv[0, :] = Iwav
 *             Iquv[1:, :] = quv
 *             if returnCtx:             # <<<<<<<<<<<<<<
 *                 return Iquv, rayCtx
 *             else:
 */
    }

    /* "Source/LwMiddleLayer.pyx":3968
 *                 return Iquv, rayCtx
 *             else:
 *                 return Iquv             # <<<<<<<<<<<<<<
 *         else:
 *             rayCtx.formal_sol(upOnly=upOnly)
 */
    /*else*/ {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_Iquv);
      __pyx_r = __pyx_v_Iquv;
      goto __pyx_L0;
    }

    /* "Source/LwMiddleLayer.pyx":3955
 *             rayCtx = self.construct_from_state_dict_with(state, spect=spect)
 * 
 *         if stokes:             # <<<<<<<<<<<<<<
 *             rayCtx.single_stokes_fs(upOnly=upOnly)
 *             Iwav = np.asarray(rayCtx.spect.I)
 */
  }

  /* "Source/LwMiddleLayer.pyx":3970
 *                 return Iquv
 *         else:
 *             rayCtx.formal_sol(upOnly=upOnly)             # <<<<<<<<<<<<<<
 *             Iwav = np.asarray(rayCtx.spect.I)
 *             if squeeze:
 */
  /*else*/ {
    __pyx_t_9.__pyx_n = 1;
    __pyx_t_9.upOnly = __pyx_v_upOnly;
    __pyx_t_3 = ((struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext *)__pyx_v_rayCtx->__pyx_vtab)->formal_sol(__pyx_v_rayCtx, 0, &__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3970, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3971
 *         else:
 *             rayCtx.formal_sol(upOnly=upOnly)
 *             Iwav = np.asarray(rayCtx.spect.I)             # <<<<<<<<<<<<<<
 *             if squeeze:
 *                 Iwav = np.squeeze(Iwav)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_asarray); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_v_rayCtx->spect->I.memview)) {PyErr_SetString(PyExc_AttributeError,"Memoryview is not initialized");__PYX_ERR(0, 3971, __pyx_L1_error)}
    __pyx_t_4 = __pyx_memoryview_fromslice(__pyx_v_rayCtx->spect->I, 3, (PyObject *(*)(char *)) __pyx_memview_get_nn___pyx_t_8CmoArray_f64, (int (*)(char *, PyObject *)) __pyx_memview_set_nn___pyx_t_8CmoArray_f64, 0);; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_2 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_3 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3971, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_v_Iwav = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "Source/LwMiddleLayer.pyx":3972
 *             rayCtx.formal_sol(upOnly=upOnly)
 *             Iwav = np.asarray(rayCtx.spect.I)
 *             if squeeze:             # <<<<<<<<<<<<<<
 *                 Iwav = np.squeeze(Iwav)
 *             if returnCtx:
 */
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_squeeze); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 3972, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":3973
 *             Iwav = np.asarray(rayCtx.spect.I)
 *             if squeeze:
 *                 Iwav = np.squeeze(Iwav)             # <<<<<<<<<<<<<<
 *             if returnCtx:
 *                 return Iwav, rayCtx
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3973, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_squeeze); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 3973, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = NULL;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
        }
      }
      __pyx_t_3 = (__pyx_t_1) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_1, __pyx_v_Iwav) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_v_Iwav);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3973, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF_SET(__pyx_v_Iwav, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "Source/LwMiddleLayer.pyx":3972
 *             rayCtx.formal_sol(upOnly=upOnly)
 *             Iwav = np.asarray(rayCtx.spect.I)
 *             if squeeze:             # <<<<<<<<<<<<<<
 *                 Iwav = np.squeeze(Iwav)
 *             if returnCtx:
 */
    }

    /* "Source/LwMiddleLayer.pyx":3974
 *             if squeeze:
 *                 Iwav = np.squeeze(Iwav)
 *             if returnCtx:             # <<<<<<<<<<<<<<
 *                 return Iwav, rayCtx
 *             else:
 */
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_returnCtx); if (unlikely(__pyx_t_7 < 0)) __PYX_ERR(0, 3974, __pyx_L1_error)
    if (__pyx_t_7) {

      /* "Source/LwMiddleLayer.pyx":3975
 *                 Iwav = np.squeeze(Iwav)
 *             if returnCtx:
 *                 return Iwav, rayCtx             # <<<<<<<<<<<<<<
 *             else:
 *                 return Iwav
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3975, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_v_Iwav);
      __Pyx_GIVEREF(__pyx_v_Iwav);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_Iwav);
      __Pyx_INCREF(((PyObject *)__pyx_v_rayCtx));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_rayCtx));
      PyTuple_SET_ITEM(__pyx_t_3, 1, ((PyObject *)__pyx_v_rayCtx));
      __pyx_r = __pyx_t_3;
      __pyx_t_3 = 0;
      goto __pyx_L0;

      /* "Source/LwMiddleLayer.pyx":3974
 *             if squeeze:
 *                 Iwav = np.squeeze(Iwav)
 *             if returnCtx:             # <<<<<<<<<<<<<<
 *                 return Iwav, rayCtx
 *             else:
 */
    }

    /* "Source/LwMiddleLayer.pyx":3977
 *                 return Iwav, rayCtx
 *             else:
 *                 return Iwav             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else*/ {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_Iwav);
      __pyx_r = __pyx_v_Iwav;
      goto __pyx_L0;
    }
  }

  /* "Source/LwMiddleLayer.pyx":3873
 *         return ctx
 * 
 *     def compute_rays(self, wavelengths=None, mus=None, stokes=False,             # <<<<<<<<<<<<<<
 *                      updateBcs=None, upOnly=True, returnCtx=False,
 *                      refinePrd=False, squeeze=True):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.compute_rays", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v_spect);
  __Pyx_XDECREF((PyObject *)__pyx_v_rhoCtx);
  __Pyx_XDECREF((PyObject *)__pyx_v_rayCtx);
  __Pyx_XDECREF(__pyx_v_sd);
  __Pyx_XDECREF(__pyx_v_atmos);
  __Pyx_XDECREF(__pyx_v_Iwav);
  __Pyx_XDECREF(__pyx_v_quv);
  __Pyx_XDECREF(__pyx_v_Iquv);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2875
 *     cdef LwBackground background
 *     cdef LwDepthData depthData
 *     cdef public dict kwargs             # <<<<<<<<<<<<<<
 *     cdef public object eqPops
 *     cdef list activeAtoms
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->kwargs);
  __pyx_r = __pyx_v_self->kwargs;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyDict_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "dict", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 2875, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->kwargs);
  __Pyx_DECREF(__pyx_v_self->kwargs);
  __pyx_v_self->kwargs = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.kwargs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6kwargs_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->kwargs);
  __Pyx_DECREF(__pyx_v_self->kwargs);
  __pyx_v_self->kwargs = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2876
 *     cdef LwDepthData depthData
 *     cdef public dict kwargs
 *     cdef public object eqPops             # <<<<<<<<<<<<<<
 *     cdef list activeAtoms
 *     cdef list detailedAtoms
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->eqPops);
  __pyx_r = __pyx_v_self->eqPops;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_6eqPops_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->eqPops);
  __Pyx_DECREF(__pyx_v_self->eqPops);
  __pyx_v_self->eqPops = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2879
 *     cdef list activeAtoms
 *     cdef list detailedAtoms
 *     cdef public bool_t conserveCharge             # <<<<<<<<<<<<<<
 *     cdef public bool_t nrHOnly
 *     cdef bool_t hprd
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_14conserveCharge___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_14conserveCharge___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->conserveCharge); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.conserveCharge.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2879, __pyx_L1_error)
  __pyx_v_self->conserveCharge = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.conserveCharge.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2880
 *     cdef list detailedAtoms
 *     cdef public bool_t conserveCharge
 *     cdef public bool_t nrHOnly             # <<<<<<<<<<<<<<
 *     cdef bool_t hprd
 *     cdef public object crswCallback
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_7nrHOnly___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_7nrHOnly___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->nrHOnly); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 2880, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.nrHOnly.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 2880, __pyx_L1_error)
  __pyx_v_self->nrHOnly = __pyx_t_1;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.nrHOnly.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2882
 *     cdef public bool_t nrHOnly
 *     cdef bool_t hprd
 *     cdef public object crswCallback             # <<<<<<<<<<<<<<
 *     cdef public object crswDone
 *     cdef dict __dict__
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->crswCallback);
  __pyx_r = __pyx_v_self->crswCallback;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->crswCallback);
  __Pyx_DECREF(__pyx_v_self->crswCallback);
  __pyx_v_self->crswCallback = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_12crswCallback_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->crswCallback);
  __Pyx_DECREF(__pyx_v_self->crswCallback);
  __pyx_v_self->crswCallback = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":2883
 *     cdef bool_t hprd
 *     cdef public object crswCallback
 *     cdef public object crswDone             # <<<<<<<<<<<<<<
 *     cdef dict __dict__
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->crswDone);
  __pyx_r = __pyx_v_self->crswDone;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(__pyx_v_self->crswDone);
  __Pyx_DECREF(__pyx_v_self->crswDone);
  __pyx_v_self->crswDone = __pyx_v_value;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_9LwContext_8crswDone_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->crswDone);
  __Pyx_DECREF(__pyx_v_self->crswDone);
  __pyx_v_self->crswDone = Py_None;

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_55__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_55__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_54__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_54__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_57__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_9LwContext_57__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_9LwContext_56__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_9LwContext_56__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwContext.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3999
 *     cdef public list names
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.paths = []
 *         self.names = []
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self) {
  int __pyx_v_i;
  char const *__pyx_v_name;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<FormalSolver> ::size_type __pyx_t_2;
  std::vector<FormalSolver> ::size_type __pyx_t_3;
  int __pyx_t_4;
  char const *__pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":4000
 * 
 *     def __init__(self):
 *         self.paths = []             # <<<<<<<<<<<<<<
 *         self.names = []
 *         cdef int i
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4000, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4001
 *     def __init__(self):
 *         self.paths = []
 *         self.names = []             # <<<<<<<<<<<<<<
 *         cdef int i
 *         cdef int size
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4001, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4006
 *         cdef const char* name
 * 
 *         for i in range(self.manager.formalSolvers.size()):             # <<<<<<<<<<<<<<
 *             name = self.manager.formalSolvers[i].name
 *             self.names.append(name.decode('UTF-8'))
 */
  __pyx_t_2 = __pyx_v_self->manager.formalSolvers.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":4007
 * 
 *         for i in range(self.manager.formalSolvers.size()):
 *             name = self.manager.formalSolvers[i].name             # <<<<<<<<<<<<<<
 *             self.names.append(name.decode('UTF-8'))
 * 
 */
    __pyx_t_5 = (__pyx_v_self->manager.formalSolvers[__pyx_v_i]).name;
    __pyx_v_name = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":4008
 *         for i in range(self.manager.formalSolvers.size()):
 *             name = self.manager.formalSolvers[i].name
 *             self.names.append(name.decode('UTF-8'))             # <<<<<<<<<<<<<<
 * 
 *     def load_fs_from_path(self, str path):
 */
    if (unlikely(__pyx_v_self->names == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 4008, __pyx_L1_error)
    }
    __pyx_t_1 = __Pyx_decode_c_string(__pyx_v_name, 0, strlen(__pyx_v_name), NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4008, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_self->names, __pyx_t_1); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 4008, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Source/LwMiddleLayer.pyx":3999
 *     cdef public list names
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.paths = []
 *         self.names = []
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFormalSolverManager.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4010
 *             self.names.append(name.decode('UTF-8'))
 * 
 *     def load_fs_from_path(self, str path):             # <<<<<<<<<<<<<<
 *         '''
 *         Attempt to load a formal solver, following the Lightweaver API, from
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_3load_fs_from_path(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_21LwFormalSolverManager_2load_fs_from_path[] = "\n        Attempt to load a formal solver, following the Lightweaver API, from\n        a shared library at `path`.\n\n        Parameters\n        ----------\n        path : str\n            The path from which to load the formal solver.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_3load_fs_from_path(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_fs_from_path (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), (&PyUnicode_Type), 1, "path", 1))) __PYX_ERR(0, 4010, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_2load_fs_from_path(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self), ((PyObject*)__pyx_v_path));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_2load_fs_from_path(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, PyObject *__pyx_v_path) {
  PyObject *__pyx_v_byteStore = NULL;
  char const *__pyx_v_cPath;
  bool __pyx_v_success;
  char const *__pyx_v_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  char const *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_FakeReference<FormalSolver> __pyx_t_7;
  char const *__pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_fs_from_path", 0);

  /* "Source/LwMiddleLayer.pyx":4020
 *             The path from which to load the formal solver.
 *         '''
 *         if path in self.paths:             # <<<<<<<<<<<<<<
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 */
  __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_path, __pyx_v_self->paths, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 4020, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (unlikely(__pyx_t_2)) {

    /* "Source/LwMiddleLayer.pyx":4021
 *         '''
 *         if path in self.paths:
 *             raise ValueError('Tried to load a pre-existing path')             # <<<<<<<<<<<<<<
 * 
 *         self.paths.append(path)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4021, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 4021, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":4020
 *             The path from which to load the formal solver.
 *         '''
 *         if path in self.paths:             # <<<<<<<<<<<<<<
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":4023
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 *         self.paths.append(path)             # <<<<<<<<<<<<<<
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore
 */
  if (unlikely(__pyx_v_self->paths == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
    __PYX_ERR(0, 4023, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_self->paths, __pyx_v_path); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 4023, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":4024
 * 
 *         self.paths.append(path)
 *         byteStore = path.encode('UTF-8')             # <<<<<<<<<<<<<<
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fs_from_path(cPath)
 */
  if (unlikely(__pyx_v_path == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 4024, __pyx_L1_error)
  }
  __pyx_t_3 = PyUnicode_AsUTF8String(__pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4024, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_byteStore = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":4025
 *         self.paths.append(path)
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore             # <<<<<<<<<<<<<<
 *         cdef bool_t success = self.manager.load_fs_from_path(cPath)
 *         if not success:
 */
  __pyx_t_5 = __Pyx_PyObject_AsString(__pyx_v_byteStore); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(0, 4025, __pyx_L1_error)
  __pyx_v_cPath = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":4026
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fs_from_path(cPath)             # <<<<<<<<<<<<<<
 *         if not success:
 *             raise ValueError('Failed to load Formal Solver from library at %s' % path)
 */
  __pyx_v_success = __pyx_v_self->manager.load_fs_from_path(__pyx_v_cPath);

  /* "Source/LwMiddleLayer.pyx":4027
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fs_from_path(cPath)
 *         if not success:             # <<<<<<<<<<<<<<
 *             raise ValueError('Failed to load Formal Solver from library at %s' % path)
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_success != 0)) != 0);
  if (unlikely(__pyx_t_2)) {

    /* "Source/LwMiddleLayer.pyx":4028
 *         cdef bool_t success = self.manager.load_fs_from_path(cPath)
 *         if not success:
 *             raise ValueError('Failed to load Formal Solver from library at %s' % path)             # <<<<<<<<<<<<<<
 * 
 *         cdef const char* name = self.manager.formalSolvers.at(self.manager.formalSolvers.size()-1).name
 */
    __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_Failed_to_load_Formal_Solver_fro, __pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4028, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4028, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __PYX_ERR(0, 4028, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":4027
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fs_from_path(cPath)
 *         if not success:             # <<<<<<<<<<<<<<
 *             raise ValueError('Failed to load Formal Solver from library at %s' % path)
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":4030
 *             raise ValueError('Failed to load Formal Solver from library at %s' % path)
 * 
 *         cdef const char* name = self.manager.formalSolvers.at(self.manager.formalSolvers.size()-1).name             # <<<<<<<<<<<<<<
 *         self.names.append(name.decode('UTF-8'))
 * 
 */
  try {
    __pyx_t_7 = __pyx_v_self->manager.formalSolvers.at((__pyx_v_self->manager.formalSolvers.size() - 1));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 4030, __pyx_L1_error)
  }
  __pyx_t_8 = __pyx_t_7->name;
  __pyx_v_name = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":4031
 * 
 *         cdef const char* name = self.manager.formalSolvers.at(self.manager.formalSolvers.size()-1).name
 *         self.names.append(name.decode('UTF-8'))             # <<<<<<<<<<<<<<
 * 
 *     def default_formal_solver(self, Ndim):
 */
  if (unlikely(__pyx_v_self->names == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
    __PYX_ERR(0, 4031, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_decode_c_string(__pyx_v_name, 0, strlen(__pyx_v_name), NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4031, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_self->names, __pyx_t_6); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 4031, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "Source/LwMiddleLayer.pyx":4010
 *             self.names.append(name.decode('UTF-8'))
 * 
 *     def load_fs_from_path(self, str path):             # <<<<<<<<<<<<<<
 *         '''
 *         Attempt to load a formal solver, following the Lightweaver API, from
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFormalSolverManager.load_fs_from_path", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_byteStore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4033
 *         self.names.append(name.decode('UTF-8'))
 * 
 *     def default_formal_solver(self, Ndim):             # <<<<<<<<<<<<<<
 *         '''
 *         Returns the name of the default formal solver for a given dimensionality.
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5default_formal_solver(PyObject *__pyx_v_self, PyObject *__pyx_v_Ndim); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_21LwFormalSolverManager_4default_formal_solver[] = "\n        Returns the name of the default formal solver for a given dimensionality.\n\n        Parameters\n        ----------\n        Ndim : int\n            The dimensionality of the simulation.\n\n        Returns\n        -------\n        name : str\n            The name of the default formal solver.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5default_formal_solver(PyObject *__pyx_v_self, PyObject *__pyx_v_Ndim) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("default_formal_solver (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_4default_formal_solver(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self), ((PyObject *)__pyx_v_Ndim));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_4default_formal_solver(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, PyObject *__pyx_v_Ndim) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("default_formal_solver", 0);

  /* "Source/LwMiddleLayer.pyx":4047
 *             The name of the default formal solver.
 *         '''
 *         if Ndim == 1:             # <<<<<<<<<<<<<<
 *             return self.names.index(lwConfig.params['FormalSolver1d'])
 *         elif Ndim == 2:
 */
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_Ndim, __pyx_int_1, 1, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4047, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 4047, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "Source/LwMiddleLayer.pyx":4048
 *         '''
 *         if Ndim == 1:
 *             return self.names.index(lwConfig.params['FormalSolver1d'])             # <<<<<<<<<<<<<<
 *         elif Ndim == 2:
 *             return self.names.index(lwConfig.params['FormalSolver2d'])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->names, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4048, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_lwConfig); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4048, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_params); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4048, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_u_FormalSolver1d); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4048, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4048, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":4047
 *             The name of the default formal solver.
 *         '''
 *         if Ndim == 1:             # <<<<<<<<<<<<<<
 *             return self.names.index(lwConfig.params['FormalSolver1d'])
 *         elif Ndim == 2:
 */
  }

  /* "Source/LwMiddleLayer.pyx":4049
 *         if Ndim == 1:
 *             return self.names.index(lwConfig.params['FormalSolver1d'])
 *         elif Ndim == 2:             # <<<<<<<<<<<<<<
 *             return self.names.index(lwConfig.params['FormalSolver2d'])
 *         else:
 */
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_Ndim, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4049, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 4049, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(__pyx_t_2)) {

    /* "Source/LwMiddleLayer.pyx":4050
 *             return self.names.index(lwConfig.params['FormalSolver1d'])
 *         elif Ndim == 2:
 *             return self.names.index(lwConfig.params['FormalSolver2d'])             # <<<<<<<<<<<<<<
 *         else:
 *             raise ValueError()
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->names, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_lwConfig); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_params); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_u_FormalSolver2d); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_5, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":4049
 *         if Ndim == 1:
 *             return self.names.index(lwConfig.params['FormalSolver1d'])
 *         elif Ndim == 2:             # <<<<<<<<<<<<<<
 *             return self.names.index(lwConfig.params['FormalSolver2d'])
 *         else:
 */
  }

  /* "Source/LwMiddleLayer.pyx":4052
 *             return self.names.index(lwConfig.params['FormalSolver2d'])
 *         else:
 *             raise ValueError()             # <<<<<<<<<<<<<<
 * 
 * cdef class LwInterpFnManager:
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_CallNoArg(__pyx_builtin_ValueError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4052, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 4052, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":4033
 *         self.names.append(name.decode('UTF-8'))
 * 
 *     def default_formal_solver(self, Ndim):             # <<<<<<<<<<<<<<
 *         '''
 *         Returns the name of the default formal solver for a given dimensionality.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFormalSolverManager.default_formal_solver", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3996
 *     '''
 *     cdef FormalSolverManager manager
 *     cdef public list paths             # <<<<<<<<<<<<<<
 *     cdef public list names
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->paths);
  __pyx_r = __pyx_v_self->paths;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 3996, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFormalSolverManager.paths.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":3997
 *     cdef FormalSolverManager manager
 *     cdef public list paths
 *     cdef public list names             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->names);
  __pyx_r = __pyx_v_self->names;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 3997, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFormalSolverManager.names.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_6__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFormalSolverManager.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_8__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_21LwFormalSolverManager_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFormalSolverManager.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4073
 *     cdef public list names
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.paths = []
 *         self.names = []
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self) {
  int __pyx_v_i;
  char const *__pyx_v_name;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<InterpFn> ::size_type __pyx_t_2;
  std::vector<InterpFn> ::size_type __pyx_t_3;
  int __pyx_t_4;
  char const *__pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":4074
 * 
 *     def __init__(self):
 *         self.paths = []             # <<<<<<<<<<<<<<
 *         self.names = []
 *         cdef int i
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4074, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4075
 *     def __init__(self):
 *         self.paths = []
 *         self.names = []             # <<<<<<<<<<<<<<
 *         cdef int i
 *         cdef int size
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4075, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4080
 *         cdef const char* name
 * 
 *         for i in range(self.manager.fns.size()):             # <<<<<<<<<<<<<<
 *             name = self.manager.fns[i].name
 *             self.names.append(name.decode('UTF-8'))
 */
  __pyx_t_2 = __pyx_v_self->manager.fns.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":4081
 * 
 *         for i in range(self.manager.fns.size()):
 *             name = self.manager.fns[i].name             # <<<<<<<<<<<<<<
 *             self.names.append(name.decode('UTF-8'))
 * 
 */
    __pyx_t_5 = (__pyx_v_self->manager.fns[__pyx_v_i]).name;
    __pyx_v_name = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":4082
 *         for i in range(self.manager.fns.size()):
 *             name = self.manager.fns[i].name
 *             self.names.append(name.decode('UTF-8'))             # <<<<<<<<<<<<<<
 * 
 *     def load_interp_fn_from_path(self, str path):
 */
    if (unlikely(__pyx_v_self->names == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 4082, __pyx_L1_error)
    }
    __pyx_t_1 = __Pyx_decode_c_string(__pyx_v_name, 0, strlen(__pyx_v_name), NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4082, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_self->names, __pyx_t_1); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 4082, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Source/LwMiddleLayer.pyx":4073
 *     cdef public list names
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.paths = []
 *         self.names = []
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwInterpFnManager.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4084
 *             self.names.append(name.decode('UTF-8'))
 * 
 *     def load_interp_fn_from_path(self, str path):             # <<<<<<<<<<<<<<
 *         '''
 *         Attempt to load an interpolation function, following the Lightweaver
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_3load_interp_fn_from_path(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_17LwInterpFnManager_2load_interp_fn_from_path[] = "\n        Attempt to load an interpolation function, following the Lightweaver\n        API, from a shared library at `path`.\n\n        Parameters\n        ----------\n        path : str\n            The path from which to load the interpolation function.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_3load_interp_fn_from_path(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_interp_fn_from_path (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), (&PyUnicode_Type), 1, "path", 1))) __PYX_ERR(0, 4084, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_2load_interp_fn_from_path(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self), ((PyObject*)__pyx_v_path));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_2load_interp_fn_from_path(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, PyObject *__pyx_v_path) {
  PyObject *__pyx_v_byteStore = NULL;
  char const *__pyx_v_cPath;
  bool __pyx_v_success;
  char const *__pyx_v_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  char const *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_FakeReference<InterpFn> __pyx_t_7;
  char const *__pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_interp_fn_from_path", 0);

  /* "Source/LwMiddleLayer.pyx":4094
 *             The path from which to load the interpolation function.
 *         '''
 *         if path in self.paths:             # <<<<<<<<<<<<<<
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 */
  __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_path, __pyx_v_self->paths, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 4094, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (unlikely(__pyx_t_2)) {

    /* "Source/LwMiddleLayer.pyx":4095
 *         '''
 *         if path in self.paths:
 *             raise ValueError('Tried to load a pre-existing path')             # <<<<<<<<<<<<<<
 * 
 *         self.paths.append(path)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4095, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 4095, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":4094
 *             The path from which to load the interpolation function.
 *         '''
 *         if path in self.paths:             # <<<<<<<<<<<<<<
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":4097
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 *         self.paths.append(path)             # <<<<<<<<<<<<<<
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore
 */
  if (unlikely(__pyx_v_self->paths == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
    __PYX_ERR(0, 4097, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_self->paths, __pyx_v_path); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 4097, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":4098
 * 
 *         self.paths.append(path)
 *         byteStore = path.encode('UTF-8')             # <<<<<<<<<<<<<<
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fn_from_path(cPath)
 */
  if (unlikely(__pyx_v_path == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 4098, __pyx_L1_error)
  }
  __pyx_t_3 = PyUnicode_AsUTF8String(__pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_byteStore = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":4099
 *         self.paths.append(path)
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore             # <<<<<<<<<<<<<<
 *         cdef bool_t success = self.manager.load_fn_from_path(cPath)
 *         if not success:
 */
  __pyx_t_5 = __Pyx_PyObject_AsString(__pyx_v_byteStore); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(0, 4099, __pyx_L1_error)
  __pyx_v_cPath = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":4100
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fn_from_path(cPath)             # <<<<<<<<<<<<<<
 *         if not success:
 *             raise ValueError('Failed to load interpolation function from library at %s' % path)
 */
  __pyx_v_success = __pyx_v_self->manager.load_fn_from_path(__pyx_v_cPath);

  /* "Source/LwMiddleLayer.pyx":4101
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fn_from_path(cPath)
 *         if not success:             # <<<<<<<<<<<<<<
 *             raise ValueError('Failed to load interpolation function from library at %s' % path)
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_success != 0)) != 0);
  if (unlikely(__pyx_t_2)) {

    /* "Source/LwMiddleLayer.pyx":4102
 *         cdef bool_t success = self.manager.load_fn_from_path(cPath)
 *         if not success:
 *             raise ValueError('Failed to load interpolation function from library at %s' % path)             # <<<<<<<<<<<<<<
 * 
 *         cdef const char* name = self.manager.fns.at(self.manager.fns.size()-1).name
 */
    __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_Failed_to_load_interpolation_fun, __pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4102, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __PYX_ERR(0, 4102, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":4101
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fn_from_path(cPath)
 *         if not success:             # <<<<<<<<<<<<<<
 *             raise ValueError('Failed to load interpolation function from library at %s' % path)
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":4104
 *             raise ValueError('Failed to load interpolation function from library at %s' % path)
 * 
 *         cdef const char* name = self.manager.fns.at(self.manager.fns.size()-1).name             # <<<<<<<<<<<<<<
 *         self.names.append(name.decode('UTF-8'))
 * 
 */
  try {
    __pyx_t_7 = __pyx_v_self->manager.fns.at((__pyx_v_self->manager.fns.size() - 1));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 4104, __pyx_L1_error)
  }
  __pyx_t_8 = __pyx_t_7->name;
  __pyx_v_name = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":4105
 * 
 *         cdef const char* name = self.manager.fns.at(self.manager.fns.size()-1).name
 *         self.names.append(name.decode('UTF-8'))             # <<<<<<<<<<<<<<
 * 
 *     def default_interp(self, Ndim):
 */
  if (unlikely(__pyx_v_self->names == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
    __PYX_ERR(0, 4105, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_decode_c_string(__pyx_v_name, 0, strlen(__pyx_v_name), NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_self->names, __pyx_t_6); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 4105, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "Source/LwMiddleLayer.pyx":4084
 *             self.names.append(name.decode('UTF-8'))
 * 
 *     def load_interp_fn_from_path(self, str path):             # <<<<<<<<<<<<<<
 *         '''
 *         Attempt to load an interpolation function, following the Lightweaver
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwInterpFnManager.load_interp_fn_from_path", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_byteStore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4107
 *         self.names.append(name.decode('UTF-8'))
 * 
 *     def default_interp(self, Ndim):             # <<<<<<<<<<<<<<
 *         '''
 *         Returns the name of the default interpolation function for a given
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5default_interp(PyObject *__pyx_v_self, PyObject *__pyx_v_Ndim); /*proto*/
static char __pyx_doc_11lightweaver_10LwCompiled_17LwInterpFnManager_4default_interp[] = "\n        Returns the name of the default interpolation function for a given\n        dimensionality.\n\n        Parameters\n        ----------\n        Ndim : int\n            The dimensionality of the simulation.\n\n        Returns\n        -------\n        name : str\n            The name of the default interpolation function.\n        ";
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5default_interp(PyObject *__pyx_v_self, PyObject *__pyx_v_Ndim) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("default_interp (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_4default_interp(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self), ((PyObject *)__pyx_v_Ndim));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_4default_interp(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, PyObject *__pyx_v_Ndim) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("default_interp", 0);

  /* "Source/LwMiddleLayer.pyx":4122
 *             The name of the default interpolation function.
 *         '''
 *         if Ndim == 2:             # <<<<<<<<<<<<<<
 *             return self.names.index('interp_linear_2d')
 *         else:
 */
  __pyx_t_1 = __Pyx_PyInt_EqObjC(__pyx_v_Ndim, __pyx_int_2, 2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(0, 4122, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (likely(__pyx_t_2)) {

    /* "Source/LwMiddleLayer.pyx":4123
 *         '''
 *         if Ndim == 2:
 *             return self.names.index('interp_linear_2d')             # <<<<<<<<<<<<<<
 *         else:
 *             raise ValueError("Unexpected Ndim")
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->names, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
      }
    }
    __pyx_t_1 = (__pyx_t_4) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_4, __pyx_n_u_interp_linear_2d) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_n_u_interp_linear_2d);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4123, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_r = __pyx_t_1;
    __pyx_t_1 = 0;
    goto __pyx_L0;

    /* "Source/LwMiddleLayer.pyx":4122
 *             The name of the default interpolation function.
 *         '''
 *         if Ndim == 2:             # <<<<<<<<<<<<<<
 *             return self.names.index('interp_linear_2d')
 *         else:
 */
  }

  /* "Source/LwMiddleLayer.pyx":4125
 *             return self.names.index('interp_linear_2d')
 *         else:
 *             raise ValueError("Unexpected Ndim")             # <<<<<<<<<<<<<<
 * 
 * cdef class LwFsIterationManager:
 */
  /*else*/ {
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4125, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 4125, __pyx_L1_error)
  }

  /* "Source/LwMiddleLayer.pyx":4107
 *         self.names.append(name.decode('UTF-8'))
 * 
 *     def default_interp(self, Ndim):             # <<<<<<<<<<<<<<
 *         '''
 *         Returns the name of the default interpolation function for a given
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwInterpFnManager.default_interp", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4070
 *     '''
 *     cdef InterpFnManager manager
 *     cdef public list paths             # <<<<<<<<<<<<<<
 *     cdef public list names
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->paths);
  __pyx_r = __pyx_v_self->paths;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 4070, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwInterpFnManager.paths.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4071
 *     cdef InterpFnManager manager
 *     cdef public list paths
 *     cdef public list names             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->names);
  __pyx_r = __pyx_v_self->names;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 4071, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwInterpFnManager.names.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_7__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_6__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwInterpFnManager.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_9__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_8__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_17LwInterpFnManager_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwInterpFnManager.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4132
 *     cdef public list names
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.paths = []
 *         self.names = []
 */

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(PyTuple_GET_SIZE(__pyx_args) > 0)) {
    __Pyx_RaiseArgtupleInvalid("__init__", 1, 0, 0, PyTuple_GET_SIZE(__pyx_args)); return -1;}
  if (unlikely(__pyx_kwds) && unlikely(PyDict_Size(__pyx_kwds) > 0) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 0))) return -1;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager___init__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager___init__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self) {
  int __pyx_v_i;
  char const *__pyx_v_name;
  PyObject *__pyx_v_schemes = NULL;
  PyObject *__pyx_v_s = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<FsIterationFns> ::size_type __pyx_t_2;
  std::vector<FsIterationFns> ::size_type __pyx_t_3;
  int __pyx_t_4;
  char const *__pyx_t_5;
  int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "Source/LwMiddleLayer.pyx":4133
 * 
 *     def __init__(self):
 *         self.paths = []             # <<<<<<<<<<<<<<
 *         self.names = []
 *         cdef int i
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4134
 *     def __init__(self):
 *         self.paths = []
 *         self.names = []             # <<<<<<<<<<<<<<
 *         cdef int i
 *         cdef int size
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4139
 *         cdef const char* name
 * 
 *         for i in range(self.manager.fns.size()):             # <<<<<<<<<<<<<<
 *             name = self.manager.fns[i].name
 *             self.names.append(name.decode('UTF-8'))
 */
  __pyx_t_2 = __pyx_v_self->manager.fns.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":4140
 * 
 *         for i in range(self.manager.fns.size()):
 *             name = self.manager.fns[i].name             # <<<<<<<<<<<<<<
 *             self.names.append(name.decode('UTF-8'))
 * 
 */
    __pyx_t_5 = (__pyx_v_self->manager.fns[__pyx_v_i]).name;
    __pyx_v_name = __pyx_t_5;

    /* "Source/LwMiddleLayer.pyx":4141
 *         for i in range(self.manager.fns.size()):
 *             name = self.manager.fns[i].name
 *             self.names.append(name.decode('UTF-8'))             # <<<<<<<<<<<<<<
 * 
 *         schemes = get_fs_iter_libs()
 */
    if (unlikely(__pyx_v_self->names == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
      __PYX_ERR(0, 4141, __pyx_L1_error)
    }
    __pyx_t_1 = __Pyx_decode_c_string(__pyx_v_name, 0, strlen(__pyx_v_name), NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4141, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyList_Append(__pyx_v_self->names, __pyx_t_1); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(0, 4141, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Source/LwMiddleLayer.pyx":4143
 *             self.names.append(name.decode('UTF-8'))
 * 
 *         schemes = get_fs_iter_libs()             # <<<<<<<<<<<<<<
 *         for s in schemes:
 *             self.load_fns_from_path(s)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_get_fs_iter_libs); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_7, function);
    }
  }
  __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_8) : __Pyx_PyObject_CallNoArg(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_v_schemes = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4144
 * 
 *         schemes = get_fs_iter_libs()
 *         for s in schemes:             # <<<<<<<<<<<<<<
 *             self.load_fns_from_path(s)
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_schemes)) || PyTuple_CheckExact(__pyx_v_schemes)) {
    __pyx_t_1 = __pyx_v_schemes; __Pyx_INCREF(__pyx_t_1); __pyx_t_9 = 0;
    __pyx_t_10 = NULL;
  } else {
    __pyx_t_9 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_schemes); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = Py_TYPE(__pyx_t_1)->tp_iternext; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 4144, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_10)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_7 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 4144, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4144, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      } else {
        if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) __PYX_ERR(0, 4144, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_1, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4144, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      }
    } else {
      __pyx_t_7 = __pyx_t_10(__pyx_t_1);
      if (unlikely(!__pyx_t_7)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 4144, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_7);
    }
    __Pyx_XDECREF_SET(__pyx_v_s, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "Source/LwMiddleLayer.pyx":4145
 *         schemes = get_fs_iter_libs()
 *         for s in schemes:
 *             self.load_fns_from_path(s)             # <<<<<<<<<<<<<<
 * 
 *     def load_fns_from_path(self, str path):
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_load_fns_from_path); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 4145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
      }
    }
    __pyx_t_7 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_8, __pyx_t_11, __pyx_v_s) : __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_v_s);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "Source/LwMiddleLayer.pyx":4144
 * 
 *         schemes = get_fs_iter_libs()
 *         for s in schemes:             # <<<<<<<<<<<<<<
 *             self.load_fns_from_path(s)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4132
 *     cdef public list names
 * 
 *     def __init__(self):             # <<<<<<<<<<<<<<
 *         self.paths = []
 *         self.names = []
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_schemes);
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4147
 *             self.load_fns_from_path(s)
 * 
 *     def load_fns_from_path(self, str path):             # <<<<<<<<<<<<<<
 *         if path in self.paths:
 *             raise ValueError('Tried to load a pre-existing path')
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_3load_fns_from_path(PyObject *__pyx_v_self, PyObject *__pyx_v_path); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_3load_fns_from_path(PyObject *__pyx_v_self, PyObject *__pyx_v_path) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("load_fns_from_path (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_path), (&PyUnicode_Type), 1, "path", 1))) __PYX_ERR(0, 4147, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_2load_fns_from_path(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self), ((PyObject*)__pyx_v_path));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_2load_fns_from_path(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, PyObject *__pyx_v_path) {
  PyObject *__pyx_v_byteStore = NULL;
  char const *__pyx_v_cPath;
  bool __pyx_v_success;
  char const *__pyx_v_name;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  char const *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  __Pyx_FakeReference<FsIterationFns> __pyx_t_7;
  char const *__pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("load_fns_from_path", 0);

  /* "Source/LwMiddleLayer.pyx":4148
 * 
 *     def load_fns_from_path(self, str path):
 *         if path in self.paths:             # <<<<<<<<<<<<<<
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 */
  __pyx_t_1 = (__Pyx_PySequence_ContainsTF(__pyx_v_path, __pyx_v_self->paths, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(0, 4148, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (unlikely(__pyx_t_2)) {

    /* "Source/LwMiddleLayer.pyx":4149
 *     def load_fns_from_path(self, str path):
 *         if path in self.paths:
 *             raise ValueError('Tried to load a pre-existing path')             # <<<<<<<<<<<<<<
 * 
 *         self.paths.append(path)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 4149, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":4148
 * 
 *     def load_fns_from_path(self, str path):
 *         if path in self.paths:             # <<<<<<<<<<<<<<
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":4151
 *             raise ValueError('Tried to load a pre-existing path')
 * 
 *         self.paths.append(path)             # <<<<<<<<<<<<<<
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore
 */
  if (unlikely(__pyx_v_self->paths == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
    __PYX_ERR(0, 4151, __pyx_L1_error)
  }
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_self->paths, __pyx_v_path); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 4151, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":4152
 * 
 *         self.paths.append(path)
 *         byteStore = path.encode('UTF-8')             # <<<<<<<<<<<<<<
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fns_from_path(cPath)
 */
  if (unlikely(__pyx_v_path == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "encode");
    __PYX_ERR(0, 4152, __pyx_L1_error)
  }
  __pyx_t_3 = PyUnicode_AsUTF8String(__pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_byteStore = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "Source/LwMiddleLayer.pyx":4153
 *         self.paths.append(path)
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore             # <<<<<<<<<<<<<<
 *         cdef bool_t success = self.manager.load_fns_from_path(cPath)
 *         if not success:
 */
  __pyx_t_5 = __Pyx_PyObject_AsString(__pyx_v_byteStore); if (unlikely((!__pyx_t_5) && PyErr_Occurred())) __PYX_ERR(0, 4153, __pyx_L1_error)
  __pyx_v_cPath = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":4154
 *         byteStore = path.encode('UTF-8')
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fns_from_path(cPath)             # <<<<<<<<<<<<<<
 *         if not success:
 *             raise ValueError('Failed to load iteration scheme from library at %s' % path)
 */
  __pyx_v_success = __pyx_v_self->manager.load_fns_from_path(__pyx_v_cPath);

  /* "Source/LwMiddleLayer.pyx":4155
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fns_from_path(cPath)
 *         if not success:             # <<<<<<<<<<<<<<
 *             raise ValueError('Failed to load iteration scheme from library at %s' % path)
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_success != 0)) != 0);
  if (unlikely(__pyx_t_2)) {

    /* "Source/LwMiddleLayer.pyx":4156
 *         cdef bool_t success = self.manager.load_fns_from_path(cPath)
 *         if not success:
 *             raise ValueError('Failed to load iteration scheme from library at %s' % path)             # <<<<<<<<<<<<<<
 * 
 *         cdef const char* name = self.manager.fns.at(self.manager.fns.size()-1).name
 */
    __pyx_t_3 = PyUnicode_Format(__pyx_kp_u_Failed_to_load_iteration_scheme, __pyx_v_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4156, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __PYX_ERR(0, 4156, __pyx_L1_error)

    /* "Source/LwMiddleLayer.pyx":4155
 *         cdef const char* cPath = byteStore
 *         cdef bool_t success = self.manager.load_fns_from_path(cPath)
 *         if not success:             # <<<<<<<<<<<<<<
 *             raise ValueError('Failed to load iteration scheme from library at %s' % path)
 * 
 */
  }

  /* "Source/LwMiddleLayer.pyx":4158
 *             raise ValueError('Failed to load iteration scheme from library at %s' % path)
 * 
 *         cdef const char* name = self.manager.fns.at(self.manager.fns.size()-1).name             # <<<<<<<<<<<<<<
 *         self.names.append(name.decode('UTF-8'))
 * 
 */
  try {
    __pyx_t_7 = __pyx_v_self->manager.fns.at((__pyx_v_self->manager.fns.size() - 1));
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 4158, __pyx_L1_error)
  }
  __pyx_t_8 = __pyx_t_7->name;
  __pyx_v_name = __pyx_t_8;

  /* "Source/LwMiddleLayer.pyx":4159
 * 
 *         cdef const char* name = self.manager.fns.at(self.manager.fns.size()-1).name
 *         self.names.append(name.decode('UTF-8'))             # <<<<<<<<<<<<<<
 * 
 *     def scheme_properties(self, str name):
 */
  if (unlikely(__pyx_v_self->names == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "append");
    __PYX_ERR(0, 4159, __pyx_L1_error)
  }
  __pyx_t_6 = __Pyx_decode_c_string(__pyx_v_name, 0, strlen(__pyx_v_name), NULL, NULL, PyUnicode_DecodeUTF8); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_4 = __Pyx_PyList_Append(__pyx_v_self->names, __pyx_t_6); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 4159, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

  /* "Source/LwMiddleLayer.pyx":4147
 *             self.load_fns_from_path(s)
 * 
 *     def load_fns_from_path(self, str path):             # <<<<<<<<<<<<<<
 *         if path in self.paths:
 *             raise ValueError('Tried to load a pre-existing path')
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.load_fns_from_path", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_byteStore);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4161
 *         self.names.append(name.decode('UTF-8'))
 * 
 *     def scheme_properties(self, str name):             # <<<<<<<<<<<<<<
 *         cdef int idx = self.names.index(name)
 *         cdef FsIterationFns scheme = self.manager.fns.at(idx)
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5scheme_properties(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5scheme_properties(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("scheme_properties (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyUnicode_Type), 1, "name", 1))) __PYX_ERR(0, 4161, __pyx_L1_error)
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_4scheme_properties(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self), ((PyObject*)__pyx_v_name));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_4scheme_properties(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, PyObject *__pyx_v_name) {
  int __pyx_v_idx;
  FsIterationFns __pyx_v_scheme;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  __Pyx_FakeReference<FsIterationFns> __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("scheme_properties", 0);

  /* "Source/LwMiddleLayer.pyx":4162
 * 
 *     def scheme_properties(self, str name):
 *         cdef int idx = self.names.index(name)             # <<<<<<<<<<<<<<
 *         cdef FsIterationFns scheme = self.manager.fns.at(idx)
 *         return {'name': name,
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->names, __pyx_n_s_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_Call2Args(__pyx_t_2, __pyx_t_3, __pyx_v_name) : __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_v_name);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_1); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 4162, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_idx = __pyx_t_4;

  /* "Source/LwMiddleLayer.pyx":4163
 *     def scheme_properties(self, str name):
 *         cdef int idx = self.names.index(name)
 *         cdef FsIterationFns scheme = self.manager.fns.at(idx)             # <<<<<<<<<<<<<<
 *         return {'name': name,
 *                 'Ndim': scheme.Ndim,
 */
  try {
    __pyx_t_5 = __pyx_v_self->manager.fns.at(__pyx_v_idx);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 4163, __pyx_L1_error)
  }
  __pyx_v_scheme = __pyx_t_5;

  /* "Source/LwMiddleLayer.pyx":4164
 *         cdef int idx = self.names.index(name)
 *         cdef FsIterationFns scheme = self.manager.fns.at(idx)
 *         return {'name': name,             # <<<<<<<<<<<<<<
 *                 'Ndim': scheme.Ndim,
 *                 'dimensionSpecific': scheme.dimensionSpecific,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_name, __pyx_v_name) < 0) __PYX_ERR(0, 4164, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":4165
 *         cdef FsIterationFns scheme = self.manager.fns.at(idx)
 *         return {'name': name,
 *                 'Ndim': scheme.Ndim,             # <<<<<<<<<<<<<<
 *                 'dimensionSpecific': scheme.dimensionSpecific,
 *                 'respectsFormalSolver': scheme.respectsFormalSolver,
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_scheme.Ndim); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_Ndim, __pyx_t_2) < 0) __PYX_ERR(0, 4164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":4166
 *         return {'name': name,
 *                 'Ndim': scheme.Ndim,
 *                 'dimensionSpecific': scheme.dimensionSpecific,             # <<<<<<<<<<<<<<
 *                 'respectsFormalSolver': scheme.respectsFormalSolver,
 *                 'defaultPerAtomStorage': scheme.defaultPerAtomStorage,
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_scheme.dimensionSpecific); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_dimensionSpecific, __pyx_t_2) < 0) __PYX_ERR(0, 4164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":4167
 *                 'Ndim': scheme.Ndim,
 *                 'dimensionSpecific': scheme.dimensionSpecific,
 *                 'respectsFormalSolver': scheme.respectsFormalSolver,             # <<<<<<<<<<<<<<
 *                 'defaultPerAtomStorage': scheme.defaultPerAtomStorage,
 *                 'defaultWlaGijStorage': scheme.defaultWlaGijStorage}
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_scheme.respectsFormalSolver); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_respectsFormalSolver, __pyx_t_2) < 0) __PYX_ERR(0, 4164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":4168
 *                 'dimensionSpecific': scheme.dimensionSpecific,
 *                 'respectsFormalSolver': scheme.respectsFormalSolver,
 *                 'defaultPerAtomStorage': scheme.defaultPerAtomStorage,             # <<<<<<<<<<<<<<
 *                 'defaultWlaGijStorage': scheme.defaultWlaGijStorage}
 * 
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_scheme.defaultPerAtomStorage); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_defaultPerAtomStorage, __pyx_t_2) < 0) __PYX_ERR(0, 4164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":4169
 *                 'respectsFormalSolver': scheme.respectsFormalSolver,
 *                 'defaultPerAtomStorage': scheme.defaultPerAtomStorage,
 *                 'defaultWlaGijStorage': scheme.defaultWlaGijStorage}             # <<<<<<<<<<<<<<
 * 
 *     def default_scheme(self):
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_scheme.defaultWlaGijStorage); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_defaultWlaGijStorage, __pyx_t_2) < 0) __PYX_ERR(0, 4164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":4161
 *         self.names.append(name.decode('UTF-8'))
 * 
 *     def scheme_properties(self, str name):             # <<<<<<<<<<<<<<
 *         cdef int idx = self.names.index(name)
 *         cdef FsIterationFns scheme = self.manager.fns.at(idx)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.scheme_properties", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4171
 *                 'defaultWlaGijStorage': scheme.defaultWlaGijStorage}
 * 
 *     def default_scheme(self):             # <<<<<<<<<<<<<<
 *         try:
 *             return self.names.index('{IterationScheme}_{SimdImpl}'.format(**lwConfig.params))
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_7default_scheme(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_7default_scheme(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("default_scheme (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_6default_scheme(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_6default_scheme(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("default_scheme", 0);

  /* "Source/LwMiddleLayer.pyx":4172
 * 
 *     def default_scheme(self):
 *         try:             # <<<<<<<<<<<<<<
 *             return self.names.index('{IterationScheme}_{SimdImpl}'.format(**lwConfig.params))
 *         except AttributeError:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "Source/LwMiddleLayer.pyx":4173
 *     def default_scheme(self):
 *         try:
 *             return self.names.index('{IterationScheme}_{SimdImpl}'.format(**lwConfig.params))             # <<<<<<<<<<<<<<
 *         except AttributeError:
 *             return self.names.index(lwConfig.params['{IterationScheme}'.format(**lwConfig.params)])
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->names, __pyx_n_s_index); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4173, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_IterationScheme___SimdImpl, __pyx_n_s_format); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4173, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_lwConfig); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 4173, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_params); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 4173, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (unlikely(__pyx_t_9 == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
        __PYX_ERR(0, 4173, __pyx_L3_error)
      }
      if (likely(PyDict_CheckExact(__pyx_t_9))) {
        __pyx_t_7 = PyDict_Copy(__pyx_t_9); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4173, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        __pyx_t_7 = PyObject_CallFunctionObjArgs((PyObject*)&PyDict_Type, __pyx_t_9, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4173, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_empty_tuple, __pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 4173, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
        }
      }
      __pyx_t_4 = (__pyx_t_7) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_7, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_t_9);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4173, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_r = __pyx_t_4;
      __pyx_t_4 = 0;
      goto __pyx_L7_try_return;

      /* "Source/LwMiddleLayer.pyx":4172
 * 
 *     def default_scheme(self):
 *         try:             # <<<<<<<<<<<<<<
 *             return self.names.index('{IterationScheme}_{SimdImpl}'.format(**lwConfig.params))
 *         except AttributeError:
 */
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "Source/LwMiddleLayer.pyx":4174
 *         try:
 *             return self.names.index('{IterationScheme}_{SimdImpl}'.format(**lwConfig.params))
 *         except AttributeError:             # <<<<<<<<<<<<<<
 *             return self.names.index(lwConfig.params['{IterationScheme}'.format(**lwConfig.params)])
 * 
 */
    __pyx_t_10 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_AttributeError);
    if (__pyx_t_10) {
      __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.default_scheme", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_9) < 0) __PYX_ERR(0, 4174, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_9);

      /* "Source/LwMiddleLayer.pyx":4175
 *             return self.names.index('{IterationScheme}_{SimdImpl}'.format(**lwConfig.params))
 *         except AttributeError:
 *             return self.names.index(lwConfig.params['{IterationScheme}'.format(**lwConfig.params)])             # <<<<<<<<<<<<<<
 * 
 *     def default_scheme_name(self):
 */
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->names, __pyx_n_s_index); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_lwConfig); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_params); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_IterationScheme, __pyx_n_s_format); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_lwConfig); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_13, __pyx_n_s_params); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      if (unlikely(__pyx_t_14 == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
        __PYX_ERR(0, 4175, __pyx_L5_except_error)
      }
      if (likely(PyDict_CheckExact(__pyx_t_14))) {
        __pyx_t_12 = PyDict_Copy(__pyx_t_14); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      } else {
        __pyx_t_12 = PyObject_CallFunctionObjArgs((PyObject*)&PyDict_Type, __pyx_t_14, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      }
      __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_empty_tuple, __pyx_t_12); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = __Pyx_PyObject_GetItem(__pyx_t_11, __pyx_t_14); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
      __pyx_t_14 = NULL;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_14)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_14);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
        }
      }
      __pyx_t_7 = (__pyx_t_14) ? __Pyx_PyObject_Call2Args(__pyx_t_6, __pyx_t_14, __pyx_t_12) : __Pyx_PyObject_CallOneArg(__pyx_t_6, __pyx_t_12);
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 4175, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_7;
      __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      goto __pyx_L6_except_return;
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "Source/LwMiddleLayer.pyx":4172
 * 
 *     def default_scheme(self):
 *         try:             # <<<<<<<<<<<<<<
 *             return self.names.index('{IterationScheme}_{SimdImpl}'.format(**lwConfig.params))
 *         except AttributeError:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L7_try_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L0;
  }

  /* "Source/LwMiddleLayer.pyx":4171
 *                 'defaultWlaGijStorage': scheme.defaultWlaGijStorage}
 * 
 *     def default_scheme(self):             # <<<<<<<<<<<<<<
 *         try:
 *             return self.names.index('{IterationScheme}_{SimdImpl}'.format(**lwConfig.params))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.default_scheme", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4177
 *             return self.names.index(lwConfig.params['{IterationScheme}'.format(**lwConfig.params)])
 * 
 *     def default_scheme_name(self):             # <<<<<<<<<<<<<<
 *         return self.names[self.default_scheme()]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_9default_scheme_name(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_9default_scheme_name(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("default_scheme_name (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_8default_scheme_name(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_8default_scheme_name(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("default_scheme_name", 0);

  /* "Source/LwMiddleLayer.pyx":4178
 * 
 *     def default_scheme_name(self):
 *         return self.names[self.default_scheme()]             # <<<<<<<<<<<<<<
 * 
 * cdef fvec2list(const vector[f64]& v):
 */
  __Pyx_XDECREF(__pyx_r);
  if (unlikely(__pyx_v_self->names == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 4178, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_default_scheme); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
    }
  }
  __pyx_t_1 = (__pyx_t_3) ? __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_3) : __Pyx_PyObject_CallNoArg(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_v_self->names, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":4177
 *             return self.names.index(lwConfig.params['{IterationScheme}'.format(**lwConfig.params)])
 * 
 *     def default_scheme_name(self):             # <<<<<<<<<<<<<<
 *         return self.names[self.default_scheme()]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.default_scheme_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4129
 * cdef class LwFsIterationManager:
 *     cdef FsIterationFnsManager manager
 *     cdef public list paths             # <<<<<<<<<<<<<<
 *     cdef public list names
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->paths);
  __pyx_r = __pyx_v_self->paths;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 4129, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.paths.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->paths);
  __Pyx_DECREF(__pyx_v_self->paths);
  __pyx_v_self->paths = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4130
 *     cdef FsIterationFnsManager manager
 *     cdef public list paths
 *     cdef public list names             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names___get__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names___get__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->names);
  __pyx_r = __pyx_v_self->names;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_2__set__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_2__set__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_v_value)->tp_name), 0))) __PYX_ERR(0, 4130, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.names.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_5__del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_4__del__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_4__del__(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->names);
  __Pyx_DECREF(__pyx_v_self->names);
  __pyx_v_self->names = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_11__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_10__reduce_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_10__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__43, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_13__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_12__setstate_cython__(((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_20LwFsIterationManager_12__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.LwFsIterationManager.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4180
 *         return self.names[self.default_scheme()]
 * 
 * cdef fvec2list(const vector[f64]& v):             # <<<<<<<<<<<<<<
 *     cdef int i
 *     result = []
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled_fvec2list(std::vector<__pyx_t_8CmoArray_f64>  const &__pyx_v_v) {
  int __pyx_v_i;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<__pyx_t_8CmoArray_f64> ::size_type __pyx_t_2;
  std::vector<__pyx_t_8CmoArray_f64> ::size_type __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("fvec2list", 0);

  /* "Source/LwMiddleLayer.pyx":4182
 * cdef fvec2list(const vector[f64]& v):
 *     cdef int i
 *     result = []             # <<<<<<<<<<<<<<
 *     for i in range(v.size()):
 *         result.append(v[i])
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4183
 *     cdef int i
 *     result = []
 *     for i in range(v.size()):             # <<<<<<<<<<<<<<
 *         result.append(v[i])
 *     return result
 */
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":4184
 *     result = []
 *     for i in range(v.size()):
 *         result.append(v[i])             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_t_1 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_result, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 4184, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Source/LwMiddleLayer.pyx":4185
 *     for i in range(v.size()):
 *         result.append(v[i])
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef ivec2list(const vector[int]& v):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":4180
 *         return self.names[self.default_scheme()]
 * 
 * cdef fvec2list(const vector[f64]& v):             # <<<<<<<<<<<<<<
 *     cdef int i
 *     result = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.fvec2list", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4187
 *     return result
 * 
 * cdef ivec2list(const vector[int]& v):             # <<<<<<<<<<<<<<
 *     cdef int i
 *     result = []
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled_ivec2list(std::vector<int>  const &__pyx_v_v) {
  int __pyx_v_i;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::vector<int> ::size_type __pyx_t_2;
  std::vector<int> ::size_type __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("ivec2list", 0);

  /* "Source/LwMiddleLayer.pyx":4189
 * cdef ivec2list(const vector[int]& v):
 *     cdef int i
 *     result = []             # <<<<<<<<<<<<<<
 *     for i in range(v.size()):
 *         result.append(v[i])
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_result = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4190
 *     cdef int i
 *     result = []
 *     for i in range(v.size()):             # <<<<<<<<<<<<<<
 *         result.append(v[i])
 *     return result
 */
  __pyx_t_2 = __pyx_v_v.size();
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "Source/LwMiddleLayer.pyx":4191
 *     result = []
 *     for i in range(v.size()):
 *         result.append(v[i])             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
    __pyx_t_1 = __Pyx_PyInt_From_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyList_Append(__pyx_v_result, __pyx_t_1); if (unlikely(__pyx_t_5 == ((int)-1))) __PYX_ERR(0, 4191, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "Source/LwMiddleLayer.pyx":4192
 *     for i in range(v.size()):
 *         result.append(v[i])
 *     return result             # <<<<<<<<<<<<<<
 * 
 * cdef IterationUpdate_from_IterationResult(LwContext ctx, IterationResult result):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_result);
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":4187
 *     return result
 * 
 * cdef ivec2list(const vector[int]& v):             # <<<<<<<<<<<<<<
 *     cdef int i
 *     result = []
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("lightweaver.LwCompiled.ivec2list", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "Source/LwMiddleLayer.pyx":4194
 *     return result
 * 
 * cdef IterationUpdate_from_IterationResult(LwContext ctx, IterationResult result):             # <<<<<<<<<<<<<<
 *     update = IterationUpdate(ctx, updatedJ=result.updatedJ,
 *                                   dJMax=result.dJMax,
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled_IterationUpdate_from_IterationResult(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *__pyx_v_ctx, IterationResult __pyx_v_result) {
  PyObject *__pyx_v_update = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("IterationUpdate_from_IterationResult", 0);

  /* "Source/LwMiddleLayer.pyx":4195
 * 
 * cdef IterationUpdate_from_IterationResult(LwContext ctx, IterationResult result):
 *     update = IterationUpdate(ctx, updatedJ=result.updatedJ,             # <<<<<<<<<<<<<<
 *                                   dJMax=result.dJMax,
 *                                   dJMaxIdx=result.dJMaxIdx,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_IterationUpdate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_ctx));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_ctx));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_ctx));
  __pyx_t_3 = __Pyx_PyDict_NewPresized(17); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_result.updatedJ); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_updatedJ, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4196
 * cdef IterationUpdate_from_IterationResult(LwContext ctx, IterationResult result):
 *     update = IterationUpdate(ctx, updatedJ=result.updatedJ,
 *                                   dJMax=result.dJMax,             # <<<<<<<<<<<<<<
 *                                   dJMaxIdx=result.dJMaxIdx,
 *                                   updatedPops=result.updatedPops,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_result.dJMax); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dJMax, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4197
 *     update = IterationUpdate(ctx, updatedJ=result.updatedJ,
 *                                   dJMax=result.dJMax,
 *                                   dJMaxIdx=result.dJMaxIdx,             # <<<<<<<<<<<<<<
 *                                   updatedPops=result.updatedPops,
 *                                   dPops=fvec2list(result.dPops),
 */
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_result.dJMaxIdx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dJMaxIdx, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4198
 *                                   dJMax=result.dJMax,
 *                                   dJMaxIdx=result.dJMaxIdx,
 *                                   updatedPops=result.updatedPops,             # <<<<<<<<<<<<<<
 *                                   dPops=fvec2list(result.dPops),
 *                                   dPopsMaxIdx=ivec2list(result.dPopsMaxIdx),
 */
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_result.updatedPops); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_updatedPops, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4199
 *                                   dJMaxIdx=result.dJMaxIdx,
 *                                   updatedPops=result.updatedPops,
 *                                   dPops=fvec2list(result.dPops),             # <<<<<<<<<<<<<<
 *                                   dPopsMaxIdx=ivec2list(result.dPopsMaxIdx),
 *                                   ngAccelerated=result.ngAccelerated,
 */
  __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_fvec2list(__pyx_v_result.dPops); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dPops, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4200
 *                                   updatedPops=result.updatedPops,
 *                                   dPops=fvec2list(result.dPops),
 *                                   dPopsMaxIdx=ivec2list(result.dPopsMaxIdx),             # <<<<<<<<<<<<<<
 *                                   ngAccelerated=result.ngAccelerated,
 *                                   updatedNe=result.updatedNe,
 */
  __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_ivec2list(__pyx_v_result.dPopsMaxIdx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dPopsMaxIdx, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4201
 *                                   dPops=fvec2list(result.dPops),
 *                                   dPopsMaxIdx=ivec2list(result.dPopsMaxIdx),
 *                                   ngAccelerated=result.ngAccelerated,             # <<<<<<<<<<<<<<
 *                                   updatedNe=result.updatedNe,
 *                                   dNeMax=result.dNe,
 */
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_result.ngAccelerated); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_ngAccelerated, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4202
 *                                   dPopsMaxIdx=ivec2list(result.dPopsMaxIdx),
 *                                   ngAccelerated=result.ngAccelerated,
 *                                   updatedNe=result.updatedNe,             # <<<<<<<<<<<<<<
 *                                   dNeMax=result.dNe,
 *                                   dNeMaxIdx=result.dNeMaxIdx,
 */
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_result.updatedNe); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_updatedNe, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4203
 *                                   ngAccelerated=result.ngAccelerated,
 *                                   updatedNe=result.updatedNe,
 *                                   dNeMax=result.dNe,             # <<<<<<<<<<<<<<
 *                                   dNeMaxIdx=result.dNeMaxIdx,
 *                                   updatedRho=result.updatedRho,
 */
  __pyx_t_4 = PyFloat_FromDouble(__pyx_v_result.dNe); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dNeMax, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4204
 *                                   updatedNe=result.updatedNe,
 *                                   dNeMax=result.dNe,
 *                                   dNeMaxIdx=result.dNeMaxIdx,             # <<<<<<<<<<<<<<
 *                                   updatedRho=result.updatedRho,
 *                                   NprdSubIter=result.NprdSubIter,
 */
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_result.dNeMaxIdx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dNeMaxIdx, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4205
 *                                   dNeMax=result.dNe,
 *                                   dNeMaxIdx=result.dNeMaxIdx,
 *                                   updatedRho=result.updatedRho,             # <<<<<<<<<<<<<<
 *                                   NprdSubIter=result.NprdSubIter,
 *                                   dRho=fvec2list(result.dRho),
 */
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_result.updatedRho); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_updatedRho, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4206
 *                                   dNeMaxIdx=result.dNeMaxIdx,
 *                                   updatedRho=result.updatedRho,
 *                                   NprdSubIter=result.NprdSubIter,             # <<<<<<<<<<<<<<
 *                                   dRho=fvec2list(result.dRho),
 *                                   dRhoMaxIdx=ivec2list(result.dRhoMaxIdx),
 */
  __pyx_t_4 = __Pyx_PyInt_From_int(__pyx_v_result.NprdSubIter); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_NprdSubIter, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4207
 *                                   updatedRho=result.updatedRho,
 *                                   NprdSubIter=result.NprdSubIter,
 *                                   dRho=fvec2list(result.dRho),             # <<<<<<<<<<<<<<
 *                                   dRhoMaxIdx=ivec2list(result.dRhoMaxIdx),
 *                                   updatedJPrd=result.updatedJPrd,
 */
  __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_fvec2list(__pyx_v_result.dRho); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dRho, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4208
 *                                   NprdSubIter=result.NprdSubIter,
 *                                   dRho=fvec2list(result.dRho),
 *                                   dRhoMaxIdx=ivec2list(result.dRhoMaxIdx),             # <<<<<<<<<<<<<<
 *                                   updatedJPrd=result.updatedJPrd,
 *                                   dJPrdMax=fvec2list(result.dJPrdMax),
 */
  __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_ivec2list(__pyx_v_result.dRhoMaxIdx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dRhoMaxIdx, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4209
 *                                   dRho=fvec2list(result.dRho),
 *                                   dRhoMaxIdx=ivec2list(result.dRhoMaxIdx),
 *                                   updatedJPrd=result.updatedJPrd,             # <<<<<<<<<<<<<<
 *                                   dJPrdMax=fvec2list(result.dJPrdMax),
 *                                   dJPrdMaxIdx=ivec2list(result.dJPrdMaxIdx))
 */
  __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_result.updatedJPrd); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_updatedJPrd, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4210
 *                                   dRhoMaxIdx=ivec2list(result.dRhoMaxIdx),
 *                                   updatedJPrd=result.updatedJPrd,
 *                                   dJPrdMax=fvec2list(result.dJPrdMax),             # <<<<<<<<<<<<<<
 *                                   dJPrdMaxIdx=ivec2list(result.dJPrdMaxIdx))
 *     return update
 */
  __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_fvec2list(__pyx_v_result.dJPrdMax); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dJPrdMax, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4211
 *                                   updatedJPrd=result.updatedJPrd,
 *                                   dJPrdMax=fvec2list(result.dJPrdMax),
 *                                   dJPrdMaxIdx=ivec2list(result.dJPrdMaxIdx))             # <<<<<<<<<<<<<<
 *     return update
 * 
 */
  __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled_ivec2list(__pyx_v_result.dJPrdMaxIdx); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dJPrdMaxIdx, __pyx_t_4) < 0) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4195
 * 
 * cdef IterationUpdate_from_IterationResult(LwContext ctx, IterationResult result):
 *     update = IterationUpdate(ctx, updatedJ=result.updatedJ,             # <<<<<<<<<<<<<<
 *                                   dJMax=result.dJMax,
 *                                   dJMaxIdx=result.dJMaxIdx,
 */
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_update = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "Source/LwMiddleLayer.pyx":4212
 *                                   dJPrdMax=fvec2list(result.dJPrdMax),
 *                                   dJPrdMaxIdx=ivec2list(result.dJPrdMaxIdx))
 *     return update             # <<<<<<<<<<<<<<
 * 
 * FormalSolvers = LwFormalSolverManager()
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_update);
  __pyx_r = __pyx_v_update;
  goto __pyx_L0;

  /* "Source/LwMiddleLayer.pyx":4194
 *     return result
 * 
 * cdef IterationUpdate_from_IterationResult(LwContext ctx, IterationResult result):             # <<<<<<<<<<<<<<
 *     update = IterationUpdate(ctx, updatedJ=result.updatedJ,
 *                                   dJMax=result.dJMax,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("lightweaver.LwCompiled.IterationUpdate_from_IterationResult", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_update);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_BackgroundProvider(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_3__pyx_unpickle_BackgroundProvider(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11lightweaver_10LwCompiled_3__pyx_unpickle_BackgroundProvider = {"__pyx_unpickle_BackgroundProvider", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_3__pyx_unpickle_BackgroundProvider, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_3__pyx_unpickle_BackgroundProvider(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_BackgroundProvider (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BackgroundProvider", 1, 3, 3, 1); __PYX_ERR(2, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BackgroundProvider", 1, 3, 3, 2); __PYX_ERR(2, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_BackgroundProvider") < 0)) __PYX_ERR(2, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(2, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_BackgroundProvider", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.__pyx_unpickle_BackgroundProvider", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_2__pyx_unpickle_BackgroundProvider(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_2__pyx_unpickle_BackgroundProvider(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_BackgroundProvider", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xd41d8cd, 0xe3b0c44, 0xda39a3e):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd41d8cd, 0xe3b0c44, 0xda39a3e) = ())" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__45, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xd41d8cd, 0xe3b0c44, 0xda39a3e):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd41d8cd, 0xe3b0c44, 0xda39a3e) = ())" % __pyx_checksum)
 *     __pyx_result = BackgroundProvider.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xd41d8cd, 0xe3b0c44, 0xda39a3e):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd41d8cd, 0xe3b0c44, 0xda39a3e) = ())" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = BackgroundProvider.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(2, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xd41d8cd, 0xe3b0c44, 0xda39a3e):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd41d8cd, 0xe3b0c44, 0xda39a3e) = ())" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd41d8cd, 0xe3b0c44, 0xda39a3e) = ())" % __pyx_checksum)
 *     __pyx_result = BackgroundProvider.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BackgroundProvider__set_state(<BackgroundProvider> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd41d8cd, 0xe3b0c44, 0xda39a3e) = ())" % __pyx_checksum)
 *     __pyx_result = BackgroundProvider.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_BackgroundProvider__set_state(<BackgroundProvider> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = BackgroundProvider.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BackgroundProvider__set_state(<BackgroundProvider> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_BackgroundProvider__set_state(BackgroundProvider __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(2, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled___pyx_unpickle_BackgroundProvider__set_state(((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xd41d8cd, 0xe3b0c44, 0xda39a3e) = ())" % __pyx_checksum)
 *     __pyx_result = BackgroundProvider.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_BackgroundProvider__set_state(<BackgroundProvider> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_BackgroundProvider__set_state(<BackgroundProvider> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_BackgroundProvider__set_state(BackgroundProvider __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_BackgroundProvider(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.__pyx_unpickle_BackgroundProvider", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_BackgroundProvider__set_state(<BackgroundProvider> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_BackgroundProvider__set_state(BackgroundProvider __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled___pyx_unpickle_BackgroundProvider__set_state(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_BackgroundProvider__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_BackgroundProvider__set_state(BackgroundProvider __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_2 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_2 == ((Py_ssize_t)-1))) __PYX_ERR(2, 12, __pyx_L1_error)
  __pyx_t_3 = ((__pyx_t_2 > 0) != 0);
  if (__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(2, 12, __pyx_L1_error)
  __pyx_t_4 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_BackgroundProvider__set_state(BackgroundProvider __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(2, 13, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_5 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_BackgroundProvider__set_state(BackgroundProvider __pyx_result, tuple __pyx_state):
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_BackgroundProvider__set_state(<BackgroundProvider> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_BackgroundProvider__set_state(BackgroundProvider __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("lightweaver.LwCompiled.__pyx_unpickle_BackgroundProvider__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_RayleighScatterer(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_5__pyx_unpickle_RayleighScatterer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_11lightweaver_10LwCompiled_5__pyx_unpickle_RayleighScatterer = {"__pyx_unpickle_RayleighScatterer", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_5__pyx_unpickle_RayleighScatterer, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_11lightweaver_10LwCompiled_5__pyx_unpickle_RayleighScatterer(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_RayleighScatterer (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_RayleighScatterer", 1, 3, 3, 1); __PYX_ERR(2, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_RayleighScatterer", 1, 3, 3, 2); __PYX_ERR(2, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_RayleighScatterer") < 0)) __PYX_ERR(2, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(2, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_RayleighScatterer", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("lightweaver.LwCompiled.__pyx_unpickle_RayleighScatterer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_11lightweaver_10LwCompiled_4__pyx_unpickle_RayleighScatterer(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_11lightweaver_10LwCompiled_4__pyx_unpickle_RayleighScatterer(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_RayleighScatterer", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x72ae082, 0x7fee721, 0x0bb114b):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x72ae082, 0x7fee721, 0x0bb114b) = (C, atmos, atom, lambdaLimit, lambdaRed, lines, pops, sigmaE))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__46, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x72ae082, 0x7fee721, 0x0bb114b):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x72ae082, 0x7fee721, 0x0bb114b) = (C, atmos, atom, lambdaLimit, lambdaRed, lines, pops, sigmaE))" % __pyx_checksum)
 *     __pyx_result = RayleighScatterer.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x72ae082, 0x7fee721, 0x0bb114b):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x72ae082, 0x7fee721, 0x0bb114b) = (C, atmos, atom, lambdaLimit, lambdaRed, lines, pops, sigmaE))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = RayleighScatterer.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_2, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(2, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x72ae082, 0x7fee721, 0x0bb114b):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x72ae082, 0x7fee721, 0x0bb114b) = (C, atmos, atom, lambdaLimit, lambdaRed, lines, pops, sigmaE))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x72ae082, 0x7fee721, 0x0bb114b) = (C, atmos, atom, lambdaLimit, lambdaRed, lines, pops, sigmaE))" % __pyx_checksum)
 *     __pyx_result = RayleighScatterer.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_RayleighScatterer__set_state(<RayleighScatterer> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_RayleighScatterer), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x72ae082, 0x7fee721, 0x0bb114b) = (C, atmos, atom, lambdaLimit, lambdaRed, lines, pops, sigmaE))" % __pyx_checksum)
 *     __pyx_result = RayleighScatterer.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_RayleighScatterer__set_state(<RayleighScatterer> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = RayleighScatterer.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_RayleighScatterer__set_state(<RayleighScatterer> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_RayleighScatterer__set_state(RayleighScatterer __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(2, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_f_11lightweaver_10LwCompiled___pyx_unpickle_RayleighScatterer__set_state(((struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0x72ae082, 0x7fee721, 0x0bb114b) = (C, atmos, atom, lambdaLimit, lambdaRed, lines, pops, sigmaE))" % __pyx_checksum)
 *     __pyx_result = RayleighScatterer.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_RayleighScatterer__set_state(<RayleighScatterer> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_RayleighScatterer__set_state(<RayleighScatterer> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_RayleighScatterer__set_state(RayleighScatterer __pyx_result, tuple __pyx_state):
 *     __pyx_result.C = __pyx_state[0]; __pyx_result.atmos = __pyx_state[1]; __pyx_result.atom = __pyx_state[2]; __pyx_result.lambdaLimit = __pyx_state[3]; __pyx_result.lambdaRed = __pyx_state[4]; __pyx_result.lines = __pyx_state[5]; __pyx_result.pops = __pyx_state[6]; __pyx_result.sigmaE = __pyx_state[7]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_RayleighScatterer(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("lightweaver.LwCompiled.__pyx_unpickle_RayleighScatterer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_RayleighScatterer__set_state(<RayleighScatterer> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_RayleighScatterer__set_state(RayleighScatterer __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.C = __pyx_state[0]; __pyx_result.atmos = __pyx_state[1]; __pyx_result.atom = __pyx_state[2]; __pyx_result.lambdaLimit = __pyx_state[3]; __pyx_result.lambdaRed = __pyx_state[4]; __pyx_result.lines = __pyx_state[5]; __pyx_result.pops = __pyx_state[6]; __pyx_result.sigmaE = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_11lightweaver_10LwCompiled___pyx_unpickle_RayleighScatterer__set_state(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  __pyx_t_8CmoArray_f64 __pyx_t_2;
  bool __pyx_t_3;
  __Pyx_memviewslice __pyx_t_4 = { 0, 0, { 0 }, { 0 }, { 0 } };
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_RayleighScatterer__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_RayleighScatterer__set_state(RayleighScatterer __pyx_result, tuple __pyx_state):
 *     __pyx_result.C = __pyx_state[0]; __pyx_result.atmos = __pyx_state[1]; __pyx_result.atom = __pyx_state[2]; __pyx_result.lambdaLimit = __pyx_state[3]; __pyx_result.lambdaRed = __pyx_state[4]; __pyx_result.lines = __pyx_state[5]; __pyx_result.pops = __pyx_state[6]; __pyx_result.sigmaE = __pyx_state[7]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->C = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere))))) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->atmos);
  __Pyx_DECREF(((PyObject *)__pyx_v___pyx_result->atmos));
  __pyx_v___pyx_result->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 2, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->atom);
  __Pyx_DECREF(__pyx_v___pyx_result->atom);
  __pyx_v___pyx_result->atom = __pyx_t_1;
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->lambdaLimit = __pyx_t_2;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 4, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "list", Py_TYPE(__pyx_t_1)->tp_name), 0))) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->lambdaRed);
  __Pyx_DECREF(__pyx_v___pyx_result->lambdaRed);
  __pyx_v___pyx_result->lambdaRed = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 5, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_3 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->lines = __pyx_t_3;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 6, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(__pyx_t_1, PyBUF_WRITABLE); if (unlikely(!__pyx_t_4.memview)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_XDEC_MEMVIEW(&__pyx_v___pyx_result->pops, 0);
  __pyx_v___pyx_result->pops = __pyx_t_4;
  __pyx_t_4.memview = NULL;
  __pyx_t_4.data = NULL;
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 7, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result->sigmaE = __pyx_t_2;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_RayleighScatterer__set_state(RayleighScatterer __pyx_result, tuple __pyx_state):
 *     __pyx_result.C = __pyx_state[0]; __pyx_result.atmos = __pyx_state[1]; __pyx_result.atom = __pyx_state[2]; __pyx_result.lambdaLimit = __pyx_state[3]; __pyx_result.lambdaRed = __pyx_state[4]; __pyx_result.lines = __pyx_state[5]; __pyx_result.pops = __pyx_state[6]; __pyx_result.sigmaE = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(2, 13, __pyx_L1_error)
  }
  __pyx_t_6 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(2, 13, __pyx_L1_error)
  __pyx_t_7 = ((__pyx_t_6 > 8) != 0);
  if (__pyx_t_7) {
  } else {
    __pyx_t_5 = __pyx_t_7;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_7 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(2, 13, __pyx_L1_error)
  __pyx_t_8 = (__pyx_t_7 != 0);
  __pyx_t_5 = __pyx_t_8;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_5) {

    /* "(tree fragment)":14
 *     __pyx_result.C = __pyx_state[0]; __pyx_result.atmos = __pyx_state[1]; __pyx_result.atom = __pyx_state[2]; __pyx_result.lambdaLimit = __pyx_state[3]; __pyx_result.lambdaRed = __pyx_state[4]; __pyx_result.lines = __pyx_state[5]; __pyx_result.pops = __pyx_state[6]; __pyx_result.sigmaE = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[8])             # <<<<<<<<<<<<<<
 */
    __pyx_t_9 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_update); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(2, 14, __pyx_L1_error)
    }
    __pyx_t_9 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 8, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_11 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
      }
    }
    __pyx_t_1 = (__pyx_t_11) ? __Pyx_PyObject_Call2Args(__pyx_t_10, __pyx_t_11, __pyx_t_9) : __Pyx_PyObject_CallOneArg(__pyx_t_10, __pyx_t_9);
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_RayleighScatterer__set_state(RayleighScatterer __pyx_result, tuple __pyx_state):
 *     __pyx_result.C = __pyx_state[0]; __pyx_result.atmos = __pyx_state[1]; __pyx_result.atom = __pyx_state[2]; __pyx_result.lambdaLimit = __pyx_state[3]; __pyx_result.lambdaRed = __pyx_state[4]; __pyx_result.lines = __pyx_state[5]; __pyx_result.pops = __pyx_state[6]; __pyx_result.sigmaE = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[8])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_RayleighScatterer__set_state(<RayleighScatterer> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_RayleighScatterer__set_state(RayleighScatterer __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.C = __pyx_state[0]; __pyx_result.atmos = __pyx_state[1]; __pyx_result.atom = __pyx_state[2]; __pyx_result.lambdaLimit = __pyx_state[3]; __pyx_result.lambdaRed = __pyx_state[4]; __pyx_result.lines = __pyx_state[5]; __pyx_result.pops = __pyx_state[6]; __pyx_result.sigmaE = __pyx_state[7]
 *     if len(__pyx_state) > 8 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __PYX_XDEC_MEMVIEW(&__pyx_t_4, 1);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("lightweaver.LwCompiled.__pyx_unpickle_RayleighScatterer__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":734
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":735
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 735, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":734
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":737
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":738
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":737
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":740
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":741
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":740
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":743
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":744
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":743
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":746
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":747
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":746
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":749
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":750
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = (PyDataType_HASSUBARRAY(__pyx_v_d) != 0);
  if (__pyx_t_1) {

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":751
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":750
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":753
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":749
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":928
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":929
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":930
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":928
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":932
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":933
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":934
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = ((__pyx_v_base == NULL) != 0);
  if (__pyx_t_1) {

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":935
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":934
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":936
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":932
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":940
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":941
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":942
 * cdef inline int import_array() except -1:
 *     try:
 *         __pyx_import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 942, __pyx_L3_error)

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":941
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":943
 *     try:
 *         __pyx_import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 943, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":944
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 944, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 944, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":941
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":940
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":946
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":947
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":948
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 948, __pyx_L3_error)

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":947
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":949
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 949, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":950
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 950, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 950, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":947
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":946
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":952
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":953
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":954
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 954, __pyx_L3_error)

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":953
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":955
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 955, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GOTREF(__pyx_t_7);

      /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":956
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef extern from *:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__48, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 956, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 956, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":953
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":952
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_timedelta64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_timedelta64_object", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":978
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyTimedeltaArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyTimedeltaArrType_Type));
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":966
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":981
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_datetime64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_datetime64_object", 0);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":993
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyDatetimeArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyDatetimeArrType_Type));
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":981
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":996
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

static CYTHON_INLINE npy_datetime __pyx_f_5numpy_get_datetime64_value(PyObject *__pyx_v_obj) {
  npy_datetime __pyx_r;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":1003
 *     also needed.  That can be found using `get_datetime64_unit`.
 *     """
 *     return (<PyDatetimeScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyDatetimeScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":996
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":1006
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

static CYTHON_INLINE npy_timedelta __pyx_f_5numpy_get_timedelta64_value(PyObject *__pyx_v_obj) {
  npy_timedelta __pyx_r;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":1010
 *     returns the int64 value underlying scalar numpy timedelta64 object
 *     """
 *     return (<PyTimedeltaScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyTimedeltaScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":1006
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":1013
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

static CYTHON_INLINE NPY_DATETIMEUNIT __pyx_f_5numpy_get_datetime64_unit(PyObject *__pyx_v_obj) {
  NPY_DATETIMEUNIT __pyx_r;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":1017
 *     returns the unit part of the dtype for a numpy datetime64 object.
 *     """
 *     return <NPY_DATETIMEUNIT>(<PyDatetimeScalarObject*>obj).obmeta.base             # <<<<<<<<<<<<<<
 */
  __pyx_r = ((NPY_DATETIMEUNIT)((PyDatetimeScalarObject *)__pyx_v_obj)->obmeta.base);
  goto __pyx_L0;

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":1013
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "carray.to_py":112
 * 
 * @cname("__Pyx_carray_to_py_Py_ssize_t")
 * cdef inline list __Pyx_carray_to_py_Py_ssize_t(base_type *v, Py_ssize_t length):             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef object value
 */

static CYTHON_INLINE PyObject *__Pyx_carray_to_py_Py_ssize_t(Py_ssize_t *__pyx_v_v, Py_ssize_t __pyx_v_length) {
  size_t __pyx_v_i;
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_v_l = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_carray_to_py_Py_ssize_t", 0);

  /* "carray.to_py":115
 *     cdef size_t i
 *     cdef object value
 *     l = PyList_New(length)             # <<<<<<<<<<<<<<
 *     for i in range(<size_t>length):
 *         value = v[i]
 */
  __pyx_t_1 = PyList_New(__pyx_v_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_l = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "carray.to_py":116
 *     cdef object value
 *     l = PyList_New(length)
 *     for i in range(<size_t>length):             # <<<<<<<<<<<<<<
 *         value = v[i]
 *         Py_INCREF(value)
 */
  __pyx_t_2 = ((size_t)__pyx_v_length);
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "carray.to_py":117
 *     l = PyList_New(length)
 *     for i in range(<size_t>length):
 *         value = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(value)
 *         PyList_SET_ITEM(l, i, value)
 */
    __pyx_t_1 = PyInt_FromSsize_t((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "carray.to_py":118
 *     for i in range(<size_t>length):
 *         value = v[i]
 *         Py_INCREF(value)             # <<<<<<<<<<<<<<
 *         PyList_SET_ITEM(l, i, value)
 *     return l
 */
    Py_INCREF(__pyx_v_value);

    /* "carray.to_py":119
 *         value = v[i]
 *         Py_INCREF(value)
 *         PyList_SET_ITEM(l, i, value)             # <<<<<<<<<<<<<<
 *     return l
 * 
 */
    PyList_SET_ITEM(__pyx_v_l, __pyx_v_i, __pyx_v_value);
  }

  /* "carray.to_py":120
 *         Py_INCREF(value)
 *         PyList_SET_ITEM(l, i, value)
 *     return l             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_l);
  __pyx_r = __pyx_v_l;
  goto __pyx_L0;

  /* "carray.to_py":112
 * 
 * @cname("__Pyx_carray_to_py_Py_ssize_t")
 * cdef inline list __Pyx_carray_to_py_Py_ssize_t(base_type *v, Py_ssize_t length):             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef object value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("carray.to_py.__Pyx_carray_to_py_Py_ssize_t", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XDECREF(__pyx_v_l);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "carray.to_py":124
 * 
 * @cname("__Pyx_carray_to_tuple_Py_ssize_t")
 * cdef inline tuple __Pyx_carray_to_tuple_Py_ssize_t(base_type *v, Py_ssize_t length):             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef object value
 */

static CYTHON_INLINE PyObject *__Pyx_carray_to_tuple_Py_ssize_t(Py_ssize_t *__pyx_v_v, Py_ssize_t __pyx_v_length) {
  size_t __pyx_v_i;
  PyObject *__pyx_v_value = 0;
  PyObject *__pyx_v_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  size_t __pyx_t_2;
  size_t __pyx_t_3;
  size_t __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_carray_to_tuple_Py_ssize_t", 0);

  /* "carray.to_py":127
 *     cdef size_t i
 *     cdef object value
 *     t = PyTuple_New(length)             # <<<<<<<<<<<<<<
 *     for i in range(<size_t>length):
 *         value = v[i]
 */
  __pyx_t_1 = PyTuple_New(__pyx_v_length); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_t = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "carray.to_py":128
 *     cdef object value
 *     t = PyTuple_New(length)
 *     for i in range(<size_t>length):             # <<<<<<<<<<<<<<
 *         value = v[i]
 *         Py_INCREF(value)
 */
  __pyx_t_2 = ((size_t)__pyx_v_length);
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "carray.to_py":129
 *     t = PyTuple_New(length)
 *     for i in range(<size_t>length):
 *         value = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(value)
 *         PyTuple_SET_ITEM(t, i, value)
 */
    __pyx_t_1 = PyInt_FromSsize_t((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 129, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_value, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "carray.to_py":130
 *     for i in range(<size_t>length):
 *         value = v[i]
 *         Py_INCREF(value)             # <<<<<<<<<<<<<<
 *         PyTuple_SET_ITEM(t, i, value)
 *     return t
 */
    Py_INCREF(__pyx_v_value);

    /* "carray.to_py":131
 *         value = v[i]
 *         Py_INCREF(value)
 *         PyTuple_SET_ITEM(t, i, value)             # <<<<<<<<<<<<<<
 *     return t
 */
    PyTuple_SET_ITEM(__pyx_v_t, __pyx_v_i, __pyx_v_value);
  }

  /* "carray.to_py":132
 *         Py_INCREF(value)
 *         PyTuple_SET_ITEM(t, i, value)
 *     return t             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_t);
  __pyx_r = __pyx_v_t;
  goto __pyx_L0;

  /* "carray.to_py":124
 * 
 * @cname("__Pyx_carray_to_tuple_Py_ssize_t")
 * cdef inline tuple __Pyx_carray_to_tuple_Py_ssize_t(base_type *v, Py_ssize_t length):             # <<<<<<<<<<<<<<
 *     cdef size_t i
 *     cdef object value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("carray.to_py.__Pyx_carray_to_tuple_Py_ssize_t", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_value);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":123
 *         cdef bint dtype_is_object
 * 
 *     def __cinit__(array self, tuple shape, Py_ssize_t itemsize, format not None,             # <<<<<<<<<<<<<<
 *                   mode="c", bint allocate_buffer=True):
 * 
 */

/* Python wrapper */
static int __pyx_array___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_array___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_shape = 0;
  Py_ssize_t __pyx_v_itemsize;
  PyObject *__pyx_v_format = 0;
  PyObject *__pyx_v_mode = 0;
  int __pyx_v_allocate_buffer;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_shape,&__pyx_n_s_itemsize,&__pyx_n_s_format,&__pyx_n_s_mode,&__pyx_n_s_allocate_buffer,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[3] = ((PyObject *)__pyx_n_s_c);
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_shape)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_itemsize)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, 1); __PYX_ERR(2, 123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_format)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, 2); __PYX_ERR(2, 123, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_mode);
          if (value) { values[3] = value; kw_args--; }
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_allocate_buffer);
          if (value) { values[4] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(2, 123, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_shape = ((PyObject*)values[0]);
    __pyx_v_itemsize = __Pyx_PyIndex_AsSsize_t(values[1]); if (unlikely((__pyx_v_itemsize == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(2, 123, __pyx_L3_error)
    __pyx_v_format = values[2];
    __pyx_v_mode = values[3];
    if (values[4]) {
      __pyx_v_allocate_buffer = __Pyx_PyObject_IsTrue(values[4]); if (unlikely((__pyx_v_allocate_buffer == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 124, __pyx_L3_error)
    } else {

      /* "View.MemoryView":124
 * 
 *     def __cinit__(array self, tuple shape, Py_ssize_t itemsize, format not None,
 *                   mode="c", bint allocate_buffer=True):             # <<<<<<<<<<<<<<
 * 
 *         cdef int idx
 */
      __pyx_v_allocate_buffer = ((int)1);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 3, 5, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 123, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("View.MemoryView.array.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_shape), (&PyTuple_Type), 1, "shape", 1))) __PYX_ERR(2, 123, __pyx_L1_error)
  if (unlikely(((PyObject *)__pyx_v_format) == Py_None)) {
    PyErr_Format(PyExc_TypeError, "Argument '%.200s' must not be None", "format"); __PYX_ERR(2, 123, __pyx_L1_error)
  }
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__(((struct __pyx_array_obj *)__pyx_v_self), __pyx_v_shape, __pyx_v_itemsize, __pyx_v_format, __pyx_v_mode, __pyx_v_allocate_buffer);

  /* "View.MemoryView":123
 *         cdef bint dtype_is_object
 * 
 *     def __cinit__(array self, tuple shape, Py_ssize_t itemsize, format not None,             # <<<<<<<<<<<<<<
 *                   mode="c", bint allocate_buffer=True):
 * 
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array___cinit__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_shape, Py_ssize_t __pyx_v_itemsize, PyObject *__pyx_v_format, PyObject *__pyx_v_mode, int __pyx_v_allocate_buffer) {
  int __pyx_v_idx;
  Py_ssize_t __pyx_v_i;
  Py_ssize_t __pyx_v_dim;
  PyObject **__pyx_v_p;
  char __pyx_v_order;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  char *__pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  Py_ssize_t __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF(__pyx_v_format);

  /* "View.MemoryView":130
 *         cdef PyObject **p
 * 
 *         self.ndim = <int> len(shape)             # <<<<<<<<<<<<<<
 *         self.itemsize = itemsize
 * 
 */
  if (unlikely(__pyx_v_shape == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(2, 130, __pyx_L1_error)
  }
  __pyx_t_1 = PyTuple_GET_SIZE(__pyx_v_shape); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(2, 130, __pyx_L1_error)
  __pyx_v_self->ndim = ((int)__pyx_t_1);

  /* "View.MemoryView":131
 * 
 *         self.ndim = <int> len(shape)
 *         self.itemsize = itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not self.ndim:
 */
  __pyx_v_self->itemsize = __pyx_v_itemsize;

  /* "View.MemoryView":133
 *         self.itemsize = itemsize
 * 
 *         if not self.ndim:             # <<<<<<<<<<<<<<
 *             raise ValueError("Empty shape tuple for cython.array")
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_self->ndim != 0)) != 0);
  if (unlikely(__pyx_t_2)) {

    /* "View.MemoryView":134
 * 
 *         if not self.ndim:
 *             raise ValueError("Empty shape tuple for cython.array")             # <<<<<<<<<<<<<<
 * 
 *         if itemsize <= 0:
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 134, __pyx_L1_error)

    /* "View.MemoryView":133
 *         self.itemsize = itemsize
 * 
 *         if not self.ndim:             # <<<<<<<<<<<<<<
 *             raise ValueError("Empty shape tuple for cython.array")
 * 
 */
  }

  /* "View.MemoryView":136
 *             raise ValueError("Empty shape tuple for cython.array")
 * 
 *         if itemsize <= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("itemsize <= 0 for cython.array")
 * 
 */
  __pyx_t_2 = ((__pyx_v_itemsize <= 0) != 0);
  if (unlikely(__pyx_t_2)) {

    /* "View.MemoryView":137
 * 
 *         if itemsize <= 0:
 *             raise ValueError("itemsize <= 0 for cython.array")             # <<<<<<<<<<<<<<
 * 
 *         if not isinstance(format, bytes):
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 137, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 137, __pyx_L1_error)

    /* "View.MemoryView":136
 *             raise ValueError("Empty shape tuple for cython.array")
 * 
 *         if itemsize <= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("itemsize <= 0 for cython.array")
 * 
 */
  }

  /* "View.MemoryView":139
 *             raise ValueError("itemsize <= 0 for cython.array")
 * 
 *         if not isinstance(format, bytes):             # <<<<<<<<<<<<<<
 *             format = format.encode('ASCII')
 *         self._format = format  # keep a reference to the byte string
 */
  __pyx_t_2 = PyBytes_Check(__pyx_v_format); 
  __pyx_t_4 = ((!(__pyx_t_2 != 0)) != 0);
  if (__pyx_t_4) {

    /* "View.MemoryView":140
 * 
 *         if not isinstance(format, bytes):
 *             format = format.encode('ASCII')             # <<<<<<<<<<<<<<
 *         self._format = format  # keep a reference to the byte string
 *         self.format = self._format
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_format, __pyx_n_s_encode); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
      }
    }
    __pyx_t_3 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_5, __pyx_t_6, __pyx_n_s_ASCII) : __Pyx_PyObject_CallOneArg(__pyx_t_5, __pyx_n_s_ASCII);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF_SET(__pyx_v_format, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "View.MemoryView":139
 *             raise ValueError("itemsize <= 0 for cython.array")
 * 
 *         if not isinstance(format, bytes):             # <<<<<<<<<<<<<<
 *             format = format.encode('ASCII')
 *         self._format = format  # keep a reference to the byte string
 */
  }

  /* "View.MemoryView":141
 *         if not isinstance(format, bytes):
 *             format = format.encode('ASCII')
 *         self._format = format  # keep a reference to the byte string             # <<<<<<<<<<<<<<
 *         self.format = self._format
 * 
 */
  if (!(likely(PyBytes_CheckExact(__pyx_v_format))||((__pyx_v_format) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_v_format)->tp_name), 0))) __PYX_ERR(2, 141, __pyx_L1_error)
  __pyx_t_3 = __pyx_v_format;
  __Pyx_INCREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF(__pyx_v_self->_format);
  __Pyx_DECREF(__pyx_v_self->_format);
  __pyx_v_self->_format = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "View.MemoryView":142
 *             format = format.encode('ASCII')
 *         self._format = format  # keep a reference to the byte string
 *         self.format = self._format             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (unlikely(__pyx_v_self->_format == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "expected bytes, NoneType found");
    __PYX_ERR(2, 142, __pyx_L1_error)
  }
  __pyx_t_7 = __Pyx_PyBytes_AsWritableString(__pyx_v_self->_format); if (unlikely((!__pyx_t_7) && PyErr_Occurred())) __PYX_ERR(2, 142, __pyx_L1_error)
  __pyx_v_self->format = __pyx_t_7;

  /* "View.MemoryView":145
 * 
 * 
 *         self._shape = <Py_ssize_t *> PyObject_Malloc(sizeof(Py_ssize_t)*self.ndim*2)             # <<<<<<<<<<<<<<
 *         self._strides = self._shape + self.ndim
 * 
 */
  __pyx_v_self->_shape = ((Py_ssize_t *)PyObject_Malloc((((sizeof(Py_ssize_t)) * __pyx_v_self->ndim) * 2)));

  /* "View.MemoryView":146
 * 
 *         self._shape = <Py_ssize_t *> PyObject_Malloc(sizeof(Py_ssize_t)*self.ndim*2)
 *         self._strides = self._shape + self.ndim             # <<<<<<<<<<<<<<
 * 
 *         if not self._shape:
 */
  __pyx_v_self->_strides = (__pyx_v_self->_shape + __pyx_v_self->ndim);

  /* "View.MemoryView":148
 *         self._strides = self._shape + self.ndim
 * 
 *         if not self._shape:             # <<<<<<<<<<<<<<
 *             raise MemoryError("unable to allocate shape and strides.")
 * 
 */
  __pyx_t_4 = ((!(__pyx_v_self->_shape != 0)) != 0);
  if (unlikely(__pyx_t_4)) {

    /* "View.MemoryView":149
 * 
 *         if not self._shape:
 *             raise MemoryError("unable to allocate shape and strides.")             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_MemoryError, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 149, __pyx_L1_error)

    /* "View.MemoryView":148
 *         self._strides = self._shape + self.ndim
 * 
 *         if not self._shape:             # <<<<<<<<<<<<<<
 *             raise MemoryError("unable to allocate shape and strides.")
 * 
 */
  }

  /* "View.MemoryView":152
 * 
 * 
 *         for idx, dim in enumerate(shape):             # <<<<<<<<<<<<<<
 *             if dim <= 0:
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 */
  __pyx_t_8 = 0;
  __pyx_t_3 = __pyx_v_shape; __Pyx_INCREF(__pyx_t_3); __pyx_t_1 = 0;
  for (;;) {
    if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_1); __Pyx_INCREF(__pyx_t_5); __pyx_t_1++; if (unlikely(0 < 0)) __PYX_ERR(2, 152, __pyx_L1_error)
    #else
    __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_1); __pyx_t_1++; if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_t_5); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(2, 152, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_dim = __pyx_t_9;
    __pyx_v_idx = __pyx_t_8;
    __pyx_t_8 = (__pyx_t_8 + 1);

    /* "View.MemoryView":153
 * 
 *         for idx, dim in enumerate(shape):
 *             if dim <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 *             self._shape[idx] = dim
 */
    __pyx_t_4 = ((__pyx_v_dim <= 0) != 0);
    if (unlikely(__pyx_t_4)) {

      /* "View.MemoryView":154
 *         for idx, dim in enumerate(shape):
 *             if dim <= 0:
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))             # <<<<<<<<<<<<<<
 *             self._shape[idx] = dim
 * 
 */
      __pyx_t_5 = __Pyx_PyInt_From_int(__pyx_v_idx); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyInt_FromSsize_t(__pyx_v_dim); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_6);
      __pyx_t_5 = 0;
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyString_Format(__pyx_kp_s_Invalid_shape_in_axis_d_d, __pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_6); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 154, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_Raise(__pyx_t_10, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __PYX_ERR(2, 154, __pyx_L1_error)

      /* "View.MemoryView":153
 * 
 *         for idx, dim in enumerate(shape):
 *             if dim <= 0:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 *             self._shape[idx] = dim
 */
    }

    /* "View.MemoryView":155
 *             if dim <= 0:
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 *             self._shape[idx] = dim             # <<<<<<<<<<<<<<
 * 
 *         cdef char order
 */
    (__pyx_v_self->_shape[__pyx_v_idx]) = __pyx_v_dim;

    /* "View.MemoryView":152
 * 
 * 
 *         for idx, dim in enumerate(shape):             # <<<<<<<<<<<<<<
 *             if dim <= 0:
 *                 raise ValueError("Invalid shape in axis %d: %d." % (idx, dim))
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "View.MemoryView":158
 * 
 *         cdef char order
 *         if mode == 'fortran':             # <<<<<<<<<<<<<<
 *             order = b'F'
 *             self.mode = u'fortran'
 */
  __pyx_t_4 = (__Pyx_PyString_Equals(__pyx_v_mode, __pyx_n_s_fortran, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(2, 158, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "View.MemoryView":159
 *         cdef char order
 *         if mode == 'fortran':
 *             order = b'F'             # <<<<<<<<<<<<<<
 *             self.mode = u'fortran'
 *         elif mode == 'c':
 */
    __pyx_v_order = 'F';

    /* "View.MemoryView":160
 *         if mode == 'fortran':
 *             order = b'F'
 *             self.mode = u'fortran'             # <<<<<<<<<<<<<<
 *         elif mode == 'c':
 *             order = b'C'
 */
    __Pyx_INCREF(__pyx_n_u_fortran);
    __Pyx_GIVEREF(__pyx_n_u_fortran);
    __Pyx_GOTREF(__pyx_v_self->mode);
    __Pyx_DECREF(__pyx_v_self->mode);
    __pyx_v_self->mode = __pyx_n_u_fortran;

    /* "View.MemoryView":158
 * 
 *         cdef char order
 *         if mode == 'fortran':             # <<<<<<<<<<<<<<
 *             order = b'F'
 *             self.mode = u'fortran'
 */
    goto __pyx_L10;
  }

  /* "View.MemoryView":161
 *             order = b'F'
 *             self.mode = u'fortran'
 *         elif mode == 'c':             # <<<<<<<<<<<<<<
 *             order = b'C'
 *             self.mode = u'c'
 */
  __pyx_t_4 = (__Pyx_PyString_Equals(__pyx_v_mode, __pyx_n_s_c, Py_EQ)); if (unlikely(__pyx_t_4 < 0)) __PYX_ERR(2, 161, __pyx_L1_error)
  if (likely(__pyx_t_4)) {

    /* "View.MemoryView":162
 *             self.mode = u'fortran'
 *         elif mode == 'c':
 *             order = b'C'             # <<<<<<<<<<<<<<
 *             self.mode = u'c'
 *         else:
 */
    __pyx_v_order = 'C';

    /* "View.MemoryView":163
 *         elif mode == 'c':
 *             order = b'C'
 *             self.mode = u'c'             # <<<<<<<<<<<<<<
 *         else:
 *             raise ValueError("Invalid mode, expected 'c' or 'fortran', got %s" % mode)
 */
    __Pyx_INCREF(__pyx_n_u_c);
    __Pyx_GIVEREF(__pyx_n_u_c);
    __Pyx_GOTREF(__pyx_v_self->mode);
    __Pyx_DECREF(__pyx_v_self->mode);
    __pyx_v_self->mode = __pyx_n_u_c;

    /* "View.MemoryView":161
 *             order = b'F'
 *             self.mode = u'fortran'
 *         elif mode == 'c':             # <<<<<<<<<<<<<<
 *             order = b'C'
 *             self.mode = u'c'
 */
    goto __pyx_L10;
  }

  /* "View.MemoryView":165
 *             self.mode = u'c'
 *         else:
 *             raise ValueError("Invalid mode, expected 'c' or 'fortran', got %s" % mode)             # <<<<<<<<<<<<<<
 * 
 *         self.len = fill_contig_strides_array(self._shape, self._strides,
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyString_FormatSafe(__pyx_kp_s_Invalid_mode_expected_c_or_fortr, __pyx_v_mode); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_t_10, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __PYX_ERR(2, 165, __pyx_L1_error)
  }
  __pyx_L10:;

  /* "View.MemoryView":167
 *             raise ValueError("Invalid mode, expected 'c' or 'fortran', got %s" % mode)
 * 
 *         self.len = fill_contig_strides_array(self._shape, self._strides,             # <<<<<<<<<<<<<<
 *                                              itemsize, self.ndim, order)
 * 
 */
  __pyx_v_self->len = __pyx_fill_contig_strides_array(__pyx_v_self->_shape, __pyx_v_self->_strides, __pyx_v_itemsize, __pyx_v_self->ndim, __pyx_v_order);

  /* "View.MemoryView":170
 *                                              itemsize, self.ndim, order)
 * 
 *         self.free_data = allocate_buffer             # <<<<<<<<<<<<<<
 *         self.dtype_is_object = format == b'O'
 *         if allocate_buffer:
 */
  __pyx_v_self->free_data = __pyx_v_allocate_buffer;

  /* "View.MemoryView":171
 * 
 *         self.free_data = allocate_buffer
 *         self.dtype_is_object = format == b'O'             # <<<<<<<<<<<<<<
 *         if allocate_buffer:
 * 
 */
  __pyx_t_10 = PyObject_RichCompare(__pyx_v_format, __pyx_n_b_O, Py_EQ); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 171, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_10); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 171, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_v_self->dtype_is_object = __pyx_t_4;

  /* "View.MemoryView":172
 *         self.free_data = allocate_buffer
 *         self.dtype_is_object = format == b'O'
 *         if allocate_buffer:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_4 = (__pyx_v_allocate_buffer != 0);
  if (__pyx_t_4) {

    /* "View.MemoryView":175
 * 
 * 
 *             self.data = <char *>malloc(self.len)             # <<<<<<<<<<<<<<
 *             if not self.data:
 *                 raise MemoryError("unable to allocate array data.")
 */
    __pyx_v_self->data = ((char *)malloc(__pyx_v_self->len));

    /* "View.MemoryView":176
 * 
 *             self.data = <char *>malloc(self.len)
 *             if not self.data:             # <<<<<<<<<<<<<<
 *                 raise MemoryError("unable to allocate array data.")
 * 
 */
    __pyx_t_4 = ((!(__pyx_v_self->data != 0)) != 0);
    if (unlikely(__pyx_t_4)) {

      /* "View.MemoryView":177
 *             self.data = <char *>malloc(self.len)
 *             if not self.data:
 *                 raise MemoryError("unable to allocate array data.")             # <<<<<<<<<<<<<<
 * 
 *             if self.dtype_is_object:
 */
      __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_MemoryError, __pyx_tuple__52, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(2, 177, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_Raise(__pyx_t_10, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __PYX_ERR(2, 177, __pyx_L1_error)

      /* "View.MemoryView":176
 * 
 *             self.data = <char *>malloc(self.len)
 *             if not self.data:             # <<<<<<<<<<<<<<
 *                 raise MemoryError("unable to allocate array data.")
 * 
 */
    }

    /* "View.MemoryView":179
 *                 raise MemoryError("unable to allocate array data.")
 * 
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 p = <PyObject **> self.data
 *                 for i in range(self.len / itemsize):
 */
    __pyx_t_4 = (__pyx_v_self->dtype_is_object != 0);
    if (__pyx_t_4) {

      /* "View.MemoryView":180
 * 
 *             if self.dtype_is_object:
 *                 p = <PyObject **> self.data             # <<<<<<<<<<<<<<
 *                 for i in range(self.len / itemsize):
 *                     p[i] = Py_None
 */
      __pyx_v_p = ((PyObject **)__pyx_v_self->data);

      /* "View.MemoryView":181
 *             if self.dtype_is_object:
 *                 p = <PyObject **> self.data
 *                 for i in range(self.len / itemsize):             # <<<<<<<<<<<<<<
 *                     p[i] = Py_None
 *                     Py_INCREF(Py_None)
 */
      if (unlikely(__pyx_v_itemsize == 0)) {
        PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
        __PYX_ERR(2, 181, __pyx_L1_error)
      }
      else if (sizeof(Py_ssize_t) == sizeof(long) && (!(((Py_ssize_t)-1) > 0)) && unlikely(__pyx_v_itemsize == (Py_ssize_t)-1)  && unlikely(UNARY_NEG_WOULD_OVERFLOW(__pyx_v_self->len))) {
        PyErr_SetString(PyExc_OverflowError, "value too large to perform division");
        __PYX_ERR(2, 181, __pyx_L1_error)
      }
      __pyx_t_1 = __Pyx_div_Py_ssize_t(__pyx_v_self->len, __pyx_v_itemsize);
      __pyx_t_9 = __pyx_t_1;
      for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_9; __pyx_t_11+=1) {
        __pyx_v_i = __pyx_t_11;

        /* "View.MemoryView":182
 *                 p = <PyObject **> self.data
 *                 for i in range(self.len / itemsize):
 *                     p[i] = Py_None             # <<<<<<<<<<<<<<
 *                     Py_INCREF(Py_None)
 * 
 */
        (__pyx_v_p[__pyx_v_i]) = Py_None;

        /* "View.MemoryView":183
 *                 for i in range(self.len / itemsize):
 *                     p[i] = Py_None
 *                     Py_INCREF(Py_None)             # <<<<<<<<<<<<<<
 * 
 *     @cname('getbuffer')
 */
        Py_INCREF(Py_None);
      }

      /* "View.MemoryView":179
 *                 raise MemoryError("unable to allocate array data.")
 * 
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 p = <PyObject **> self.data
 *                 for i in range(self.len / itemsize):
 */
    }

    /* "View.MemoryView":172
 *         self.free_data = allocate_buffer
 *         self.dtype_is_object = format == b'O'
 *         if allocate_buffer:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  }

  /* "View.MemoryView":123
 *         cdef bint dtype_is_object
 * 
 *     def __cinit__(array self, tuple shape, Py_ssize_t itemsize, format not None,             # <<<<<<<<<<<<<<
 *                   mode="c", bint allocate_buffer=True):
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("View.MemoryView.array.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_format);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":186
 * 
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):             # <<<<<<<<<<<<<<
 *         cdef int bufmode = -1
 *         if self.mode == u"c":
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_array_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_array_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__(((struct __pyx_array_obj *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array_2__getbuffer__(struct __pyx_array_obj *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_bufmode;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  char *__pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  if (__pyx_v_info == NULL) {
    PyErr_SetString(PyExc_BufferError, "PyObject_GetBuffer: view==NULL argument is obsolete");
    return -1;
  }
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "View.MemoryView":187
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         cdef int bufmode = -1             # <<<<<<<<<<<<<<
 *         if self.mode == u"c":
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 */
  __pyx_v_bufmode = -1;

  /* "View.MemoryView":188
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         cdef int bufmode = -1
 *         if self.mode == u"c":             # <<<<<<<<<<<<<<
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":
 */
  __pyx_t_1 = (__Pyx_PyUnicode_Equals(__pyx_v_self->mode, __pyx_n_u_c, Py_EQ)); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(2, 188, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":189
 *         cdef int bufmode = -1
 *         if self.mode == u"c":
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS             # <<<<<<<<<<<<<<
 *         elif self.mode == u"fortran":
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 */
    __pyx_v_bufmode = (PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS);

    /* "View.MemoryView":188
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         cdef int bufmode = -1
 *         if self.mode == u"c":             # <<<<<<<<<<<<<<
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":190
 *         if self.mode == u"c":
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":             # <<<<<<<<<<<<<<
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):
 */
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_v_self->mode, __pyx_n_u_fortran, Py_EQ)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 190, __pyx_L1_error)
  __pyx_t_1 = (__pyx_t_2 != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":191
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS             # <<<<<<<<<<<<<<
 *         if not (flags & bufmode):
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 */
    __pyx_v_bufmode = (PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS);

    /* "View.MemoryView":190
 *         if self.mode == u"c":
 *             bufmode = PyBUF_C_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         elif self.mode == u"fortran":             # <<<<<<<<<<<<<<
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):
 */
  }
  __pyx_L3:;

  /* "View.MemoryView":192
 *         elif self.mode == u"fortran":
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):             # <<<<<<<<<<<<<<
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 *         info.buf = self.data
 */
  __pyx_t_1 = ((!((__pyx_v_flags & __pyx_v_bufmode) != 0)) != 0);
  if (unlikely(__pyx_t_1)) {

    /* "View.MemoryView":193
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")             # <<<<<<<<<<<<<<
 *         info.buf = self.data
 *         info.len = self.len
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 193, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 193, __pyx_L1_error)

    /* "View.MemoryView":192
 *         elif self.mode == u"fortran":
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):             # <<<<<<<<<<<<<<
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 *         info.buf = self.data
 */
  }

  /* "View.MemoryView":194
 *         if not (flags & bufmode):
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 *         info.buf = self.data             # <<<<<<<<<<<<<<
 *         info.len = self.len
 *         info.ndim = self.ndim
 */
  __pyx_t_4 = __pyx_v_self->data;
  __pyx_v_info->buf = __pyx_t_4;

  /* "View.MemoryView":195
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")
 *         info.buf = self.data
 *         info.len = self.len             # <<<<<<<<<<<<<<
 *         info.ndim = self.ndim
 *         info.shape = self._shape
 */
  __pyx_t_5 = __pyx_v_self->len;
  __pyx_v_info->len = __pyx_t_5;

  /* "View.MemoryView":196
 *         info.buf = self.data
 *         info.len = self.len
 *         info.ndim = self.ndim             # <<<<<<<<<<<<<<
 *         info.shape = self._shape
 *         info.strides = self._strides
 */
  __pyx_t_6 = __pyx_v_self->ndim;
  __pyx_v_info->ndim = __pyx_t_6;

  /* "View.MemoryView":197
 *         info.len = self.len
 *         info.ndim = self.ndim
 *         info.shape = self._shape             # <<<<<<<<<<<<<<
 *         info.strides = self._strides
 *         info.suboffsets = NULL
 */
  __pyx_t_7 = __pyx_v_self->_shape;
  __pyx_v_info->shape = __pyx_t_7;

  /* "View.MemoryView":198
 *         info.ndim = self.ndim
 *         info.shape = self._shape
 *         info.strides = self._strides             # <<<<<<<<<<<<<<
 *         info.suboffsets = NULL
 *         info.itemsize = self.itemsize
 */
  __pyx_t_7 = __pyx_v_self->_strides;
  __pyx_v_info->strides = __pyx_t_7;

  /* "View.MemoryView":199
 *         info.shape = self._shape
 *         info.strides = self._strides
 *         info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *         info.itemsize = self.itemsize
 *         info.readonly = 0
 */
  __pyx_v_info->suboffsets = NULL;

  /* "View.MemoryView":200
 *         info.strides = self._strides
 *         info.suboffsets = NULL
 *         info.itemsize = self.itemsize             # <<<<<<<<<<<<<<
 *         info.readonly = 0
 * 
 */
  __pyx_t_5 = __pyx_v_self->itemsize;
  __pyx_v_info->itemsize = __pyx_t_5;

  /* "View.MemoryView":201
 *         info.suboffsets = NULL
 *         info.itemsize = self.itemsize
 *         info.readonly = 0             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_FORMAT:
 */
  __pyx_v_info->readonly = 0;

  /* "View.MemoryView":203
 *         info.readonly = 0
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             info.format = self.format
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_FORMAT) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":204
 * 
 *         if flags & PyBUF_FORMAT:
 *             info.format = self.format             # <<<<<<<<<<<<<<
 *         else:
 *             info.format = NULL
 */
    __pyx_t_4 = __pyx_v_self->format;
    __pyx_v_info->format = __pyx_t_4;

    /* "View.MemoryView":203
 *         info.readonly = 0
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             info.format = self.format
 *         else:
 */
    goto __pyx_L5;
  }

  /* "View.MemoryView":206
 *             info.format = self.format
 *         else:
 *             info.format = NULL             # <<<<<<<<<<<<<<
 * 
 *         info.obj = self
 */
  /*else*/ {
    __pyx_v_info->format = NULL;
  }
  __pyx_L5:;

  /* "View.MemoryView":208
 *             info.format = NULL
 * 
 *         info.obj = self             # <<<<<<<<<<<<<<
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_array_getbuffer, "getbuffer(obj, view, flags)")
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj);
  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

  /* "View.MemoryView":186
 * 
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):             # <<<<<<<<<<<<<<
 *         cdef int bufmode = -1
 *         if self.mode == u"c":
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.array.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":212
 *     __pyx_getbuffer = capsule(<void *> &__pyx_array_getbuffer, "getbuffer(obj, view, flags)")
 * 
 *     def __dealloc__(array self):             # <<<<<<<<<<<<<<
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)
 */

/* Python wrapper */
static void __pyx_array___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_array___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_array___pyx_pf_15View_dot_MemoryView_5array_4__dealloc__(((struct __pyx_array_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_array___pyx_pf_15View_dot_MemoryView_5array_4__dealloc__(struct __pyx_array_obj *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "View.MemoryView":213
 * 
 *     def __dealloc__(array self):
 *         if self.callback_free_data != NULL:             # <<<<<<<<<<<<<<
 *             self.callback_free_data(self.data)
 *         elif self.free_data:
 */
  __pyx_t_1 = ((__pyx_v_self->callback_free_data != NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":214
 *     def __dealloc__(array self):
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)             # <<<<<<<<<<<<<<
 *         elif self.free_data:
 *             if self.dtype_is_object:
 */
    __pyx_v_self->callback_free_data(__pyx_v_self->data);

    /* "View.MemoryView":213
 * 
 *     def __dealloc__(array self):
 *         if self.callback_free_data != NULL:             # <<<<<<<<<<<<<<
 *             self.callback_free_data(self.data)
 *         elif self.free_data:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":215
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)
 *         elif self.free_data:             # <<<<<<<<<<<<<<
 *             if self.dtype_is_object:
 *                 refcount_objects_in_slice(self.data, self._shape,
 */
  __pyx_t_1 = (__pyx_v_self->free_data != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":216
 *             self.callback_free_data(self.data)
 *         elif self.free_data:
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 refcount_objects_in_slice(self.data, self._shape,
 *                                           self._strides, self.ndim, False)
 */
    __pyx_t_1 = (__pyx_v_self->dtype_is_object != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":217
 *         elif self.free_data:
 *             if self.dtype_is_object:
 *                 refcount_objects_in_slice(self.data, self._shape,             # <<<<<<<<<<<<<<
 *                                           self._strides, self.ndim, False)
 *             free(self.data)
 */
      __pyx_memoryview_refcount_objects_in_slice(__pyx_v_self->data, __pyx_v_self->_shape, __pyx_v_self->_strides, __pyx_v_self->ndim, 0);

      /* "View.MemoryView":216
 *             self.callback_free_data(self.data)
 *         elif self.free_data:
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 refcount_objects_in_slice(self.data, self._shape,
 *                                           self._strides, self.ndim, False)
 */
    }

    /* "View.MemoryView":219
 *                 refcount_objects_in_slice(self.data, self._shape,
 *                                           self._strides, self.ndim, False)
 *             free(self.data)             # <<<<<<<<<<<<<<
 *         PyObject_Free(self._shape)
 * 
 */
    free(__pyx_v_self->data);

    /* "View.MemoryView":215
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)
 *         elif self.free_data:             # <<<<<<<<<<<<<<
 *             if self.dtype_is_object:
 *                 refcount_objects_in_slice(self.data, self._shape,
 */
  }
  __pyx_L3:;

  /* "View.MemoryView":220
 *                                           self._strides, self.ndim, False)
 *             free(self.data)
 *         PyObject_Free(self._shape)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  PyObject_Free(__pyx_v_self->_shape);

  /* "View.MemoryView":212
 *     __pyx_getbuffer = capsule(<void *> &__pyx_array_getbuffer, "getbuffer(obj, view, flags)")
 * 
 *     def __dealloc__(array self):             # <<<<<<<<<<<<<<
 *         if self.callback_free_data != NULL:
 *             self.callback_free_data(self.data)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":223
 * 
 *     @property
 *     def memview(self):             # <<<<<<<<<<<<<<
 *         return self.get_memview()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_5array_7memview_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_5array_7memview_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_5array_7memview___get__(((struct __pyx_array_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_5array_7memview___get__(struct __pyx_array_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":224
 *     @property
 *     def memview(self):
 *         return self.get_memview()             # <<<<<<<<<<<<<<
 * 
 *     @cname('get_memview')
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_array *)__pyx_v_self->__pyx_vtab)->get_memview(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":223
 * 
 *     @property
 *     def memview(self):             # <<<<<<<<<<<<<<
 *         return self.get_memview()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.array.memview.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":227
 * 
 *     @cname('get_memview')
 *     cdef get_memview(self):             # <<<<<<<<<<<<<<
 *         flags =  PyBUF_ANY_CONTIGUOUS|PyBUF_FORMAT|PyBUF_WRITABLE
 *         return  memoryview(self, flags, self.dtype_is_object)
 */

static PyObject *__pyx_array_get_memview(struct __pyx_array_obj *__pyx_v_self) {
  int __pyx_v_flags;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_memview", 0);

  /* "View.MemoryView":228
 *     @cname('get_memview')
 *     cdef get_memview(self):
 *         flags =  PyBUF_ANY_CONTIGUOUS|PyBUF_FORMAT|PyBUF_WRITABLE             # <<<<<<<<<<<<<<
 *         return  memoryview(self, flags, self.dtype_is_object)
 * 
 */
  __pyx_v_flags = ((PyBUF_ANY_CONTIGUOUS | PyBUF_FORMAT) | PyBUF_WRITABLE);

  /* "View.MemoryView":229
 *     cdef get_memview(self):
 *         flags =  PyBUF_ANY_CONTIGUOUS|PyBUF_FORMAT|PyBUF_WRITABLE
 *         return  memoryview(self, flags, self.dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_flags); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_self->dtype_is_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_memoryview_type), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":227
 * 
 *     @cname('get_memview')
 *     cdef get_memview(self):             # <<<<<<<<<<<<<<
 *         flags =  PyBUF_ANY_CONTIGUOUS|PyBUF_FORMAT|PyBUF_WRITABLE
 *         return  memoryview(self, flags, self.dtype_is_object)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.array.get_memview", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":231
 *         return  memoryview(self, flags, self.dtype_is_object)
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self._shape[0]
 * 
 */

/* Python wrapper */
static Py_ssize_t __pyx_array___len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_array___len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_6__len__(((struct __pyx_array_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_array___pyx_pf_15View_dot_MemoryView_5array_6__len__(struct __pyx_array_obj *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "View.MemoryView":232
 * 
 *     def __len__(self):
 *         return self._shape[0]             # <<<<<<<<<<<<<<
 * 
 *     def __getattr__(self, attr):
 */
  __pyx_r = (__pyx_v_self->_shape[0]);
  goto __pyx_L0;

  /* "View.MemoryView":231
 *         return  memoryview(self, flags, self.dtype_is_object)
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         return self._shape[0]
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":234
 *         return self._shape[0]
 * 
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         return getattr(self.memview, attr)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_array___getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr); /*proto*/
static PyObject *__pyx_array___getattr__(PyObject *__pyx_v_self, PyObject *__pyx_v_attr) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getattr__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getattr__(((struct __pyx_array_obj *)__pyx_v_self), ((PyObject *)__pyx_v_attr));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_array___pyx_pf_15View_dot_MemoryView_5array_8__getattr__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_attr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getattr__", 0);

  /* "View.MemoryView":235
 * 
 *     def __getattr__(self, attr):
 *         return getattr(self.memview, attr)             # <<<<<<<<<<<<<<
 * 
 *     def __getitem__(self, item):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_memview); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetAttr(__pyx_t_1, __pyx_v_attr); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":234
 *         return self._shape[0]
 * 
 *     def __getattr__(self, attr):             # <<<<<<<<<<<<<<
 *         return getattr(self.memview, attr)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.array.__getattr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":237
 *         return getattr(self.memview, attr)
 * 
 *     def __getitem__(self, item):             # <<<<<<<<<<<<<<
 *         return self.memview[item]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_array___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item); /*proto*/
static PyObject *__pyx_array___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__getitem__(((struct __pyx_array_obj *)__pyx_v_self), ((PyObject *)__pyx_v_item));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_array___pyx_pf_15View_dot_MemoryView_5array_10__getitem__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_item) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "View.MemoryView":238
 * 
 *     def __getitem__(self, item):
 *         return self.memview[item]             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(self, item, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_memview); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetItem(__pyx_t_1, __pyx_v_item); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":237
 *         return getattr(self.memview, attr)
 * 
 *     def __getitem__(self, item):             # <<<<<<<<<<<<<<
 *         return self.memview[item]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.array.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":240
 *         return self.memview[item]
 * 
 *     def __setitem__(self, item, value):             # <<<<<<<<<<<<<<
 *         self.memview[item] = value
 * 
 */

/* Python wrapper */
static int __pyx_array___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_value); /*proto*/
static int __pyx_array___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_array___pyx_pf_15View_dot_MemoryView_5array_12__setitem__(((struct __pyx_array_obj *)__pyx_v_self), ((PyObject *)__pyx_v_item), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_array___pyx_pf_15View_dot_MemoryView_5array_12__setitem__(struct __pyx_array_obj *__pyx_v_self, PyObject *__pyx_v_item, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);

  /* "View.MemoryView":241
 * 
 *     def __setitem__(self, item, value):
 *         self.memview[item] = value             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_memview); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (unlikely(PyObject_SetItem(__pyx_t_1, __pyx_v_item, __pyx_v_value) < 0)) __PYX_ERR(2, 241, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "View.MemoryView":240
 *         return self.memview[item]
 * 
 *     def __setitem__(self, item, value):             # <<<<<<<<<<<<<<
 *         self.memview[item] = value
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.array.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw___pyx_array_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw___pyx_array_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf___pyx_array___reduce_cython__(((struct __pyx_array_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf___pyx_array___reduce_cython__(CYTHON_UNUSED struct __pyx_array_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__54, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.array.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw___pyx_array_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw___pyx_array_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf___pyx_array_2__setstate_cython__(((struct __pyx_array_obj *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf___pyx_array_2__setstate_cython__(CYTHON_UNUSED struct __pyx_array_obj *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__55, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.array.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":245
 * 
 * @cname("__pyx_array_new")
 * cdef array array_cwrapper(tuple shape, Py_ssize_t itemsize, char *format,             # <<<<<<<<<<<<<<
 *                           char *mode, char *buf):
 *     cdef array result
 */

static struct __pyx_array_obj *__pyx_array_new(PyObject *__pyx_v_shape, Py_ssize_t __pyx_v_itemsize, char *__pyx_v_format, char *__pyx_v_mode, char *__pyx_v_buf) {
  struct __pyx_array_obj *__pyx_v_result = 0;
  struct __pyx_array_obj *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("array_cwrapper", 0);

  /* "View.MemoryView":249
 *     cdef array result
 * 
 *     if buf == NULL:             # <<<<<<<<<<<<<<
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_buf == NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":250
 * 
 *     if buf == NULL:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))             # <<<<<<<<<<<<<<
 *     else:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),
 */
    __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_itemsize); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 250, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyBytes_FromString(__pyx_v_format); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 250, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_decode_c_string(__pyx_v_mode, 0, strlen(__pyx_v_mode), NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 250, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 250, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(__pyx_v_shape);
    __Pyx_GIVEREF(__pyx_v_shape);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_shape);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
    __pyx_t_2 = 0;
    __pyx_t_3 = 0;
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(((PyObject *)__pyx_array_type), __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 250, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_result = ((struct __pyx_array_obj *)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "View.MemoryView":249
 *     cdef array result
 * 
 *     if buf == NULL:             # <<<<<<<<<<<<<<
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))
 *     else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":252
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))
 *     else:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),             # <<<<<<<<<<<<<<
 *                        allocate_buffer=False)
 *         result.data = buf
 */
  /*else*/ {
    __pyx_t_4 = PyInt_FromSsize_t(__pyx_v_itemsize); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyBytes_FromString(__pyx_v_format); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_decode_c_string(__pyx_v_mode, 0, strlen(__pyx_v_mode), NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyTuple_New(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_shape);
    __Pyx_GIVEREF(__pyx_v_shape);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_shape);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_3);
    __pyx_t_4 = 0;
    __pyx_t_5 = 0;
    __pyx_t_3 = 0;

    /* "View.MemoryView":253
 *     else:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),
 *                        allocate_buffer=False)             # <<<<<<<<<<<<<<
 *         result.data = buf
 * 
 */
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 253, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_allocate_buffer, Py_False) < 0) __PYX_ERR(2, 253, __pyx_L1_error)

    /* "View.MemoryView":252
 *         result = array(shape, itemsize, format, mode.decode('ASCII'))
 *     else:
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),             # <<<<<<<<<<<<<<
 *                        allocate_buffer=False)
 *         result.data = buf
 */
    __pyx_t_5 = __Pyx_PyObject_Call(((PyObject *)__pyx_array_type), __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 252, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_result = ((struct __pyx_array_obj *)__pyx_t_5);
    __pyx_t_5 = 0;

    /* "View.MemoryView":254
 *         result = array(shape, itemsize, format, mode.decode('ASCII'),
 *                        allocate_buffer=False)
 *         result.data = buf             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
    __pyx_v_result->data = __pyx_v_buf;
  }
  __pyx_L3:;

  /* "View.MemoryView":256
 *         result.data = buf
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(((PyObject *)__pyx_r));
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "View.MemoryView":245
 * 
 * @cname("__pyx_array_new")
 * cdef array array_cwrapper(tuple shape, Py_ssize_t itemsize, char *format,             # <<<<<<<<<<<<<<
 *                           char *mode, char *buf):
 *     cdef array result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.array_cwrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":282
 * cdef class Enum(object):
 *     cdef object name
 *     def __init__(self, name):             # <<<<<<<<<<<<<<
 *         self.name = name
 *     def __repr__(self):
 */

/* Python wrapper */
static int __pyx_MemviewEnum___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_MemviewEnum___init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_name = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,0};
    PyObject* values[1] = {0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__init__") < 0)) __PYX_ERR(2, 282, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
    }
    __pyx_v_name = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 282, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("View.MemoryView.Enum.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum___init__(((struct __pyx_MemviewEnum_obj *)__pyx_v_self), __pyx_v_name);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum___init__(struct __pyx_MemviewEnum_obj *__pyx_v_self, PyObject *__pyx_v_name) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "View.MemoryView":283
 *     cdef object name
 *     def __init__(self, name):
 *         self.name = name             # <<<<<<<<<<<<<<
 *     def __repr__(self):
 *         return self.name
 */
  __Pyx_INCREF(__pyx_v_name);
  __Pyx_GIVEREF(__pyx_v_name);
  __Pyx_GOTREF(__pyx_v_self->name);
  __Pyx_DECREF(__pyx_v_self->name);
  __pyx_v_self->name = __pyx_v_name;

  /* "View.MemoryView":282
 * cdef class Enum(object):
 *     cdef object name
 *     def __init__(self, name):             # <<<<<<<<<<<<<<
 *         self.name = name
 *     def __repr__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":284
 *     def __init__(self, name):
 *         self.name = name
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return self.name
 * 
 */

/* Python wrapper */
static PyObject *__pyx_MemviewEnum___repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_MemviewEnum___repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum_2__repr__(((struct __pyx_MemviewEnum_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_MemviewEnum___pyx_pf_15View_dot_MemoryView_4Enum_2__repr__(struct __pyx_MemviewEnum_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "View.MemoryView":285
 *         self.name = name
 *     def __repr__(self):
 *         return self.name             # <<<<<<<<<<<<<<
 * 
 * cdef generic = Enum("<strided and direct or indirect>")
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->name);
  __pyx_r = __pyx_v_self->name;
  goto __pyx_L0;

  /* "View.MemoryView":284
 *     def __init__(self, name):
 *         self.name = name
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return self.name
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw___pyx_MemviewEnum_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw___pyx_MemviewEnum_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf___pyx_MemviewEnum___reduce_cython__(((struct __pyx_MemviewEnum_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf___pyx_MemviewEnum___reduce_cython__(struct __pyx_MemviewEnum_obj *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self.name,)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->name);
  __Pyx_GIVEREF(__pyx_v_self->name);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self->name);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self.name,)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = (self.name,)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_4 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self.name is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self.name,)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self.name is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, None), state
 */
  /*else*/ {
    __pyx_t_3 = (__pyx_v_self->name != Py_None);
    __pyx_v_use_setstate = __pyx_t_3;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.name is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, None), state
 *     else:
 */
  __pyx_t_3 = (__pyx_v_use_setstate != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":13
 *         use_setstate = self.name is not None
 *     if use_setstate:
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_Enum); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_184977713);
    __Pyx_GIVEREF(__pyx_int_184977713);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_184977713);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_state);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_5;
    __pyx_t_5 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self.name is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, None), state
 *     else:
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Enum__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_pyx_unpickle_Enum); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_184977713);
    __Pyx_GIVEREF(__pyx_int_184977713);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_184977713);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __pyx_t_5 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.Enum.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Enum__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw___pyx_MemviewEnum_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw___pyx_MemviewEnum_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf___pyx_MemviewEnum_2__setstate_cython__(((struct __pyx_MemviewEnum_obj *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf___pyx_MemviewEnum_2__setstate_cython__(struct __pyx_MemviewEnum_obj *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_Enum__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(2, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_unpickle_Enum__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_Enum, (type(self), 0xb068931, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_Enum__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.Enum.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":299
 * 
 * @cname('__pyx_align_pointer')
 * cdef void *align_pointer(void *memory, size_t alignment) nogil:             # <<<<<<<<<<<<<<
 *     "Align pointer memory on a given boundary"
 *     cdef Py_intptr_t aligned_p = <Py_intptr_t> memory
 */

static void *__pyx_align_pointer(void *__pyx_v_memory, size_t __pyx_v_alignment) {
  Py_intptr_t __pyx_v_aligned_p;
  size_t __pyx_v_offset;
  void *__pyx_r;
  int __pyx_t_1;

  /* "View.MemoryView":301
 * cdef void *align_pointer(void *memory, size_t alignment) nogil:
 *     "Align pointer memory on a given boundary"
 *     cdef Py_intptr_t aligned_p = <Py_intptr_t> memory             # <<<<<<<<<<<<<<
 *     cdef size_t offset
 * 
 */
  __pyx_v_aligned_p = ((Py_intptr_t)__pyx_v_memory);

  /* "View.MemoryView":305
 * 
 *     with cython.cdivision(True):
 *         offset = aligned_p % alignment             # <<<<<<<<<<<<<<
 * 
 *     if offset > 0:
 */
  __pyx_v_offset = (__pyx_v_aligned_p % __pyx_v_alignment);

  /* "View.MemoryView":307
 *         offset = aligned_p % alignment
 * 
 *     if offset > 0:             # <<<<<<<<<<<<<<
 *         aligned_p += alignment - offset
 * 
 */
  __pyx_t_1 = ((__pyx_v_offset > 0) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":308
 * 
 *     if offset > 0:
 *         aligned_p += alignment - offset             # <<<<<<<<<<<<<<
 * 
 *     return <void *> aligned_p
 */
    __pyx_v_aligned_p = (__pyx_v_aligned_p + (__pyx_v_alignment - __pyx_v_offset));

    /* "View.MemoryView":307
 *         offset = aligned_p % alignment
 * 
 *     if offset > 0:             # <<<<<<<<<<<<<<
 *         aligned_p += alignment - offset
 * 
 */
  }

  /* "View.MemoryView":310
 *         aligned_p += alignment - offset
 * 
 *     return <void *> aligned_p             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((void *)__pyx_v_aligned_p);
  goto __pyx_L0;

  /* "View.MemoryView":299
 * 
 * @cname('__pyx_align_pointer')
 * cdef void *align_pointer(void *memory, size_t alignment) nogil:             # <<<<<<<<<<<<<<
 *     "Align pointer memory on a given boundary"
 *     cdef Py_intptr_t aligned_p = <Py_intptr_t> memory
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":346
 *     cdef __Pyx_TypeInfo *typeinfo
 * 
 *     def __cinit__(memoryview self, object obj, int flags, bint dtype_is_object=False):             # <<<<<<<<<<<<<<
 *         self.obj = obj
 *         self.flags = flags
 */

/* Python wrapper */
static int __pyx_memoryview___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_memoryview___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_obj = 0;
  int __pyx_v_flags;
  int __pyx_v_dtype_is_object;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_obj,&__pyx_n_s_flags,&__pyx_n_s_dtype_is_object,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_obj)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_flags)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, 1); __PYX_ERR(2, 346, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_dtype_is_object);
          if (value) { values[2] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) __PYX_ERR(2, 346, __pyx_L3_error)
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_obj = values[0];
    __pyx_v_flags = __Pyx_PyInt_As_int(values[1]); if (unlikely((__pyx_v_flags == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 346, __pyx_L3_error)
    if (values[2]) {
      __pyx_v_dtype_is_object = __Pyx_PyObject_IsTrue(values[2]); if (unlikely((__pyx_v_dtype_is_object == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 346, __pyx_L3_error)
    } else {
      __pyx_v_dtype_is_object = ((int)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 2, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 346, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("View.MemoryView.memoryview.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__(((struct __pyx_memoryview_obj *)__pyx_v_self), __pyx_v_obj, __pyx_v_flags, __pyx_v_dtype_is_object);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview___cinit__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_obj, int __pyx_v_flags, int __pyx_v_dtype_is_object) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "View.MemoryView":347
 * 
 *     def __cinit__(memoryview self, object obj, int flags, bint dtype_is_object=False):
 *         self.obj = obj             # <<<<<<<<<<<<<<
 *         self.flags = flags
 *         if type(self) is memoryview or obj is not None:
 */
  __Pyx_INCREF(__pyx_v_obj);
  __Pyx_GIVEREF(__pyx_v_obj);
  __Pyx_GOTREF(__pyx_v_self->obj);
  __Pyx_DECREF(__pyx_v_self->obj);
  __pyx_v_self->obj = __pyx_v_obj;

  /* "View.MemoryView":348
 *     def __cinit__(memoryview self, object obj, int flags, bint dtype_is_object=False):
 *         self.obj = obj
 *         self.flags = flags             # <<<<<<<<<<<<<<
 *         if type(self) is memoryview or obj is not None:
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 */
  __pyx_v_self->flags = __pyx_v_flags;

  /* "View.MemoryView":349
 *         self.obj = obj
 *         self.flags = flags
 *         if type(self) is memoryview or obj is not None:             # <<<<<<<<<<<<<<
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:
 */
  __pyx_t_2 = (((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))) == ((PyObject *)__pyx_memoryview_type));
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (!__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (__pyx_v_obj != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "View.MemoryView":350
 *         self.flags = flags
 *         if type(self) is memoryview or obj is not None:
 *             __Pyx_GetBuffer(obj, &self.view, flags)             # <<<<<<<<<<<<<<
 *             if <PyObject *> self.view.obj == NULL:
 *                 (<__pyx_buffer *> &self.view).obj = Py_None
 */
    __pyx_t_4 = __Pyx_GetBuffer(__pyx_v_obj, (&__pyx_v_self->view), __pyx_v_flags); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 350, __pyx_L1_error)

    /* "View.MemoryView":351
 *         if type(self) is memoryview or obj is not None:
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:             # <<<<<<<<<<<<<<
 *                 (<__pyx_buffer *> &self.view).obj = Py_None
 *                 Py_INCREF(Py_None)
 */
    __pyx_t_1 = ((((PyObject *)__pyx_v_self->view.obj) == NULL) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":352
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:
 *                 (<__pyx_buffer *> &self.view).obj = Py_None             # <<<<<<<<<<<<<<
 *                 Py_INCREF(Py_None)
 * 
 */
      ((Py_buffer *)(&__pyx_v_self->view))->obj = Py_None;

      /* "View.MemoryView":353
 *             if <PyObject *> self.view.obj == NULL:
 *                 (<__pyx_buffer *> &self.view).obj = Py_None
 *                 Py_INCREF(Py_None)             # <<<<<<<<<<<<<<
 * 
 *         if not __PYX_CYTHON_ATOMICS_ENABLED():
 */
      Py_INCREF(Py_None);

      /* "View.MemoryView":351
 *         if type(self) is memoryview or obj is not None:
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:             # <<<<<<<<<<<<<<
 *                 (<__pyx_buffer *> &self.view).obj = Py_None
 *                 Py_INCREF(Py_None)
 */
    }

    /* "View.MemoryView":349
 *         self.obj = obj
 *         self.flags = flags
 *         if type(self) is memoryview or obj is not None:             # <<<<<<<<<<<<<<
 *             __Pyx_GetBuffer(obj, &self.view, flags)
 *             if <PyObject *> self.view.obj == NULL:
 */
  }

  /* "View.MemoryView":355
 *                 Py_INCREF(Py_None)
 * 
 *         if not __PYX_CYTHON_ATOMICS_ENABLED():             # <<<<<<<<<<<<<<
 *             global __pyx_memoryview_thread_locks_used
 *             if __pyx_memoryview_thread_locks_used < THREAD_LOCKS_PREALLOCATED:
 */
  __pyx_t_1 = ((!(__PYX_CYTHON_ATOMICS_ENABLED() != 0)) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":357
 *         if not __PYX_CYTHON_ATOMICS_ENABLED():
 *             global __pyx_memoryview_thread_locks_used
 *             if __pyx_memoryview_thread_locks_used < THREAD_LOCKS_PREALLOCATED:             # <<<<<<<<<<<<<<
 *                 self.lock = __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]
 *                 __pyx_memoryview_thread_locks_used += 1
 */
    __pyx_t_1 = ((__pyx_memoryview_thread_locks_used < 8) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":358
 *             global __pyx_memoryview_thread_locks_used
 *             if __pyx_memoryview_thread_locks_used < THREAD_LOCKS_PREALLOCATED:
 *                 self.lock = __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]             # <<<<<<<<<<<<<<
 *                 __pyx_memoryview_thread_locks_used += 1
 *             if self.lock is NULL:
 */
      __pyx_v_self->lock = (__pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]);

      /* "View.MemoryView":359
 *             if __pyx_memoryview_thread_locks_used < THREAD_LOCKS_PREALLOCATED:
 *                 self.lock = __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]
 *                 __pyx_memoryview_thread_locks_used += 1             # <<<<<<<<<<<<<<
 *             if self.lock is NULL:
 *                 self.lock = PyThread_allocate_lock()
 */
      __pyx_memoryview_thread_locks_used = (__pyx_memoryview_thread_locks_used + 1);

      /* "View.MemoryView":357
 *         if not __PYX_CYTHON_ATOMICS_ENABLED():
 *             global __pyx_memoryview_thread_locks_used
 *             if __pyx_memoryview_thread_locks_used < THREAD_LOCKS_PREALLOCATED:             # <<<<<<<<<<<<<<
 *                 self.lock = __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]
 *                 __pyx_memoryview_thread_locks_used += 1
 */
    }

    /* "View.MemoryView":360
 *                 self.lock = __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]
 *                 __pyx_memoryview_thread_locks_used += 1
 *             if self.lock is NULL:             # <<<<<<<<<<<<<<
 *                 self.lock = PyThread_allocate_lock()
 *                 if self.lock is NULL:
 */
    __pyx_t_1 = ((__pyx_v_self->lock == NULL) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":361
 *                 __pyx_memoryview_thread_locks_used += 1
 *             if self.lock is NULL:
 *                 self.lock = PyThread_allocate_lock()             # <<<<<<<<<<<<<<
 *                 if self.lock is NULL:
 *                     raise MemoryError
 */
      __pyx_v_self->lock = PyThread_allocate_lock();

      /* "View.MemoryView":362
 *             if self.lock is NULL:
 *                 self.lock = PyThread_allocate_lock()
 *                 if self.lock is NULL:             # <<<<<<<<<<<<<<
 *                     raise MemoryError
 * 
 */
      __pyx_t_1 = ((__pyx_v_self->lock == NULL) != 0);
      if (unlikely(__pyx_t_1)) {

        /* "View.MemoryView":363
 *                 self.lock = PyThread_allocate_lock()
 *                 if self.lock is NULL:
 *                     raise MemoryError             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_FORMAT:
 */
        PyErr_NoMemory(); __PYX_ERR(2, 363, __pyx_L1_error)

        /* "View.MemoryView":362
 *             if self.lock is NULL:
 *                 self.lock = PyThread_allocate_lock()
 *                 if self.lock is NULL:             # <<<<<<<<<<<<<<
 *                     raise MemoryError
 * 
 */
      }

      /* "View.MemoryView":360
 *                 self.lock = __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]
 *                 __pyx_memoryview_thread_locks_used += 1
 *             if self.lock is NULL:             # <<<<<<<<<<<<<<
 *                 self.lock = PyThread_allocate_lock()
 *                 if self.lock is NULL:
 */
    }

    /* "View.MemoryView":355
 *                 Py_INCREF(Py_None)
 * 
 *         if not __PYX_CYTHON_ATOMICS_ENABLED():             # <<<<<<<<<<<<<<
 *             global __pyx_memoryview_thread_locks_used
 *             if __pyx_memoryview_thread_locks_used < THREAD_LOCKS_PREALLOCATED:
 */
  }

  /* "View.MemoryView":365
 *                     raise MemoryError
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             self.dtype_is_object = (self.view.format[0] == b'O' and self.view.format[1] == b'\0')
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_FORMAT) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":366
 * 
 *         if flags & PyBUF_FORMAT:
 *             self.dtype_is_object = (self.view.format[0] == b'O' and self.view.format[1] == b'\0')             # <<<<<<<<<<<<<<
 *         else:
 *             self.dtype_is_object = dtype_is_object
 */
    __pyx_t_2 = (((__pyx_v_self->view.format[0]) == 'O') != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L12_bool_binop_done;
    }
    __pyx_t_2 = (((__pyx_v_self->view.format[1]) == '\x00') != 0);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L12_bool_binop_done:;
    __pyx_v_self->dtype_is_object = __pyx_t_1;

    /* "View.MemoryView":365
 *                     raise MemoryError
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             self.dtype_is_object = (self.view.format[0] == b'O' and self.view.format[1] == b'\0')
 *         else:
 */
    goto __pyx_L11;
  }

  /* "View.MemoryView":368
 *             self.dtype_is_object = (self.view.format[0] == b'O' and self.view.format[1] == b'\0')
 *         else:
 *             self.dtype_is_object = dtype_is_object             # <<<<<<<<<<<<<<
 * 
 *         self.acquisition_count_aligned_p = <__pyx_atomic_int *> align_pointer(
 */
  /*else*/ {
    __pyx_v_self->dtype_is_object = __pyx_v_dtype_is_object;
  }
  __pyx_L11:;

  /* "View.MemoryView":370
 *             self.dtype_is_object = dtype_is_object
 * 
 *         self.acquisition_count_aligned_p = <__pyx_atomic_int *> align_pointer(             # <<<<<<<<<<<<<<
 *                   <void *> &self.acquisition_count[0], sizeof(__pyx_atomic_int))
 *         self.typeinfo = NULL
 */
  __pyx_v_self->acquisition_count_aligned_p = ((__pyx_atomic_int *)__pyx_align_pointer(((void *)(&(__pyx_v_self->acquisition_count[0]))), (sizeof(__pyx_atomic_int))));

  /* "View.MemoryView":372
 *         self.acquisition_count_aligned_p = <__pyx_atomic_int *> align_pointer(
 *                   <void *> &self.acquisition_count[0], sizeof(__pyx_atomic_int))
 *         self.typeinfo = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(memoryview self):
 */
  __pyx_v_self->typeinfo = NULL;

  /* "View.MemoryView":346
 *     cdef __Pyx_TypeInfo *typeinfo
 * 
 *     def __cinit__(memoryview self, object obj, int flags, bint dtype_is_object=False):             # <<<<<<<<<<<<<<
 *         self.obj = obj
 *         self.flags = flags
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("View.MemoryView.memoryview.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":374
 *         self.typeinfo = NULL
 * 
 *     def __dealloc__(memoryview self):             # <<<<<<<<<<<<<<
 *         if self.obj is not None:
 *             __Pyx_ReleaseBuffer(&self.view)
 */

/* Python wrapper */
static void __pyx_memoryview___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_memoryview___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_2__dealloc__(struct __pyx_memoryview_obj *__pyx_v_self) {
  int __pyx_v_i;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyThread_type_lock __pyx_t_6;
  PyThread_type_lock __pyx_t_7;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "View.MemoryView":375
 * 
 *     def __dealloc__(memoryview self):
 *         if self.obj is not None:             # <<<<<<<<<<<<<<
 *             __Pyx_ReleaseBuffer(&self.view)
 *         elif (<__pyx_buffer *> &self.view).obj == Py_None:
 */
  __pyx_t_1 = (__pyx_v_self->obj != Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":376
 *     def __dealloc__(memoryview self):
 *         if self.obj is not None:
 *             __Pyx_ReleaseBuffer(&self.view)             # <<<<<<<<<<<<<<
 *         elif (<__pyx_buffer *> &self.view).obj == Py_None:
 * 
 */
    __Pyx_ReleaseBuffer((&__pyx_v_self->view));

    /* "View.MemoryView":375
 * 
 *     def __dealloc__(memoryview self):
 *         if self.obj is not None:             # <<<<<<<<<<<<<<
 *             __Pyx_ReleaseBuffer(&self.view)
 *         elif (<__pyx_buffer *> &self.view).obj == Py_None:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":377
 *         if self.obj is not None:
 *             __Pyx_ReleaseBuffer(&self.view)
 *         elif (<__pyx_buffer *> &self.view).obj == Py_None:             # <<<<<<<<<<<<<<
 * 
 *             (<__pyx_buffer *> &self.view).obj = NULL
 */
  __pyx_t_2 = ((((Py_buffer *)(&__pyx_v_self->view))->obj == Py_None) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":379
 *         elif (<__pyx_buffer *> &self.view).obj == Py_None:
 * 
 *             (<__pyx_buffer *> &self.view).obj = NULL             # <<<<<<<<<<<<<<
 *             Py_DECREF(Py_None)
 * 
 */
    ((Py_buffer *)(&__pyx_v_self->view))->obj = NULL;

    /* "View.MemoryView":380
 * 
 *             (<__pyx_buffer *> &self.view).obj = NULL
 *             Py_DECREF(Py_None)             # <<<<<<<<<<<<<<
 * 
 *         cdef int i
 */
    Py_DECREF(Py_None);

    /* "View.MemoryView":377
 *         if self.obj is not None:
 *             __Pyx_ReleaseBuffer(&self.view)
 *         elif (<__pyx_buffer *> &self.view).obj == Py_None:             # <<<<<<<<<<<<<<
 * 
 *             (<__pyx_buffer *> &self.view).obj = NULL
 */
  }
  __pyx_L3:;

  /* "View.MemoryView":384
 *         cdef int i
 *         global __pyx_memoryview_thread_locks_used
 *         if self.lock != NULL:             # <<<<<<<<<<<<<<
 *             for i in range(__pyx_memoryview_thread_locks_used):
 *                 if __pyx_memoryview_thread_locks[i] is self.lock:
 */
  __pyx_t_2 = ((__pyx_v_self->lock != NULL) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":385
 *         global __pyx_memoryview_thread_locks_used
 *         if self.lock != NULL:
 *             for i in range(__pyx_memoryview_thread_locks_used):             # <<<<<<<<<<<<<<
 *                 if __pyx_memoryview_thread_locks[i] is self.lock:
 *                     __pyx_memoryview_thread_locks_used -= 1
 */
    __pyx_t_3 = __pyx_memoryview_thread_locks_used;
    __pyx_t_4 = __pyx_t_3;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "View.MemoryView":386
 *         if self.lock != NULL:
 *             for i in range(__pyx_memoryview_thread_locks_used):
 *                 if __pyx_memoryview_thread_locks[i] is self.lock:             # <<<<<<<<<<<<<<
 *                     __pyx_memoryview_thread_locks_used -= 1
 *                     if i != __pyx_memoryview_thread_locks_used:
 */
      __pyx_t_2 = (((__pyx_memoryview_thread_locks[__pyx_v_i]) == __pyx_v_self->lock) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":387
 *             for i in range(__pyx_memoryview_thread_locks_used):
 *                 if __pyx_memoryview_thread_locks[i] is self.lock:
 *                     __pyx_memoryview_thread_locks_used -= 1             # <<<<<<<<<<<<<<
 *                     if i != __pyx_memoryview_thread_locks_used:
 *                         __pyx_memoryview_thread_locks[i], __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used] = (
 */
        __pyx_memoryview_thread_locks_used = (__pyx_memoryview_thread_locks_used - 1);

        /* "View.MemoryView":388
 *                 if __pyx_memoryview_thread_locks[i] is self.lock:
 *                     __pyx_memoryview_thread_locks_used -= 1
 *                     if i != __pyx_memoryview_thread_locks_used:             # <<<<<<<<<<<<<<
 *                         __pyx_memoryview_thread_locks[i], __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used] = (
 *                             __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used], __pyx_memoryview_thread_locks[i])
 */
        __pyx_t_2 = ((__pyx_v_i != __pyx_memoryview_thread_locks_used) != 0);
        if (__pyx_t_2) {

          /* "View.MemoryView":390
 *                     if i != __pyx_memoryview_thread_locks_used:
 *                         __pyx_memoryview_thread_locks[i], __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used] = (
 *                             __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used], __pyx_memoryview_thread_locks[i])             # <<<<<<<<<<<<<<
 *                     break
 *             else:
 */
          __pyx_t_6 = (__pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]);
          __pyx_t_7 = (__pyx_memoryview_thread_locks[__pyx_v_i]);

          /* "View.MemoryView":389
 *                     __pyx_memoryview_thread_locks_used -= 1
 *                     if i != __pyx_memoryview_thread_locks_used:
 *                         __pyx_memoryview_thread_locks[i], __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used] = (             # <<<<<<<<<<<<<<
 *                             __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used], __pyx_memoryview_thread_locks[i])
 *                     break
 */
          (__pyx_memoryview_thread_locks[__pyx_v_i]) = __pyx_t_6;
          (__pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used]) = __pyx_t_7;

          /* "View.MemoryView":388
 *                 if __pyx_memoryview_thread_locks[i] is self.lock:
 *                     __pyx_memoryview_thread_locks_used -= 1
 *                     if i != __pyx_memoryview_thread_locks_used:             # <<<<<<<<<<<<<<
 *                         __pyx_memoryview_thread_locks[i], __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used] = (
 *                             __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used], __pyx_memoryview_thread_locks[i])
 */
        }

        /* "View.MemoryView":391
 *                         __pyx_memoryview_thread_locks[i], __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used] = (
 *                             __pyx_memoryview_thread_locks[__pyx_memoryview_thread_locks_used], __pyx_memoryview_thread_locks[i])
 *                     break             # <<<<<<<<<<<<<<
 *             else:
 *                 PyThread_free_lock(self.lock)
 */
        goto __pyx_L6_break;

        /* "View.MemoryView":386
 *         if self.lock != NULL:
 *             for i in range(__pyx_memoryview_thread_locks_used):
 *                 if __pyx_memoryview_thread_locks[i] is self.lock:             # <<<<<<<<<<<<<<
 *                     __pyx_memoryview_thread_locks_used -= 1
 *                     if i != __pyx_memoryview_thread_locks_used:
 */
      }
    }
    /*else*/ {

      /* "View.MemoryView":393
 *                     break
 *             else:
 *                 PyThread_free_lock(self.lock)             # <<<<<<<<<<<<<<
 * 
 *     cdef char *get_item_pointer(memoryview self, object index) except NULL:
 */
      PyThread_free_lock(__pyx_v_self->lock);
    }
    __pyx_L6_break:;

    /* "View.MemoryView":384
 *         cdef int i
 *         global __pyx_memoryview_thread_locks_used
 *         if self.lock != NULL:             # <<<<<<<<<<<<<<
 *             for i in range(__pyx_memoryview_thread_locks_used):
 *                 if __pyx_memoryview_thread_locks[i] is self.lock:
 */
  }

  /* "View.MemoryView":374
 *         self.typeinfo = NULL
 * 
 *     def __dealloc__(memoryview self):             # <<<<<<<<<<<<<<
 *         if self.obj is not None:
 *             __Pyx_ReleaseBuffer(&self.view)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":395
 *                 PyThread_free_lock(self.lock)
 * 
 *     cdef char *get_item_pointer(memoryview self, object index) except NULL:             # <<<<<<<<<<<<<<
 *         cdef Py_ssize_t dim
 *         cdef char *itemp = <char *> self.view.buf
 */

static char *__pyx_memoryview_get_item_pointer(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index) {
  Py_ssize_t __pyx_v_dim;
  char *__pyx_v_itemp;
  PyObject *__pyx_v_idx = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  PyObject *(*__pyx_t_4)(PyObject *);
  PyObject *__pyx_t_5 = NULL;
  Py_ssize_t __pyx_t_6;
  char *__pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_item_pointer", 0);

  /* "View.MemoryView":397
 *     cdef char *get_item_pointer(memoryview self, object index) except NULL:
 *         cdef Py_ssize_t dim
 *         cdef char *itemp = <char *> self.view.buf             # <<<<<<<<<<<<<<
 * 
 *         for dim, idx in enumerate(index):
 */
  __pyx_v_itemp = ((char *)__pyx_v_self->view.buf);

  /* "View.MemoryView":399
 *         cdef char *itemp = <char *> self.view.buf
 * 
 *         for dim, idx in enumerate(index):             # <<<<<<<<<<<<<<
 *             itemp = pybuffer_index(&self.view, itemp, idx, dim)
 * 
 */
  __pyx_t_1 = 0;
  if (likely(PyList_CheckExact(__pyx_v_index)) || PyTuple_CheckExact(__pyx_v_index)) {
    __pyx_t_2 = __pyx_v_index; __Pyx_INCREF(__pyx_t_2); __pyx_t_3 = 0;
    __pyx_t_4 = NULL;
  } else {
    __pyx_t_3 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = Py_TYPE(__pyx_t_2)->tp_iternext; if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 399, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_4)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_3 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(2, 399, __pyx_L1_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 399, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      } else {
        if (__pyx_t_3 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_3); __Pyx_INCREF(__pyx_t_5); __pyx_t_3++; if (unlikely(0 < 0)) __PYX_ERR(2, 399, __pyx_L1_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_3); __pyx_t_3++; if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 399, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
      }
    } else {
      __pyx_t_5 = __pyx_t_4(__pyx_t_2);
      if (unlikely(!__pyx_t_5)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 399, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_5);
    }
    __Pyx_XDECREF_SET(__pyx_v_idx, __pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_v_dim = __pyx_t_1;
    __pyx_t_1 = (__pyx_t_1 + 1);

    /* "View.MemoryView":400
 * 
 *         for dim, idx in enumerate(index):
 *             itemp = pybuffer_index(&self.view, itemp, idx, dim)             # <<<<<<<<<<<<<<
 * 
 *         return itemp
 */
    __pyx_t_6 = __Pyx_PyIndex_AsSsize_t(__pyx_v_idx); if (unlikely((__pyx_t_6 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(2, 400, __pyx_L1_error)
    __pyx_t_7 = __pyx_pybuffer_index((&__pyx_v_self->view), __pyx_v_itemp, __pyx_t_6, __pyx_v_dim); if (unlikely(__pyx_t_7 == ((char *)NULL))) __PYX_ERR(2, 400, __pyx_L1_error)
    __pyx_v_itemp = __pyx_t_7;

    /* "View.MemoryView":399
 *         cdef char *itemp = <char *> self.view.buf
 * 
 *         for dim, idx in enumerate(index):             # <<<<<<<<<<<<<<
 *             itemp = pybuffer_index(&self.view, itemp, idx, dim)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "View.MemoryView":402
 *             itemp = pybuffer_index(&self.view, itemp, idx, dim)
 * 
 *         return itemp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_itemp;
  goto __pyx_L0;

  /* "View.MemoryView":395
 *                 PyThread_free_lock(self.lock)
 * 
 *     cdef char *get_item_pointer(memoryview self, object index) except NULL:             # <<<<<<<<<<<<<<
 *         cdef Py_ssize_t dim
 *         cdef char *itemp = <char *> self.view.buf
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.memoryview.get_item_pointer", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":405
 * 
 * 
 *     def __getitem__(memoryview self, object index):             # <<<<<<<<<<<<<<
 *         if index is Ellipsis:
 *             return self
 */

/* Python wrapper */
static PyObject *__pyx_memoryview___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index); /*proto*/
static PyObject *__pyx_memoryview___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getitem__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__(((struct __pyx_memoryview_obj *)__pyx_v_self), ((PyObject *)__pyx_v_index));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_4__getitem__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index) {
  PyObject *__pyx_v_have_slices = NULL;
  PyObject *__pyx_v_indices = NULL;
  char *__pyx_v_itemp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  char *__pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__getitem__", 0);

  /* "View.MemoryView":406
 * 
 *     def __getitem__(memoryview self, object index):
 *         if index is Ellipsis:             # <<<<<<<<<<<<<<
 *             return self
 * 
 */
  __pyx_t_1 = (__pyx_v_index == __pyx_builtin_Ellipsis);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":407
 *     def __getitem__(memoryview self, object index):
 *         if index is Ellipsis:
 *             return self             # <<<<<<<<<<<<<<
 * 
 *         have_slices, indices = _unellipsify(index, self.view.ndim)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __pyx_r = ((PyObject *)__pyx_v_self);
    goto __pyx_L0;

    /* "View.MemoryView":406
 * 
 *     def __getitem__(memoryview self, object index):
 *         if index is Ellipsis:             # <<<<<<<<<<<<<<
 *             return self
 * 
 */
  }

  /* "View.MemoryView":409
 *             return self
 * 
 *         have_slices, indices = _unellipsify(index, self.view.ndim)             # <<<<<<<<<<<<<<
 * 
 *         cdef char *itemp
 */
  __pyx_t_3 = _unellipsify(__pyx_v_index, __pyx_v_self->view.ndim); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 409, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (likely(__pyx_t_3 != Py_None)) {
    PyObject* sequence = __pyx_t_3;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(2, 409, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
    __pyx_t_5 = PyTuple_GET_ITEM(sequence, 1); 
    __Pyx_INCREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_t_5);
    #else
    __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 409, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 409, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    #endif
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  } else {
    __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(2, 409, __pyx_L1_error)
  }
  __pyx_v_have_slices = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_v_indices = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "View.MemoryView":412
 * 
 *         cdef char *itemp
 *         if have_slices:             # <<<<<<<<<<<<<<
 *             return memview_slice(self, indices)
 *         else:
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_have_slices); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 412, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "View.MemoryView":413
 *         cdef char *itemp
 *         if have_slices:
 *             return memview_slice(self, indices)             # <<<<<<<<<<<<<<
 *         else:
 *             itemp = self.get_item_pointer(indices)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = ((PyObject *)__pyx_memview_slice(__pyx_v_self, __pyx_v_indices)); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 413, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "View.MemoryView":412
 * 
 *         cdef char *itemp
 *         if have_slices:             # <<<<<<<<<<<<<<
 *             return memview_slice(self, indices)
 *         else:
 */
  }

  /* "View.MemoryView":415
 *             return memview_slice(self, indices)
 *         else:
 *             itemp = self.get_item_pointer(indices)             # <<<<<<<<<<<<<<
 *             return self.convert_item_to_object(itemp)
 * 
 */
  /*else*/ {
    __pyx_t_6 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->get_item_pointer(__pyx_v_self, __pyx_v_indices); if (unlikely(__pyx_t_6 == ((char *)NULL))) __PYX_ERR(2, 415, __pyx_L1_error)
    __pyx_v_itemp = __pyx_t_6;

    /* "View.MemoryView":416
 *         else:
 *             itemp = self.get_item_pointer(indices)
 *             return self.convert_item_to_object(itemp)             # <<<<<<<<<<<<<<
 * 
 *     def __setitem__(memoryview self, object index, object value):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_3 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->convert_item_to_object(__pyx_v_self, __pyx_v_itemp); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 416, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "View.MemoryView":405
 * 
 * 
 *     def __getitem__(memoryview self, object index):             # <<<<<<<<<<<<<<
 *         if index is Ellipsis:
 *             return self
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__getitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_have_slices);
  __Pyx_XDECREF(__pyx_v_indices);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":418
 *             return self.convert_item_to_object(itemp)
 * 
 *     def __setitem__(memoryview self, object index, object value):             # <<<<<<<<<<<<<<
 *         if self.view.readonly:
 *             raise TypeError("Cannot assign to read-only memoryview")
 */

/* Python wrapper */
static int __pyx_memoryview___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value); /*proto*/
static int __pyx_memoryview___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setitem__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__(((struct __pyx_memoryview_obj *)__pyx_v_self), ((PyObject *)__pyx_v_index), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_6__setitem__(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_have_slices = NULL;
  PyObject *__pyx_v_obj = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setitem__", 0);
  __Pyx_INCREF(__pyx_v_index);

  /* "View.MemoryView":419
 * 
 *     def __setitem__(memoryview self, object index, object value):
 *         if self.view.readonly:             # <<<<<<<<<<<<<<
 *             raise TypeError("Cannot assign to read-only memoryview")
 * 
 */
  __pyx_t_1 = (__pyx_v_self->view.readonly != 0);
  if (unlikely(__pyx_t_1)) {

    /* "View.MemoryView":420
 *     def __setitem__(memoryview self, object index, object value):
 *         if self.view.readonly:
 *             raise TypeError("Cannot assign to read-only memoryview")             # <<<<<<<<<<<<<<
 * 
 *         have_slices, index = _unellipsify(index, self.view.ndim)
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__56, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 420, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(2, 420, __pyx_L1_error)

    /* "View.MemoryView":419
 * 
 *     def __setitem__(memoryview self, object index, object value):
 *         if self.view.readonly:             # <<<<<<<<<<<<<<
 *             raise TypeError("Cannot assign to read-only memoryview")
 * 
 */
  }

  /* "View.MemoryView":422
 *             raise TypeError("Cannot assign to read-only memoryview")
 * 
 *         have_slices, index = _unellipsify(index, self.view.ndim)             # <<<<<<<<<<<<<<
 * 
 *         if have_slices:
 */
  __pyx_t_2 = _unellipsify(__pyx_v_index, __pyx_v_self->view.ndim); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 422, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (likely(__pyx_t_2 != Py_None)) {
    PyObject* sequence = __pyx_t_2;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(2, 422, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
    __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_t_4);
    #else
    __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 422, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 422, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  } else {
    __Pyx_RaiseNoneNotIterableError(); __PYX_ERR(2, 422, __pyx_L1_error)
  }
  __pyx_v_have_slices = __pyx_t_3;
  __pyx_t_3 = 0;
  __Pyx_DECREF_SET(__pyx_v_index, __pyx_t_4);
  __pyx_t_4 = 0;

  /* "View.MemoryView":424
 *         have_slices, index = _unellipsify(index, self.view.ndim)
 * 
 *         if have_slices:             # <<<<<<<<<<<<<<
 *             obj = self.is_slice(value)
 *             if obj:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_have_slices); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(2, 424, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "View.MemoryView":425
 * 
 *         if have_slices:
 *             obj = self.is_slice(value)             # <<<<<<<<<<<<<<
 *             if obj:
 *                 self.setitem_slice_assignment(self[index], obj)
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->is_slice(__pyx_v_self, __pyx_v_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 425, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_v_obj = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "View.MemoryView":426
 *         if have_slices:
 *             obj = self.is_slice(value)
 *             if obj:             # <<<<<<<<<<<<<<
 *                 self.setitem_slice_assignment(self[index], obj)
 *             else:
 */
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_obj); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(2, 426, __pyx_L1_error)
    if (__pyx_t_1) {

      /* "View.MemoryView":427
 *             obj = self.is_slice(value)
 *             if obj:
 *                 self.setitem_slice_assignment(self[index], obj)             # <<<<<<<<<<<<<<
 *             else:
 *                 self.setitem_slice_assign_scalar(self[index], value)
 */
      __pyx_t_2 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 427, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_4 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->setitem_slice_assignment(__pyx_v_self, __pyx_t_2, __pyx_v_obj); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 427, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "View.MemoryView":426
 *         if have_slices:
 *             obj = self.is_slice(value)
 *             if obj:             # <<<<<<<<<<<<<<
 *                 self.setitem_slice_assignment(self[index], obj)
 *             else:
 */
      goto __pyx_L5;
    }

    /* "View.MemoryView":429
 *                 self.setitem_slice_assignment(self[index], obj)
 *             else:
 *                 self.setitem_slice_assign_scalar(self[index], value)             # <<<<<<<<<<<<<<
 *         else:
 *             self.setitem_indexed(index, value)
 */
    /*else*/ {
      __pyx_t_4 = __Pyx_PyObject_GetItem(((PyObject *)__pyx_v_self), __pyx_v_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 429, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_memoryview_type))))) __PYX_ERR(2, 429, __pyx_L1_error)
      __pyx_t_2 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->setitem_slice_assign_scalar(__pyx_v_self, ((struct __pyx_memoryview_obj *)__pyx_t_4), __pyx_v_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 429, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_L5:;

    /* "View.MemoryView":424
 *         have_slices, index = _unellipsify(index, self.view.ndim)
 * 
 *         if have_slices:             # <<<<<<<<<<<<<<
 *             obj = self.is_slice(value)
 *             if obj:
 */
    goto __pyx_L4;
  }

  /* "View.MemoryView":431
 *                 self.setitem_slice_assign_scalar(self[index], value)
 *         else:
 *             self.setitem_indexed(index, value)             # <<<<<<<<<<<<<<
 * 
 *     cdef is_slice(self, obj):
 */
  /*else*/ {
    __pyx_t_2 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->setitem_indexed(__pyx_v_self, __pyx_v_index, __pyx_v_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 431, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_L4:;

  /* "View.MemoryView":418
 *             return self.convert_item_to_object(itemp)
 * 
 *     def __setitem__(memoryview self, object index, object value):             # <<<<<<<<<<<<<<
 *         if self.view.readonly:
 *             raise TypeError("Cannot assign to read-only memoryview")
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__setitem__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_have_slices);
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XDECREF(__pyx_v_index);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":433
 *             self.setitem_indexed(index, value)
 * 
 *     cdef is_slice(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, memoryview):
 *             try:
 */

static PyObject *__pyx_memoryview_is_slice(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_obj) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_slice", 0);
  __Pyx_INCREF(__pyx_v_obj);

  /* "View.MemoryView":434
 * 
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):             # <<<<<<<<<<<<<<
 *             try:
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_obj, __pyx_memoryview_type); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":435
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):
 *             try:             # <<<<<<<<<<<<<<
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_5);
      /*try:*/ {

        /* "View.MemoryView":436
 *         if not isinstance(obj, memoryview):
 *             try:
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,             # <<<<<<<<<<<<<<
 *                                  self.dtype_is_object)
 *             except TypeError:
 */
        __pyx_t_6 = __Pyx_PyInt_From_int(((__pyx_v_self->flags & (~PyBUF_WRITABLE)) | PyBUF_ANY_CONTIGUOUS)); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 436, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_6);

        /* "View.MemoryView":437
 *             try:
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)             # <<<<<<<<<<<<<<
 *             except TypeError:
 *                 return None
 */
        __pyx_t_7 = __Pyx_PyBool_FromLong(__pyx_v_self->dtype_is_object); if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 437, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_7);

        /* "View.MemoryView":436
 *         if not isinstance(obj, memoryview):
 *             try:
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,             # <<<<<<<<<<<<<<
 *                                  self.dtype_is_object)
 *             except TypeError:
 */
        __pyx_t_8 = PyTuple_New(3); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 436, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_INCREF(__pyx_v_obj);
        __Pyx_GIVEREF(__pyx_v_obj);
        PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_v_obj);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_8, 1, __pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_7);
        PyTuple_SET_ITEM(__pyx_t_8, 2, __pyx_t_7);
        __pyx_t_6 = 0;
        __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyObject_Call(((PyObject *)__pyx_memoryview_type), __pyx_t_8, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 436, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF_SET(__pyx_v_obj, __pyx_t_7);
        __pyx_t_7 = 0;

        /* "View.MemoryView":435
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):
 *             try:             # <<<<<<<<<<<<<<
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)
 */
      }
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L9_try_end;
      __pyx_L4_error:;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "View.MemoryView":438
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)
 *             except TypeError:             # <<<<<<<<<<<<<<
 *                 return None
 * 
 */
      __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_TypeError);
      if (__pyx_t_9) {
        __Pyx_AddTraceback("View.MemoryView.memoryview.is_slice", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_8, &__pyx_t_6) < 0) __PYX_ERR(2, 438, __pyx_L6_except_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GOTREF(__pyx_t_6);

        /* "View.MemoryView":439
 *                                  self.dtype_is_object)
 *             except TypeError:
 *                 return None             # <<<<<<<<<<<<<<
 * 
 *         return obj
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_r = Py_None; __Pyx_INCREF(Py_None);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        goto __pyx_L7_except_return;
      }
      goto __pyx_L6_except_error;
      __pyx_L6_except_error:;

      /* "View.MemoryView":435
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):
 *             try:             # <<<<<<<<<<<<<<
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,
 *                                  self.dtype_is_object)
 */
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      goto __pyx_L1_error;
      __pyx_L7_except_return:;
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      goto __pyx_L0;
      __pyx_L9_try_end:;
    }

    /* "View.MemoryView":434
 * 
 *     cdef is_slice(self, obj):
 *         if not isinstance(obj, memoryview):             # <<<<<<<<<<<<<<
 *             try:
 *                 obj = memoryview(obj, self.flags & ~PyBUF_WRITABLE | PyBUF_ANY_CONTIGUOUS,
 */
  }

  /* "View.MemoryView":441
 *                 return None
 * 
 *         return obj             # <<<<<<<<<<<<<<
 * 
 *     cdef setitem_slice_assignment(self, dst, src):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_obj);
  __pyx_r = __pyx_v_obj;
  goto __pyx_L0;

  /* "View.MemoryView":433
 *             self.setitem_indexed(index, value)
 * 
 *     cdef is_slice(self, obj):             # <<<<<<<<<<<<<<
 *         if not isinstance(obj, memoryview):
 *             try:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("View.MemoryView.memoryview.is_slice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_obj);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":443
 *         return obj
 * 
 *     cdef setitem_slice_assignment(self, dst, src):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice dst_slice
 *         cdef __Pyx_memviewslice src_slice
 */

static PyObject *__pyx_memoryview_setitem_slice_assignment(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_dst, PyObject *__pyx_v_src) {
  __Pyx_memviewslice __pyx_v_dst_slice;
  __Pyx_memviewslice __pyx_v_src_slice;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice *__pyx_t_1;
  __Pyx_memviewslice *__pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setitem_slice_assignment", 0);

  /* "View.MemoryView":447
 *         cdef __Pyx_memviewslice src_slice
 * 
 *         memoryview_copy_contents(get_slice_from_memview(src, &src_slice)[0],             # <<<<<<<<<<<<<<
 *                                  get_slice_from_memview(dst, &dst_slice)[0],
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 */
  if (!(likely(((__pyx_v_src) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_src, __pyx_memoryview_type))))) __PYX_ERR(2, 447, __pyx_L1_error)
  __pyx_t_1 = __pyx_memoryview_get_slice_from_memoryview(((struct __pyx_memoryview_obj *)__pyx_v_src), (&__pyx_v_src_slice)); if (unlikely(__pyx_t_1 == ((__Pyx_memviewslice *)NULL))) __PYX_ERR(2, 447, __pyx_L1_error)

  /* "View.MemoryView":448
 * 
 *         memoryview_copy_contents(get_slice_from_memview(src, &src_slice)[0],
 *                                  get_slice_from_memview(dst, &dst_slice)[0],             # <<<<<<<<<<<<<<
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 * 
 */
  if (!(likely(((__pyx_v_dst) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_dst, __pyx_memoryview_type))))) __PYX_ERR(2, 448, __pyx_L1_error)
  __pyx_t_2 = __pyx_memoryview_get_slice_from_memoryview(((struct __pyx_memoryview_obj *)__pyx_v_dst), (&__pyx_v_dst_slice)); if (unlikely(__pyx_t_2 == ((__Pyx_memviewslice *)NULL))) __PYX_ERR(2, 448, __pyx_L1_error)

  /* "View.MemoryView":449
 *         memoryview_copy_contents(get_slice_from_memview(src, &src_slice)[0],
 *                                  get_slice_from_memview(dst, &dst_slice)[0],
 *                                  src.ndim, dst.ndim, self.dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 *     cdef setitem_slice_assign_scalar(self, memoryview dst, value):
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_src, __pyx_n_s_ndim); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 449, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_dst, __pyx_n_s_ndim); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 449, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_t_3); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(2, 449, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "View.MemoryView":447
 *         cdef __Pyx_memviewslice src_slice
 * 
 *         memoryview_copy_contents(get_slice_from_memview(src, &src_slice)[0],             # <<<<<<<<<<<<<<
 *                                  get_slice_from_memview(dst, &dst_slice)[0],
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 */
  __pyx_t_6 = __pyx_memoryview_copy_contents((__pyx_t_1[0]), (__pyx_t_2[0]), __pyx_t_4, __pyx_t_5, __pyx_v_self->dtype_is_object); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(2, 447, __pyx_L1_error)

  /* "View.MemoryView":443
 *         return obj
 * 
 *     cdef setitem_slice_assignment(self, dst, src):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice dst_slice
 *         cdef __Pyx_memviewslice src_slice
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.setitem_slice_assignment", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":451
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 * 
 *     cdef setitem_slice_assign_scalar(self, memoryview dst, value):             # <<<<<<<<<<<<<<
 *         cdef int array[128]
 *         cdef void *tmp = NULL
 */

static PyObject *__pyx_memoryview_setitem_slice_assign_scalar(struct __pyx_memoryview_obj *__pyx_v_self, struct __pyx_memoryview_obj *__pyx_v_dst, PyObject *__pyx_v_value) {
  int __pyx_v_array[0x80];
  void *__pyx_v_tmp;
  void *__pyx_v_item;
  __Pyx_memviewslice *__pyx_v_dst_slice;
  __Pyx_memviewslice __pyx_v_tmp_slice;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice *__pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  char const *__pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setitem_slice_assign_scalar", 0);

  /* "View.MemoryView":453
 *     cdef setitem_slice_assign_scalar(self, memoryview dst, value):
 *         cdef int array[128]
 *         cdef void *tmp = NULL             # <<<<<<<<<<<<<<
 *         cdef void *item
 * 
 */
  __pyx_v_tmp = NULL;

  /* "View.MemoryView":458
 *         cdef __Pyx_memviewslice *dst_slice
 *         cdef __Pyx_memviewslice tmp_slice
 *         dst_slice = get_slice_from_memview(dst, &tmp_slice)             # <<<<<<<<<<<<<<
 * 
 *         if <size_t>self.view.itemsize > sizeof(array):
 */
  __pyx_t_1 = __pyx_memoryview_get_slice_from_memoryview(__pyx_v_dst, (&__pyx_v_tmp_slice)); if (unlikely(__pyx_t_1 == ((__Pyx_memviewslice *)NULL))) __PYX_ERR(2, 458, __pyx_L1_error)
  __pyx_v_dst_slice = __pyx_t_1;

  /* "View.MemoryView":460
 *         dst_slice = get_slice_from_memview(dst, &tmp_slice)
 * 
 *         if <size_t>self.view.itemsize > sizeof(array):             # <<<<<<<<<<<<<<
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:
 */
  __pyx_t_2 = ((((size_t)__pyx_v_self->view.itemsize) > (sizeof(__pyx_v_array))) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":461
 * 
 *         if <size_t>self.view.itemsize > sizeof(array):
 *             tmp = PyMem_Malloc(self.view.itemsize)             # <<<<<<<<<<<<<<
 *             if tmp == NULL:
 *                 raise MemoryError
 */
    __pyx_v_tmp = PyMem_Malloc(__pyx_v_self->view.itemsize);

    /* "View.MemoryView":462
 *         if <size_t>self.view.itemsize > sizeof(array):
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:             # <<<<<<<<<<<<<<
 *                 raise MemoryError
 *             item = tmp
 */
    __pyx_t_2 = ((__pyx_v_tmp == NULL) != 0);
    if (unlikely(__pyx_t_2)) {

      /* "View.MemoryView":463
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:
 *                 raise MemoryError             # <<<<<<<<<<<<<<
 *             item = tmp
 *         else:
 */
      PyErr_NoMemory(); __PYX_ERR(2, 463, __pyx_L1_error)

      /* "View.MemoryView":462
 *         if <size_t>self.view.itemsize > sizeof(array):
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:             # <<<<<<<<<<<<<<
 *                 raise MemoryError
 *             item = tmp
 */
    }

    /* "View.MemoryView":464
 *             if tmp == NULL:
 *                 raise MemoryError
 *             item = tmp             # <<<<<<<<<<<<<<
 *         else:
 *             item = <void *> array
 */
    __pyx_v_item = __pyx_v_tmp;

    /* "View.MemoryView":460
 *         dst_slice = get_slice_from_memview(dst, &tmp_slice)
 * 
 *         if <size_t>self.view.itemsize > sizeof(array):             # <<<<<<<<<<<<<<
 *             tmp = PyMem_Malloc(self.view.itemsize)
 *             if tmp == NULL:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":466
 *             item = tmp
 *         else:
 *             item = <void *> array             # <<<<<<<<<<<<<<
 * 
 *         try:
 */
  /*else*/ {
    __pyx_v_item = ((void *)__pyx_v_array);
  }
  __pyx_L3:;

  /* "View.MemoryView":468
 *             item = <void *> array
 * 
 *         try:             # <<<<<<<<<<<<<<
 *             if self.dtype_is_object:
 *                 (<PyObject **> item)[0] = <PyObject *> value
 */
  /*try:*/ {

    /* "View.MemoryView":469
 * 
 *         try:
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 (<PyObject **> item)[0] = <PyObject *> value
 *             else:
 */
    __pyx_t_2 = (__pyx_v_self->dtype_is_object != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":470
 *         try:
 *             if self.dtype_is_object:
 *                 (<PyObject **> item)[0] = <PyObject *> value             # <<<<<<<<<<<<<<
 *             else:
 *                 self.assign_item_from_object(<char *> item, value)
 */
      (((PyObject **)__pyx_v_item)[0]) = ((PyObject *)__pyx_v_value);

      /* "View.MemoryView":469
 * 
 *         try:
 *             if self.dtype_is_object:             # <<<<<<<<<<<<<<
 *                 (<PyObject **> item)[0] = <PyObject *> value
 *             else:
 */
      goto __pyx_L8;
    }

    /* "View.MemoryView":472
 *                 (<PyObject **> item)[0] = <PyObject *> value
 *             else:
 *                 self.assign_item_from_object(<char *> item, value)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    /*else*/ {
      __pyx_t_3 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->assign_item_from_object(__pyx_v_self, ((char *)__pyx_v_item), __pyx_v_value); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 472, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_L8:;

    /* "View.MemoryView":476
 * 
 * 
 *             if self.view.suboffsets != NULL:             # <<<<<<<<<<<<<<
 *                 assert_direct_dimensions(self.view.suboffsets, self.view.ndim)
 *             slice_assign_scalar(dst_slice, dst.view.ndim, self.view.itemsize,
 */
    __pyx_t_2 = ((__pyx_v_self->view.suboffsets != NULL) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":477
 * 
 *             if self.view.suboffsets != NULL:
 *                 assert_direct_dimensions(self.view.suboffsets, self.view.ndim)             # <<<<<<<<<<<<<<
 *             slice_assign_scalar(dst_slice, dst.view.ndim, self.view.itemsize,
 *                                 item, self.dtype_is_object)
 */
      __pyx_t_3 = assert_direct_dimensions(__pyx_v_self->view.suboffsets, __pyx_v_self->view.ndim); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 477, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "View.MemoryView":476
 * 
 * 
 *             if self.view.suboffsets != NULL:             # <<<<<<<<<<<<<<
 *                 assert_direct_dimensions(self.view.suboffsets, self.view.ndim)
 *             slice_assign_scalar(dst_slice, dst.view.ndim, self.view.itemsize,
 */
    }

    /* "View.MemoryView":478
 *             if self.view.suboffsets != NULL:
 *                 assert_direct_dimensions(self.view.suboffsets, self.view.ndim)
 *             slice_assign_scalar(dst_slice, dst.view.ndim, self.view.itemsize,             # <<<<<<<<<<<<<<
 *                                 item, self.dtype_is_object)
 *         finally:
 */
    __pyx_memoryview_slice_assign_scalar(__pyx_v_dst_slice, __pyx_v_dst->view.ndim, __pyx_v_self->view.itemsize, __pyx_v_item, __pyx_v_self->dtype_is_object);
  }

  /* "View.MemoryView":481
 *                                 item, self.dtype_is_object)
 *         finally:
 *             PyMem_Free(tmp)             # <<<<<<<<<<<<<<
 * 
 *     cdef setitem_indexed(self, index, value):
 */
  /*finally:*/ {
    /*normal exit:*/{
      PyMem_Free(__pyx_v_tmp);
      goto __pyx_L7;
    }
    __pyx_L6_error:;
    /*exception exit:*/{
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __pyx_t_7 = 0; __pyx_t_8 = 0; __pyx_t_9 = 0; __pyx_t_10 = 0; __pyx_t_11 = 0; __pyx_t_12 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);
      if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9) < 0)) __Pyx_ErrFetch(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_8);
      __Pyx_XGOTREF(__pyx_t_9);
      __Pyx_XGOTREF(__pyx_t_10);
      __Pyx_XGOTREF(__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_12);
      __pyx_t_4 = __pyx_lineno; __pyx_t_5 = __pyx_clineno; __pyx_t_6 = __pyx_filename;
      {
        PyMem_Free(__pyx_v_tmp);
      }
      if (PY_MAJOR_VERSION >= 3) {
        __Pyx_XGIVEREF(__pyx_t_10);
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
      }
      __Pyx_XGIVEREF(__pyx_t_7);
      __Pyx_XGIVEREF(__pyx_t_8);
      __Pyx_XGIVEREF(__pyx_t_9);
      __Pyx_ErrRestore(__pyx_t_7, __pyx_t_8, __pyx_t_9);
      __pyx_t_7 = 0; __pyx_t_8 = 0; __pyx_t_9 = 0; __pyx_t_10 = 0; __pyx_t_11 = 0; __pyx_t_12 = 0;
      __pyx_lineno = __pyx_t_4; __pyx_clineno = __pyx_t_5; __pyx_filename = __pyx_t_6;
      goto __pyx_L1_error;
    }
    __pyx_L7:;
  }

  /* "View.MemoryView":451
 *                                  src.ndim, dst.ndim, self.dtype_is_object)
 * 
 *     cdef setitem_slice_assign_scalar(self, memoryview dst, value):             # <<<<<<<<<<<<<<
 *         cdef int array[128]
 *         cdef void *tmp = NULL
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.setitem_slice_assign_scalar", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":483
 *             PyMem_Free(tmp)
 * 
 *     cdef setitem_indexed(self, index, value):             # <<<<<<<<<<<<<<
 *         cdef char *itemp = self.get_item_pointer(index)
 *         self.assign_item_from_object(itemp, value)
 */

static PyObject *__pyx_memoryview_setitem_indexed(struct __pyx_memoryview_obj *__pyx_v_self, PyObject *__pyx_v_index, PyObject *__pyx_v_value) {
  char *__pyx_v_itemp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  char *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("setitem_indexed", 0);

  /* "View.MemoryView":484
 * 
 *     cdef setitem_indexed(self, index, value):
 *         cdef char *itemp = self.get_item_pointer(index)             # <<<<<<<<<<<<<<
 *         self.assign_item_from_object(itemp, value)
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->get_item_pointer(__pyx_v_self, __pyx_v_index); if (unlikely(__pyx_t_1 == ((char *)NULL))) __PYX_ERR(2, 484, __pyx_L1_error)
  __pyx_v_itemp = __pyx_t_1;

  /* "View.MemoryView":485
 *     cdef setitem_indexed(self, index, value):
 *         cdef char *itemp = self.get_item_pointer(index)
 *         self.assign_item_from_object(itemp, value)             # <<<<<<<<<<<<<<
 * 
 *     cdef convert_item_to_object(self, char *itemp):
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_memoryview *)__pyx_v_self->__pyx_vtab)->assign_item_from_object(__pyx_v_self, __pyx_v_itemp, __pyx_v_value); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 485, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "View.MemoryView":483
 *             PyMem_Free(tmp)
 * 
 *     cdef setitem_indexed(self, index, value):             # <<<<<<<<<<<<<<
 *         cdef char *itemp = self.get_item_pointer(index)
 *         self.assign_item_from_object(itemp, value)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.setitem_indexed", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":487
 *         self.assign_item_from_object(itemp, value)
 * 
 *     cdef convert_item_to_object(self, char *itemp):             # <<<<<<<<<<<<<<
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 */

static PyObject *__pyx_memoryview_convert_item_to_object(struct __pyx_memoryview_obj *__pyx_v_self, char *__pyx_v_itemp) {
  PyObject *__pyx_v_struct = NULL;
  PyObject *__pyx_v_bytesitem = 0;
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  size_t __pyx_t_10;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("convert_item_to_object", 0);

  /* "View.MemoryView":490
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 *         import struct             # <<<<<<<<<<<<<<
 *         cdef bytes bytesitem
 * 
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_struct, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_struct = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "View.MemoryView":493
 *         cdef bytes bytesitem
 * 
 *         bytesitem = itemp[:self.view.itemsize]             # <<<<<<<<<<<<<<
 *         try:
 *             result = struct.unpack(self.view.format, bytesitem)
 */
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_itemp + 0, __pyx_v_self->view.itemsize - 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 493, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_bytesitem = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":494
 * 
 *         bytesitem = itemp[:self.view.itemsize]
 *         try:             # <<<<<<<<<<<<<<
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_2, &__pyx_t_3, &__pyx_t_4);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_4);
    /*try:*/ {

      /* "View.MemoryView":495
 *         bytesitem = itemp[:self.view.itemsize]
 *         try:
 *             result = struct.unpack(self.view.format, bytesitem)             # <<<<<<<<<<<<<<
 *         except struct.error:
 *             raise ValueError("Unable to convert item to object")
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_struct, __pyx_n_s_unpack); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 495, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyBytes_FromString(__pyx_v_self->view.format); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 495, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_8 = 1;
        }
      }
      #if CYTHON_FAST_PYCALL
      if (PyFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_6, __pyx_v_bytesitem};
        __pyx_t_1 = __Pyx_PyFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 495, __pyx_L3_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      #if CYTHON_FAST_PYCCALL
      if (__Pyx_PyFastCFunction_Check(__pyx_t_5)) {
        PyObject *__pyx_temp[3] = {__pyx_t_7, __pyx_t_6, __pyx_v_bytesitem};
        __pyx_t_1 = __Pyx_PyCFunction_FastCall(__pyx_t_5, __pyx_temp+1-__pyx_t_8, 2+__pyx_t_8); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 495, __pyx_L3_error)
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      } else
      #endif
      {
        __pyx_t_9 = PyTuple_New(2+__pyx_t_8); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 495, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_9);
        if (__pyx_t_7) {
          __Pyx_GIVEREF(__pyx_t_7); PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_t_7); __pyx_t_7 = NULL;
        }
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_9, 0+__pyx_t_8, __pyx_t_6);
        __Pyx_INCREF(__pyx_v_bytesitem);
        __Pyx_GIVEREF(__pyx_v_bytesitem);
        PyTuple_SET_ITEM(__pyx_t_9, 1+__pyx_t_8, __pyx_v_bytesitem);
        __pyx_t_6 = 0;
        __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_9, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 495, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_result = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "View.MemoryView":494
 * 
 *         bytesitem = itemp[:self.view.itemsize]
 *         try:             # <<<<<<<<<<<<<<
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 */
    }

    /* "View.MemoryView":499
 *             raise ValueError("Unable to convert item to object")
 *         else:
 *             if len(self.view.format) == 1:             # <<<<<<<<<<<<<<
 *                 return result[0]
 *             return result
 */
    /*else:*/ {
      __pyx_t_10 = strlen(__pyx_v_self->view.format); 
      __pyx_t_11 = ((__pyx_t_10 == 1) != 0);
      if (__pyx_t_11) {

        /* "View.MemoryView":500
 *         else:
 *             if len(self.view.format) == 1:
 *                 return result[0]             # <<<<<<<<<<<<<<
 *             return result
 * 
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_result, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 500, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_r = __pyx_t_1;
        __pyx_t_1 = 0;
        goto __pyx_L6_except_return;

        /* "View.MemoryView":499
 *             raise ValueError("Unable to convert item to object")
 *         else:
 *             if len(self.view.format) == 1:             # <<<<<<<<<<<<<<
 *                 return result[0]
 *             return result
 */
      }

      /* "View.MemoryView":501
 *             if len(self.view.format) == 1:
 *                 return result[0]
 *             return result             # <<<<<<<<<<<<<<
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(__pyx_v_result);
      __pyx_r = __pyx_v_result;
      goto __pyx_L6_except_return;
    }
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "View.MemoryView":496
 *         try:
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:             # <<<<<<<<<<<<<<
 *             raise ValueError("Unable to convert item to object")
 *         else:
 */
    __Pyx_ErrFetch(&__pyx_t_1, &__pyx_t_5, &__pyx_t_9);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_struct, __pyx_n_s_error); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 496, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_1, __pyx_t_6);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_ErrRestore(__pyx_t_1, __pyx_t_5, __pyx_t_9);
    __pyx_t_1 = 0; __pyx_t_5 = 0; __pyx_t_9 = 0;
    if (__pyx_t_8) {
      __Pyx_AddTraceback("View.MemoryView.memoryview.convert_item_to_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_9, &__pyx_t_5, &__pyx_t_1) < 0) __PYX_ERR(2, 496, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_1);

      /* "View.MemoryView":497
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 *             raise ValueError("Unable to convert item to object")             # <<<<<<<<<<<<<<
 *         else:
 *             if len(self.view.format) == 1:
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__57, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 497, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_Raise(__pyx_t_6, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __PYX_ERR(2, 497, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;
    __pyx_L5_except_error:;

    /* "View.MemoryView":494
 * 
 *         bytesitem = itemp[:self.view.itemsize]
 *         try:             # <<<<<<<<<<<<<<
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 */
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L1_error;
    __pyx_L6_except_return:;
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_XGIVEREF(__pyx_t_4);
    __Pyx_ExceptionReset(__pyx_t_2, __pyx_t_3, __pyx_t_4);
    goto __pyx_L0;
  }

  /* "View.MemoryView":487
 *         self.assign_item_from_object(itemp, value)
 * 
 *     cdef convert_item_to_object(self, char *itemp):             # <<<<<<<<<<<<<<
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("View.MemoryView.memoryview.convert_item_to_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_struct);
  __Pyx_XDECREF(__pyx_v_bytesitem);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":503
 *             return result
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):             # <<<<<<<<<<<<<<
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 */

static PyObject *__pyx_memoryview_assign_item_from_object(struct __pyx_memoryview_obj *__pyx_v_self, char *__pyx_v_itemp, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_struct = NULL;
  char __pyx_v_c;
  PyObject *__pyx_v_bytesvalue = 0;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  char *__pyx_t_11;
  char *__pyx_t_12;
  char *__pyx_t_13;
  char *__pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("assign_item_from_object", 0);

  /* "View.MemoryView":506
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 *         import struct             # <<<<<<<<<<<<<<
 *         cdef char c
 *         cdef bytes bytesvalue
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_struct, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 506, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_struct = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "View.MemoryView":511
 *         cdef Py_ssize_t i
 * 
 *         if isinstance(value, tuple):             # <<<<<<<<<<<<<<
 *             bytesvalue = struct.pack(self.view.format, *value)
 *         else:
 */
  __pyx_t_2 = PyTuple_Check(__pyx_v_value); 
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "View.MemoryView":512
 * 
 *         if isinstance(value, tuple):
 *             bytesvalue = struct.pack(self.view.format, *value)             # <<<<<<<<<<<<<<
 *         else:
 *             bytesvalue = struct.pack(self.view.format, value)
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_struct, __pyx_n_s_pack); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyBytes_FromString(__pyx_v_self->view.format); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PySequence_Tuple(__pyx_v_value); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_6, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 512, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (!(likely(PyBytes_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(2, 512, __pyx_L1_error)
    __pyx_v_bytesvalue = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "View.MemoryView":511
 *         cdef Py_ssize_t i
 * 
 *         if isinstance(value, tuple):             # <<<<<<<<<<<<<<
 *             bytesvalue = struct.pack(self.view.format, *value)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":514
 *             bytesvalue = struct.pack(self.view.format, *value)
 *         else:
 *             bytesvalue = struct.pack(self.view.format, value)             # <<<<<<<<<<<<<<
 * 
 *         for i, c in enumerate(bytesvalue):
 */
  /*else*/ {
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_struct, __pyx_n_s_pack); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyBytes_FromString(__pyx_v_self->view.format); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 514, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_7 = 1;
      }
    }
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_1, __pyx_v_value};
      __pyx_t_4 = __Pyx_PyFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 514, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(__pyx_t_6)) {
      PyObject *__pyx_temp[3] = {__pyx_t_5, __pyx_t_1, __pyx_v_value};
      __pyx_t_4 = __Pyx_PyCFunction_FastCall(__pyx_t_6, __pyx_temp+1-__pyx_t_7, 2+__pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 514, __pyx_L1_error)
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    } else
    #endif
    {
      __pyx_t_8 = PyTuple_New(2+__pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 514, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (__pyx_t_5) {
        __Pyx_GIVEREF(__pyx_t_5); PyTuple_SET_ITEM(__pyx_t_8, 0, __pyx_t_5); __pyx_t_5 = NULL;
      }
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_8, 0+__pyx_t_7, __pyx_t_1);
      __Pyx_INCREF(__pyx_v_value);
      __Pyx_GIVEREF(__pyx_v_value);
      PyTuple_SET_ITEM(__pyx_t_8, 1+__pyx_t_7, __pyx_v_value);
      __pyx_t_1 = 0;
      __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_t_8, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 514, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (!(likely(PyBytes_CheckExact(__pyx_t_4))||((__pyx_t_4) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "bytes", Py_TYPE(__pyx_t_4)->tp_name), 0))) __PYX_ERR(2, 514, __pyx_L1_error)
    __pyx_v_bytesvalue = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "View.MemoryView":516
 *             bytesvalue = struct.pack(self.view.format, value)
 * 
 *         for i, c in enumerate(bytesvalue):             # <<<<<<<<<<<<<<
 *             itemp[i] = c
 * 
 */
  __pyx_t_9 = 0;
  if (unlikely(__pyx_v_bytesvalue == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' is not iterable");
    __PYX_ERR(2, 516, __pyx_L1_error)
  }
  __Pyx_INCREF(__pyx_v_bytesvalue);
  __pyx_t_10 = __pyx_v_bytesvalue;
  __pyx_t_12 = PyBytes_AS_STRING(__pyx_t_10);
  __pyx_t_13 = (__pyx_t_12 + PyBytes_GET_SIZE(__pyx_t_10));
  for (__pyx_t_14 = __pyx_t_12; __pyx_t_14 < __pyx_t_13; __pyx_t_14++) {
    __pyx_t_11 = __pyx_t_14;
    __pyx_v_c = (__pyx_t_11[0]);

    /* "View.MemoryView":517
 * 
 *         for i, c in enumerate(bytesvalue):
 *             itemp[i] = c             # <<<<<<<<<<<<<<
 * 
 *     @cname('getbuffer')
 */
    __pyx_v_i = __pyx_t_9;

    /* "View.MemoryView":516
 *             bytesvalue = struct.pack(self.view.format, value)
 * 
 *         for i, c in enumerate(bytesvalue):             # <<<<<<<<<<<<<<
 *             itemp[i] = c
 * 
 */
    __pyx_t_9 = (__pyx_t_9 + 1);

    /* "View.MemoryView":517
 * 
 *         for i, c in enumerate(bytesvalue):
 *             itemp[i] = c             # <<<<<<<<<<<<<<
 * 
 *     @cname('getbuffer')
 */
    (__pyx_v_itemp[__pyx_v_i]) = __pyx_v_c;
  }
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

  /* "View.MemoryView":503
 *             return result
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):             # <<<<<<<<<<<<<<
 *         """Only used if instantiated manually by the user, or if Cython doesn't
 *         know how to convert the type"""
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("View.MemoryView.memoryview.assign_item_from_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_struct);
  __Pyx_XDECREF(__pyx_v_bytesvalue);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":520
 * 
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):             # <<<<<<<<<<<<<<
 *         if flags & PyBUF_WRITABLE and self.view.readonly:
 *             raise ValueError("Cannot create writable memory view from read-only memoryview")
 */

/* Python wrapper */
static CYTHON_UNUSED int __pyx_memoryview_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_memoryview_getbuffer(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__(((struct __pyx_memoryview_obj *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_8__getbuffer__(struct __pyx_memoryview_obj *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t *__pyx_t_4;
  char *__pyx_t_5;
  void *__pyx_t_6;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  if (__pyx_v_info == NULL) {
    PyErr_SetString(PyExc_BufferError, "PyObject_GetBuffer: view==NULL argument is obsolete");
    return -1;
  }
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "View.MemoryView":521
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         if flags & PyBUF_WRITABLE and self.view.readonly:             # <<<<<<<<<<<<<<
 *             raise ValueError("Cannot create writable memory view from read-only memoryview")
 * 
 */
  __pyx_t_2 = ((__pyx_v_flags & PyBUF_WRITABLE) != 0);
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = (__pyx_v_self->view.readonly != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (unlikely(__pyx_t_1)) {

    /* "View.MemoryView":522
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         if flags & PyBUF_WRITABLE and self.view.readonly:
 *             raise ValueError("Cannot create writable memory view from read-only memoryview")             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_ND:
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__58, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 522, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 522, __pyx_L1_error)

    /* "View.MemoryView":521
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         if flags & PyBUF_WRITABLE and self.view.readonly:             # <<<<<<<<<<<<<<
 *             raise ValueError("Cannot create writable memory view from read-only memoryview")
 * 
 */
  }

  /* "View.MemoryView":524
 *             raise ValueError("Cannot create writable memory view from read-only memoryview")
 * 
 *         if flags & PyBUF_ND:             # <<<<<<<<<<<<<<
 *             info.shape = self.view.shape
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_ND) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":525
 * 
 *         if flags & PyBUF_ND:
 *             info.shape = self.view.shape             # <<<<<<<<<<<<<<
 *         else:
 *             info.shape = NULL
 */
    __pyx_t_4 = __pyx_v_self->view.shape;
    __pyx_v_info->shape = __pyx_t_4;

    /* "View.MemoryView":524
 *             raise ValueError("Cannot create writable memory view from read-only memoryview")
 * 
 *         if flags & PyBUF_ND:             # <<<<<<<<<<<<<<
 *             info.shape = self.view.shape
 *         else:
 */
    goto __pyx_L6;
  }

  /* "View.MemoryView":527
 *             info.shape = self.view.shape
 *         else:
 *             info.shape = NULL             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_STRIDES:
 */
  /*else*/ {
    __pyx_v_info->shape = NULL;
  }
  __pyx_L6:;

  /* "View.MemoryView":529
 *             info.shape = NULL
 * 
 *         if flags & PyBUF_STRIDES:             # <<<<<<<<<<<<<<
 *             info.strides = self.view.strides
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_STRIDES) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":530
 * 
 *         if flags & PyBUF_STRIDES:
 *             info.strides = self.view.strides             # <<<<<<<<<<<<<<
 *         else:
 *             info.strides = NULL
 */
    __pyx_t_4 = __pyx_v_self->view.strides;
    __pyx_v_info->strides = __pyx_t_4;

    /* "View.MemoryView":529
 *             info.shape = NULL
 * 
 *         if flags & PyBUF_STRIDES:             # <<<<<<<<<<<<<<
 *             info.strides = self.view.strides
 *         else:
 */
    goto __pyx_L7;
  }

  /* "View.MemoryView":532
 *             info.strides = self.view.strides
 *         else:
 *             info.strides = NULL             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_INDIRECT:
 */
  /*else*/ {
    __pyx_v_info->strides = NULL;
  }
  __pyx_L7:;

  /* "View.MemoryView":534
 *             info.strides = NULL
 * 
 *         if flags & PyBUF_INDIRECT:             # <<<<<<<<<<<<<<
 *             info.suboffsets = self.view.suboffsets
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_INDIRECT) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":535
 * 
 *         if flags & PyBUF_INDIRECT:
 *             info.suboffsets = self.view.suboffsets             # <<<<<<<<<<<<<<
 *         else:
 *             info.suboffsets = NULL
 */
    __pyx_t_4 = __pyx_v_self->view.suboffsets;
    __pyx_v_info->suboffsets = __pyx_t_4;

    /* "View.MemoryView":534
 *             info.strides = NULL
 * 
 *         if flags & PyBUF_INDIRECT:             # <<<<<<<<<<<<<<
 *             info.suboffsets = self.view.suboffsets
 *         else:
 */
    goto __pyx_L8;
  }

  /* "View.MemoryView":537
 *             info.suboffsets = self.view.suboffsets
 *         else:
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_FORMAT:
 */
  /*else*/ {
    __pyx_v_info->suboffsets = NULL;
  }
  __pyx_L8:;

  /* "View.MemoryView":539
 *             info.suboffsets = NULL
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             info.format = self.view.format
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_FORMAT) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":540
 * 
 *         if flags & PyBUF_FORMAT:
 *             info.format = self.view.format             # <<<<<<<<<<<<<<
 *         else:
 *             info.format = NULL
 */
    __pyx_t_5 = __pyx_v_self->view.format;
    __pyx_v_info->format = __pyx_t_5;

    /* "View.MemoryView":539
 *             info.suboffsets = NULL
 * 
 *         if flags & PyBUF_FORMAT:             # <<<<<<<<<<<<<<
 *             info.format = self.view.format
 *         else:
 */
    goto __pyx_L9;
  }

  /* "View.MemoryView":542
 *             info.format = self.view.format
 *         else:
 *             info.format = NULL             # <<<<<<<<<<<<<<
 * 
 *         info.buf = self.view.buf
 */
  /*else*/ {
    __pyx_v_info->format = NULL;
  }
  __pyx_L9:;

  /* "View.MemoryView":544
 *             info.format = NULL
 * 
 *         info.buf = self.view.buf             # <<<<<<<<<<<<<<
 *         info.ndim = self.view.ndim
 *         info.itemsize = self.view.itemsize
 */
  __pyx_t_6 = __pyx_v_self->view.buf;
  __pyx_v_info->buf = __pyx_t_6;

  /* "View.MemoryView":545
 * 
 *         info.buf = self.view.buf
 *         info.ndim = self.view.ndim             # <<<<<<<<<<<<<<
 *         info.itemsize = self.view.itemsize
 *         info.len = self.view.len
 */
  __pyx_t_7 = __pyx_v_self->view.ndim;
  __pyx_v_info->ndim = __pyx_t_7;

  /* "View.MemoryView":546
 *         info.buf = self.view.buf
 *         info.ndim = self.view.ndim
 *         info.itemsize = self.view.itemsize             # <<<<<<<<<<<<<<
 *         info.len = self.view.len
 *         info.readonly = self.view.readonly
 */
  __pyx_t_8 = __pyx_v_self->view.itemsize;
  __pyx_v_info->itemsize = __pyx_t_8;

  /* "View.MemoryView":547
 *         info.ndim = self.view.ndim
 *         info.itemsize = self.view.itemsize
 *         info.len = self.view.len             # <<<<<<<<<<<<<<
 *         info.readonly = self.view.readonly
 *         info.obj = self
 */
  __pyx_t_8 = __pyx_v_self->view.len;
  __pyx_v_info->len = __pyx_t_8;

  /* "View.MemoryView":548
 *         info.itemsize = self.view.itemsize
 *         info.len = self.view.len
 *         info.readonly = self.view.readonly             # <<<<<<<<<<<<<<
 *         info.obj = self
 * 
 */
  __pyx_t_1 = __pyx_v_self->view.readonly;
  __pyx_v_info->readonly = __pyx_t_1;

  /* "View.MemoryView":549
 *         info.len = self.view.len
 *         info.readonly = self.view.readonly
 *         info.obj = self             # <<<<<<<<<<<<<<
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, "getbuffer(obj, view, flags)")
 */
  __Pyx_INCREF(((PyObject *)__pyx_v_self));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj);
  __pyx_v_info->obj = ((PyObject *)__pyx_v_self);

  /* "View.MemoryView":520
 * 
 *     @cname('getbuffer')
 *     def __getbuffer__(self, Py_buffer *info, int flags):             # <<<<<<<<<<<<<<
 *         if flags & PyBUF_WRITABLE and self.view.readonly:
 *             raise ValueError("Cannot create writable memory view from read-only memoryview")
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = 0;
  }
  __pyx_L2:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":555
 * 
 *     @property
 *     def T(self):             # <<<<<<<<<<<<<<
 *         cdef _memoryviewslice result = memoryview_copy(self)
 *         transpose_memslice(&result.from_slice)
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_1T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_1T_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_1T___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  struct __pyx_memoryviewslice_obj *__pyx_v_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":556
 *     @property
 *     def T(self):
 *         cdef _memoryviewslice result = memoryview_copy(self)             # <<<<<<<<<<<<<<
 *         transpose_memslice(&result.from_slice)
 *         return result
 */
  __pyx_t_1 = __pyx_memoryview_copy_object(__pyx_v_self); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 556, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_memoryviewslice_type))))) __PYX_ERR(2, 556, __pyx_L1_error)
  __pyx_v_result = ((struct __pyx_memoryviewslice_obj *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":557
 *     def T(self):
 *         cdef _memoryviewslice result = memoryview_copy(self)
 *         transpose_memslice(&result.from_slice)             # <<<<<<<<<<<<<<
 *         return result
 * 
 */
  __pyx_t_2 = __pyx_memslice_transpose((&__pyx_v_result->from_slice)); if (unlikely(__pyx_t_2 == ((int)0))) __PYX_ERR(2, 557, __pyx_L1_error)

  /* "View.MemoryView":558
 *         cdef _memoryviewslice result = memoryview_copy(self)
 *         transpose_memslice(&result.from_slice)
 *         return result             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "View.MemoryView":555
 * 
 *     @property
 *     def T(self):             # <<<<<<<<<<<<<<
 *         cdef _memoryviewslice result = memoryview_copy(self)
 *         transpose_memslice(&result.from_slice)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":561
 * 
 *     @property
 *     def base(self):             # <<<<<<<<<<<<<<
 *         return self.obj
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_4base_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_4base_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_4base___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4base___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":562
 *     @property
 *     def base(self):
 *         return self.obj             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->obj);
  __pyx_r = __pyx_v_self->obj;
  goto __pyx_L0;

  /* "View.MemoryView":561
 * 
 *     @property
 *     def base(self):             # <<<<<<<<<<<<<<
 *         return self.obj
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":565
 * 
 *     @property
 *     def shape(self):             # <<<<<<<<<<<<<<
 *         return tuple([length for length in self.view.shape[:self.view.ndim]])
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_5shape_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_5shape_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_5shape___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  Py_ssize_t __pyx_v_length;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t *__pyx_t_2;
  Py_ssize_t *__pyx_t_3;
  Py_ssize_t *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":566
 *     @property
 *     def shape(self):
 *         return tuple([length for length in self.view.shape[:self.view.ndim]])             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_v_self->view.shape + __pyx_v_self->view.ndim);
  for (__pyx_t_4 = __pyx_v_self->view.shape; __pyx_t_4 < __pyx_t_3; __pyx_t_4++) {
    __pyx_t_2 = __pyx_t_4;
    __pyx_v_length = (__pyx_t_2[0]);
    __pyx_t_5 = PyInt_FromSsize_t(__pyx_v_length); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 566, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(2, 566, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_t_5 = PyList_AsTuple(((PyObject*)__pyx_t_1)); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":565
 * 
 *     @property
 *     def shape(self):             # <<<<<<<<<<<<<<
 *         return tuple([length for length in self.view.shape[:self.view.ndim]])
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.memoryview.shape.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":569
 * 
 *     @property
 *     def strides(self):             # <<<<<<<<<<<<<<
 *         if self.view.strides == NULL:
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_7strides_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_7strides_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_7strides___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  Py_ssize_t __pyx_v_stride;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t *__pyx_t_3;
  Py_ssize_t *__pyx_t_4;
  Py_ssize_t *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":570
 *     @property
 *     def strides(self):
 *         if self.view.strides == NULL:             # <<<<<<<<<<<<<<
 * 
 *             raise ValueError("Buffer view does not expose strides")
 */
  __pyx_t_1 = ((__pyx_v_self->view.strides == NULL) != 0);
  if (unlikely(__pyx_t_1)) {

    /* "View.MemoryView":572
 *         if self.view.strides == NULL:
 * 
 *             raise ValueError("Buffer view does not expose strides")             # <<<<<<<<<<<<<<
 * 
 *         return tuple([stride for stride in self.view.strides[:self.view.ndim]])
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__59, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 572, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(2, 572, __pyx_L1_error)

    /* "View.MemoryView":570
 *     @property
 *     def strides(self):
 *         if self.view.strides == NULL:             # <<<<<<<<<<<<<<
 * 
 *             raise ValueError("Buffer view does not expose strides")
 */
  }

  /* "View.MemoryView":574
 *             raise ValueError("Buffer view does not expose strides")
 * 
 *         return tuple([stride for stride in self.view.strides[:self.view.ndim]])             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 574, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = (__pyx_v_self->view.strides + __pyx_v_self->view.ndim);
  for (__pyx_t_5 = __pyx_v_self->view.strides; __pyx_t_5 < __pyx_t_4; __pyx_t_5++) {
    __pyx_t_3 = __pyx_t_5;
    __pyx_v_stride = (__pyx_t_3[0]);
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_v_stride); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 574, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_6))) __PYX_ERR(2, 574, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  }
  __pyx_t_6 = PyList_AsTuple(((PyObject*)__pyx_t_2)); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 574, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_6;
  __pyx_t_6 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":569
 * 
 *     @property
 *     def strides(self):             # <<<<<<<<<<<<<<
 *         if self.view.strides == NULL:
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("View.MemoryView.memoryview.strides.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":577
 * 
 *     @property
 *     def suboffsets(self):             # <<<<<<<<<<<<<<
 *         if self.view.suboffsets == NULL:
 *             return (-1,) * self.view.ndim
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_10suboffsets_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_10suboffsets_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_10suboffsets___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  Py_ssize_t __pyx_v_suboffset;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t *__pyx_t_4;
  Py_ssize_t *__pyx_t_5;
  Py_ssize_t *__pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":578
 *     @property
 *     def suboffsets(self):
 *         if self.view.suboffsets == NULL:             # <<<<<<<<<<<<<<
 *             return (-1,) * self.view.ndim
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->view.suboffsets == NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":579
 *     def suboffsets(self):
 *         if self.view.suboffsets == NULL:
 *             return (-1,) * self.view.ndim             # <<<<<<<<<<<<<<
 * 
 *         return tuple([suboffset for suboffset in self.view.suboffsets[:self.view.ndim]])
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_self->view.ndim); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_Multiply(__pyx_tuple__60, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 579, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "View.MemoryView":578
 *     @property
 *     def suboffsets(self):
 *         if self.view.suboffsets == NULL:             # <<<<<<<<<<<<<<
 *             return (-1,) * self.view.ndim
 * 
 */
  }

  /* "View.MemoryView":581
 *             return (-1,) * self.view.ndim
 * 
 *         return tuple([suboffset for suboffset in self.view.suboffsets[:self.view.ndim]])             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = (__pyx_v_self->view.suboffsets + __pyx_v_self->view.ndim);
  for (__pyx_t_6 = __pyx_v_self->view.suboffsets; __pyx_t_6 < __pyx_t_5; __pyx_t_6++) {
    __pyx_t_4 = __pyx_t_6;
    __pyx_v_suboffset = (__pyx_t_4[0]);
    __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_suboffset); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 581, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_2))) __PYX_ERR(2, 581, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = PyList_AsTuple(((PyObject*)__pyx_t_3)); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":577
 * 
 *     @property
 *     def suboffsets(self):             # <<<<<<<<<<<<<<
 *         if self.view.suboffsets == NULL:
 *             return (-1,) * self.view.ndim
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.suboffsets.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":584
 * 
 *     @property
 *     def ndim(self):             # <<<<<<<<<<<<<<
 *         return self.view.ndim
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_4ndim_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_4ndim_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_4ndim___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4ndim___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":585
 *     @property
 *     def ndim(self):
 *         return self.view.ndim             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->view.ndim); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":584
 * 
 *     @property
 *     def ndim(self):             # <<<<<<<<<<<<<<
 *         return self.view.ndim
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.ndim.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":588
 * 
 *     @property
 *     def itemsize(self):             # <<<<<<<<<<<<<<
 *         return self.view.itemsize
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_8itemsize_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_8itemsize_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_8itemsize___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_8itemsize___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":589
 *     @property
 *     def itemsize(self):
 *         return self.view.itemsize             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_v_self->view.itemsize); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 589, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":588
 * 
 *     @property
 *     def itemsize(self):             # <<<<<<<<<<<<<<
 *         return self.view.itemsize
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.itemsize.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":592
 * 
 *     @property
 *     def nbytes(self):             # <<<<<<<<<<<<<<
 *         return self.size * self.view.itemsize
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_6nbytes_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_6nbytes_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_6nbytes___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":593
 *     @property
 *     def nbytes(self):
 *         return self.size * self.view.itemsize             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_size); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_self->view.itemsize); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 593, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":592
 * 
 *     @property
 *     def nbytes(self):             # <<<<<<<<<<<<<<
 *         return self.size * self.view.itemsize
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.nbytes.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":596
 * 
 *     @property
 *     def size(self):             # <<<<<<<<<<<<<<
 *         if self._size is None:
 *             result = 1
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_4size_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_10memoryview_4size_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_10memoryview_4size___get__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_v_result = NULL;
  PyObject *__pyx_v_length = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Py_ssize_t *__pyx_t_3;
  Py_ssize_t *__pyx_t_4;
  Py_ssize_t *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":597
 *     @property
 *     def size(self):
 *         if self._size is None:             # <<<<<<<<<<<<<<
 *             result = 1
 * 
 */
  __pyx_t_1 = (__pyx_v_self->_size == Py_None);
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":598
 *     def size(self):
 *         if self._size is None:
 *             result = 1             # <<<<<<<<<<<<<<
 * 
 *             for length in self.view.shape[:self.view.ndim]:
 */
    __Pyx_INCREF(__pyx_int_1);
    __pyx_v_result = __pyx_int_1;

    /* "View.MemoryView":600
 *             result = 1
 * 
 *             for length in self.view.shape[:self.view.ndim]:             # <<<<<<<<<<<<<<
 *                 result *= length
 * 
 */
    __pyx_t_4 = (__pyx_v_self->view.shape + __pyx_v_self->view.ndim);
    for (__pyx_t_5 = __pyx_v_self->view.shape; __pyx_t_5 < __pyx_t_4; __pyx_t_5++) {
      __pyx_t_3 = __pyx_t_5;
      __pyx_t_6 = PyInt_FromSsize_t((__pyx_t_3[0])); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 600, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_XDECREF_SET(__pyx_v_length, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "View.MemoryView":601
 * 
 *             for length in self.view.shape[:self.view.ndim]:
 *                 result *= length             # <<<<<<<<<<<<<<
 * 
 *             self._size = result
 */
      __pyx_t_6 = PyNumber_InPlaceMultiply(__pyx_v_result, __pyx_v_length); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 601, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF_SET(__pyx_v_result, __pyx_t_6);
      __pyx_t_6 = 0;
    }

    /* "View.MemoryView":603
 *                 result *= length
 * 
 *             self._size = result             # <<<<<<<<<<<<<<
 * 
 *         return self._size
 */
    __Pyx_INCREF(__pyx_v_result);
    __Pyx_GIVEREF(__pyx_v_result);
    __Pyx_GOTREF(__pyx_v_self->_size);
    __Pyx_DECREF(__pyx_v_self->_size);
    __pyx_v_self->_size = __pyx_v_result;

    /* "View.MemoryView":597
 *     @property
 *     def size(self):
 *         if self._size is None:             # <<<<<<<<<<<<<<
 *             result = 1
 * 
 */
  }

  /* "View.MemoryView":605
 *             self._size = result
 * 
 *         return self._size             # <<<<<<<<<<<<<<
 * 
 *     def __len__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_size);
  __pyx_r = __pyx_v_self->_size;
  goto __pyx_L0;

  /* "View.MemoryView":596
 * 
 *     @property
 *     def size(self):             # <<<<<<<<<<<<<<
 *         if self._size is None:
 *             result = 1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("View.MemoryView.memoryview.size.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_length);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":607
 *         return self._size
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         if self.view.ndim >= 1:
 *             return self.view.shape[0]
 */

/* Python wrapper */
static Py_ssize_t __pyx_memoryview___len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_memoryview___len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__len__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_10__len__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static Py_ssize_t __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_10__len__(struct __pyx_memoryview_obj *__pyx_v_self) {
  Py_ssize_t __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__len__", 0);

  /* "View.MemoryView":608
 * 
 *     def __len__(self):
 *         if self.view.ndim >= 1:             # <<<<<<<<<<<<<<
 *             return self.view.shape[0]
 * 
 */
  __pyx_t_1 = ((__pyx_v_self->view.ndim >= 1) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":609
 *     def __len__(self):
 *         if self.view.ndim >= 1:
 *             return self.view.shape[0]             # <<<<<<<<<<<<<<
 * 
 *         return 0
 */
    __pyx_r = (__pyx_v_self->view.shape[0]);
    goto __pyx_L0;

    /* "View.MemoryView":608
 * 
 *     def __len__(self):
 *         if self.view.ndim >= 1:             # <<<<<<<<<<<<<<
 *             return self.view.shape[0]
 * 
 */
  }

  /* "View.MemoryView":611
 *             return self.view.shape[0]
 * 
 *         return 0             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "View.MemoryView":607
 *         return self._size
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<<
 *         if self.view.ndim >= 1:
 *             return self.view.shape[0]
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":613
 *         return 0
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,
 *                                                id(self))
 */

/* Python wrapper */
static PyObject *__pyx_memoryview___repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview___repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_12__repr__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "View.MemoryView":614
 * 
 *     def __repr__(self):
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,             # <<<<<<<<<<<<<<
 *                                                id(self))
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_base); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_class); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "View.MemoryView":615
 *     def __repr__(self):
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,
 *                                                id(self))             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_id, ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 615, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "View.MemoryView":614
 * 
 *     def __repr__(self):
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,             # <<<<<<<<<<<<<<
 *                                                id(self))
 * 
 */
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyString_Format(__pyx_kp_s_MemoryView_of_r_at_0x_x, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 614, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":613
 *         return 0
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return "<MemoryView of %r at 0x%x>" % (self.base.__class__.__name__,
 *                                                id(self))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":617
 *                                                id(self))
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "<MemoryView of %r object>" % (self.base.__class__.__name__,)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_memoryview___str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_memoryview___str__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_14__str__(struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "View.MemoryView":618
 * 
 *     def __str__(self):
 *         return "<MemoryView of %r object>" % (self.base.__class__.__name__,)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_base); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_class); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_name_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_MemoryView_of_r_object, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 618, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":617
 *                                                id(self))
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return "<MemoryView of %r object>" % (self.base.__class__.__name__,)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":621
 * 
 * 
 *     def is_c_contig(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_is_c_contig(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_memoryview_is_c_contig(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_c_contig (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_16is_c_contig(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_memviewslice *__pyx_v_mslice;
  __Pyx_memviewslice __pyx_v_tmp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_c_contig", 0);

  /* "View.MemoryView":624
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 *         mslice = get_slice_from_memview(self, &tmp)             # <<<<<<<<<<<<<<
 *         return slice_is_contig(mslice[0], 'C', self.view.ndim)
 * 
 */
  __pyx_t_1 = __pyx_memoryview_get_slice_from_memoryview(__pyx_v_self, (&__pyx_v_tmp)); if (unlikely(__pyx_t_1 == ((__Pyx_memviewslice *)NULL))) __PYX_ERR(2, 624, __pyx_L1_error)
  __pyx_v_mslice = __pyx_t_1;

  /* "View.MemoryView":625
 *         cdef __Pyx_memviewslice tmp
 *         mslice = get_slice_from_memview(self, &tmp)
 *         return slice_is_contig(mslice[0], 'C', self.view.ndim)             # <<<<<<<<<<<<<<
 * 
 *     def is_f_contig(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_memviewslice_is_contig((__pyx_v_mslice[0]), 'C', __pyx_v_self->view.ndim)); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 625, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":621
 * 
 * 
 *     def is_c_contig(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.is_c_contig", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":627
 *         return slice_is_contig(mslice[0], 'C', self.view.ndim)
 * 
 *     def is_f_contig(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_is_f_contig(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_memoryview_is_f_contig(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_f_contig (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_18is_f_contig(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_memviewslice *__pyx_v_mslice;
  __Pyx_memviewslice __pyx_v_tmp;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("is_f_contig", 0);

  /* "View.MemoryView":630
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 *         mslice = get_slice_from_memview(self, &tmp)             # <<<<<<<<<<<<<<
 *         return slice_is_contig(mslice[0], 'F', self.view.ndim)
 * 
 */
  __pyx_t_1 = __pyx_memoryview_get_slice_from_memoryview(__pyx_v_self, (&__pyx_v_tmp)); if (unlikely(__pyx_t_1 == ((__Pyx_memviewslice *)NULL))) __PYX_ERR(2, 630, __pyx_L1_error)
  __pyx_v_mslice = __pyx_t_1;

  /* "View.MemoryView":631
 *         cdef __Pyx_memviewslice tmp
 *         mslice = get_slice_from_memview(self, &tmp)
 *         return slice_is_contig(mslice[0], 'F', self.view.ndim)             # <<<<<<<<<<<<<<
 * 
 *     def copy(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_memviewslice_is_contig((__pyx_v_mslice[0]), 'F', __pyx_v_self->view.ndim)); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":627
 *         return slice_is_contig(mslice[0], 'C', self.view.ndim)
 * 
 *     def is_f_contig(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice *mslice
 *         cdef __Pyx_memviewslice tmp
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.is_f_contig", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":633
 *         return slice_is_contig(mslice[0], 'F', self.view.ndim)
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice mslice
 *         cdef int flags = self.flags & ~PyBUF_F_CONTIGUOUS
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_memoryview_copy(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_20copy(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_memviewslice __pyx_v_mslice;
  int __pyx_v_flags;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy", 0);

  /* "View.MemoryView":635
 *     def copy(self):
 *         cdef __Pyx_memviewslice mslice
 *         cdef int flags = self.flags & ~PyBUF_F_CONTIGUOUS             # <<<<<<<<<<<<<<
 * 
 *         slice_copy(self, &mslice)
 */
  __pyx_v_flags = (__pyx_v_self->flags & (~PyBUF_F_CONTIGUOUS));

  /* "View.MemoryView":637
 *         cdef int flags = self.flags & ~PyBUF_F_CONTIGUOUS
 * 
 *         slice_copy(self, &mslice)             # <<<<<<<<<<<<<<
 *         mslice = slice_copy_contig(&mslice, "c", self.view.ndim,
 *                                    self.view.itemsize,
 */
  __pyx_memoryview_slice_copy(__pyx_v_self, (&__pyx_v_mslice));

  /* "View.MemoryView":638
 * 
 *         slice_copy(self, &mslice)
 *         mslice = slice_copy_contig(&mslice, "c", self.view.ndim,             # <<<<<<<<<<<<<<
 *                                    self.view.itemsize,
 *                                    flags|PyBUF_C_CONTIGUOUS,
 */
  __pyx_t_1 = __pyx_memoryview_copy_new_contig((&__pyx_v_mslice), ((char *)"c"), __pyx_v_self->view.ndim, __pyx_v_self->view.itemsize, (__pyx_v_flags | PyBUF_C_CONTIGUOUS), __pyx_v_self->dtype_is_object); if (unlikely(PyErr_Occurred())) __PYX_ERR(2, 638, __pyx_L1_error)
  __pyx_v_mslice = __pyx_t_1;

  /* "View.MemoryView":643
 *                                    self.dtype_is_object)
 * 
 *         return memoryview_copy_from_slice(self, &mslice)             # <<<<<<<<<<<<<<
 * 
 *     def copy_fortran(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_memoryview_copy_object_from_slice(__pyx_v_self, (&__pyx_v_mslice)); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":633
 *         return slice_is_contig(mslice[0], 'F', self.view.ndim)
 * 
 *     def copy(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice mslice
 *         cdef int flags = self.flags & ~PyBUF_F_CONTIGUOUS
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":645
 *         return memoryview_copy_from_slice(self, &mslice)
 * 
 *     def copy_fortran(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice src, dst
 *         cdef int flags = self.flags & ~PyBUF_C_CONTIGUOUS
 */

/* Python wrapper */
static PyObject *__pyx_memoryview_copy_fortran(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_memoryview_copy_fortran(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("copy_fortran (wrapper)", 0);
  __pyx_r = __pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_memoryview___pyx_pf_15View_dot_MemoryView_10memoryview_22copy_fortran(struct __pyx_memoryview_obj *__pyx_v_self) {
  __Pyx_memviewslice __pyx_v_src;
  __Pyx_memviewslice __pyx_v_dst;
  int __pyx_v_flags;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_memviewslice __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copy_fortran", 0);

  /* "View.MemoryView":647
 *     def copy_fortran(self):
 *         cdef __Pyx_memviewslice src, dst
 *         cdef int flags = self.flags & ~PyBUF_C_CONTIGUOUS             # <<<<<<<<<<<<<<
 * 
 *         slice_copy(self, &src)
 */
  __pyx_v_flags = (__pyx_v_self->flags & (~PyBUF_C_CONTIGUOUS));

  /* "View.MemoryView":649
 *         cdef int flags = self.flags & ~PyBUF_C_CONTIGUOUS
 * 
 *         slice_copy(self, &src)             # <<<<<<<<<<<<<<
 *         dst = slice_copy_contig(&src, "fortran", self.view.ndim,
 *                                 self.view.itemsize,
 */
  __pyx_memoryview_slice_copy(__pyx_v_self, (&__pyx_v_src));

  /* "View.MemoryView":650
 * 
 *         slice_copy(self, &src)
 *         dst = slice_copy_contig(&src, "fortran", self.view.ndim,             # <<<<<<<<<<<<<<
 *                                 self.view.itemsize,
 *                                 flags|PyBUF_F_CONTIGUOUS,
 */
  __pyx_t_1 = __pyx_memoryview_copy_new_contig((&__pyx_v_src), ((char *)"fortran"), __pyx_v_self->view.ndim, __pyx_v_self->view.itemsize, (__pyx_v_flags | PyBUF_F_CONTIGUOUS), __pyx_v_self->dtype_is_object); if (unlikely(PyErr_Occurred())) __PYX_ERR(2, 650, __pyx_L1_error)
  __pyx_v_dst = __pyx_t_1;

  /* "View.MemoryView":655
 *                                 self.dtype_is_object)
 * 
 *         return memoryview_copy_from_slice(self, &dst)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_memoryview_copy_object_from_slice(__pyx_v_self, (&__pyx_v_dst)); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":645
 *         return memoryview_copy_from_slice(self, &mslice)
 * 
 *     def copy_fortran(self):             # <<<<<<<<<<<<<<
 *         cdef __Pyx_memviewslice src, dst
 *         cdef int flags = self.flags & ~PyBUF_C_CONTIGUOUS
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView.memoryview.copy_fortran", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw___pyx_memoryview_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw___pyx_memoryview_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf___pyx_memoryview___reduce_cython__(((struct __pyx_memoryview_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf___pyx_memoryview___reduce_cython__(CYTHON_UNUSED struct __pyx_memoryview_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__61, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw___pyx_memoryview_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw___pyx_memoryview_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf___pyx_memoryview_2__setstate_cython__(((struct __pyx_memoryview_obj *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf___pyx_memoryview_2__setstate_cython__(CYTHON_UNUSED struct __pyx_memoryview_obj *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__62, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":659
 * 
 * @cname('__pyx_memoryview_new')
 * cdef memoryview_cwrapper(object o, int flags, bint dtype_is_object, __Pyx_TypeInfo *typeinfo):             # <<<<<<<<<<<<<<
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)
 *     result.typeinfo = typeinfo
 */

static PyObject *__pyx_memoryview_new(PyObject *__pyx_v_o, int __pyx_v_flags, int __pyx_v_dtype_is_object, __Pyx_TypeInfo *__pyx_v_typeinfo) {
  struct __pyx_memoryview_obj *__pyx_v_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memoryview_cwrapper", 0);

  /* "View.MemoryView":660
 * @cname('__pyx_memoryview_new')
 * cdef memoryview_cwrapper(object o, int flags, bint dtype_is_object, __Pyx_TypeInfo *typeinfo):
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)             # <<<<<<<<<<<<<<
 *     result.typeinfo = typeinfo
 *     return result
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_flags); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_dtype_is_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_v_o);
  __Pyx_GIVEREF(__pyx_v_o);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_o);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_memoryview_type), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 660, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_result = ((struct __pyx_memoryview_obj *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "View.MemoryView":661
 * cdef memoryview_cwrapper(object o, int flags, bint dtype_is_object, __Pyx_TypeInfo *typeinfo):
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)
 *     result.typeinfo = typeinfo             # <<<<<<<<<<<<<<
 *     return result
 * 
 */
  __pyx_v_result->typeinfo = __pyx_v_typeinfo;

  /* "View.MemoryView":662
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)
 *     result.typeinfo = typeinfo
 *     return result             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_check')
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "View.MemoryView":659
 * 
 * @cname('__pyx_memoryview_new')
 * cdef memoryview_cwrapper(object o, int flags, bint dtype_is_object, __Pyx_TypeInfo *typeinfo):             # <<<<<<<<<<<<<<
 *     cdef memoryview result = memoryview(o, flags, dtype_is_object)
 *     result.typeinfo = typeinfo
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview_cwrapper", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":665
 * 
 * @cname('__pyx_memoryview_check')
 * cdef inline bint memoryview_check(object o):             # <<<<<<<<<<<<<<
 *     return isinstance(o, memoryview)
 * 
 */

static CYTHON_INLINE int __pyx_memoryview_check(PyObject *__pyx_v_o) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("memoryview_check", 0);

  /* "View.MemoryView":666
 * @cname('__pyx_memoryview_check')
 * cdef inline bint memoryview_check(object o):
 *     return isinstance(o, memoryview)             # <<<<<<<<<<<<<<
 * 
 * cdef tuple _unellipsify(object index, int ndim):
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_o, __pyx_memoryview_type); 
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "View.MemoryView":665
 * 
 * @cname('__pyx_memoryview_check')
 * cdef inline bint memoryview_check(object o):             # <<<<<<<<<<<<<<
 *     return isinstance(o, memoryview)
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":668
 *     return isinstance(o, memoryview)
 * 
 * cdef tuple _unellipsify(object index, int ndim):             # <<<<<<<<<<<<<<
 *     """
 *     Replace all ellipses with full slices and fill incomplete indices with
 */

static PyObject *_unellipsify(PyObject *__pyx_v_index, int __pyx_v_ndim) {
  PyObject *__pyx_v_tup = NULL;
  PyObject *__pyx_v_result = NULL;
  int __pyx_v_have_slices;
  int __pyx_v_seen_ellipsis;
  CYTHON_UNUSED PyObject *__pyx_v_idx = NULL;
  PyObject *__pyx_v_item = NULL;
  Py_ssize_t __pyx_v_nslices;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_unellipsify", 0);

  /* "View.MemoryView":673
 *     full slices.
 *     """
 *     if not isinstance(index, tuple):             # <<<<<<<<<<<<<<
 *         tup = (index,)
 *     else:
 */
  __pyx_t_1 = PyTuple_Check(__pyx_v_index); 
  __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":674
 *     """
 *     if not isinstance(index, tuple):
 *         tup = (index,)             # <<<<<<<<<<<<<<
 *     else:
 *         tup = index
 */
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 674, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_index);
    __Pyx_GIVEREF(__pyx_v_index);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_index);
    __pyx_v_tup = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "View.MemoryView":673
 *     full slices.
 *     """
 *     if not isinstance(index, tuple):             # <<<<<<<<<<<<<<
 *         tup = (index,)
 *     else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":676
 *         tup = (index,)
 *     else:
 *         tup = index             # <<<<<<<<<<<<<<
 * 
 *     result = []
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_v_index);
    __pyx_v_tup = __pyx_v_index;
  }
  __pyx_L3:;

  /* "View.MemoryView":678
 *         tup = index
 * 
 *     result = []             # <<<<<<<<<<<<<<
 *     have_slices = False
 *     seen_ellipsis = False
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 678, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_result = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "View.MemoryView":679
 * 
 *     result = []
 *     have_slices = False             # <<<<<<<<<<<<<<
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):
 */
  __pyx_v_have_slices = 0;

  /* "View.MemoryView":680
 *     result = []
 *     have_slices = False
 *     seen_ellipsis = False             # <<<<<<<<<<<<<<
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:
 */
  __pyx_v_seen_ellipsis = 0;

  /* "View.MemoryView":681
 *     have_slices = False
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):             # <<<<<<<<<<<<<<
 *         if item is Ellipsis:
 *             if not seen_ellipsis:
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_t_3 = __pyx_int_0;
  if (likely(PyList_CheckExact(__pyx_v_tup)) || PyTuple_CheckExact(__pyx_v_tup)) {
    __pyx_t_4 = __pyx_v_tup; __Pyx_INCREF(__pyx_t_4); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_v_tup); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 681, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = Py_TYPE(__pyx_t_4)->tp_iternext; if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 681, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_4))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_7 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_7); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(2, 681, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 681, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_5); __Pyx_INCREF(__pyx_t_7); __pyx_t_5++; if (unlikely(0 < 0)) __PYX_ERR(2, 681, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_4, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 681, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      }
    } else {
      __pyx_t_7 = __pyx_t_6(__pyx_t_4);
      if (unlikely(!__pyx_t_7)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 681, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_7);
    }
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_INCREF(__pyx_t_3);
    __Pyx_XDECREF_SET(__pyx_v_idx, __pyx_t_3);
    __pyx_t_7 = __Pyx_PyInt_AddObjC(__pyx_t_3, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 681, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3);
    __pyx_t_3 = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "View.MemoryView":682
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:             # <<<<<<<<<<<<<<
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 */
    __pyx_t_2 = (__pyx_v_item == __pyx_builtin_Ellipsis);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":683
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:
 *             if not seen_ellipsis:             # <<<<<<<<<<<<<<
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 *                 seen_ellipsis = True
 */
      __pyx_t_1 = ((!(__pyx_v_seen_ellipsis != 0)) != 0);
      if (__pyx_t_1) {

        /* "View.MemoryView":684
 *         if item is Ellipsis:
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))             # <<<<<<<<<<<<<<
 *                 seen_ellipsis = True
 *             else:
 */
        __pyx_t_8 = PyObject_Length(__pyx_v_tup); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(2, 684, __pyx_L1_error)
        __pyx_t_7 = PyList_New(1 * ((((__pyx_v_ndim - __pyx_t_8) + 1)<0) ? 0:((__pyx_v_ndim - __pyx_t_8) + 1))); if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 684, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        { Py_ssize_t __pyx_temp;
          for (__pyx_temp=0; __pyx_temp < ((__pyx_v_ndim - __pyx_t_8) + 1); __pyx_temp++) {
            __Pyx_INCREF(__pyx_slice__12);
            __Pyx_GIVEREF(__pyx_slice__12);
            PyList_SET_ITEM(__pyx_t_7, __pyx_temp, __pyx_slice__12);
          }
        }
        __pyx_t_9 = __Pyx_PyList_Extend(__pyx_v_result, __pyx_t_7); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(2, 684, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "View.MemoryView":685
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 *                 seen_ellipsis = True             # <<<<<<<<<<<<<<
 *             else:
 *                 result.append(slice(None))
 */
        __pyx_v_seen_ellipsis = 1;

        /* "View.MemoryView":683
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:
 *             if not seen_ellipsis:             # <<<<<<<<<<<<<<
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 *                 seen_ellipsis = True
 */
        goto __pyx_L7;
      }

      /* "View.MemoryView":687
 *                 seen_ellipsis = True
 *             else:
 *                 result.append(slice(None))             # <<<<<<<<<<<<<<
 *             have_slices = True
 *         else:
 */
      /*else*/ {
        __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_result, __pyx_slice__12); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(2, 687, __pyx_L1_error)
      }
      __pyx_L7:;

      /* "View.MemoryView":688
 *             else:
 *                 result.append(slice(None))
 *             have_slices = True             # <<<<<<<<<<<<<<
 *         else:
 *             if not isinstance(item, slice) and not PyIndex_Check(item):
 */
      __pyx_v_have_slices = 1;

      /* "View.MemoryView":682
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):
 *         if item is Ellipsis:             # <<<<<<<<<<<<<<
 *             if not seen_ellipsis:
 *                 result.extend([slice(None)] * (ndim - len(tup) + 1))
 */
      goto __pyx_L6;
    }

    /* "View.MemoryView":690
 *             have_slices = True
 *         else:
 *             if not isinstance(item, slice) and not PyIndex_Check(item):             # <<<<<<<<<<<<<<
 *                 raise TypeError("Cannot index with type '%s'" % type(item))
 * 
 */
    /*else*/ {
      __pyx_t_2 = PySlice_Check(__pyx_v_item); 
      __pyx_t_10 = ((!(__pyx_t_2 != 0)) != 0);
      if (__pyx_t_10) {
      } else {
        __pyx_t_1 = __pyx_t_10;
        goto __pyx_L9_bool_binop_done;
      }
      __pyx_t_10 = ((!(PyIndex_Check(__pyx_v_item) != 0)) != 0);
      __pyx_t_1 = __pyx_t_10;
      __pyx_L9_bool_binop_done:;
      if (unlikely(__pyx_t_1)) {

        /* "View.MemoryView":691
 *         else:
 *             if not isinstance(item, slice) and not PyIndex_Check(item):
 *                 raise TypeError("Cannot index with type '%s'" % type(item))             # <<<<<<<<<<<<<<
 * 
 *             have_slices = have_slices or isinstance(item, slice)
 */
        __pyx_t_7 = __Pyx_PyString_FormatSafe(__pyx_kp_s_Cannot_index_with_type_s, ((PyObject *)Py_TYPE(__pyx_v_item))); if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_11 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(2, 691, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_Raise(__pyx_t_11, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __PYX_ERR(2, 691, __pyx_L1_error)

        /* "View.MemoryView":690
 *             have_slices = True
 *         else:
 *             if not isinstance(item, slice) and not PyIndex_Check(item):             # <<<<<<<<<<<<<<
 *                 raise TypeError("Cannot index with type '%s'" % type(item))
 * 
 */
      }

      /* "View.MemoryView":693
 *                 raise TypeError("Cannot index with type '%s'" % type(item))
 * 
 *             have_slices = have_slices or isinstance(item, slice)             # <<<<<<<<<<<<<<
 *             result.append(item)
 * 
 */
      __pyx_t_10 = (__pyx_v_have_slices != 0);
      if (!__pyx_t_10) {
      } else {
        __pyx_t_1 = __pyx_t_10;
        goto __pyx_L11_bool_binop_done;
      }
      __pyx_t_10 = PySlice_Check(__pyx_v_item); 
      __pyx_t_2 = (__pyx_t_10 != 0);
      __pyx_t_1 = __pyx_t_2;
      __pyx_L11_bool_binop_done:;
      __pyx_v_have_slices = __pyx_t_1;

      /* "View.MemoryView":694
 * 
 *             have_slices = have_slices or isinstance(item, slice)
 *             result.append(item)             # <<<<<<<<<<<<<<
 * 
 *     nslices = ndim - len(result)
 */
      __pyx_t_9 = __Pyx_PyList_Append(__pyx_v_result, __pyx_v_item); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(2, 694, __pyx_L1_error)
    }
    __pyx_L6:;

    /* "View.MemoryView":681
 *     have_slices = False
 *     seen_ellipsis = False
 *     for idx, item in enumerate(tup):             # <<<<<<<<<<<<<<
 *         if item is Ellipsis:
 *             if not seen_ellipsis:
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "View.MemoryView":696
 *             result.append(item)
 * 
 *     nslices = ndim - len(result)             # <<<<<<<<<<<<<<
 *     if nslices:
 *         result.extend([slice(None)] * nslices)
 */
  __pyx_t_5 = PyList_GET_SIZE(__pyx_v_result); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(2, 696, __pyx_L1_error)
  __pyx_v_nslices = (__pyx_v_ndim - __pyx_t_5);

  /* "View.MemoryView":697
 * 
 *     nslices = ndim - len(result)
 *     if nslices:             # <<<<<<<<<<<<<<
 *         result.extend([slice(None)] * nslices)
 * 
 */
  __pyx_t_1 = (__pyx_v_nslices != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":698
 *     nslices = ndim - len(result)
 *     if nslices:
 *         result.extend([slice(None)] * nslices)             # <<<<<<<<<<<<<<
 * 
 *     return have_slices or nslices, tuple(result)
 */
    __pyx_t_3 = PyList_New(1 * ((__pyx_v_nslices<0) ? 0:__pyx_v_nslices)); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 698, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    { Py_ssize_t __pyx_temp;
      for (__pyx_temp=0; __pyx_temp < __pyx_v_nslices; __pyx_temp++) {
        __Pyx_INCREF(__pyx_slice__12);
        __Pyx_GIVEREF(__pyx_slice__12);
        PyList_SET_ITEM(__pyx_t_3, __pyx_temp, __pyx_slice__12);
      }
    }
    __pyx_t_9 = __Pyx_PyList_Extend(__pyx_v_result, __pyx_t_3); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(2, 698, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "View.MemoryView":697
 * 
 *     nslices = ndim - len(result)
 *     if nslices:             # <<<<<<<<<<<<<<
 *         result.extend([slice(None)] * nslices)
 * 
 */
  }

  /* "View.MemoryView":700
 *         result.extend([slice(None)] * nslices)
 * 
 *     return have_slices or nslices, tuple(result)             # <<<<<<<<<<<<<<
 * 
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):
 */
  __Pyx_XDECREF(__pyx_r);
  if (!__pyx_v_have_slices) {
  } else {
    __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_v_have_slices); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 700, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L14_bool_binop_done;
  }
  __pyx_t_4 = PyInt_FromSsize_t(__pyx_v_nslices); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __pyx_t_4;
  __pyx_t_4 = 0;
  __pyx_L14_bool_binop_done:;
  __pyx_t_4 = PyList_AsTuple(__pyx_v_result); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(2, 700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_11);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_4);
  __pyx_t_3 = 0;
  __pyx_t_4 = 0;
  __pyx_r = ((PyObject*)__pyx_t_11);
  __pyx_t_11 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":668
 *     return isinstance(o, memoryview)
 * 
 * cdef tuple _unellipsify(object index, int ndim):             # <<<<<<<<<<<<<<
 *     """
 *     Replace all ellipses with full slices and fill incomplete indices with
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("View.MemoryView._unellipsify", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_tup);
  __Pyx_XDECREF(__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_idx);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":702
 *     return have_slices or nslices, tuple(result)
 * 
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):             # <<<<<<<<<<<<<<
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:
 */

static PyObject *assert_direct_dimensions(Py_ssize_t *__pyx_v_suboffsets, int __pyx_v_ndim) {
  Py_ssize_t __pyx_v_suboffset;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t *__pyx_t_1;
  Py_ssize_t *__pyx_t_2;
  Py_ssize_t *__pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("assert_direct_dimensions", 0);

  /* "View.MemoryView":703
 * 
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):
 *     for suboffset in suboffsets[:ndim]:             # <<<<<<<<<<<<<<
 *         if suboffset >= 0:
 *             raise ValueError("Indirect dimensions not supported")
 */
  __pyx_t_2 = (__pyx_v_suboffsets + __pyx_v_ndim);
  for (__pyx_t_3 = __pyx_v_suboffsets; __pyx_t_3 < __pyx_t_2; __pyx_t_3++) {
    __pyx_t_1 = __pyx_t_3;
    __pyx_v_suboffset = (__pyx_t_1[0]);

    /* "View.MemoryView":704
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("Indirect dimensions not supported")
 * 
 */
    __pyx_t_4 = ((__pyx_v_suboffset >= 0) != 0);
    if (unlikely(__pyx_t_4)) {

      /* "View.MemoryView":705
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:
 *             raise ValueError("Indirect dimensions not supported")             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__63, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 705, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_ERR(2, 705, __pyx_L1_error)

      /* "View.MemoryView":704
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:             # <<<<<<<<<<<<<<
 *             raise ValueError("Indirect dimensions not supported")
 * 
 */
    }
  }

  /* "View.MemoryView":702
 *     return have_slices or nslices, tuple(result)
 * 
 * cdef assert_direct_dimensions(Py_ssize_t *suboffsets, int ndim):             # <<<<<<<<<<<<<<
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.assert_direct_dimensions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":712
 * 
 * @cname('__pyx_memview_slice')
 * cdef memoryview memview_slice(memoryview memview, object indices):             # <<<<<<<<<<<<<<
 *     cdef int new_ndim = 0, suboffset_dim = -1, dim
 *     cdef bint negative_step
 */

static struct __pyx_memoryview_obj *__pyx_memview_slice(struct __pyx_memoryview_obj *__pyx_v_memview, PyObject *__pyx_v_indices) {
  int __pyx_v_new_ndim;
  int __pyx_v_suboffset_dim;
  int __pyx_v_dim;
  __Pyx_memviewslice __pyx_v_src;
  __Pyx_memviewslice __pyx_v_dst;
  __Pyx_memviewslice *__pyx_v_p_src;
  struct __pyx_memoryviewslice_obj *__pyx_v_memviewsliceobj = 0;
  __Pyx_memviewslice *__pyx_v_p_dst;
  int *__pyx_v_p_suboffset_dim;
  Py_ssize_t __pyx_v_start;
  Py_ssize_t __pyx_v_stop;
  Py_ssize_t __pyx_v_step;
  int __pyx_v_have_start;
  int __pyx_v_have_stop;
  int __pyx_v_have_step;
  PyObject *__pyx_v_index = NULL;
  struct __pyx_memoryview_obj *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  struct __pyx_memoryview_obj *__pyx_t_4;
  char *__pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memview_slice", 0);

  /* "View.MemoryView":713
 * @cname('__pyx_memview_slice')
 * cdef memoryview memview_slice(memoryview memview, object indices):
 *     cdef int new_ndim = 0, suboffset_dim = -1, dim             # <<<<<<<<<<<<<<
 *     cdef bint negative_step
 *     cdef __Pyx_memviewslice src, dst
 */
  __pyx_v_new_ndim = 0;
  __pyx_v_suboffset_dim = -1;

  /* "View.MemoryView":720
 * 
 * 
 *     memset(&dst, 0, sizeof(dst))             # <<<<<<<<<<<<<<
 * 
 *     cdef _memoryviewslice memviewsliceobj
 */
  (void)(memset((&__pyx_v_dst), 0, (sizeof(__pyx_v_dst))));

  /* "View.MemoryView":724
 *     cdef _memoryviewslice memviewsliceobj
 * 
 *     assert memview.view.ndim > 0             # <<<<<<<<<<<<<<
 * 
 *     if isinstance(memview, _memoryviewslice):
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(!Py_OptimizeFlag)) {
    if (unlikely(!((__pyx_v_memview->view.ndim > 0) != 0))) {
      PyErr_SetNone(PyExc_AssertionError);
      __PYX_ERR(2, 724, __pyx_L1_error)
    }
  }
  #endif

  /* "View.MemoryView":726
 *     assert memview.view.ndim > 0
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         memviewsliceobj = memview
 *         p_src = &memviewsliceobj.from_slice
 */
  __pyx_t_1 = __Pyx_TypeCheck(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":727
 * 
 *     if isinstance(memview, _memoryviewslice):
 *         memviewsliceobj = memview             # <<<<<<<<<<<<<<
 *         p_src = &memviewsliceobj.from_slice
 *     else:
 */
    if (!(likely(((((PyObject *)__pyx_v_memview)) == Py_None) || likely(__Pyx_TypeTest(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type))))) __PYX_ERR(2, 727, __pyx_L1_error)
    __pyx_t_3 = ((PyObject *)__pyx_v_memview);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_memviewsliceobj = ((struct __pyx_memoryviewslice_obj *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "View.MemoryView":728
 *     if isinstance(memview, _memoryviewslice):
 *         memviewsliceobj = memview
 *         p_src = &memviewsliceobj.from_slice             # <<<<<<<<<<<<<<
 *     else:
 *         slice_copy(memview, &src)
 */
    __pyx_v_p_src = (&__pyx_v_memviewsliceobj->from_slice);

    /* "View.MemoryView":726
 *     assert memview.view.ndim > 0
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         memviewsliceobj = memview
 *         p_src = &memviewsliceobj.from_slice
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":730
 *         p_src = &memviewsliceobj.from_slice
 *     else:
 *         slice_copy(memview, &src)             # <<<<<<<<<<<<<<
 *         p_src = &src
 * 
 */
  /*else*/ {
    __pyx_memoryview_slice_copy(__pyx_v_memview, (&__pyx_v_src));

    /* "View.MemoryView":731
 *     else:
 *         slice_copy(memview, &src)
 *         p_src = &src             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_p_src = (&__pyx_v_src);
  }
  __pyx_L3:;

  /* "View.MemoryView":737
 * 
 * 
 *     dst.memview = p_src.memview             # <<<<<<<<<<<<<<
 *     dst.data = p_src.data
 * 
 */
  __pyx_t_4 = __pyx_v_p_src->memview;
  __pyx_v_dst.memview = __pyx_t_4;

  /* "View.MemoryView":738
 * 
 *     dst.memview = p_src.memview
 *     dst.data = p_src.data             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __pyx_v_p_src->data;
  __pyx_v_dst.data = __pyx_t_5;

  /* "View.MemoryView":743
 * 
 * 
 *     cdef __Pyx_memviewslice *p_dst = &dst             # <<<<<<<<<<<<<<
 *     cdef int *p_suboffset_dim = &suboffset_dim
 *     cdef Py_ssize_t start, stop, step
 */
  __pyx_v_p_dst = (&__pyx_v_dst);

  /* "View.MemoryView":744
 * 
 *     cdef __Pyx_memviewslice *p_dst = &dst
 *     cdef int *p_suboffset_dim = &suboffset_dim             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t start, stop, step
 *     cdef bint have_start, have_stop, have_step
 */
  __pyx_v_p_suboffset_dim = (&__pyx_v_suboffset_dim);

  /* "View.MemoryView":748
 *     cdef bint have_start, have_stop, have_step
 * 
 *     for dim, index in enumerate(indices):             # <<<<<<<<<<<<<<
 *         if PyIndex_Check(index):
 *             slice_memviewslice(
 */
  __pyx_t_6 = 0;
  if (likely(PyList_CheckExact(__pyx_v_indices)) || PyTuple_CheckExact(__pyx_v_indices)) {
    __pyx_t_3 = __pyx_v_indices; __Pyx_INCREF(__pyx_t_3); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_indices); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 748, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = Py_TYPE(__pyx_t_3)->tp_iternext; if (unlikely(!__pyx_t_8)) __PYX_ERR(2, 748, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_3))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_9 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 748, __pyx_L1_error)
        #else
        __pyx_t_9 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 748, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely(0 < 0)) __PYX_ERR(2, 748, __pyx_L1_error)
        #else
        __pyx_t_9 = PySequence_ITEM(__pyx_t_3, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 748, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        #endif
      }
    } else {
      __pyx_t_9 = __pyx_t_8(__pyx_t_3);
      if (unlikely(!__pyx_t_9)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(2, 748, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_9);
    }
    __Pyx_XDECREF_SET(__pyx_v_index, __pyx_t_9);
    __pyx_t_9 = 0;
    __pyx_v_dim = __pyx_t_6;
    __pyx_t_6 = (__pyx_t_6 + 1);

    /* "View.MemoryView":749
 * 
 *     for dim, index in enumerate(indices):
 *         if PyIndex_Check(index):             # <<<<<<<<<<<<<<
 *             slice_memviewslice(
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 */
    __pyx_t_2 = (PyIndex_Check(__pyx_v_index) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":753
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 *                 dim, new_ndim, p_suboffset_dim,
 *                 index, 0, 0, # start, stop, step             # <<<<<<<<<<<<<<
 *                 0, 0, 0, # have_{start,stop,step}
 *                 False)
 */
      __pyx_t_10 = __Pyx_PyIndex_AsSsize_t(__pyx_v_index); if (unlikely((__pyx_t_10 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(2, 753, __pyx_L1_error)

      /* "View.MemoryView":750
 *     for dim, index in enumerate(indices):
 *         if PyIndex_Check(index):
 *             slice_memviewslice(             # <<<<<<<<<<<<<<
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 *                 dim, new_ndim, p_suboffset_dim,
 */
      __pyx_t_11 = __pyx_memoryview_slice_memviewslice(__pyx_v_p_dst, (__pyx_v_p_src->shape[__pyx_v_dim]), (__pyx_v_p_src->strides[__pyx_v_dim]), (__pyx_v_p_src->suboffsets[__pyx_v_dim]), __pyx_v_dim, __pyx_v_new_ndim, __pyx_v_p_suboffset_dim, __pyx_t_10, 0, 0, 0, 0, 0, 0); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(2, 750, __pyx_L1_error)

      /* "View.MemoryView":749
 * 
 *     for dim, index in enumerate(indices):
 *         if PyIndex_Check(index):             # <<<<<<<<<<<<<<
 *             slice_memviewslice(
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 */
      goto __pyx_L6;
    }

    /* "View.MemoryView":756
 *                 0, 0, 0, # have_{start,stop,step}
 *                 False)
 *         elif index is None:             # <<<<<<<<<<<<<<
 *             p_dst.shape[new_ndim] = 1
 *             p_dst.strides[new_ndim] = 0
 */
    __pyx_t_2 = (__pyx_v_index == Py_None);
    __pyx_t_1 = (__pyx_t_2 != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":757
 *                 False)
 *         elif index is None:
 *             p_dst.shape[new_ndim] = 1             # <<<<<<<<<<<<<<
 *             p_dst.strides[new_ndim] = 0
 *             p_dst.suboffsets[new_ndim] = -1
 */
      (__pyx_v_p_dst->shape[__pyx_v_new_ndim]) = 1;

      /* "View.MemoryView":758
 *         elif index is None:
 *             p_dst.shape[new_ndim] = 1
 *             p_dst.strides[new_ndim] = 0             # <<<<<<<<<<<<<<
 *             p_dst.suboffsets[new_ndim] = -1
 *             new_ndim += 1
 */
      (__pyx_v_p_dst->strides[__pyx_v_new_ndim]) = 0;

      /* "View.MemoryView":759
 *             p_dst.shape[new_ndim] = 1
 *             p_dst.strides[new_ndim] = 0
 *             p_dst.suboffsets[new_ndim] = -1             # <<<<<<<<<<<<<<
 *             new_ndim += 1
 *         else:
 */
      (__pyx_v_p_dst->suboffsets[__pyx_v_new_ndim]) = -1L;

      /* "View.MemoryView":760
 *             p_dst.strides[new_ndim] = 0
 *             p_dst.suboffsets[new_ndim] = -1
 *             new_ndim += 1             # <<<<<<<<<<<<<<
 *         else:
 *             start = index.start or 0
 */
      __pyx_v_new_ndim = (__pyx_v_new_ndim + 1);

      /* "View.MemoryView":756
 *                 0, 0, 0, # have_{start,stop,step}
 *                 False)
 *         elif index is None:             # <<<<<<<<<<<<<<
 *             p_dst.shape[new_ndim] = 1
 *             p_dst.strides[new_ndim] = 0
 */
      goto __pyx_L6;
    }

    /* "View.MemoryView":762
 *             new_ndim += 1
 *         else:
 *             start = index.start or 0             # <<<<<<<<<<<<<<
 *             stop = index.stop or 0
 *             step = index.step or 0
 */
    /*else*/ {
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_start); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 762, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(2, 762, __pyx_L1_error)
      if (!__pyx_t_1) {
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_t_9); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(2, 762, __pyx_L1_error)
        __pyx_t_10 = __pyx_t_12;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L7_bool_binop_done;
      }
      __pyx_t_10 = 0;
      __pyx_L7_bool_binop_done:;
      __pyx_v_start = __pyx_t_10;

      /* "View.MemoryView":763
 *         else:
 *             start = index.start or 0
 *             stop = index.stop or 0             # <<<<<<<<<<<<<<
 *             step = index.step or 0
 * 
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_stop); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 763, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(2, 763, __pyx_L1_error)
      if (!__pyx_t_1) {
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_t_9); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(2, 763, __pyx_L1_error)
        __pyx_t_10 = __pyx_t_12;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L9_bool_binop_done;
      }
      __pyx_t_10 = 0;
      __pyx_L9_bool_binop_done:;
      __pyx_v_stop = __pyx_t_10;

      /* "View.MemoryView":764
 *             start = index.start or 0
 *             stop = index.stop or 0
 *             step = index.step or 0             # <<<<<<<<<<<<<<
 * 
 *             have_start = index.start is not None
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_step); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 764, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_9); if (unlikely(__pyx_t_1 < 0)) __PYX_ERR(2, 764, __pyx_L1_error)
      if (!__pyx_t_1) {
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      } else {
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_t_9); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(2, 764, __pyx_L1_error)
        __pyx_t_10 = __pyx_t_12;
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L11_bool_binop_done;
      }
      __pyx_t_10 = 0;
      __pyx_L11_bool_binop_done:;
      __pyx_v_step = __pyx_t_10;

      /* "View.MemoryView":766
 *             step = index.step or 0
 * 
 *             have_start = index.start is not None             # <<<<<<<<<<<<<<
 *             have_stop = index.stop is not None
 *             have_step = index.step is not None
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_start); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 766, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = (__pyx_t_9 != Py_None);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_v_have_start = __pyx_t_1;

      /* "View.MemoryView":767
 * 
 *             have_start = index.start is not None
 *             have_stop = index.stop is not None             # <<<<<<<<<<<<<<
 *             have_step = index.step is not None
 * 
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_stop); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 767, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = (__pyx_t_9 != Py_None);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_v_have_stop = __pyx_t_1;

      /* "View.MemoryView":768
 *             have_start = index.start is not None
 *             have_stop = index.stop is not None
 *             have_step = index.step is not None             # <<<<<<<<<<<<<<
 * 
 *             slice_memviewslice(
 */
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_v_index, __pyx_n_s_step); if (unlikely(!__pyx_t_9)) __PYX_ERR(2, 768, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_1 = (__pyx_t_9 != Py_None);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_v_have_step = __pyx_t_1;

      /* "View.MemoryView":770
 *             have_step = index.step is not None
 * 
 *             slice_memviewslice(             # <<<<<<<<<<<<<<
 *                 p_dst, p_src.shape[dim], p_src.strides[dim], p_src.suboffsets[dim],
 *                 dim, new_ndim, p_suboffset_dim,
 */
      __pyx_t_11 = __pyx_memoryview_slice_memviewslice(__pyx_v_p_dst, (__pyx_v_p_src->shape[__pyx_v_dim]), (__pyx_v_p_src->strides[__pyx_v_dim]), (__pyx_v_p_src->suboffsets[__pyx_v_dim]), __pyx_v_dim, __pyx_v_new_ndim, __pyx_v_p_suboffset_dim, __pyx_v_start, __pyx_v_stop, __pyx_v_step, __pyx_v_have_start, __pyx_v_have_stop, __pyx_v_have_step, 1); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(2, 770, __pyx_L1_error)

      /* "View.MemoryView":776
 *                 have_start, have_stop, have_step,
 *                 True)
 *             new_ndim += 1             # <<<<<<<<<<<<<<
 * 
 *     if isinstance(memview, _memoryviewslice):
 */
      __pyx_v_new_ndim = (__pyx_v_new_ndim + 1);
    }
    __pyx_L6:;

    /* "View.MemoryView":748
 *     cdef bint have_start, have_stop, have_step
 * 
 *     for dim, index in enumerate(indices):             # <<<<<<<<<<<<<<
 *         if PyIndex_Check(index):
 *             slice_memviewslice(
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "View.MemoryView":778
 *             new_ndim += 1
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         return memoryview_fromslice(dst, new_ndim,
 *                                     memviewsliceobj.to_object_func,
 */
  __pyx_t_1 = __Pyx_TypeCheck(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":779
 * 
 *     if isinstance(memview, _memoryviewslice):
 *         return memoryview_fromslice(dst, new_ndim,             # <<<<<<<<<<<<<<
 *                                     memviewsliceobj.to_object_func,
 *                                     memviewsliceobj.to_dtype_func,
 */
    __Pyx_XDECREF(((PyObject *)__pyx_r));

    /* "View.MemoryView":780
 *     if isinstance(memview, _memoryviewslice):
 *         return memoryview_fromslice(dst, new_ndim,
 *                                     memviewsliceobj.to_object_func,             # <<<<<<<<<<<<<<
 *                                     memviewsliceobj.to_dtype_func,
 *                                     memview.dtype_is_object)
 */
    if (unlikely(!__pyx_v_memviewsliceobj)) { __Pyx_RaiseUnboundLocalError("memviewsliceobj"); __PYX_ERR(2, 780, __pyx_L1_error) }

    /* "View.MemoryView":781
 *         return memoryview_fromslice(dst, new_ndim,
 *                                     memviewsliceobj.to_object_func,
 *                                     memviewsliceobj.to_dtype_func,             # <<<<<<<<<<<<<<
 *                                     memview.dtype_is_object)
 *     else:
 */
    if (unlikely(!__pyx_v_memviewsliceobj)) { __Pyx_RaiseUnboundLocalError("memviewsliceobj"); __PYX_ERR(2, 781, __pyx_L1_error) }

    /* "View.MemoryView":779
 * 
 *     if isinstance(memview, _memoryviewslice):
 *         return memoryview_fromslice(dst, new_ndim,             # <<<<<<<<<<<<<<
 *                                     memviewsliceobj.to_object_func,
 *                                     memviewsliceobj.to_dtype_func,
 */
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_dst, __pyx_v_new_ndim, __pyx_v_memviewsliceobj->to_object_func, __pyx_v_memviewsliceobj->to_dtype_func, __pyx_v_memview->dtype_is_object); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 779, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_memoryview_type))))) __PYX_ERR(2, 779, __pyx_L1_error)
    __pyx_r = ((struct __pyx_memoryview_obj *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "View.MemoryView":778
 *             new_ndim += 1
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         return memoryview_fromslice(dst, new_ndim,
 *                                     memviewsliceobj.to_object_func,
 */
  }

  /* "View.MemoryView":784
 *                                     memview.dtype_is_object)
 *     else:
 *         return memoryview_fromslice(dst, new_ndim, NULL, NULL,             # <<<<<<<<<<<<<<
 *                                     memview.dtype_is_object)
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(((PyObject *)__pyx_r));

    /* "View.MemoryView":785
 *     else:
 *         return memoryview_fromslice(dst, new_ndim, NULL, NULL,
 *                                     memview.dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_memoryview_fromslice(__pyx_v_dst, __pyx_v_new_ndim, NULL, NULL, __pyx_v_memview->dtype_is_object); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 784, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);

    /* "View.MemoryView":784
 *                                     memview.dtype_is_object)
 *     else:
 *         return memoryview_fromslice(dst, new_ndim, NULL, NULL,             # <<<<<<<<<<<<<<
 *                                     memview.dtype_is_object)
 * 
 */
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_memoryview_type))))) __PYX_ERR(2, 784, __pyx_L1_error)
    __pyx_r = ((struct __pyx_memoryview_obj *)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "View.MemoryView":712
 * 
 * @cname('__pyx_memview_slice')
 * cdef memoryview memview_slice(memoryview memview, object indices):             # <<<<<<<<<<<<<<
 *     cdef int new_ndim = 0, suboffset_dim = -1, dim
 *     cdef bint negative_step
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("View.MemoryView.memview_slice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_memviewsliceobj);
  __Pyx_XDECREF(__pyx_v_index);
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":809
 * 
 * @cname('__pyx_memoryview_slice_memviewslice')
 * cdef int slice_memviewslice(             # <<<<<<<<<<<<<<
 *         __Pyx_memviewslice *dst,
 *         Py_ssize_t shape, Py_ssize_t stride, Py_ssize_t suboffset,
 */

static int __pyx_memoryview_slice_memviewslice(__Pyx_memviewslice *__pyx_v_dst, Py_ssize_t __pyx_v_shape, Py_ssize_t __pyx_v_stride, Py_ssize_t __pyx_v_suboffset, int __pyx_v_dim, int __pyx_v_new_ndim, int *__pyx_v_suboffset_dim, Py_ssize_t __pyx_v_start, Py_ssize_t __pyx_v_stop, Py_ssize_t __pyx_v_step, int __pyx_v_have_start, int __pyx_v_have_stop, int __pyx_v_have_step, int __pyx_v_is_slice) {
  Py_ssize_t __pyx_v_new_shape;
  int __pyx_v_negative_step;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "View.MemoryView":829
 *     cdef bint negative_step
 * 
 *     if not is_slice:             # <<<<<<<<<<<<<<
 * 
 *         if start < 0:
 */
  __pyx_t_1 = ((!(__pyx_v_is_slice != 0)) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":831
 *     if not is_slice:
 * 
 *         if start < 0:             # <<<<<<<<<<<<<<
 *             start += shape
 *         if not 0 <= start < shape:
 */
    __pyx_t_1 = ((__pyx_v_start < 0) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":832
 * 
 *         if start < 0:
 *             start += shape             # <<<<<<<<<<<<<<
 *         if not 0 <= start < shape:
 *             _err_dim(IndexError, "Index out of bounds (axis %d)", dim)
 */
      __pyx_v_start = (__pyx_v_start + __pyx_v_shape);

      /* "View.MemoryView":831
 *     if not is_slice:
 * 
 *         if start < 0:             # <<<<<<<<<<<<<<
 *             start += shape
 *         if not 0 <= start < shape:
 */
    }

    /* "View.MemoryView":833
 *         if start < 0:
 *             start += shape
 *         if not 0 <= start < shape:             # <<<<<<<<<<<<<<
 *             _err_dim(IndexError, "Index out of bounds (axis %d)", dim)
 *     else:
 */
    __pyx_t_1 = (0 <= __pyx_v_start);
    if (__pyx_t_1) {
      __pyx_t_1 = (__pyx_v_start < __pyx_v_shape);
    }
    __pyx_t_2 = ((!(__pyx_t_1 != 0)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":834
 *             start += shape
 *         if not 0 <= start < shape:
 *             _err_dim(IndexError, "Index out of bounds (axis %d)", dim)             # <<<<<<<<<<<<<<
 *     else:
 * 
 */
      __pyx_t_3 = __pyx_memoryview_err_dim(__pyx_builtin_IndexError, ((char *)"Index out of bounds (axis %d)"), __pyx_v_dim); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(2, 834, __pyx_L1_error)

      /* "View.MemoryView":833
 *         if start < 0:
 *             start += shape
 *         if not 0 <= start < shape:             # <<<<<<<<<<<<<<
 *             _err_dim(IndexError, "Index out of bounds (axis %d)", dim)
 *     else:
 */
    }

    /* "View.MemoryView":829
 *     cdef bint negative_step
 * 
 *     if not is_slice:             # <<<<<<<<<<<<<<
 * 
 *         if start < 0:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":837
 *     else:
 * 
 *         negative_step = have_step != 0 and step < 0             # <<<<<<<<<<<<<<
 * 
 *         if have_step and step == 0:
 */
  /*else*/ {
    __pyx_t_1 = ((__pyx_v_have_step != 0) != 0);
    if (__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_1 = ((__pyx_v_step < 0) != 0);
    __pyx_t_2 = __pyx_t_1;
    __pyx_L6_bool_binop_done:;
    __pyx_v_negative_step = __pyx_t_2;

    /* "View.MemoryView":839
 *         negative_step = have_step != 0 and step < 0
 * 
 *         if have_step and step == 0:             # <<<<<<<<<<<<<<
 *             _err_dim(ValueError, "Step may not be zero (axis %d)", dim)
 * 
 */
    __pyx_t_1 = (__pyx_v_have_step != 0);
    if (__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L9_bool_binop_done;
    }
    __pyx_t_1 = ((__pyx_v_step == 0) != 0);
    __pyx_t_2 = __pyx_t_1;
    __pyx_L9_bool_binop_done:;
    if (__pyx_t_2) {

      /* "View.MemoryView":840
 * 
 *         if have_step and step == 0:
 *             _err_dim(ValueError, "Step may not be zero (axis %d)", dim)             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_3 = __pyx_memoryview_err_dim(__pyx_builtin_ValueError, ((char *)"Step may not be zero (axis %d)"), __pyx_v_dim); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(2, 840, __pyx_L1_error)

      /* "View.MemoryView":839
 *         negative_step = have_step != 0 and step < 0
 * 
 *         if have_step and step == 0:             # <<<<<<<<<<<<<<
 *             _err_dim(ValueError, "Step may not be zero (axis %d)", dim)
 * 
 */
    }

    /* "View.MemoryView":843
 * 
 * 
 *         if have_start:             # <<<<<<<<<<<<<<
 *             if start < 0:
 *                 start += shape
 */
    __pyx_t_2 = (__pyx_v_have_start != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":844
 * 
 *         if have_start:
 *             if start < 0:             # <<<<<<<<<<<<<<
 *                 start += shape
 *                 if start < 0:
 */
      __pyx_t_2 = ((__pyx_v_start < 0) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":845
 *         if have_start:
 *             if start < 0:
 *                 start += shape             # <<<<<<<<<<<<<<
 *                 if start < 0:
 *                     start = 0
 */
        __pyx_v_start = (__pyx_v_start + __pyx_v_shape);

        /* "View.MemoryView":846
 *             if start < 0:
 *                 start += shape
 *                 if start < 0:             # <<<<<<<<<<<<<<
 *                     start = 0
 *             elif start >= shape:
 */
        __pyx_t_2 = ((__pyx_v_start < 0) != 0);
        if (__pyx_t_2) {

          /* "View.MemoryView":847
 *                 start += shape
 *                 if start < 0:
 *                     start = 0             # <<<<<<<<<<<<<<
 *             elif start >= shape:
 *                 if negative_step:
 */
          __pyx_v_start = 0;

          /* "View.MemoryView":846
 *             if start < 0:
 *                 start += shape
 *                 if start < 0:             # <<<<<<<<<<<<<<
 *                     start = 0
 *             elif start >= shape:
 */
        }

        /* "View.MemoryView":844
 * 
 *         if have_start:
 *             if start < 0:             # <<<<<<<<<<<<<<
 *                 start += shape
 *                 if start < 0:
 */
        goto __pyx_L12;
      }

      /* "View.MemoryView":848
 *                 if start < 0:
 *                     start = 0
 *             elif start >= shape:             # <<<<<<<<<<<<<<
 *                 if negative_step:
 *                     start = shape - 1
 */
      __pyx_t_2 = ((__pyx_v_start >= __pyx_v_shape) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":849
 *                     start = 0
 *             elif start >= shape:
 *                 if negative_step:             # <<<<<<<<<<<<<<
 *                     start = shape - 1
 *                 else:
 */
        __pyx_t_2 = (__pyx_v_negative_step != 0);
        if (__pyx_t_2) {

          /* "View.MemoryView":850
 *             elif start >= shape:
 *                 if negative_step:
 *                     start = shape - 1             # <<<<<<<<<<<<<<
 *                 else:
 *                     start = shape
 */
          __pyx_v_start = (__pyx_v_shape - 1);

          /* "View.MemoryView":849
 *                     start = 0
 *             elif start >= shape:
 *                 if negative_step:             # <<<<<<<<<<<<<<
 *                     start = shape - 1
 *                 else:
 */
          goto __pyx_L14;
        }

        /* "View.MemoryView":852
 *                     start = shape - 1
 *                 else:
 *                     start = shape             # <<<<<<<<<<<<<<
 *         else:
 *             if negative_step:
 */
        /*else*/ {
          __pyx_v_start = __pyx_v_shape;
        }
        __pyx_L14:;

        /* "View.MemoryView":848
 *                 if start < 0:
 *                     start = 0
 *             elif start >= shape:             # <<<<<<<<<<<<<<
 *                 if negative_step:
 *                     start = shape - 1
 */
      }
      __pyx_L12:;

      /* "View.MemoryView":843
 * 
 * 
 *         if have_start:             # <<<<<<<<<<<<<<
 *             if start < 0:
 *                 start += shape
 */
      goto __pyx_L11;
    }

    /* "View.MemoryView":854
 *                     start = shape
 *         else:
 *             if negative_step:             # <<<<<<<<<<<<<<
 *                 start = shape - 1
 *             else:
 */
    /*else*/ {
      __pyx_t_2 = (__pyx_v_negative_step != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":855
 *         else:
 *             if negative_step:
 *                 start = shape - 1             # <<<<<<<<<<<<<<
 *             else:
 *                 start = 0
 */
        __pyx_v_start = (__pyx_v_shape - 1);

        /* "View.MemoryView":854
 *                     start = shape
 *         else:
 *             if negative_step:             # <<<<<<<<<<<<<<
 *                 start = shape - 1
 *             else:
 */
        goto __pyx_L15;
      }

      /* "View.MemoryView":857
 *                 start = shape - 1
 *             else:
 *                 start = 0             # <<<<<<<<<<<<<<
 * 
 *         if have_stop:
 */
      /*else*/ {
        __pyx_v_start = 0;
      }
      __pyx_L15:;
    }
    __pyx_L11:;

    /* "View.MemoryView":859
 *                 start = 0
 * 
 *         if have_stop:             # <<<<<<<<<<<<<<
 *             if stop < 0:
 *                 stop += shape
 */
    __pyx_t_2 = (__pyx_v_have_stop != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":860
 * 
 *         if have_stop:
 *             if stop < 0:             # <<<<<<<<<<<<<<
 *                 stop += shape
 *                 if stop < 0:
 */
      __pyx_t_2 = ((__pyx_v_stop < 0) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":861
 *         if have_stop:
 *             if stop < 0:
 *                 stop += shape             # <<<<<<<<<<<<<<
 *                 if stop < 0:
 *                     stop = 0
 */
        __pyx_v_stop = (__pyx_v_stop + __pyx_v_shape);

        /* "View.MemoryView":862
 *             if stop < 0:
 *                 stop += shape
 *                 if stop < 0:             # <<<<<<<<<<<<<<
 *                     stop = 0
 *             elif stop > shape:
 */
        __pyx_t_2 = ((__pyx_v_stop < 0) != 0);
        if (__pyx_t_2) {

          /* "View.MemoryView":863
 *                 stop += shape
 *                 if stop < 0:
 *                     stop = 0             # <<<<<<<<<<<<<<
 *             elif stop > shape:
 *                 stop = shape
 */
          __pyx_v_stop = 0;

          /* "View.MemoryView":862
 *             if stop < 0:
 *                 stop += shape
 *                 if stop < 0:             # <<<<<<<<<<<<<<
 *                     stop = 0
 *             elif stop > shape:
 */
        }

        /* "View.MemoryView":860
 * 
 *         if have_stop:
 *             if stop < 0:             # <<<<<<<<<<<<<<
 *                 stop += shape
 *                 if stop < 0:
 */
        goto __pyx_L17;
      }

      /* "View.MemoryView":864
 *                 if stop < 0:
 *                     stop = 0
 *             elif stop > shape:             # <<<<<<<<<<<<<<
 *                 stop = shape
 *         else:
 */
      __pyx_t_2 = ((__pyx_v_stop > __pyx_v_shape) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":865
 *                     stop = 0
 *             elif stop > shape:
 *                 stop = shape             # <<<<<<<<<<<<<<
 *         else:
 *             if negative_step:
 */
        __pyx_v_stop = __pyx_v_shape;

        /* "View.MemoryView":864
 *                 if stop < 0:
 *                     stop = 0
 *             elif stop > shape:             # <<<<<<<<<<<<<<
 *                 stop = shape
 *         else:
 */
      }
      __pyx_L17:;

      /* "View.MemoryView":859
 *                 start = 0
 * 
 *         if have_stop:             # <<<<<<<<<<<<<<
 *             if stop < 0:
 *                 stop += shape
 */
      goto __pyx_L16;
    }

    /* "View.MemoryView":867
 *                 stop = shape
 *         else:
 *             if negative_step:             # <<<<<<<<<<<<<<
 *                 stop = -1
 *             else:
 */
    /*else*/ {
      __pyx_t_2 = (__pyx_v_negative_step != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":868
 *         else:
 *             if negative_step:
 *                 stop = -1             # <<<<<<<<<<<<<<
 *             else:
 *                 stop = shape
 */
        __pyx_v_stop = -1L;

        /* "View.MemoryView":867
 *                 stop = shape
 *         else:
 *             if negative_step:             # <<<<<<<<<<<<<<
 *                 stop = -1
 *             else:
 */
        goto __pyx_L19;
      }

      /* "View.MemoryView":870
 *                 stop = -1
 *             else:
 *                 stop = shape             # <<<<<<<<<<<<<<
 * 
 *         if not have_step:
 */
      /*else*/ {
        __pyx_v_stop = __pyx_v_shape;
      }
      __pyx_L19:;
    }
    __pyx_L16:;

    /* "View.MemoryView":872
 *                 stop = shape
 * 
 *         if not have_step:             # <<<<<<<<<<<<<<
 *             step = 1
 * 
 */
    __pyx_t_2 = ((!(__pyx_v_have_step != 0)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":873
 * 
 *         if not have_step:
 *             step = 1             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_step = 1;

      /* "View.MemoryView":872
 *                 stop = shape
 * 
 *         if not have_step:             # <<<<<<<<<<<<<<
 *             step = 1
 * 
 */
    }

    /* "View.MemoryView":877
 * 
 *         with cython.cdivision(True):
 *             new_shape = (stop - start) // step             # <<<<<<<<<<<<<<
 * 
 *             if (stop - start) - step * new_shape:
 */
    __pyx_v_new_shape = ((__pyx_v_stop - __pyx_v_start) / __pyx_v_step);

    /* "View.MemoryView":879
 *             new_shape = (stop - start) // step
 * 
 *             if (stop - start) - step * new_shape:             # <<<<<<<<<<<<<<
 *                 new_shape += 1
 * 
 */
    __pyx_t_2 = (((__pyx_v_stop - __pyx_v_start) - (__pyx_v_step * __pyx_v_new_shape)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":880
 * 
 *             if (stop - start) - step * new_shape:
 *                 new_shape += 1             # <<<<<<<<<<<<<<
 * 
 *         if new_shape < 0:
 */
      __pyx_v_new_shape = (__pyx_v_new_shape + 1);

      /* "View.MemoryView":879
 *             new_shape = (stop - start) // step
 * 
 *             if (stop - start) - step * new_shape:             # <<<<<<<<<<<<<<
 *                 new_shape += 1
 * 
 */
    }

    /* "View.MemoryView":882
 *                 new_shape += 1
 * 
 *         if new_shape < 0:             # <<<<<<<<<<<<<<
 *             new_shape = 0
 * 
 */
    __pyx_t_2 = ((__pyx_v_new_shape < 0) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":883
 * 
 *         if new_shape < 0:
 *             new_shape = 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_new_shape = 0;

      /* "View.MemoryView":882
 *                 new_shape += 1
 * 
 *         if new_shape < 0:             # <<<<<<<<<<<<<<
 *             new_shape = 0
 * 
 */
    }

    /* "View.MemoryView":886
 * 
 * 
 *         dst.strides[new_ndim] = stride * step             # <<<<<<<<<<<<<<
 *         dst.shape[new_ndim] = new_shape
 *         dst.suboffsets[new_ndim] = suboffset
 */
    (__pyx_v_dst->strides[__pyx_v_new_ndim]) = (__pyx_v_stride * __pyx_v_step);

    /* "View.MemoryView":887
 * 
 *         dst.strides[new_ndim] = stride * step
 *         dst.shape[new_ndim] = new_shape             # <<<<<<<<<<<<<<
 *         dst.suboffsets[new_ndim] = suboffset
 * 
 */
    (__pyx_v_dst->shape[__pyx_v_new_ndim]) = __pyx_v_new_shape;

    /* "View.MemoryView":888
 *         dst.strides[new_ndim] = stride * step
 *         dst.shape[new_ndim] = new_shape
 *         dst.suboffsets[new_ndim] = suboffset             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (__pyx_v_dst->suboffsets[__pyx_v_new_ndim]) = __pyx_v_suboffset;
  }
  __pyx_L3:;

  /* "View.MemoryView":891
 * 
 * 
 *     if suboffset_dim[0] < 0:             # <<<<<<<<<<<<<<
 *         dst.data += start * stride
 *     else:
 */
  __pyx_t_2 = (((__pyx_v_suboffset_dim[0]) < 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":892
 * 
 *     if suboffset_dim[0] < 0:
 *         dst.data += start * stride             # <<<<<<<<<<<<<<
 *     else:
 *         dst.suboffsets[suboffset_dim[0]] += start * stride
 */
    __pyx_v_dst->data = (__pyx_v_dst->data + (__pyx_v_start * __pyx_v_stride));

    /* "View.MemoryView":891
 * 
 * 
 *     if suboffset_dim[0] < 0:             # <<<<<<<<<<<<<<
 *         dst.data += start * stride
 *     else:
 */
    goto __pyx_L23;
  }

  /* "View.MemoryView":894
 *         dst.data += start * stride
 *     else:
 *         dst.suboffsets[suboffset_dim[0]] += start * stride             # <<<<<<<<<<<<<<
 * 
 *     if suboffset >= 0:
 */
  /*else*/ {
    __pyx_t_3 = (__pyx_v_suboffset_dim[0]);
    (__pyx_v_dst->suboffsets[__pyx_t_3]) = ((__pyx_v_dst->suboffsets[__pyx_t_3]) + (__pyx_v_start * __pyx_v_stride));
  }
  __pyx_L23:;

  /* "View.MemoryView":896
 *         dst.suboffsets[suboffset_dim[0]] += start * stride
 * 
 *     if suboffset >= 0:             # <<<<<<<<<<<<<<
 *         if not is_slice:
 *             if new_ndim == 0:
 */
  __pyx_t_2 = ((__pyx_v_suboffset >= 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":897
 * 
 *     if suboffset >= 0:
 *         if not is_slice:             # <<<<<<<<<<<<<<
 *             if new_ndim == 0:
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 */
    __pyx_t_2 = ((!(__pyx_v_is_slice != 0)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":898
 *     if suboffset >= 0:
 *         if not is_slice:
 *             if new_ndim == 0:             # <<<<<<<<<<<<<<
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 *             else:
 */
      __pyx_t_2 = ((__pyx_v_new_ndim == 0) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":899
 *         if not is_slice:
 *             if new_ndim == 0:
 *                 dst.data = (<char **> dst.data)[0] + suboffset             # <<<<<<<<<<<<<<
 *             else:
 *                 _err_dim(IndexError, "All dimensions preceding dimension %d "
 */
        __pyx_v_dst->data = ((((char **)__pyx_v_dst->data)[0]) + __pyx_v_suboffset);

        /* "View.MemoryView":898
 *     if suboffset >= 0:
 *         if not is_slice:
 *             if new_ndim == 0:             # <<<<<<<<<<<<<<
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 *             else:
 */
        goto __pyx_L26;
      }

      /* "View.MemoryView":901
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 *             else:
 *                 _err_dim(IndexError, "All dimensions preceding dimension %d "             # <<<<<<<<<<<<<<
 *                                      "must be indexed and not sliced", dim)
 *         else:
 */
      /*else*/ {

        /* "View.MemoryView":902
 *             else:
 *                 _err_dim(IndexError, "All dimensions preceding dimension %d "
 *                                      "must be indexed and not sliced", dim)             # <<<<<<<<<<<<<<
 *         else:
 *             suboffset_dim[0] = new_ndim
 */
        __pyx_t_3 = __pyx_memoryview_err_dim(__pyx_builtin_IndexError, ((char *)"All dimensions preceding dimension %d must be indexed and not sliced"), __pyx_v_dim); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(2, 901, __pyx_L1_error)
      }
      __pyx_L26:;

      /* "View.MemoryView":897
 * 
 *     if suboffset >= 0:
 *         if not is_slice:             # <<<<<<<<<<<<<<
 *             if new_ndim == 0:
 *                 dst.data = (<char **> dst.data)[0] + suboffset
 */
      goto __pyx_L25;
    }

    /* "View.MemoryView":904
 *                                      "must be indexed and not sliced", dim)
 *         else:
 *             suboffset_dim[0] = new_ndim             # <<<<<<<<<<<<<<
 * 
 *     return 0
 */
    /*else*/ {
      (__pyx_v_suboffset_dim[0]) = __pyx_v_new_ndim;
    }
    __pyx_L25:;

    /* "View.MemoryView":896
 *         dst.suboffsets[suboffset_dim[0]] += start * stride
 * 
 *     if suboffset >= 0:             # <<<<<<<<<<<<<<
 *         if not is_slice:
 *             if new_ndim == 0:
 */
  }

  /* "View.MemoryView":906
 *             suboffset_dim[0] = new_ndim
 * 
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "View.MemoryView":809
 * 
 * @cname('__pyx_memoryview_slice_memviewslice')
 * cdef int slice_memviewslice(             # <<<<<<<<<<<<<<
 *         __Pyx_memviewslice *dst,
 *         Py_ssize_t shape, Py_ssize_t stride, Py_ssize_t suboffset,
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("View.MemoryView.slice_memviewslice", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":912
 * 
 * @cname('__pyx_pybuffer_index')
 * cdef char *pybuffer_index(Py_buffer *view, char *bufp, Py_ssize_t index,             # <<<<<<<<<<<<<<
 *                           Py_ssize_t dim) except NULL:
 *     cdef Py_ssize_t shape, stride, suboffset = -1
 */

static char *__pyx_pybuffer_index(Py_buffer *__pyx_v_view, char *__pyx_v_bufp, Py_ssize_t __pyx_v_index, Py_ssize_t __pyx_v_dim) {
  Py_ssize_t __pyx_v_shape;
  Py_ssize_t __pyx_v_stride;
  Py_ssize_t __pyx_v_suboffset;
  Py_ssize_t __pyx_v_itemsize;
  char *__pyx_v_resultp;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("pybuffer_index", 0);

  /* "View.MemoryView":914
 * cdef char *pybuffer_index(Py_buffer *view, char *bufp, Py_ssize_t index,
 *                           Py_ssize_t dim) except NULL:
 *     cdef Py_ssize_t shape, stride, suboffset = -1             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t itemsize = view.itemsize
 *     cdef char *resultp
 */
  __pyx_v_suboffset = -1L;

  /* "View.MemoryView":915
 *                           Py_ssize_t dim) except NULL:
 *     cdef Py_ssize_t shape, stride, suboffset = -1
 *     cdef Py_ssize_t itemsize = view.itemsize             # <<<<<<<<<<<<<<
 *     cdef char *resultp
 * 
 */
  __pyx_t_1 = __pyx_v_view->itemsize;
  __pyx_v_itemsize = __pyx_t_1;

  /* "View.MemoryView":918
 *     cdef char *resultp
 * 
 *     if view.ndim == 0:             # <<<<<<<<<<<<<<
 *         shape = view.len / itemsize
 *         stride = itemsize
 */
  __pyx_t_2 = ((__pyx_v_view->ndim == 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":919
 * 
 *     if view.ndim == 0:
 *         shape = view.len / itemsize             # <<<<<<<<<<<<<<
 *         stride = itemsize
 *     else:
 */
    if (unlikely(__pyx_v_itemsize == 0)) {
      PyErr_SetString(PyExc_ZeroDivisionError, "integer division or modulo by zero");
      __PYX_ERR(2, 919, __pyx_L1_error)
    }
    else if (sizeof(Py_ssize_t) == sizeof(long) && (!(((Py_ssize_t)-1) > 0)) && unlikely(__pyx_v_itemsize == (Py_ssize_t)-1)  && unlikely(UNARY_NEG_WOULD_OVERFLOW(__pyx_v_view->len))) {
      PyErr_SetString(PyExc_OverflowError, "value too large to perform division");
      __PYX_ERR(2, 919, __pyx_L1_error)
    }
    __pyx_v_shape = __Pyx_div_Py_ssize_t(__pyx_v_view->len, __pyx_v_itemsize);

    /* "View.MemoryView":920
 *     if view.ndim == 0:
 *         shape = view.len / itemsize
 *         stride = itemsize             # <<<<<<<<<<<<<<
 *     else:
 *         shape = view.shape[dim]
 */
    __pyx_v_stride = __pyx_v_itemsize;

    /* "View.MemoryView":918
 *     cdef char *resultp
 * 
 *     if view.ndim == 0:             # <<<<<<<<<<<<<<
 *         shape = view.len / itemsize
 *         stride = itemsize
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":922
 *         stride = itemsize
 *     else:
 *         shape = view.shape[dim]             # <<<<<<<<<<<<<<
 *         stride = view.strides[dim]
 *         if view.suboffsets != NULL:
 */
  /*else*/ {
    __pyx_v_shape = (__pyx_v_view->shape[__pyx_v_dim]);

    /* "View.MemoryView":923
 *     else:
 *         shape = view.shape[dim]
 *         stride = view.strides[dim]             # <<<<<<<<<<<<<<
 *         if view.suboffsets != NULL:
 *             suboffset = view.suboffsets[dim]
 */
    __pyx_v_stride = (__pyx_v_view->strides[__pyx_v_dim]);

    /* "View.MemoryView":924
 *         shape = view.shape[dim]
 *         stride = view.strides[dim]
 *         if view.suboffsets != NULL:             # <<<<<<<<<<<<<<
 *             suboffset = view.suboffsets[dim]
 * 
 */
    __pyx_t_2 = ((__pyx_v_view->suboffsets != NULL) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":925
 *         stride = view.strides[dim]
 *         if view.suboffsets != NULL:
 *             suboffset = view.suboffsets[dim]             # <<<<<<<<<<<<<<
 * 
 *     if index < 0:
 */
      __pyx_v_suboffset = (__pyx_v_view->suboffsets[__pyx_v_dim]);

      /* "View.MemoryView":924
 *         shape = view.shape[dim]
 *         stride = view.strides[dim]
 *         if view.suboffsets != NULL:             # <<<<<<<<<<<<<<
 *             suboffset = view.suboffsets[dim]
 * 
 */
    }
  }
  __pyx_L3:;

  /* "View.MemoryView":927
 *             suboffset = view.suboffsets[dim]
 * 
 *     if index < 0:             # <<<<<<<<<<<<<<
 *         index += view.shape[dim]
 *         if index < 0:
 */
  __pyx_t_2 = ((__pyx_v_index < 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":928
 * 
 *     if index < 0:
 *         index += view.shape[dim]             # <<<<<<<<<<<<<<
 *         if index < 0:
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 */
    __pyx_v_index = (__pyx_v_index + (__pyx_v_view->shape[__pyx_v_dim]));

    /* "View.MemoryView":929
 *     if index < 0:
 *         index += view.shape[dim]
 *         if index < 0:             # <<<<<<<<<<<<<<
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 */
    __pyx_t_2 = ((__pyx_v_index < 0) != 0);
    if (unlikely(__pyx_t_2)) {

      /* "View.MemoryView":930
 *         index += view.shape[dim]
 *         if index < 0:
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)             # <<<<<<<<<<<<<<
 * 
 *     if index >= shape:
 */
      __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_dim); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 930, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Out_of_bounds_on_buffer_access_a, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 930, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_IndexError, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 930, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(2, 930, __pyx_L1_error)

      /* "View.MemoryView":929
 *     if index < 0:
 *         index += view.shape[dim]
 *         if index < 0:             # <<<<<<<<<<<<<<
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 */
    }

    /* "View.MemoryView":927
 *             suboffset = view.suboffsets[dim]
 * 
 *     if index < 0:             # <<<<<<<<<<<<<<
 *         index += view.shape[dim]
 *         if index < 0:
 */
  }

  /* "View.MemoryView":932
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 *     if index >= shape:             # <<<<<<<<<<<<<<
 *         raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 */
  __pyx_t_2 = ((__pyx_v_index >= __pyx_v_shape) != 0);
  if (unlikely(__pyx_t_2)) {

    /* "View.MemoryView":933
 * 
 *     if index >= shape:
 *         raise IndexError("Out of bounds on buffer access (axis %d)" % dim)             # <<<<<<<<<<<<<<
 * 
 *     resultp = bufp + index * stride
 */
    __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_dim); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 933, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyString_Format(__pyx_kp_s_Out_of_bounds_on_buffer_access_a, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 933, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_IndexError, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 933, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(2, 933, __pyx_L1_error)

    /* "View.MemoryView":932
 *             raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 *     if index >= shape:             # <<<<<<<<<<<<<<
 *         raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 */
  }

  /* "View.MemoryView":935
 *         raise IndexError("Out of bounds on buffer access (axis %d)" % dim)
 * 
 *     resultp = bufp + index * stride             # <<<<<<<<<<<<<<
 *     if suboffset >= 0:
 *         resultp = (<char **> resultp)[0] + suboffset
 */
  __pyx_v_resultp = (__pyx_v_bufp + (__pyx_v_index * __pyx_v_stride));

  /* "View.MemoryView":936
 * 
 *     resultp = bufp + index * stride
 *     if suboffset >= 0:             # <<<<<<<<<<<<<<
 *         resultp = (<char **> resultp)[0] + suboffset
 * 
 */
  __pyx_t_2 = ((__pyx_v_suboffset >= 0) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":937
 *     resultp = bufp + index * stride
 *     if suboffset >= 0:
 *         resultp = (<char **> resultp)[0] + suboffset             # <<<<<<<<<<<<<<
 * 
 *     return resultp
 */
    __pyx_v_resultp = ((((char **)__pyx_v_resultp)[0]) + __pyx_v_suboffset);

    /* "View.MemoryView":936
 * 
 *     resultp = bufp + index * stride
 *     if suboffset >= 0:             # <<<<<<<<<<<<<<
 *         resultp = (<char **> resultp)[0] + suboffset
 * 
 */
  }

  /* "View.MemoryView":939
 *         resultp = (<char **> resultp)[0] + suboffset
 * 
 *     return resultp             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_resultp;
  goto __pyx_L0;

  /* "View.MemoryView":912
 * 
 * @cname('__pyx_pybuffer_index')
 * cdef char *pybuffer_index(Py_buffer *view, char *bufp, Py_ssize_t index,             # <<<<<<<<<<<<<<
 *                           Py_ssize_t dim) except NULL:
 *     cdef Py_ssize_t shape, stride, suboffset = -1
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("View.MemoryView.pybuffer_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":945
 * 
 * @cname('__pyx_memslice_transpose')
 * cdef int transpose_memslice(__Pyx_memviewslice *memslice) nogil except 0:             # <<<<<<<<<<<<<<
 *     cdef int ndim = memslice.memview.view.ndim
 * 
 */

static int __pyx_memslice_transpose(__Pyx_memviewslice *__pyx_v_memslice) {
  int __pyx_v_ndim;
  Py_ssize_t *__pyx_v_shape;
  Py_ssize_t *__pyx_v_strides;
  int __pyx_v_i;
  int __pyx_v_j;
  int __pyx_r;
  int __pyx_t_1;
  Py_ssize_t *__pyx_t_2;
  long __pyx_t_3;
  long __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "View.MemoryView":946
 * @cname('__pyx_memslice_transpose')
 * cdef int transpose_memslice(__Pyx_memviewslice *memslice) nogil except 0:
 *     cdef int ndim = memslice.memview.view.ndim             # <<<<<<<<<<<<<<
 * 
 *     cdef Py_ssize_t *shape = memslice.shape
 */
  __pyx_t_1 = __pyx_v_memslice->memview->view.ndim;
  __pyx_v_ndim = __pyx_t_1;

  /* "View.MemoryView":948
 *     cdef int ndim = memslice.memview.view.ndim
 * 
 *     cdef Py_ssize_t *shape = memslice.shape             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t *strides = memslice.strides
 * 
 */
  __pyx_t_2 = __pyx_v_memslice->shape;
  __pyx_v_shape = __pyx_t_2;

  /* "View.MemoryView":949
 * 
 *     cdef Py_ssize_t *shape = memslice.shape
 *     cdef Py_ssize_t *strides = memslice.strides             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = __pyx_v_memslice->strides;
  __pyx_v_strides = __pyx_t_2;

  /* "View.MemoryView":953
 * 
 *     cdef int i, j
 *     for i in range(ndim / 2):             # <<<<<<<<<<<<<<
 *         j = ndim - 1 - i
 *         strides[i], strides[j] = strides[j], strides[i]
 */
  __pyx_t_3 = __Pyx_div_long(__pyx_v_ndim, 2);
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_1 = 0; __pyx_t_1 < __pyx_t_4; __pyx_t_1+=1) {
    __pyx_v_i = __pyx_t_1;

    /* "View.MemoryView":954
 *     cdef int i, j
 *     for i in range(ndim / 2):
 *         j = ndim - 1 - i             # <<<<<<<<<<<<<<
 *         strides[i], strides[j] = strides[j], strides[i]
 *         shape[i], shape[j] = shape[j], shape[i]
 */
    __pyx_v_j = ((__pyx_v_ndim - 1) - __pyx_v_i);

    /* "View.MemoryView":955
 *     for i in range(ndim / 2):
 *         j = ndim - 1 - i
 *         strides[i], strides[j] = strides[j], strides[i]             # <<<<<<<<<<<<<<
 *         shape[i], shape[j] = shape[j], shape[i]
 * 
 */
    __pyx_t_5 = (__pyx_v_strides[__pyx_v_j]);
    __pyx_t_6 = (__pyx_v_strides[__pyx_v_i]);
    (__pyx_v_strides[__pyx_v_i]) = __pyx_t_5;
    (__pyx_v_strides[__pyx_v_j]) = __pyx_t_6;

    /* "View.MemoryView":956
 *         j = ndim - 1 - i
 *         strides[i], strides[j] = strides[j], strides[i]
 *         shape[i], shape[j] = shape[j], shape[i]             # <<<<<<<<<<<<<<
 * 
 *         if memslice.suboffsets[i] >= 0 or memslice.suboffsets[j] >= 0:
 */
    __pyx_t_6 = (__pyx_v_shape[__pyx_v_j]);
    __pyx_t_5 = (__pyx_v_shape[__pyx_v_i]);
    (__pyx_v_shape[__pyx_v_i]) = __pyx_t_6;
    (__pyx_v_shape[__pyx_v_j]) = __pyx_t_5;

    /* "View.MemoryView":958
 *         shape[i], shape[j] = shape[j], shape[i]
 * 
 *         if memslice.suboffsets[i] >= 0 or memslice.suboffsets[j] >= 0:             # <<<<<<<<<<<<<<
 *             _err(ValueError, "Cannot transpose memoryview with indirect dimensions")
 * 
 */
    __pyx_t_8 = (((__pyx_v_memslice->suboffsets[__pyx_v_i]) >= 0) != 0);
    if (!__pyx_t_8) {
    } else {
      __pyx_t_7 = __pyx_t_8;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_8 = (((__pyx_v_memslice->suboffsets[__pyx_v_j]) >= 0) != 0);
    __pyx_t_7 = __pyx_t_8;
    __pyx_L6_bool_binop_done:;
    if (__pyx_t_7) {

      /* "View.MemoryView":959
 * 
 *         if memslice.suboffsets[i] >= 0 or memslice.suboffsets[j] >= 0:
 *             _err(ValueError, "Cannot transpose memoryview with indirect dimensions")             # <<<<<<<<<<<<<<
 * 
 *     return 1
 */
      __pyx_t_9 = __pyx_memoryview_err(__pyx_builtin_ValueError, ((char *)"Cannot transpose memoryview with indirect dimensions")); if (unlikely(__pyx_t_9 == ((int)-1))) __PYX_ERR(2, 959, __pyx_L1_error)

      /* "View.MemoryView":958
 *         shape[i], shape[j] = shape[j], shape[i]
 * 
 *         if memslice.suboffsets[i] >= 0 or memslice.suboffsets[j] >= 0:             # <<<<<<<<<<<<<<
 *             _err(ValueError, "Cannot transpose memoryview with indirect dimensions")
 * 
 */
    }
  }

  /* "View.MemoryView":961
 *             _err(ValueError, "Cannot transpose memoryview with indirect dimensions")
 * 
 *     return 1             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = 1;
  goto __pyx_L0;

  /* "View.MemoryView":945
 * 
 * @cname('__pyx_memslice_transpose')
 * cdef int transpose_memslice(__Pyx_memviewslice *memslice) nogil except 0:             # <<<<<<<<<<<<<<
 *     cdef int ndim = memslice.memview.view.ndim
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("View.MemoryView.transpose_memslice", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":978
 *     cdef int (*to_dtype_func)(char *, object) except 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)
 * 
 */

/* Python wrapper */
static void __pyx_memoryviewslice___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_memoryviewslice___dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_memoryviewslice___pyx_pf_15View_dot_MemoryView_16_memoryviewslice___dealloc__(((struct __pyx_memoryviewslice_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_memoryviewslice___pyx_pf_15View_dot_MemoryView_16_memoryviewslice___dealloc__(struct __pyx_memoryviewslice_obj *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "View.MemoryView":979
 * 
 *     def __dealloc__(self):
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)             # <<<<<<<<<<<<<<
 * 
 *     cdef convert_item_to_object(self, char *itemp):
 */
  __PYX_XDEC_MEMVIEW((&__pyx_v_self->from_slice), 1);

  /* "View.MemoryView":978
 *     cdef int (*to_dtype_func)(char *, object) except 0
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":981
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)
 * 
 *     cdef convert_item_to_object(self, char *itemp):             # <<<<<<<<<<<<<<
 *         if self.to_object_func != NULL:
 *             return self.to_object_func(itemp)
 */

static PyObject *__pyx_memoryviewslice_convert_item_to_object(struct __pyx_memoryviewslice_obj *__pyx_v_self, char *__pyx_v_itemp) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("convert_item_to_object", 0);

  /* "View.MemoryView":982
 * 
 *     cdef convert_item_to_object(self, char *itemp):
 *         if self.to_object_func != NULL:             # <<<<<<<<<<<<<<
 *             return self.to_object_func(itemp)
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_self->to_object_func != NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":983
 *     cdef convert_item_to_object(self, char *itemp):
 *         if self.to_object_func != NULL:
 *             return self.to_object_func(itemp)             # <<<<<<<<<<<<<<
 *         else:
 *             return memoryview.convert_item_to_object(self, itemp)
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_v_self->to_object_func(__pyx_v_itemp); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 983, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "View.MemoryView":982
 * 
 *     cdef convert_item_to_object(self, char *itemp):
 *         if self.to_object_func != NULL:             # <<<<<<<<<<<<<<
 *             return self.to_object_func(itemp)
 *         else:
 */
  }

  /* "View.MemoryView":985
 *             return self.to_object_func(itemp)
 *         else:
 *             return memoryview.convert_item_to_object(self, itemp)             # <<<<<<<<<<<<<<
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_memoryview_convert_item_to_object(((struct __pyx_memoryview_obj *)__pyx_v_self), __pyx_v_itemp); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 985, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "View.MemoryView":981
 *         __PYX_XDEC_MEMVIEW(&self.from_slice, 1)
 * 
 *     cdef convert_item_to_object(self, char *itemp):             # <<<<<<<<<<<<<<
 *         if self.to_object_func != NULL:
 *             return self.to_object_func(itemp)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("View.MemoryView._memoryviewslice.convert_item_to_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":987
 *             return memoryview.convert_item_to_object(self, itemp)
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):             # <<<<<<<<<<<<<<
 *         if self.to_dtype_func != NULL:
 *             self.to_dtype_func(itemp, value)
 */

static PyObject *__pyx_memoryviewslice_assign_item_from_object(struct __pyx_memoryviewslice_obj *__pyx_v_self, char *__pyx_v_itemp, PyObject *__pyx_v_value) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("assign_item_from_object", 0);

  /* "View.MemoryView":988
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):
 *         if self.to_dtype_func != NULL:             # <<<<<<<<<<<<<<
 *             self.to_dtype_func(itemp, value)
 *         else:
 */
  __pyx_t_1 = ((__pyx_v_self->to_dtype_func != NULL) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":989
 *     cdef assign_item_from_object(self, char *itemp, object value):
 *         if self.to_dtype_func != NULL:
 *             self.to_dtype_func(itemp, value)             # <<<<<<<<<<<<<<
 *         else:
 *             memoryview.assign_item_from_object(self, itemp, value)
 */
    __pyx_t_2 = __pyx_v_self->to_dtype_func(__pyx_v_itemp, __pyx_v_value); if (unlikely(__pyx_t_2 == ((int)0))) __PYX_ERR(2, 989, __pyx_L1_error)

    /* "View.MemoryView":988
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):
 *         if self.to_dtype_func != NULL:             # <<<<<<<<<<<<<<
 *             self.to_dtype_func(itemp, value)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":991
 *             self.to_dtype_func(itemp, value)
 *         else:
 *             memoryview.assign_item_from_object(self, itemp, value)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  /*else*/ {
    __pyx_t_3 = __pyx_memoryview_assign_item_from_object(((struct __pyx_memoryview_obj *)__pyx_v_self), __pyx_v_itemp, __pyx_v_value); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 991, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L3:;

  /* "View.MemoryView":987
 *             return memoryview.convert_item_to_object(self, itemp)
 * 
 *     cdef assign_item_from_object(self, char *itemp, object value):             # <<<<<<<<<<<<<<
 *         if self.to_dtype_func != NULL:
 *             self.to_dtype_func(itemp, value)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView._memoryviewslice.assign_item_from_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":994
 * 
 *     @property
 *     def base(self):             # <<<<<<<<<<<<<<
 *         return self.from_object
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_16_memoryviewslice_4base_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_15View_dot_MemoryView_16_memoryviewslice_4base_1__get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_15View_dot_MemoryView_16_memoryviewslice_4base___get__(((struct __pyx_memoryviewslice_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView_16_memoryviewslice_4base___get__(struct __pyx_memoryviewslice_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "View.MemoryView":995
 *     @property
 *     def base(self):
 *         return self.from_object             # <<<<<<<<<<<<<<
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, "getbuffer(obj, view, flags)")
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->from_object);
  __pyx_r = __pyx_v_self->from_object;
  goto __pyx_L0;

  /* "View.MemoryView":994
 * 
 *     @property
 *     def base(self):             # <<<<<<<<<<<<<<
 *         return self.from_object
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw___pyx_memoryviewslice_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw___pyx_memoryviewslice_1__reduce_cython__(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf___pyx_memoryviewslice___reduce_cython__(((struct __pyx_memoryviewslice_obj *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf___pyx_memoryviewslice___reduce_cython__(CYTHON_UNUSED struct __pyx_memoryviewslice_obj *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__64, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView._memoryviewslice.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

/* Python wrapper */
static PyObject *__pyx_pw___pyx_memoryviewslice_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state); /*proto*/
static PyObject *__pyx_pw___pyx_memoryviewslice_3__setstate_cython__(PyObject *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  __pyx_r = __pyx_pf___pyx_memoryviewslice_2__setstate_cython__(((struct __pyx_memoryviewslice_obj *)__pyx_v_self), ((PyObject *)__pyx_v___pyx_state));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf___pyx_memoryviewslice_2__setstate_cython__(CYTHON_UNUSED struct __pyx_memoryviewslice_obj *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__65, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView._memoryviewslice.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1001
 * 
 * @cname('__pyx_memoryview_fromslice')
 * cdef memoryview_fromslice(__Pyx_memviewslice memviewslice,             # <<<<<<<<<<<<<<
 *                           int ndim,
 *                           object (*to_object_func)(char *),
 */

static PyObject *__pyx_memoryview_fromslice(__Pyx_memviewslice __pyx_v_memviewslice, int __pyx_v_ndim, PyObject *(*__pyx_v_to_object_func)(char *), int (*__pyx_v_to_dtype_func)(char *, PyObject *), int __pyx_v_dtype_is_object) {
  struct __pyx_memoryviewslice_obj *__pyx_v_result = 0;
  Py_ssize_t __pyx_v_suboffset;
  PyObject *__pyx_v_length = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  __Pyx_TypeInfo *__pyx_t_4;
  Py_buffer __pyx_t_5;
  Py_ssize_t *__pyx_t_6;
  Py_ssize_t *__pyx_t_7;
  Py_ssize_t *__pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memoryview_fromslice", 0);

  /* "View.MemoryView":1009
 *     cdef _memoryviewslice result
 * 
 *     if <PyObject *> memviewslice.memview == Py_None:             # <<<<<<<<<<<<<<
 *         return None
 * 
 */
  __pyx_t_1 = ((((PyObject *)__pyx_v_memviewslice.memview) == Py_None) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1010
 * 
 *     if <PyObject *> memviewslice.memview == Py_None:
 *         return None             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "View.MemoryView":1009
 *     cdef _memoryviewslice result
 * 
 *     if <PyObject *> memviewslice.memview == Py_None:             # <<<<<<<<<<<<<<
 *         return None
 * 
 */
  }

  /* "View.MemoryView":1015
 * 
 * 
 *     result = _memoryviewslice(None, 0, dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 *     result.from_slice = memviewslice
 */
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_v_dtype_is_object); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_3, 0, Py_None);
  __Pyx_INCREF(__pyx_int_0);
  __Pyx_GIVEREF(__pyx_int_0);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_int_0);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_memoryviewslice_type), __pyx_t_3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 1015, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_result = ((struct __pyx_memoryviewslice_obj *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "View.MemoryView":1017
 *     result = _memoryviewslice(None, 0, dtype_is_object)
 * 
 *     result.from_slice = memviewslice             # <<<<<<<<<<<<<<
 *     __PYX_INC_MEMVIEW(&memviewslice, 1)
 * 
 */
  __pyx_v_result->from_slice = __pyx_v_memviewslice;

  /* "View.MemoryView":1018
 * 
 *     result.from_slice = memviewslice
 *     __PYX_INC_MEMVIEW(&memviewslice, 1)             # <<<<<<<<<<<<<<
 * 
 *     result.from_object = (<memoryview> memviewslice.memview).base
 */
  __PYX_INC_MEMVIEW((&__pyx_v_memviewslice), 1);

  /* "View.MemoryView":1020
 *     __PYX_INC_MEMVIEW(&memviewslice, 1)
 * 
 *     result.from_object = (<memoryview> memviewslice.memview).base             # <<<<<<<<<<<<<<
 *     result.typeinfo = memviewslice.memview.typeinfo
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_memviewslice.memview), __pyx_n_s_base); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 1020, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF(__pyx_v_result->from_object);
  __Pyx_DECREF(__pyx_v_result->from_object);
  __pyx_v_result->from_object = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "View.MemoryView":1021
 * 
 *     result.from_object = (<memoryview> memviewslice.memview).base
 *     result.typeinfo = memviewslice.memview.typeinfo             # <<<<<<<<<<<<<<
 * 
 *     result.view = memviewslice.memview.view
 */
  __pyx_t_4 = __pyx_v_memviewslice.memview->typeinfo;
  __pyx_v_result->__pyx_base.typeinfo = __pyx_t_4;

  /* "View.MemoryView":1023
 *     result.typeinfo = memviewslice.memview.typeinfo
 * 
 *     result.view = memviewslice.memview.view             # <<<<<<<<<<<<<<
 *     result.view.buf = <void *> memviewslice.data
 *     result.view.ndim = ndim
 */
  __pyx_t_5 = __pyx_v_memviewslice.memview->view;
  __pyx_v_result->__pyx_base.view = __pyx_t_5;

  /* "View.MemoryView":1024
 * 
 *     result.view = memviewslice.memview.view
 *     result.view.buf = <void *> memviewslice.data             # <<<<<<<<<<<<<<
 *     result.view.ndim = ndim
 *     (<__pyx_buffer *> &result.view).obj = Py_None
 */
  __pyx_v_result->__pyx_base.view.buf = ((void *)__pyx_v_memviewslice.data);

  /* "View.MemoryView":1025
 *     result.view = memviewslice.memview.view
 *     result.view.buf = <void *> memviewslice.data
 *     result.view.ndim = ndim             # <<<<<<<<<<<<<<
 *     (<__pyx_buffer *> &result.view).obj = Py_None
 *     Py_INCREF(Py_None)
 */
  __pyx_v_result->__pyx_base.view.ndim = __pyx_v_ndim;

  /* "View.MemoryView":1026
 *     result.view.buf = <void *> memviewslice.data
 *     result.view.ndim = ndim
 *     (<__pyx_buffer *> &result.view).obj = Py_None             # <<<<<<<<<<<<<<
 *     Py_INCREF(Py_None)
 * 
 */
  ((Py_buffer *)(&__pyx_v_result->__pyx_base.view))->obj = Py_None;

  /* "View.MemoryView":1027
 *     result.view.ndim = ndim
 *     (<__pyx_buffer *> &result.view).obj = Py_None
 *     Py_INCREF(Py_None)             # <<<<<<<<<<<<<<
 * 
 *     if (<memoryview>memviewslice.memview).flags & PyBUF_WRITABLE:
 */
  Py_INCREF(Py_None);

  /* "View.MemoryView":1029
 *     Py_INCREF(Py_None)
 * 
 *     if (<memoryview>memviewslice.memview).flags & PyBUF_WRITABLE:             # <<<<<<<<<<<<<<
 *         result.flags = PyBUF_RECORDS
 *     else:
 */
  __pyx_t_1 = ((((struct __pyx_memoryview_obj *)__pyx_v_memviewslice.memview)->flags & PyBUF_WRITABLE) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1030
 * 
 *     if (<memoryview>memviewslice.memview).flags & PyBUF_WRITABLE:
 *         result.flags = PyBUF_RECORDS             # <<<<<<<<<<<<<<
 *     else:
 *         result.flags = PyBUF_RECORDS_RO
 */
    __pyx_v_result->__pyx_base.flags = PyBUF_RECORDS;

    /* "View.MemoryView":1029
 *     Py_INCREF(Py_None)
 * 
 *     if (<memoryview>memviewslice.memview).flags & PyBUF_WRITABLE:             # <<<<<<<<<<<<<<
 *         result.flags = PyBUF_RECORDS
 *     else:
 */
    goto __pyx_L4;
  }

  /* "View.MemoryView":1032
 *         result.flags = PyBUF_RECORDS
 *     else:
 *         result.flags = PyBUF_RECORDS_RO             # <<<<<<<<<<<<<<
 * 
 *     result.view.shape = <Py_ssize_t *> result.from_slice.shape
 */
  /*else*/ {
    __pyx_v_result->__pyx_base.flags = PyBUF_RECORDS_RO;
  }
  __pyx_L4:;

  /* "View.MemoryView":1034
 *         result.flags = PyBUF_RECORDS_RO
 * 
 *     result.view.shape = <Py_ssize_t *> result.from_slice.shape             # <<<<<<<<<<<<<<
 *     result.view.strides = <Py_ssize_t *> result.from_slice.strides
 * 
 */
  __pyx_v_result->__pyx_base.view.shape = ((Py_ssize_t *)__pyx_v_result->from_slice.shape);

  /* "View.MemoryView":1035
 * 
 *     result.view.shape = <Py_ssize_t *> result.from_slice.shape
 *     result.view.strides = <Py_ssize_t *> result.from_slice.strides             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_result->__pyx_base.view.strides = ((Py_ssize_t *)__pyx_v_result->from_slice.strides);

  /* "View.MemoryView":1038
 * 
 * 
 *     result.view.suboffsets = NULL             # <<<<<<<<<<<<<<
 *     for suboffset in result.from_slice.suboffsets[:ndim]:
 *         if suboffset >= 0:
 */
  __pyx_v_result->__pyx_base.view.suboffsets = NULL;

  /* "View.MemoryView":1039
 * 
 *     result.view.suboffsets = NULL
 *     for suboffset in result.from_slice.suboffsets[:ndim]:             # <<<<<<<<<<<<<<
 *         if suboffset >= 0:
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets
 */
  __pyx_t_7 = (__pyx_v_result->from_slice.suboffsets + __pyx_v_ndim);
  for (__pyx_t_8 = __pyx_v_result->from_slice.suboffsets; __pyx_t_8 < __pyx_t_7; __pyx_t_8++) {
    __pyx_t_6 = __pyx_t_8;
    __pyx_v_suboffset = (__pyx_t_6[0]);

    /* "View.MemoryView":1040
 *     result.view.suboffsets = NULL
 *     for suboffset in result.from_slice.suboffsets[:ndim]:
 *         if suboffset >= 0:             # <<<<<<<<<<<<<<
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets
 *             break
 */
    __pyx_t_1 = ((__pyx_v_suboffset >= 0) != 0);
    if (__pyx_t_1) {

      /* "View.MemoryView":1041
 *     for suboffset in result.from_slice.suboffsets[:ndim]:
 *         if suboffset >= 0:
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets             # <<<<<<<<<<<<<<
 *             break
 * 
 */
      __pyx_v_result->__pyx_base.view.suboffsets = ((Py_ssize_t *)__pyx_v_result->from_slice.suboffsets);

      /* "View.MemoryView":1042
 *         if suboffset >= 0:
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets
 *             break             # <<<<<<<<<<<<<<
 * 
 *     result.view.len = result.view.itemsize
 */
      goto __pyx_L6_break;

      /* "View.MemoryView":1040
 *     result.view.suboffsets = NULL
 *     for suboffset in result.from_slice.suboffsets[:ndim]:
 *         if suboffset >= 0:             # <<<<<<<<<<<<<<
 *             result.view.suboffsets = <Py_ssize_t *> result.from_slice.suboffsets
 *             break
 */
    }
  }
  __pyx_L6_break:;

  /* "View.MemoryView":1044
 *             break
 * 
 *     result.view.len = result.view.itemsize             # <<<<<<<<<<<<<<
 *     for length in result.view.shape[:ndim]:
 *         result.view.len *= length
 */
  __pyx_t_9 = __pyx_v_result->__pyx_base.view.itemsize;
  __pyx_v_result->__pyx_base.view.len = __pyx_t_9;

  /* "View.MemoryView":1045
 * 
 *     result.view.len = result.view.itemsize
 *     for length in result.view.shape[:ndim]:             # <<<<<<<<<<<<<<
 *         result.view.len *= length
 * 
 */
  __pyx_t_7 = (__pyx_v_result->__pyx_base.view.shape + __pyx_v_ndim);
  for (__pyx_t_8 = __pyx_v_result->__pyx_base.view.shape; __pyx_t_8 < __pyx_t_7; __pyx_t_8++) {
    __pyx_t_6 = __pyx_t_8;
    __pyx_t_2 = PyInt_FromSsize_t((__pyx_t_6[0])); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 1045, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_length, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "View.MemoryView":1046
 *     result.view.len = result.view.itemsize
 *     for length in result.view.shape[:ndim]:
 *         result.view.len *= length             # <<<<<<<<<<<<<<
 * 
 *     result.to_object_func = to_object_func
 */
    __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_result->__pyx_base.view.len); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 1046, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_InPlaceMultiply(__pyx_t_2, __pyx_v_length); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 1046, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_t_3); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) __PYX_ERR(2, 1046, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_v_result->__pyx_base.view.len = __pyx_t_9;
  }

  /* "View.MemoryView":1048
 *         result.view.len *= length
 * 
 *     result.to_object_func = to_object_func             # <<<<<<<<<<<<<<
 *     result.to_dtype_func = to_dtype_func
 * 
 */
  __pyx_v_result->to_object_func = __pyx_v_to_object_func;

  /* "View.MemoryView":1049
 * 
 *     result.to_object_func = to_object_func
 *     result.to_dtype_func = to_dtype_func             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
  __pyx_v_result->to_dtype_func = __pyx_v_to_dtype_func;

  /* "View.MemoryView":1051
 *     result.to_dtype_func = to_dtype_func
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_get_slice_from_memoryview')
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_result));
  __pyx_r = ((PyObject *)__pyx_v_result);
  goto __pyx_L0;

  /* "View.MemoryView":1001
 * 
 * @cname('__pyx_memoryview_fromslice')
 * cdef memoryview_fromslice(__Pyx_memviewslice memviewslice,             # <<<<<<<<<<<<<<
 *                           int ndim,
 *                           object (*to_object_func)(char *),
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.memoryview_fromslice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_result);
  __Pyx_XDECREF(__pyx_v_length);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1054
 * 
 * @cname('__pyx_memoryview_get_slice_from_memoryview')
 * cdef __Pyx_memviewslice *get_slice_from_memview(memoryview memview,             # <<<<<<<<<<<<<<
 *                                                    __Pyx_memviewslice *mslice) except NULL:
 *     cdef _memoryviewslice obj
 */

static __Pyx_memviewslice *__pyx_memoryview_get_slice_from_memoryview(struct __pyx_memoryview_obj *__pyx_v_memview, __Pyx_memviewslice *__pyx_v_mslice) {
  struct __pyx_memoryviewslice_obj *__pyx_v_obj = 0;
  __Pyx_memviewslice *__pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_slice_from_memview", 0);

  /* "View.MemoryView":1057
 *                                                    __Pyx_memviewslice *mslice) except NULL:
 *     cdef _memoryviewslice obj
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         obj = memview
 *         return &obj.from_slice
 */
  __pyx_t_1 = __Pyx_TypeCheck(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1058
 *     cdef _memoryviewslice obj
 *     if isinstance(memview, _memoryviewslice):
 *         obj = memview             # <<<<<<<<<<<<<<
 *         return &obj.from_slice
 *     else:
 */
    if (!(likely(((((PyObject *)__pyx_v_memview)) == Py_None) || likely(__Pyx_TypeTest(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type))))) __PYX_ERR(2, 1058, __pyx_L1_error)
    __pyx_t_3 = ((PyObject *)__pyx_v_memview);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_obj = ((struct __pyx_memoryviewslice_obj *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "View.MemoryView":1059
 *     if isinstance(memview, _memoryviewslice):
 *         obj = memview
 *         return &obj.from_slice             # <<<<<<<<<<<<<<
 *     else:
 *         slice_copy(memview, mslice)
 */
    __pyx_r = (&__pyx_v_obj->from_slice);
    goto __pyx_L0;

    /* "View.MemoryView":1057
 *                                                    __Pyx_memviewslice *mslice) except NULL:
 *     cdef _memoryviewslice obj
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         obj = memview
 *         return &obj.from_slice
 */
  }

  /* "View.MemoryView":1061
 *         return &obj.from_slice
 *     else:
 *         slice_copy(memview, mslice)             # <<<<<<<<<<<<<<
 *         return mslice
 * 
 */
  /*else*/ {
    __pyx_memoryview_slice_copy(__pyx_v_memview, __pyx_v_mslice);

    /* "View.MemoryView":1062
 *     else:
 *         slice_copy(memview, mslice)
 *         return mslice             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_slice_copy')
 */
    __pyx_r = __pyx_v_mslice;
    goto __pyx_L0;
  }

  /* "View.MemoryView":1054
 * 
 * @cname('__pyx_memoryview_get_slice_from_memoryview')
 * cdef __Pyx_memviewslice *get_slice_from_memview(memoryview memview,             # <<<<<<<<<<<<<<
 *                                                    __Pyx_memviewslice *mslice) except NULL:
 *     cdef _memoryviewslice obj
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("View.MemoryView.get_slice_from_memview", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_obj);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1065
 * 
 * @cname('__pyx_memoryview_slice_copy')
 * cdef void slice_copy(memoryview memview, __Pyx_memviewslice *dst):             # <<<<<<<<<<<<<<
 *     cdef int dim
 *     cdef (Py_ssize_t*) shape, strides, suboffsets
 */

static void __pyx_memoryview_slice_copy(struct __pyx_memoryview_obj *__pyx_v_memview, __Pyx_memviewslice *__pyx_v_dst) {
  int __pyx_v_dim;
  Py_ssize_t *__pyx_v_shape;
  Py_ssize_t *__pyx_v_strides;
  Py_ssize_t *__pyx_v_suboffsets;
  __Pyx_RefNannyDeclarations
  Py_ssize_t *__pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  __Pyx_RefNannySetupContext("slice_copy", 0);

  /* "View.MemoryView":1069
 *     cdef (Py_ssize_t*) shape, strides, suboffsets
 * 
 *     shape = memview.view.shape             # <<<<<<<<<<<<<<
 *     strides = memview.view.strides
 *     suboffsets = memview.view.suboffsets
 */
  __pyx_t_1 = __pyx_v_memview->view.shape;
  __pyx_v_shape = __pyx_t_1;

  /* "View.MemoryView":1070
 * 
 *     shape = memview.view.shape
 *     strides = memview.view.strides             # <<<<<<<<<<<<<<
 *     suboffsets = memview.view.suboffsets
 * 
 */
  __pyx_t_1 = __pyx_v_memview->view.strides;
  __pyx_v_strides = __pyx_t_1;

  /* "View.MemoryView":1071
 *     shape = memview.view.shape
 *     strides = memview.view.strides
 *     suboffsets = memview.view.suboffsets             # <<<<<<<<<<<<<<
 * 
 *     dst.memview = <__pyx_memoryview *> memview
 */
  __pyx_t_1 = __pyx_v_memview->view.suboffsets;
  __pyx_v_suboffsets = __pyx_t_1;

  /* "View.MemoryView":1073
 *     suboffsets = memview.view.suboffsets
 * 
 *     dst.memview = <__pyx_memoryview *> memview             # <<<<<<<<<<<<<<
 *     dst.data = <char *> memview.view.buf
 * 
 */
  __pyx_v_dst->memview = ((struct __pyx_memoryview_obj *)__pyx_v_memview);

  /* "View.MemoryView":1074
 * 
 *     dst.memview = <__pyx_memoryview *> memview
 *     dst.data = <char *> memview.view.buf             # <<<<<<<<<<<<<<
 * 
 *     for dim in range(memview.view.ndim):
 */
  __pyx_v_dst->data = ((char *)__pyx_v_memview->view.buf);

  /* "View.MemoryView":1076
 *     dst.data = <char *> memview.view.buf
 * 
 *     for dim in range(memview.view.ndim):             # <<<<<<<<<<<<<<
 *         dst.shape[dim] = shape[dim]
 *         dst.strides[dim] = strides[dim]
 */
  __pyx_t_2 = __pyx_v_memview->view.ndim;
  __pyx_t_3 = __pyx_t_2;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_dim = __pyx_t_4;

    /* "View.MemoryView":1077
 * 
 *     for dim in range(memview.view.ndim):
 *         dst.shape[dim] = shape[dim]             # <<<<<<<<<<<<<<
 *         dst.strides[dim] = strides[dim]
 *         dst.suboffsets[dim] = suboffsets[dim] if suboffsets else -1
 */
    (__pyx_v_dst->shape[__pyx_v_dim]) = (__pyx_v_shape[__pyx_v_dim]);

    /* "View.MemoryView":1078
 *     for dim in range(memview.view.ndim):
 *         dst.shape[dim] = shape[dim]
 *         dst.strides[dim] = strides[dim]             # <<<<<<<<<<<<<<
 *         dst.suboffsets[dim] = suboffsets[dim] if suboffsets else -1
 * 
 */
    (__pyx_v_dst->strides[__pyx_v_dim]) = (__pyx_v_strides[__pyx_v_dim]);

    /* "View.MemoryView":1079
 *         dst.shape[dim] = shape[dim]
 *         dst.strides[dim] = strides[dim]
 *         dst.suboffsets[dim] = suboffsets[dim] if suboffsets else -1             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_copy_object')
 */
    if ((__pyx_v_suboffsets != 0)) {
      __pyx_t_5 = (__pyx_v_suboffsets[__pyx_v_dim]);
    } else {
      __pyx_t_5 = -1L;
    }
    (__pyx_v_dst->suboffsets[__pyx_v_dim]) = __pyx_t_5;
  }

  /* "View.MemoryView":1065
 * 
 * @cname('__pyx_memoryview_slice_copy')
 * cdef void slice_copy(memoryview memview, __Pyx_memviewslice *dst):             # <<<<<<<<<<<<<<
 *     cdef int dim
 *     cdef (Py_ssize_t*) shape, strides, suboffsets
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":1082
 * 
 * @cname('__pyx_memoryview_copy_object')
 * cdef memoryview_copy(memoryview memview):             # <<<<<<<<<<<<<<
 *     "Create a new memoryview object"
 *     cdef __Pyx_memviewslice memviewslice
 */

static PyObject *__pyx_memoryview_copy_object(struct __pyx_memoryview_obj *__pyx_v_memview) {
  __Pyx_memviewslice __pyx_v_memviewslice;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memoryview_copy", 0);

  /* "View.MemoryView":1085
 *     "Create a new memoryview object"
 *     cdef __Pyx_memviewslice memviewslice
 *     slice_copy(memview, &memviewslice)             # <<<<<<<<<<<<<<
 *     return memoryview_copy_from_slice(memview, &memviewslice)
 * 
 */
  __pyx_memoryview_slice_copy(__pyx_v_memview, (&__pyx_v_memviewslice));

  /* "View.MemoryView":1086
 *     cdef __Pyx_memviewslice memviewslice
 *     slice_copy(memview, &memviewslice)
 *     return memoryview_copy_from_slice(memview, &memviewslice)             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_copy_object_from_slice')
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_memoryview_copy_object_from_slice(__pyx_v_memview, (&__pyx_v_memviewslice)); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 1086, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":1082
 * 
 * @cname('__pyx_memoryview_copy_object')
 * cdef memoryview_copy(memoryview memview):             # <<<<<<<<<<<<<<
 *     "Create a new memoryview object"
 *     cdef __Pyx_memviewslice memviewslice
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("View.MemoryView.memoryview_copy", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1089
 * 
 * @cname('__pyx_memoryview_copy_object_from_slice')
 * cdef memoryview_copy_from_slice(memoryview memview, __Pyx_memviewslice *memviewslice):             # <<<<<<<<<<<<<<
 *     """
 *     Create a new memoryview object from a given memoryview object and slice.
 */

static PyObject *__pyx_memoryview_copy_object_from_slice(struct __pyx_memoryview_obj *__pyx_v_memview, __Pyx_memviewslice *__pyx_v_memviewslice) {
  PyObject *(*__pyx_v_to_object_func)(char *);
  int (*__pyx_v_to_dtype_func)(char *, PyObject *);
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *(*__pyx_t_3)(char *);
  int (*__pyx_t_4)(char *, PyObject *);
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("memoryview_copy_from_slice", 0);

  /* "View.MemoryView":1096
 *     cdef int (*to_dtype_func)(char *, object) except 0
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         to_object_func = (<_memoryviewslice> memview).to_object_func
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func
 */
  __pyx_t_1 = __Pyx_TypeCheck(((PyObject *)__pyx_v_memview), __pyx_memoryviewslice_type); 
  __pyx_t_2 = (__pyx_t_1 != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1097
 * 
 *     if isinstance(memview, _memoryviewslice):
 *         to_object_func = (<_memoryviewslice> memview).to_object_func             # <<<<<<<<<<<<<<
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func
 *     else:
 */
    __pyx_t_3 = ((struct __pyx_memoryviewslice_obj *)__pyx_v_memview)->to_object_func;
    __pyx_v_to_object_func = __pyx_t_3;

    /* "View.MemoryView":1098
 *     if isinstance(memview, _memoryviewslice):
 *         to_object_func = (<_memoryviewslice> memview).to_object_func
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func             # <<<<<<<<<<<<<<
 *     else:
 *         to_object_func = NULL
 */
    __pyx_t_4 = ((struct __pyx_memoryviewslice_obj *)__pyx_v_memview)->to_dtype_func;
    __pyx_v_to_dtype_func = __pyx_t_4;

    /* "View.MemoryView":1096
 *     cdef int (*to_dtype_func)(char *, object) except 0
 * 
 *     if isinstance(memview, _memoryviewslice):             # <<<<<<<<<<<<<<
 *         to_object_func = (<_memoryviewslice> memview).to_object_func
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1100
 *         to_dtype_func = (<_memoryviewslice> memview).to_dtype_func
 *     else:
 *         to_object_func = NULL             # <<<<<<<<<<<<<<
 *         to_dtype_func = NULL
 * 
 */
  /*else*/ {
    __pyx_v_to_object_func = NULL;

    /* "View.MemoryView":1101
 *     else:
 *         to_object_func = NULL
 *         to_dtype_func = NULL             # <<<<<<<<<<<<<<
 * 
 *     return memoryview_fromslice(memviewslice[0], memview.view.ndim,
 */
    __pyx_v_to_dtype_func = NULL;
  }
  __pyx_L3:;

  /* "View.MemoryView":1103
 *         to_dtype_func = NULL
 * 
 *     return memoryview_fromslice(memviewslice[0], memview.view.ndim,             # <<<<<<<<<<<<<<
 *                                 to_object_func, to_dtype_func,
 *                                 memview.dtype_is_object)
 */
  __Pyx_XDECREF(__pyx_r);

  /* "View.MemoryView":1105
 *     return memoryview_fromslice(memviewslice[0], memview.view.ndim,
 *                                 to_object_func, to_dtype_func,
 *                                 memview.dtype_is_object)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __pyx_memoryview_fromslice((__pyx_v_memviewslice[0]), __pyx_v_memview->view.ndim, __pyx_v_to_object_func, __pyx_v_to_dtype_func, __pyx_v_memview->dtype_is_object); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 1103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "View.MemoryView":1089
 * 
 * @cname('__pyx_memoryview_copy_object_from_slice')
 * cdef memoryview_copy_from_slice(memoryview memview, __Pyx_memviewslice *memviewslice):             # <<<<<<<<<<<<<<
 *     """
 *     Create a new memoryview object from a given memoryview object and slice.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView.memoryview_copy_from_slice", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "View.MemoryView":1111
 * 
 * 
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:             # <<<<<<<<<<<<<<
 *     if arg < 0:
 *         return -arg
 */

static Py_ssize_t abs_py_ssize_t(Py_ssize_t __pyx_v_arg) {
  Py_ssize_t __pyx_r;
  int __pyx_t_1;

  /* "View.MemoryView":1112
 * 
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:
 *     if arg < 0:             # <<<<<<<<<<<<<<
 *         return -arg
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_arg < 0) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1113
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:
 *     if arg < 0:
 *         return -arg             # <<<<<<<<<<<<<<
 *     else:
 *         return arg
 */
    __pyx_r = (-__pyx_v_arg);
    goto __pyx_L0;

    /* "View.MemoryView":1112
 * 
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:
 *     if arg < 0:             # <<<<<<<<<<<<<<
 *         return -arg
 *     else:
 */
  }

  /* "View.MemoryView":1115
 *         return -arg
 *     else:
 *         return arg             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_get_best_slice_order')
 */
  /*else*/ {
    __pyx_r = __pyx_v_arg;
    goto __pyx_L0;
  }

  /* "View.MemoryView":1111
 * 
 * 
 * cdef Py_ssize_t abs_py_ssize_t(Py_ssize_t arg) nogil:             # <<<<<<<<<<<<<<
 *     if arg < 0:
 *         return -arg
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1118
 * 
 * @cname('__pyx_get_best_slice_order')
 * cdef char get_best_order(__Pyx_memviewslice *mslice, int ndim) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Figure out the best memory access order for a given slice.
 */

static char __pyx_get_best_slice_order(__Pyx_memviewslice *__pyx_v_mslice, int __pyx_v_ndim) {
  int __pyx_v_i;
  Py_ssize_t __pyx_v_c_stride;
  Py_ssize_t __pyx_v_f_stride;
  char __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;

  /* "View.MemoryView":1123
 *     """
 *     cdef int i
 *     cdef Py_ssize_t c_stride = 0             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t f_stride = 0
 * 
 */
  __pyx_v_c_stride = 0;

  /* "View.MemoryView":1124
 *     cdef int i
 *     cdef Py_ssize_t c_stride = 0
 *     cdef Py_ssize_t f_stride = 0             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim - 1, -1, -1):
 */
  __pyx_v_f_stride = 0;

  /* "View.MemoryView":1126
 *     cdef Py_ssize_t f_stride = 0
 * 
 *     for i in range(ndim - 1, -1, -1):             # <<<<<<<<<<<<<<
 *         if mslice.shape[i] > 1:
 *             c_stride = mslice.strides[i]
 */
  for (__pyx_t_1 = (__pyx_v_ndim - 1); __pyx_t_1 > -1; __pyx_t_1-=1) {
    __pyx_v_i = __pyx_t_1;

    /* "View.MemoryView":1127
 * 
 *     for i in range(ndim - 1, -1, -1):
 *         if mslice.shape[i] > 1:             # <<<<<<<<<<<<<<
 *             c_stride = mslice.strides[i]
 *             break
 */
    __pyx_t_2 = (((__pyx_v_mslice->shape[__pyx_v_i]) > 1) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1128
 *     for i in range(ndim - 1, -1, -1):
 *         if mslice.shape[i] > 1:
 *             c_stride = mslice.strides[i]             # <<<<<<<<<<<<<<
 *             break
 * 
 */
      __pyx_v_c_stride = (__pyx_v_mslice->strides[__pyx_v_i]);

      /* "View.MemoryView":1129
 *         if mslice.shape[i] > 1:
 *             c_stride = mslice.strides[i]
 *             break             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim):
 */
      goto __pyx_L4_break;

      /* "View.MemoryView":1127
 * 
 *     for i in range(ndim - 1, -1, -1):
 *         if mslice.shape[i] > 1:             # <<<<<<<<<<<<<<
 *             c_stride = mslice.strides[i]
 *             break
 */
    }
  }
  __pyx_L4_break:;

  /* "View.MemoryView":1131
 *             break
 * 
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         if mslice.shape[i] > 1:
 *             f_stride = mslice.strides[i]
 */
  __pyx_t_1 = __pyx_v_ndim;
  __pyx_t_3 = __pyx_t_1;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "View.MemoryView":1132
 * 
 *     for i in range(ndim):
 *         if mslice.shape[i] > 1:             # <<<<<<<<<<<<<<
 *             f_stride = mslice.strides[i]
 *             break
 */
    __pyx_t_2 = (((__pyx_v_mslice->shape[__pyx_v_i]) > 1) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1133
 *     for i in range(ndim):
 *         if mslice.shape[i] > 1:
 *             f_stride = mslice.strides[i]             # <<<<<<<<<<<<<<
 *             break
 * 
 */
      __pyx_v_f_stride = (__pyx_v_mslice->strides[__pyx_v_i]);

      /* "View.MemoryView":1134
 *         if mslice.shape[i] > 1:
 *             f_stride = mslice.strides[i]
 *             break             # <<<<<<<<<<<<<<
 * 
 *     if abs_py_ssize_t(c_stride) <= abs_py_ssize_t(f_stride):
 */
      goto __pyx_L7_break;

      /* "View.MemoryView":1132
 * 
 *     for i in range(ndim):
 *         if mslice.shape[i] > 1:             # <<<<<<<<<<<<<<
 *             f_stride = mslice.strides[i]
 *             break
 */
    }
  }
  __pyx_L7_break:;

  /* "View.MemoryView":1136
 *             break
 * 
 *     if abs_py_ssize_t(c_stride) <= abs_py_ssize_t(f_stride):             # <<<<<<<<<<<<<<
 *         return 'C'
 *     else:
 */
  __pyx_t_2 = ((abs_py_ssize_t(__pyx_v_c_stride) <= abs_py_ssize_t(__pyx_v_f_stride)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1137
 * 
 *     if abs_py_ssize_t(c_stride) <= abs_py_ssize_t(f_stride):
 *         return 'C'             # <<<<<<<<<<<<<<
 *     else:
 *         return 'F'
 */
    __pyx_r = 'C';
    goto __pyx_L0;

    /* "View.MemoryView":1136
 *             break
 * 
 *     if abs_py_ssize_t(c_stride) <= abs_py_ssize_t(f_stride):             # <<<<<<<<<<<<<<
 *         return 'C'
 *     else:
 */
  }

  /* "View.MemoryView":1139
 *         return 'C'
 *     else:
 *         return 'F'             # <<<<<<<<<<<<<<
 * 
 * @cython.cdivision(True)
 */
  /*else*/ {
    __pyx_r = 'F';
    goto __pyx_L0;
  }

  /* "View.MemoryView":1118
 * 
 * @cname('__pyx_get_best_slice_order')
 * cdef char get_best_order(__Pyx_memviewslice *mslice, int ndim) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     Figure out the best memory access order for a given slice.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1142
 * 
 * @cython.cdivision(True)
 * cdef void _copy_strided_to_strided(char *src_data, Py_ssize_t *src_strides,             # <<<<<<<<<<<<<<
 *                                    char *dst_data, Py_ssize_t *dst_strides,
 *                                    Py_ssize_t *src_shape, Py_ssize_t *dst_shape,
 */

static void _copy_strided_to_strided(char *__pyx_v_src_data, Py_ssize_t *__pyx_v_src_strides, char *__pyx_v_dst_data, Py_ssize_t *__pyx_v_dst_strides, Py_ssize_t *__pyx_v_src_shape, Py_ssize_t *__pyx_v_dst_shape, int __pyx_v_ndim, size_t __pyx_v_itemsize) {
  CYTHON_UNUSED Py_ssize_t __pyx_v_i;
  CYTHON_UNUSED Py_ssize_t __pyx_v_src_extent;
  Py_ssize_t __pyx_v_dst_extent;
  Py_ssize_t __pyx_v_src_stride;
  Py_ssize_t __pyx_v_dst_stride;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;

  /* "View.MemoryView":1149
 * 
 *     cdef Py_ssize_t i
 *     cdef Py_ssize_t src_extent = src_shape[0]             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t dst_extent = dst_shape[0]
 *     cdef Py_ssize_t src_stride = src_strides[0]
 */
  __pyx_v_src_extent = (__pyx_v_src_shape[0]);

  /* "View.MemoryView":1150
 *     cdef Py_ssize_t i
 *     cdef Py_ssize_t src_extent = src_shape[0]
 *     cdef Py_ssize_t dst_extent = dst_shape[0]             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t src_stride = src_strides[0]
 *     cdef Py_ssize_t dst_stride = dst_strides[0]
 */
  __pyx_v_dst_extent = (__pyx_v_dst_shape[0]);

  /* "View.MemoryView":1151
 *     cdef Py_ssize_t src_extent = src_shape[0]
 *     cdef Py_ssize_t dst_extent = dst_shape[0]
 *     cdef Py_ssize_t src_stride = src_strides[0]             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t dst_stride = dst_strides[0]
 * 
 */
  __pyx_v_src_stride = (__pyx_v_src_strides[0]);

  /* "View.MemoryView":1152
 *     cdef Py_ssize_t dst_extent = dst_shape[0]
 *     cdef Py_ssize_t src_stride = src_strides[0]
 *     cdef Py_ssize_t dst_stride = dst_strides[0]             # <<<<<<<<<<<<<<
 * 
 *     if ndim == 1:
 */
  __pyx_v_dst_stride = (__pyx_v_dst_strides[0]);

  /* "View.MemoryView":1154
 *     cdef Py_ssize_t dst_stride = dst_strides[0]
 * 
 *     if ndim == 1:             # <<<<<<<<<<<<<<
 *        if (src_stride > 0 and dst_stride > 0 and
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 */
  __pyx_t_1 = ((__pyx_v_ndim == 1) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1155
 * 
 *     if ndim == 1:
 *        if (src_stride > 0 and dst_stride > 0 and             # <<<<<<<<<<<<<<
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 */
    __pyx_t_2 = ((__pyx_v_src_stride > 0) != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_2 = ((__pyx_v_dst_stride > 0) != 0);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L5_bool_binop_done;
    }

    /* "View.MemoryView":1156
 *     if ndim == 1:
 *        if (src_stride > 0 and dst_stride > 0 and
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):             # <<<<<<<<<<<<<<
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 *        else:
 */
    __pyx_t_2 = (((size_t)__pyx_v_src_stride) == __pyx_v_itemsize);
    if (__pyx_t_2) {
      __pyx_t_2 = (__pyx_v_itemsize == ((size_t)__pyx_v_dst_stride));
    }
    __pyx_t_3 = (__pyx_t_2 != 0);
    __pyx_t_1 = __pyx_t_3;
    __pyx_L5_bool_binop_done:;

    /* "View.MemoryView":1155
 * 
 *     if ndim == 1:
 *        if (src_stride > 0 and dst_stride > 0 and             # <<<<<<<<<<<<<<
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 */
    if (__pyx_t_1) {

      /* "View.MemoryView":1157
 *        if (src_stride > 0 and dst_stride > 0 and
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 *            memcpy(dst_data, src_data, itemsize * dst_extent)             # <<<<<<<<<<<<<<
 *        else:
 *            for i in range(dst_extent):
 */
      (void)(memcpy(__pyx_v_dst_data, __pyx_v_src_data, (__pyx_v_itemsize * __pyx_v_dst_extent)));

      /* "View.MemoryView":1155
 * 
 *     if ndim == 1:
 *        if (src_stride > 0 and dst_stride > 0 and             # <<<<<<<<<<<<<<
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 */
      goto __pyx_L4;
    }

    /* "View.MemoryView":1159
 *            memcpy(dst_data, src_data, itemsize * dst_extent)
 *        else:
 *            for i in range(dst_extent):             # <<<<<<<<<<<<<<
 *                memcpy(dst_data, src_data, itemsize)
 *                src_data += src_stride
 */
    /*else*/ {
      __pyx_t_4 = __pyx_v_dst_extent;
      __pyx_t_5 = __pyx_t_4;
      for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_i = __pyx_t_6;

        /* "View.MemoryView":1160
 *        else:
 *            for i in range(dst_extent):
 *                memcpy(dst_data, src_data, itemsize)             # <<<<<<<<<<<<<<
 *                src_data += src_stride
 *                dst_data += dst_stride
 */
        (void)(memcpy(__pyx_v_dst_data, __pyx_v_src_data, __pyx_v_itemsize));

        /* "View.MemoryView":1161
 *            for i in range(dst_extent):
 *                memcpy(dst_data, src_data, itemsize)
 *                src_data += src_stride             # <<<<<<<<<<<<<<
 *                dst_data += dst_stride
 *     else:
 */
        __pyx_v_src_data = (__pyx_v_src_data + __pyx_v_src_stride);

        /* "View.MemoryView":1162
 *                memcpy(dst_data, src_data, itemsize)
 *                src_data += src_stride
 *                dst_data += dst_stride             # <<<<<<<<<<<<<<
 *     else:
 *         for i in range(dst_extent):
 */
        __pyx_v_dst_data = (__pyx_v_dst_data + __pyx_v_dst_stride);
      }
    }
    __pyx_L4:;

    /* "View.MemoryView":1154
 *     cdef Py_ssize_t dst_stride = dst_strides[0]
 * 
 *     if ndim == 1:             # <<<<<<<<<<<<<<
 *        if (src_stride > 0 and dst_stride > 0 and
 *            <size_t> src_stride == itemsize == <size_t> dst_stride):
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1164
 *                dst_data += dst_stride
 *     else:
 *         for i in range(dst_extent):             # <<<<<<<<<<<<<<
 *             _copy_strided_to_strided(src_data, src_strides + 1,
 *                                      dst_data, dst_strides + 1,
 */
  /*else*/ {
    __pyx_t_4 = __pyx_v_dst_extent;
    __pyx_t_5 = __pyx_t_4;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "View.MemoryView":1165
 *     else:
 *         for i in range(dst_extent):
 *             _copy_strided_to_strided(src_data, src_strides + 1,             # <<<<<<<<<<<<<<
 *                                      dst_data, dst_strides + 1,
 *                                      src_shape + 1, dst_shape + 1,
 */
      _copy_strided_to_strided(__pyx_v_src_data, (__pyx_v_src_strides + 1), __pyx_v_dst_data, (__pyx_v_dst_strides + 1), (__pyx_v_src_shape + 1), (__pyx_v_dst_shape + 1), (__pyx_v_ndim - 1), __pyx_v_itemsize);

      /* "View.MemoryView":1169
 *                                      src_shape + 1, dst_shape + 1,
 *                                      ndim - 1, itemsize)
 *             src_data += src_stride             # <<<<<<<<<<<<<<
 *             dst_data += dst_stride
 * 
 */
      __pyx_v_src_data = (__pyx_v_src_data + __pyx_v_src_stride);

      /* "View.MemoryView":1170
 *                                      ndim - 1, itemsize)
 *             src_data += src_stride
 *             dst_data += dst_stride             # <<<<<<<<<<<<<<
 * 
 * cdef void copy_strided_to_strided(__Pyx_memviewslice *src,
 */
      __pyx_v_dst_data = (__pyx_v_dst_data + __pyx_v_dst_stride);
    }
  }
  __pyx_L3:;

  /* "View.MemoryView":1142
 * 
 * @cython.cdivision(True)
 * cdef void _copy_strided_to_strided(char *src_data, Py_ssize_t *src_strides,             # <<<<<<<<<<<<<<
 *                                    char *dst_data, Py_ssize_t *dst_strides,
 *                                    Py_ssize_t *src_shape, Py_ssize_t *dst_shape,
 */

  /* function exit code */
}

/* "View.MemoryView":1172
 *             dst_data += dst_stride
 * 
 * cdef void copy_strided_to_strided(__Pyx_memviewslice *src,             # <<<<<<<<<<<<<<
 *                                   __Pyx_memviewslice *dst,
 *                                   int ndim, size_t itemsize) nogil:
 */

static void copy_strided_to_strided(__Pyx_memviewslice *__pyx_v_src, __Pyx_memviewslice *__pyx_v_dst, int __pyx_v_ndim, size_t __pyx_v_itemsize) {

  /* "View.MemoryView":1175
 *                                   __Pyx_memviewslice *dst,
 *                                   int ndim, size_t itemsize) nogil:
 *     _copy_strided_to_strided(src.data, src.strides, dst.data, dst.strides,             # <<<<<<<<<<<<<<
 *                              src.shape, dst.shape, ndim, itemsize)
 * 
 */
  _copy_strided_to_strided(__pyx_v_src->data, __pyx_v_src->strides, __pyx_v_dst->data, __pyx_v_dst->strides, __pyx_v_src->shape, __pyx_v_dst->shape, __pyx_v_ndim, __pyx_v_itemsize);

  /* "View.MemoryView":1172
 *             dst_data += dst_stride
 * 
 * cdef void copy_strided_to_strided(__Pyx_memviewslice *src,             # <<<<<<<<<<<<<<
 *                                   __Pyx_memviewslice *dst,
 *                                   int ndim, size_t itemsize) nogil:
 */

  /* function exit code */
}

/* "View.MemoryView":1179
 * 
 * @cname('__pyx_memoryview_slice_get_size')
 * cdef Py_ssize_t slice_get_size(__Pyx_memviewslice *src, int ndim) nogil:             # <<<<<<<<<<<<<<
 *     "Return the size of the memory occupied by the slice in number of bytes"
 *     cdef Py_ssize_t shape, size = src.memview.view.itemsize
 */

static Py_ssize_t __pyx_memoryview_slice_get_size(__Pyx_memviewslice *__pyx_v_src, int __pyx_v_ndim) {
  Py_ssize_t __pyx_v_shape;
  Py_ssize_t __pyx_v_size;
  Py_ssize_t __pyx_r;
  Py_ssize_t __pyx_t_1;
  Py_ssize_t *__pyx_t_2;
  Py_ssize_t *__pyx_t_3;
  Py_ssize_t *__pyx_t_4;

  /* "View.MemoryView":1181
 * cdef Py_ssize_t slice_get_size(__Pyx_memviewslice *src, int ndim) nogil:
 *     "Return the size of the memory occupied by the slice in number of bytes"
 *     cdef Py_ssize_t shape, size = src.memview.view.itemsize             # <<<<<<<<<<<<<<
 * 
 *     for shape in src.shape[:ndim]:
 */
  __pyx_t_1 = __pyx_v_src->memview->view.itemsize;
  __pyx_v_size = __pyx_t_1;

  /* "View.MemoryView":1183
 *     cdef Py_ssize_t shape, size = src.memview.view.itemsize
 * 
 *     for shape in src.shape[:ndim]:             # <<<<<<<<<<<<<<
 *         size *= shape
 * 
 */
  __pyx_t_3 = (__pyx_v_src->shape + __pyx_v_ndim);
  for (__pyx_t_4 = __pyx_v_src->shape; __pyx_t_4 < __pyx_t_3; __pyx_t_4++) {
    __pyx_t_2 = __pyx_t_4;
    __pyx_v_shape = (__pyx_t_2[0]);

    /* "View.MemoryView":1184
 * 
 *     for shape in src.shape[:ndim]:
 *         size *= shape             # <<<<<<<<<<<<<<
 * 
 *     return size
 */
    __pyx_v_size = (__pyx_v_size * __pyx_v_shape);
  }

  /* "View.MemoryView":1186
 *         size *= shape
 * 
 *     return size             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_fill_contig_strides_array')
 */
  __pyx_r = __pyx_v_size;
  goto __pyx_L0;

  /* "View.MemoryView":1179
 * 
 * @cname('__pyx_memoryview_slice_get_size')
 * cdef Py_ssize_t slice_get_size(__Pyx_memviewslice *src, int ndim) nogil:             # <<<<<<<<<<<<<<
 *     "Return the size of the memory occupied by the slice in number of bytes"
 *     cdef Py_ssize_t shape, size = src.memview.view.itemsize
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1189
 * 
 * @cname('__pyx_fill_contig_strides_array')
 * cdef Py_ssize_t fill_contig_strides_array(             # <<<<<<<<<<<<<<
 *                 Py_ssize_t *shape, Py_ssize_t *strides, Py_ssize_t stride,
 *                 int ndim, char order) nogil:
 */

static Py_ssize_t __pyx_fill_contig_strides_array(Py_ssize_t *__pyx_v_shape, Py_ssize_t *__pyx_v_strides, Py_ssize_t __pyx_v_stride, int __pyx_v_ndim, char __pyx_v_order) {
  int __pyx_v_idx;
  Py_ssize_t __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;

  /* "View.MemoryView":1198
 *     cdef int idx
 * 
 *     if order == 'F':             # <<<<<<<<<<<<<<
 *         for idx in range(ndim):
 *             strides[idx] = stride
 */
  __pyx_t_1 = ((__pyx_v_order == 'F') != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1199
 * 
 *     if order == 'F':
 *         for idx in range(ndim):             # <<<<<<<<<<<<<<
 *             strides[idx] = stride
 *             stride *= shape[idx]
 */
    __pyx_t_2 = __pyx_v_ndim;
    __pyx_t_3 = __pyx_t_2;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_idx = __pyx_t_4;

      /* "View.MemoryView":1200
 *     if order == 'F':
 *         for idx in range(ndim):
 *             strides[idx] = stride             # <<<<<<<<<<<<<<
 *             stride *= shape[idx]
 *     else:
 */
      (__pyx_v_strides[__pyx_v_idx]) = __pyx_v_stride;

      /* "View.MemoryView":1201
 *         for idx in range(ndim):
 *             strides[idx] = stride
 *             stride *= shape[idx]             # <<<<<<<<<<<<<<
 *     else:
 *         for idx in range(ndim - 1, -1, -1):
 */
      __pyx_v_stride = (__pyx_v_stride * (__pyx_v_shape[__pyx_v_idx]));
    }

    /* "View.MemoryView":1198
 *     cdef int idx
 * 
 *     if order == 'F':             # <<<<<<<<<<<<<<
 *         for idx in range(ndim):
 *             strides[idx] = stride
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1203
 *             stride *= shape[idx]
 *     else:
 *         for idx in range(ndim - 1, -1, -1):             # <<<<<<<<<<<<<<
 *             strides[idx] = stride
 *             stride *= shape[idx]
 */
  /*else*/ {
    for (__pyx_t_2 = (__pyx_v_ndim - 1); __pyx_t_2 > -1; __pyx_t_2-=1) {
      __pyx_v_idx = __pyx_t_2;

      /* "View.MemoryView":1204
 *     else:
 *         for idx in range(ndim - 1, -1, -1):
 *             strides[idx] = stride             # <<<<<<<<<<<<<<
 *             stride *= shape[idx]
 * 
 */
      (__pyx_v_strides[__pyx_v_idx]) = __pyx_v_stride;

      /* "View.MemoryView":1205
 *         for idx in range(ndim - 1, -1, -1):
 *             strides[idx] = stride
 *             stride *= shape[idx]             # <<<<<<<<<<<<<<
 * 
 *     return stride
 */
      __pyx_v_stride = (__pyx_v_stride * (__pyx_v_shape[__pyx_v_idx]));
    }
  }
  __pyx_L3:;

  /* "View.MemoryView":1207
 *             stride *= shape[idx]
 * 
 *     return stride             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_copy_data_to_temp')
 */
  __pyx_r = __pyx_v_stride;
  goto __pyx_L0;

  /* "View.MemoryView":1189
 * 
 * @cname('__pyx_fill_contig_strides_array')
 * cdef Py_ssize_t fill_contig_strides_array(             # <<<<<<<<<<<<<<
 *                 Py_ssize_t *shape, Py_ssize_t *strides, Py_ssize_t stride,
 *                 int ndim, char order) nogil:
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1210
 * 
 * @cname('__pyx_memoryview_copy_data_to_temp')
 * cdef void *copy_data_to_temp(__Pyx_memviewslice *src,             # <<<<<<<<<<<<<<
 *                              __Pyx_memviewslice *tmpslice,
 *                              char order,
 */

static void *__pyx_memoryview_copy_data_to_temp(__Pyx_memviewslice *__pyx_v_src, __Pyx_memviewslice *__pyx_v_tmpslice, char __pyx_v_order, int __pyx_v_ndim) {
  int __pyx_v_i;
  void *__pyx_v_result;
  size_t __pyx_v_itemsize;
  size_t __pyx_v_size;
  void *__pyx_r;
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  struct __pyx_memoryview_obj *__pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "View.MemoryView":1221
 *     cdef void *result
 * 
 *     cdef size_t itemsize = src.memview.view.itemsize             # <<<<<<<<<<<<<<
 *     cdef size_t size = slice_get_size(src, ndim)
 * 
 */
  __pyx_t_1 = __pyx_v_src->memview->view.itemsize;
  __pyx_v_itemsize = __pyx_t_1;

  /* "View.MemoryView":1222
 * 
 *     cdef size_t itemsize = src.memview.view.itemsize
 *     cdef size_t size = slice_get_size(src, ndim)             # <<<<<<<<<<<<<<
 * 
 *     result = malloc(size)
 */
  __pyx_v_size = __pyx_memoryview_slice_get_size(__pyx_v_src, __pyx_v_ndim);

  /* "View.MemoryView":1224
 *     cdef size_t size = slice_get_size(src, ndim)
 * 
 *     result = malloc(size)             # <<<<<<<<<<<<<<
 *     if not result:
 *         _err(MemoryError, NULL)
 */
  __pyx_v_result = malloc(__pyx_v_size);

  /* "View.MemoryView":1225
 * 
 *     result = malloc(size)
 *     if not result:             # <<<<<<<<<<<<<<
 *         _err(MemoryError, NULL)
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_result != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1226
 *     result = malloc(size)
 *     if not result:
 *         _err(MemoryError, NULL)             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_t_3 = __pyx_memoryview_err(__pyx_builtin_MemoryError, NULL); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(2, 1226, __pyx_L1_error)

    /* "View.MemoryView":1225
 * 
 *     result = malloc(size)
 *     if not result:             # <<<<<<<<<<<<<<
 *         _err(MemoryError, NULL)
 * 
 */
  }

  /* "View.MemoryView":1229
 * 
 * 
 *     tmpslice.data = <char *> result             # <<<<<<<<<<<<<<
 *     tmpslice.memview = src.memview
 *     for i in range(ndim):
 */
  __pyx_v_tmpslice->data = ((char *)__pyx_v_result);

  /* "View.MemoryView":1230
 * 
 *     tmpslice.data = <char *> result
 *     tmpslice.memview = src.memview             # <<<<<<<<<<<<<<
 *     for i in range(ndim):
 *         tmpslice.shape[i] = src.shape[i]
 */
  __pyx_t_4 = __pyx_v_src->memview;
  __pyx_v_tmpslice->memview = __pyx_t_4;

  /* "View.MemoryView":1231
 *     tmpslice.data = <char *> result
 *     tmpslice.memview = src.memview
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         tmpslice.shape[i] = src.shape[i]
 *         tmpslice.suboffsets[i] = -1
 */
  __pyx_t_3 = __pyx_v_ndim;
  __pyx_t_5 = __pyx_t_3;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "View.MemoryView":1232
 *     tmpslice.memview = src.memview
 *     for i in range(ndim):
 *         tmpslice.shape[i] = src.shape[i]             # <<<<<<<<<<<<<<
 *         tmpslice.suboffsets[i] = -1
 * 
 */
    (__pyx_v_tmpslice->shape[__pyx_v_i]) = (__pyx_v_src->shape[__pyx_v_i]);

    /* "View.MemoryView":1233
 *     for i in range(ndim):
 *         tmpslice.shape[i] = src.shape[i]
 *         tmpslice.suboffsets[i] = -1             # <<<<<<<<<<<<<<
 * 
 *     fill_contig_strides_array(&tmpslice.shape[0], &tmpslice.strides[0], itemsize,
 */
    (__pyx_v_tmpslice->suboffsets[__pyx_v_i]) = -1L;
  }

  /* "View.MemoryView":1235
 *         tmpslice.suboffsets[i] = -1
 * 
 *     fill_contig_strides_array(&tmpslice.shape[0], &tmpslice.strides[0], itemsize,             # <<<<<<<<<<<<<<
 *                               ndim, order)
 * 
 */
  (void)(__pyx_fill_contig_strides_array((&(__pyx_v_tmpslice->shape[0])), (&(__pyx_v_tmpslice->strides[0])), __pyx_v_itemsize, __pyx_v_ndim, __pyx_v_order));

  /* "View.MemoryView":1239
 * 
 * 
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         if tmpslice.shape[i] == 1:
 *             tmpslice.strides[i] = 0
 */
  __pyx_t_3 = __pyx_v_ndim;
  __pyx_t_5 = __pyx_t_3;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "View.MemoryView":1240
 * 
 *     for i in range(ndim):
 *         if tmpslice.shape[i] == 1:             # <<<<<<<<<<<<<<
 *             tmpslice.strides[i] = 0
 * 
 */
    __pyx_t_2 = (((__pyx_v_tmpslice->shape[__pyx_v_i]) == 1) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1241
 *     for i in range(ndim):
 *         if tmpslice.shape[i] == 1:
 *             tmpslice.strides[i] = 0             # <<<<<<<<<<<<<<
 * 
 *     if slice_is_contig(src[0], order, ndim):
 */
      (__pyx_v_tmpslice->strides[__pyx_v_i]) = 0;

      /* "View.MemoryView":1240
 * 
 *     for i in range(ndim):
 *         if tmpslice.shape[i] == 1:             # <<<<<<<<<<<<<<
 *             tmpslice.strides[i] = 0
 * 
 */
    }
  }

  /* "View.MemoryView":1243
 *             tmpslice.strides[i] = 0
 * 
 *     if slice_is_contig(src[0], order, ndim):             # <<<<<<<<<<<<<<
 *         memcpy(result, src.data, size)
 *     else:
 */
  __pyx_t_2 = (__pyx_memviewslice_is_contig((__pyx_v_src[0]), __pyx_v_order, __pyx_v_ndim) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1244
 * 
 *     if slice_is_contig(src[0], order, ndim):
 *         memcpy(result, src.data, size)             # <<<<<<<<<<<<<<
 *     else:
 *         copy_strided_to_strided(src, tmpslice, ndim, itemsize)
 */
    (void)(memcpy(__pyx_v_result, __pyx_v_src->data, __pyx_v_size));

    /* "View.MemoryView":1243
 *             tmpslice.strides[i] = 0
 * 
 *     if slice_is_contig(src[0], order, ndim):             # <<<<<<<<<<<<<<
 *         memcpy(result, src.data, size)
 *     else:
 */
    goto __pyx_L9;
  }

  /* "View.MemoryView":1246
 *         memcpy(result, src.data, size)
 *     else:
 *         copy_strided_to_strided(src, tmpslice, ndim, itemsize)             # <<<<<<<<<<<<<<
 * 
 *     return result
 */
  /*else*/ {
    copy_strided_to_strided(__pyx_v_src, __pyx_v_tmpslice, __pyx_v_ndim, __pyx_v_itemsize);
  }
  __pyx_L9:;

  /* "View.MemoryView":1248
 *         copy_strided_to_strided(src, tmpslice, ndim, itemsize)
 * 
 *     return result             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_result;
  goto __pyx_L0;

  /* "View.MemoryView":1210
 * 
 * @cname('__pyx_memoryview_copy_data_to_temp')
 * cdef void *copy_data_to_temp(__Pyx_memviewslice *src,             # <<<<<<<<<<<<<<
 *                              __Pyx_memviewslice *tmpslice,
 *                              char order,
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("View.MemoryView.copy_data_to_temp", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1253
 * 
 * @cname('__pyx_memoryview_err_extents')
 * cdef int _err_extents(int i, Py_ssize_t extent1,             # <<<<<<<<<<<<<<
 *                              Py_ssize_t extent2) except -1 with gil:
 *     raise ValueError("got differing extents in dimension %d (got %d and %d)" %
 */

static int __pyx_memoryview_err_extents(int __pyx_v_i, Py_ssize_t __pyx_v_extent1, Py_ssize_t __pyx_v_extent2) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("_err_extents", 0);

  /* "View.MemoryView":1256
 *                              Py_ssize_t extent2) except -1 with gil:
 *     raise ValueError("got differing extents in dimension %d (got %d and %d)" %
 *                                                         (i, extent1, extent2))             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_err_dim')
 */
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_i); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 1256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyInt_FromSsize_t(__pyx_v_extent1); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 1256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyInt_FromSsize_t(__pyx_v_extent2); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 1256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 1256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;

  /* "View.MemoryView":1255
 * cdef int _err_extents(int i, Py_ssize_t extent1,
 *                              Py_ssize_t extent2) except -1 with gil:
 *     raise ValueError("got differing extents in dimension %d (got %d and %d)" %             # <<<<<<<<<<<<<<
 *                                                         (i, extent1, extent2))
 * 
 */
  __pyx_t_3 = __Pyx_PyString_Format(__pyx_kp_s_got_differing_extents_in_dimensi, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 1255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_ValueError, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 1255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_Raise(__pyx_t_4, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __PYX_ERR(2, 1255, __pyx_L1_error)

  /* "View.MemoryView":1253
 * 
 * @cname('__pyx_memoryview_err_extents')
 * cdef int _err_extents(int i, Py_ssize_t extent1,             # <<<<<<<<<<<<<<
 *                              Py_ssize_t extent2) except -1 with gil:
 *     raise ValueError("got differing extents in dimension %d (got %d and %d)" %
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("View.MemoryView._err_extents", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "View.MemoryView":1259
 * 
 * @cname('__pyx_memoryview_err_dim')
 * cdef int _err_dim(object error, char *msg, int dim) except -1 with gil:             # <<<<<<<<<<<<<<
 *     raise error(msg.decode('ascii') % dim)
 * 
 */

static int __pyx_memoryview_err_dim(PyObject *__pyx_v_error, char *__pyx_v_msg, int __pyx_v_dim) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("_err_dim", 0);
  __Pyx_INCREF(__pyx_v_error);

  /* "View.MemoryView":1260
 * @cname('__pyx_memoryview_err_dim')
 * cdef int _err_dim(object error, char *msg, int dim) except -1 with gil:
 *     raise error(msg.decode('ascii') % dim)             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_err')
 */
  __pyx_t_2 = __Pyx_decode_c_string(__pyx_v_msg, 0, strlen(__pyx_v_msg), NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 1260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyInt_From_int(__pyx_v_dim); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 1260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyUnicode_Format(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 1260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_v_error);
  __pyx_t_3 = __pyx_v_error; __pyx_t_2 = NULL;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
    }
  }
  __pyx_t_1 = (__pyx_t_2) ? __Pyx_PyObject_Call2Args(__pyx_t_3, __pyx_t_2, __pyx_t_4) : __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_4);
  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 1260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(2, 1260, __pyx_L1_error)

  /* "View.MemoryView":1259
 * 
 * @cname('__pyx_memoryview_err_dim')
 * cdef int _err_dim(object error, char *msg, int dim) except -1 with gil:             # <<<<<<<<<<<<<<
 *     raise error(msg.decode('ascii') % dim)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("View.MemoryView._err_dim", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __Pyx_XDECREF(__pyx_v_error);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "View.MemoryView":1263
 * 
 * @cname('__pyx_memoryview_err')
 * cdef int _err(object error, char *msg) except -1 with gil:             # <<<<<<<<<<<<<<
 *     if msg != NULL:
 *         raise error(msg.decode('ascii'))
 */

static int __pyx_memoryview_err(PyObject *__pyx_v_error, char *__pyx_v_msg) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("_err", 0);
  __Pyx_INCREF(__pyx_v_error);

  /* "View.MemoryView":1264
 * @cname('__pyx_memoryview_err')
 * cdef int _err(object error, char *msg) except -1 with gil:
 *     if msg != NULL:             # <<<<<<<<<<<<<<
 *         raise error(msg.decode('ascii'))
 *     else:
 */
  __pyx_t_1 = ((__pyx_v_msg != NULL) != 0);
  if (unlikely(__pyx_t_1)) {

    /* "View.MemoryView":1265
 * cdef int _err(object error, char *msg) except -1 with gil:
 *     if msg != NULL:
 *         raise error(msg.decode('ascii'))             # <<<<<<<<<<<<<<
 *     else:
 *         raise error
 */
    __pyx_t_3 = __Pyx_decode_c_string(__pyx_v_msg, 0, strlen(__pyx_v_msg), NULL, NULL, PyUnicode_DecodeASCII); if (unlikely(!__pyx_t_3)) __PYX_ERR(2, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_error);
    __pyx_t_4 = __pyx_v_error; __pyx_t_5 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
      }
    }
    __pyx_t_2 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_4, __pyx_t_5, __pyx_t_3) : __Pyx_PyObject_CallOneArg(__pyx_t_4, __pyx_t_3);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(2, 1265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(2, 1265, __pyx_L1_error)

    /* "View.MemoryView":1264
 * @cname('__pyx_memoryview_err')
 * cdef int _err(object error, char *msg) except -1 with gil:
 *     if msg != NULL:             # <<<<<<<<<<<<<<
 *         raise error(msg.decode('ascii'))
 *     else:
 */
  }

  /* "View.MemoryView":1267
 *         raise error(msg.decode('ascii'))
 *     else:
 *         raise error             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_copy_contents')
 */
  /*else*/ {
    __Pyx_Raise(__pyx_v_error, 0, 0, 0);
    __PYX_ERR(2, 1267, __pyx_L1_error)
  }

  /* "View.MemoryView":1263
 * 
 * @cname('__pyx_memoryview_err')
 * cdef int _err(object error, char *msg) except -1 with gil:             # <<<<<<<<<<<<<<
 *     if msg != NULL:
 *         raise error(msg.decode('ascii'))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("View.MemoryView._err", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __Pyx_XDECREF(__pyx_v_error);
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
  return __pyx_r;
}

/* "View.MemoryView":1270
 * 
 * @cname('__pyx_memoryview_copy_contents')
 * cdef int memoryview_copy_contents(__Pyx_memviewslice src,             # <<<<<<<<<<<<<<
 *                                   __Pyx_memviewslice dst,
 *                                   int src_ndim, int dst_ndim,
 */

static int __pyx_memoryview_copy_contents(__Pyx_memviewslice __pyx_v_src, __Pyx_memviewslice __pyx_v_dst, int __pyx_v_src_ndim, int __pyx_v_dst_ndim, int __pyx_v_dtype_is_object) {
  void *__pyx_v_tmpdata;
  size_t __pyx_v_itemsize;
  int __pyx_v_i;
  char __pyx_v_order;
  int __pyx_v_broadcasting;
  int __pyx_v_direct_copy;
  __Pyx_memviewslice __pyx_v_tmp;
  int __pyx_v_ndim;
  int __pyx_r;
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  void *__pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;

  /* "View.MemoryView":1278
 *     Check for overlapping memory and verify the shapes.
 *     """
 *     cdef void *tmpdata = NULL             # <<<<<<<<<<<<<<
 *     cdef size_t itemsize = src.memview.view.itemsize
 *     cdef int i
 */
  __pyx_v_tmpdata = NULL;

  /* "View.MemoryView":1279
 *     """
 *     cdef void *tmpdata = NULL
 *     cdef size_t itemsize = src.memview.view.itemsize             # <<<<<<<<<<<<<<
 *     cdef int i
 *     cdef char order = get_best_order(&src, src_ndim)
 */
  __pyx_t_1 = __pyx_v_src.memview->view.itemsize;
  __pyx_v_itemsize = __pyx_t_1;

  /* "View.MemoryView":1281
 *     cdef size_t itemsize = src.memview.view.itemsize
 *     cdef int i
 *     cdef char order = get_best_order(&src, src_ndim)             # <<<<<<<<<<<<<<
 *     cdef bint broadcasting = False
 *     cdef bint direct_copy = False
 */
  __pyx_v_order = __pyx_get_best_slice_order((&__pyx_v_src), __pyx_v_src_ndim);

  /* "View.MemoryView":1282
 *     cdef int i
 *     cdef char order = get_best_order(&src, src_ndim)
 *     cdef bint broadcasting = False             # <<<<<<<<<<<<<<
 *     cdef bint direct_copy = False
 *     cdef __Pyx_memviewslice tmp
 */
  __pyx_v_broadcasting = 0;

  /* "View.MemoryView":1283
 *     cdef char order = get_best_order(&src, src_ndim)
 *     cdef bint broadcasting = False
 *     cdef bint direct_copy = False             # <<<<<<<<<<<<<<
 *     cdef __Pyx_memviewslice tmp
 * 
 */
  __pyx_v_direct_copy = 0;

  /* "View.MemoryView":1286
 *     cdef __Pyx_memviewslice tmp
 * 
 *     if src_ndim < dst_ndim:             # <<<<<<<<<<<<<<
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:
 */
  __pyx_t_2 = ((__pyx_v_src_ndim < __pyx_v_dst_ndim) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1287
 * 
 *     if src_ndim < dst_ndim:
 *         broadcast_leading(&src, src_ndim, dst_ndim)             # <<<<<<<<<<<<<<
 *     elif dst_ndim < src_ndim:
 *         broadcast_leading(&dst, dst_ndim, src_ndim)
 */
    __pyx_memoryview_broadcast_leading((&__pyx_v_src), __pyx_v_src_ndim, __pyx_v_dst_ndim);

    /* "View.MemoryView":1286
 *     cdef __Pyx_memviewslice tmp
 * 
 *     if src_ndim < dst_ndim:             # <<<<<<<<<<<<<<
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1288
 *     if src_ndim < dst_ndim:
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:             # <<<<<<<<<<<<<<
 *         broadcast_leading(&dst, dst_ndim, src_ndim)
 * 
 */
  __pyx_t_2 = ((__pyx_v_dst_ndim < __pyx_v_src_ndim) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1289
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:
 *         broadcast_leading(&dst, dst_ndim, src_ndim)             # <<<<<<<<<<<<<<
 * 
 *     cdef int ndim = max(src_ndim, dst_ndim)
 */
    __pyx_memoryview_broadcast_leading((&__pyx_v_dst), __pyx_v_dst_ndim, __pyx_v_src_ndim);

    /* "View.MemoryView":1288
 *     if src_ndim < dst_ndim:
 *         broadcast_leading(&src, src_ndim, dst_ndim)
 *     elif dst_ndim < src_ndim:             # <<<<<<<<<<<<<<
 *         broadcast_leading(&dst, dst_ndim, src_ndim)
 * 
 */
  }
  __pyx_L3:;

  /* "View.MemoryView":1291
 *         broadcast_leading(&dst, dst_ndim, src_ndim)
 * 
 *     cdef int ndim = max(src_ndim, dst_ndim)             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim):
 */
  __pyx_t_3 = __pyx_v_dst_ndim;
  __pyx_t_4 = __pyx_v_src_ndim;
  if (((__pyx_t_3 > __pyx_t_4) != 0)) {
    __pyx_t_5 = __pyx_t_3;
  } else {
    __pyx_t_5 = __pyx_t_4;
  }
  __pyx_v_ndim = __pyx_t_5;

  /* "View.MemoryView":1293
 *     cdef int ndim = max(src_ndim, dst_ndim)
 * 
 *     for i in range(ndim):             # <<<<<<<<<<<<<<
 *         if src.shape[i] != dst.shape[i]:
 *             if src.shape[i] == 1:
 */
  __pyx_t_5 = __pyx_v_ndim;
  __pyx_t_3 = __pyx_t_5;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_i = __pyx_t_4;

    /* "View.MemoryView":1294
 * 
 *     for i in range(ndim):
 *         if src.shape[i] != dst.shape[i]:             # <<<<<<<<<<<<<<
 *             if src.shape[i] == 1:
 *                 broadcasting = True
 */
    __pyx_t_2 = (((__pyx_v_src.shape[__pyx_v_i]) != (__pyx_v_dst.shape[__pyx_v_i])) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1295
 *     for i in range(ndim):
 *         if src.shape[i] != dst.shape[i]:
 *             if src.shape[i] == 1:             # <<<<<<<<<<<<<<
 *                 broadcasting = True
 *                 src.strides[i] = 0
 */
      __pyx_t_2 = (((__pyx_v_src.shape[__pyx_v_i]) == 1) != 0);
      if (__pyx_t_2) {

        /* "View.MemoryView":1296
 *         if src.shape[i] != dst.shape[i]:
 *             if src.shape[i] == 1:
 *                 broadcasting = True             # <<<<<<<<<<<<<<
 *                 src.strides[i] = 0
 *             else:
 */
        __pyx_v_broadcasting = 1;

        /* "View.MemoryView":1297
 *             if src.shape[i] == 1:
 *                 broadcasting = True
 *                 src.strides[i] = 0             # <<<<<<<<<<<<<<
 *             else:
 *                 _err_extents(i, dst.shape[i], src.shape[i])
 */
        (__pyx_v_src.strides[__pyx_v_i]) = 0;

        /* "View.MemoryView":1295
 *     for i in range(ndim):
 *         if src.shape[i] != dst.shape[i]:
 *             if src.shape[i] == 1:             # <<<<<<<<<<<<<<
 *                 broadcasting = True
 *                 src.strides[i] = 0
 */
        goto __pyx_L7;
      }

      /* "View.MemoryView":1299
 *                 src.strides[i] = 0
 *             else:
 *                 _err_extents(i, dst.shape[i], src.shape[i])             # <<<<<<<<<<<<<<
 * 
 *         if src.suboffsets[i] >= 0:
 */
      /*else*/ {
        __pyx_t_6 = __pyx_memoryview_err_extents(__pyx_v_i, (__pyx_v_dst.shape[__pyx_v_i]), (__pyx_v_src.shape[__pyx_v_i])); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(2, 1299, __pyx_L1_error)
      }
      __pyx_L7:;

      /* "View.MemoryView":1294
 * 
 *     for i in range(ndim):
 *         if src.shape[i] != dst.shape[i]:             # <<<<<<<<<<<<<<
 *             if src.shape[i] == 1:
 *                 broadcasting = True
 */
    }

    /* "View.MemoryView":1301
 *                 _err_extents(i, dst.shape[i], src.shape[i])
 * 
 *         if src.suboffsets[i] >= 0:             # <<<<<<<<<<<<<<
 *             _err_dim(ValueError, "Dimension %d is not direct", i)
 * 
 */
    __pyx_t_2 = (((__pyx_v_src.suboffsets[__pyx_v_i]) >= 0) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1302
 * 
 *         if src.suboffsets[i] >= 0:
 *             _err_dim(ValueError, "Dimension %d is not direct", i)             # <<<<<<<<<<<<<<
 * 
 *     if slices_overlap(&src, &dst, ndim, itemsize):
 */
      __pyx_t_6 = __pyx_memoryview_err_dim(__pyx_builtin_ValueError, ((char *)"Dimension %d is not direct"), __pyx_v_i); if (unlikely(__pyx_t_6 == ((int)-1))) __PYX_ERR(2, 1302, __pyx_L1_error)

      /* "View.MemoryView":1301
 *                 _err_extents(i, dst.shape[i], src.shape[i])
 * 
 *         if src.suboffsets[i] >= 0:             # <<<<<<<<<<<<<<
 *             _err_dim(ValueError, "Dimension %d is not direct", i)
 * 
 */
    }
  }

  /* "View.MemoryView":1304
 *             _err_dim(ValueError, "Dimension %d is not direct", i)
 * 
 *     if slices_overlap(&src, &dst, ndim, itemsize):             # <<<<<<<<<<<<<<
 * 
 *         if not slice_is_contig(src, order, ndim):
 */
  __pyx_t_2 = (__pyx_slices_overlap((&__pyx_v_src), (&__pyx_v_dst), __pyx_v_ndim, __pyx_v_itemsize) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1306
 *     if slices_overlap(&src, &dst, ndim, itemsize):
 * 
 *         if not slice_is_contig(src, order, ndim):             # <<<<<<<<<<<<<<
 *             order = get_best_order(&dst, ndim)
 * 
 */
    __pyx_t_2 = ((!(__pyx_memviewslice_is_contig(__pyx_v_src, __pyx_v_order, __pyx_v_ndim) != 0)) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1307
 * 
 *         if not slice_is_contig(src, order, ndim):
 *             order = get_best_order(&dst, ndim)             # <<<<<<<<<<<<<<
 * 
 *         tmpdata = copy_data_to_temp(&src, &tmp, order, ndim)
 */
      __pyx_v_order = __pyx_get_best_slice_order((&__pyx_v_dst), __pyx_v_ndim);

      /* "View.MemoryView":1306
 *     if slices_overlap(&src, &dst, ndim, itemsize):
 * 
 *         if not slice_is_contig(src, order, ndim):             # <<<<<<<<<<<<<<
 *             order = get_best_order(&dst, ndim)
 * 
 */
    }

    /* "View.MemoryView":1309
 *             order = get_best_order(&dst, ndim)
 * 
 *         tmpdata = copy_data_to_temp(&src, &tmp, order, ndim)             # <<<<<<<<<<<<<<
 *         src = tmp
 * 
 */
    __pyx_t_7 = __pyx_memoryview_copy_data_to_temp((&__pyx_v_src), (&__pyx_v_tmp), __pyx_v_order, __pyx_v_ndim); if (unlikely(__pyx_t_7 == ((void *)NULL))) __PYX_ERR(2, 1309, __pyx_L1_error)
    __pyx_v_tmpdata = __pyx_t_7;

    /* "View.MemoryView":1310
 * 
 *         tmpdata = copy_data_to_temp(&src, &tmp, order, ndim)
 *         src = tmp             # <<<<<<<<<<<<<<
 * 
 *     if not broadcasting:
 */
    __pyx_v_src = __pyx_v_tmp;

    /* "View.MemoryView":1304
 *             _err_dim(ValueError, "Dimension %d is not direct", i)
 * 
 *     if slices_overlap(&src, &dst, ndim, itemsize):             # <<<<<<<<<<<<<<
 * 
 *         if not slice_is_contig(src, order, ndim):
 */
  }

  /* "View.MemoryView":1312
 *         src = tmp
 * 
 *     if not broadcasting:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = ((!(__pyx_v_broadcasting != 0)) != 0);
  if (__pyx_t_2) {

    /* "View.MemoryView":1315
 * 
 * 
 *         if slice_is_contig(src, 'C', ndim):             # <<<<<<<<<<<<<<
 *             direct_copy = slice_is_contig(dst, 'C', ndim)
 *         elif slice_is_contig(src, 'F', ndim):
 */
    __pyx_t_2 = (__pyx_memviewslice_is_contig(__pyx_v_src, 'C', __pyx_v_ndim) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1316
 * 
 *         if slice_is_contig(src, 'C', ndim):
 *             direct_copy = slice_is_contig(dst, 'C', ndim)             # <<<<<<<<<<<<<<
 *         elif slice_is_contig(src, 'F', ndim):
 *             direct_copy = slice_is_contig(dst, 'F', ndim)
 */
      __pyx_v_direct_copy = __pyx_memviewslice_is_contig(__pyx_v_dst, 'C', __pyx_v_ndim);

      /* "View.MemoryView":1315
 * 
 * 
 *         if slice_is_contig(src, 'C', ndim):             # <<<<<<<<<<<<<<
 *             direct_copy = slice_is_contig(dst, 'C', ndim)
 *         elif slice_is_contig(src, 'F', ndim):
 */
      goto __pyx_L12;
    }

    /* "View.MemoryView":1317
 *         if slice_is_contig(src, 'C', ndim):
 *             direct_copy = slice_is_contig(dst, 'C', ndim)
 *         elif slice_is_contig(src, 'F', ndim):             # <<<<<<<<<<<<<<
 *             direct_copy = slice_is_contig(dst, 'F', ndim)
 * 
 */
    __pyx_t_2 = (__pyx_memviewslice_is_contig(__pyx_v_src, 'F', __pyx_v_ndim) != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1318
 *             direct_copy = slice_is_contig(dst, 'C', ndim)
 *         elif slice_is_contig(src, 'F', ndim):
 *             direct_copy = slice_is_contig(dst, 'F', ndim)             # <<<<<<<<<<<<<<
 * 
 *         if direct_copy:
 */
      __pyx_v_direct_copy = __pyx_memviewslice_is_contig(__pyx_v_dst, 'F', __pyx_v_ndim);

      /* "View.MemoryView":1317
 *         if slice_is_contig(src, 'C', ndim):
 *             direct_copy = slice_is_contig(dst, 'C', ndim)
 *         elif slice_is_contig(src, 'F', ndim):             # <<<<<<<<<<<<<<
 *             direct_copy = slice_is_contig(dst, 'F', ndim)
 * 
 */
    }
    __pyx_L12:;

    /* "View.MemoryView":1320
 *             direct_copy = slice_is_contig(dst, 'F', ndim)
 * 
 *         if direct_copy:             # <<<<<<<<<<<<<<
 * 
 *             refcount_copying(&dst, dtype_is_object, ndim, False)
 */
    __pyx_t_2 = (__pyx_v_direct_copy != 0);
    if (__pyx_t_2) {

      /* "View.MemoryView":1322
 *         if direct_copy:
 * 
 *             refcount_copying(&dst, dtype_is_object, ndim, False)             # <<<<<<<<<<<<<<
 *             memcpy(dst.data, src.data, slice_get_size(&src, ndim))
 *             refcount_copying(&dst, dtype_is_object, ndim, True)
 */
      __pyx_memoryview_refcount_copying((&__pyx_v_dst), __pyx_v_dtype_is_object, __pyx_v_ndim, 0);

      /* "View.MemoryView":1323
 * 
 *             refcount_copying(&dst, dtype_is_object, ndim, False)
 *             memcpy(dst.data, src.data, slice_get_size(&src, ndim))             # <<<<<<<<<<<<<<
 *             refcount_copying(&dst, dtype_is_object, ndim, True)
 *             free(tmpdata)
 */
      (void)(memcpy(__pyx_v_dst.data, __pyx_v_src.data, __pyx_memoryview_slice_get_size((&__pyx_v_src), __pyx_v_ndim)));

      /* "View.MemoryView":1324
 *             refcount_copying(&dst, dtype_is_object, ndim, False)
 *             memcpy(dst.data, src.data, slice_get_size(&src, ndim))
 *             refcount_copying(&dst, dtype_is_object, ndim, True)             # <<<<<<<<<<<<<<
 *             free(tmpdata)
 *             return 0
 */
      __pyx_memoryview_refcount_copying((&__pyx_v_dst), __pyx_v_dtype_is_object, __pyx_v_ndim, 1);

      /* "View.MemoryView":1325
 *             memcpy(dst.data, src.data, slice_get_size(&src, ndim))
 *             refcount_copying(&dst, dtype_is_object, ndim, True)
 *             free(tmpdata)             # <<<<<<<<<<<<<<
 *             return 0
 * 
 */
      free(__pyx_v_tmpdata);

      /* "View.MemoryView":1326
 *             refcount_copying(&dst, dtype_is_object, ndim, True)
 *             free(tmpdata)
 *             return 0             # <<<<<<<<<<<<<<
 * 
 *     if order == 'F' == get_best_order(&dst, ndim):
 */
      __pyx_r = 0;
      goto __pyx_L0;

      /* "View.MemoryView":1320
 *             direct_copy = slice_is_contig(dst, 'F', ndim)
 * 
 *         if direct_copy:             # <<<<<<<<<<<<<<
 * 
 *             refcount_copying(&dst, dtype_is_object, ndim, False)
 */
    }

    /* "View.MemoryView":1312
 *         src = tmp
 * 
 *     if not broadcasting:             # <<<<<<<<<<<<<<
 * 
 * 
 */
  }

  /* "View.MemoryView":1328
 *             return 0
 * 
 *     if order == 'F' == get_best_order(&dst, ndim):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_2 = (__pyx_v_order == 'F');
  if (__pyx_t_2) {
    __pyx_t_2 = ('F' == __pyx_get_best_slice_order((&__pyx_v_dst), __pyx_v_ndim));
  }
  __pyx_t_8 = (__pyx_t_2 != 0);
  if (__pyx_t_8) {

    /* "View.MemoryView":1331
 * 
 * 
 *         transpose_memslice(&src)             # <<<<<<<<<<<<<<
 *         transpose_memslice(&dst)
 * 
 */
    __pyx_t_5 = __pyx_memslice_transpose((&__pyx_v_src)); if (unlikely(__pyx_t_5 == ((int)0))) __PYX_ERR(2, 1331, __pyx_L1_error)

    /* "View.MemoryView":1332
 * 
 *         transpose_memslice(&src)
 *         transpose_memslice(&dst)             # <<<<<<<<<<<<<<
 * 
 *     refcount_copying(&dst, dtype_is_object, ndim, False)
 */
    __pyx_t_5 = __pyx_memslice_transpose((&__pyx_v_dst)); if (unlikely(__pyx_t_5 == ((int)0))) __PYX_ERR(2, 1332, __pyx_L1_error)

    /* "View.MemoryView":1328
 *             return 0
 * 
 *     if order == 'F' == get_best_order(&dst, ndim):             # <<<<<<<<<<<<<<
 * 
 * 
 */
  }

  /* "View.MemoryView":1334
 *         transpose_memslice(&dst)
 * 
 *     refcount_copying(&dst, dtype_is_object, ndim, False)             # <<<<<<<<<<<<<<
 *     copy_strided_to_strided(&src, &dst, ndim, itemsize)
 *     refcount_copying(&dst, dtype_is_object, ndim, True)
 */
  __pyx_memoryview_refcount_copying((&__pyx_v_dst), __pyx_v_dtype_is_object, __pyx_v_ndim, 0);

  /* "View.MemoryView":1335
 * 
 *     refcount_copying(&dst, dtype_is_object, ndim, False)
 *     copy_strided_to_strided(&src, &dst, ndim, itemsize)             # <<<<<<<<<<<<<<
 *     refcount_copying(&dst, dtype_is_object, ndim, True)
 * 
 */
  copy_strided_to_strided((&__pyx_v_src), (&__pyx_v_dst), __pyx_v_ndim, __pyx_v_itemsize);

  /* "View.MemoryView":1336
 *     refcount_copying(&dst, dtype_is_object, ndim, False)
 *     copy_strided_to_strided(&src, &dst, ndim, itemsize)
 *     refcount_copying(&dst, dtype_is_object, ndim, True)             # <<<<<<<<<<<<<<
 * 
 *     free(tmpdata)
 */
  __pyx_memoryview_refcount_copying((&__pyx_v_dst), __pyx_v_dtype_is_object, __pyx_v_ndim, 1);

  /* "View.MemoryView":1338
 *     refcount_copying(&dst, dtype_is_object, ndim, True)
 * 
 *     free(tmpdata)             # <<<<<<<<<<<<<<
 *     return 0
 * 
 */
  free(__pyx_v_tmpdata);

  /* "View.MemoryView":1339
 * 
 *     free(tmpdata)
 *     return 0             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_broadcast_leading')
 */
  __pyx_r = 0;
  goto __pyx_L0;

  /* "View.MemoryView":1270
 * 
 * @cname('__pyx_memoryview_copy_contents')
 * cdef int memoryview_copy_contents(__Pyx_memviewslice src,             # <<<<<<<<<<<<<<
 *                                   __Pyx_memviewslice dst,
 *                                   int src_ndim, int dst_ndim,
 */

  /* function exit code */
  __pyx_L1_error:;
  {
    #ifdef WITH_THREAD
    PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
    #endif
    __Pyx_AddTraceback("View.MemoryView.memoryview_copy_contents", __pyx_clineno, __pyx_lineno, __pyx_filename);
    #ifdef WITH_THREAD
    __Pyx_PyGILState_Release(__pyx_gilstate_save);
    #endif
  }
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "View.MemoryView":1342
 * 
 * @cname('__pyx_memoryview_broadcast_leading')
 * cdef void broadcast_leading(__Pyx_memviewslice *mslice,             # <<<<<<<<<<<<<<
 *                             int ndim,
 *                             int ndim_other) nogil:
 */

static void __pyx_memoryview_broadcast_leading(__Pyx_memviewslice *__pyx_v_mslice, int __pyx_v_ndim, int __pyx_v_ndim_other) {
  int __pyx_v_i;
  int __pyx_v_offset;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;

  /* "View.MemoryView":1346
 *                             int ndim_other) nogil:
 *     cdef int i
 *     cdef int offset = ndim_other - ndim             # <<<<<<<<<<<<<<
 * 
 *     for i in range(ndim - 1, -1, -1):
 */
  __pyx_v_offset = (__pyx_v_ndim_other - __pyx_v_ndim);

  /* "View.MemoryView":1348
 *     cdef int offset = ndim_other - ndim
 * 
 *     for i in range(ndim - 1, -1, -1):             # <<<<<<<<<<<<<<
 *         mslice.shape[i + offset] = mslice.shape[i]
 *         mslice.strides[i + offset] = mslice.strides[i]
 */
  for (__pyx_t_1 = (__pyx_v_ndim - 1); __pyx_t_1 > -1; __pyx_t_1-=1) {
    __pyx_v_i = __pyx_t_1;

    /* "View.MemoryView":1349
 * 
 *     for i in range(ndim - 1, -1, -1):
 *         mslice.shape[i + offset] = mslice.shape[i]             # <<<<<<<<<<<<<<
 *         mslice.strides[i + offset] = mslice.strides[i]
 *         mslice.suboffsets[i + offset] = mslice.suboffsets[i]
 */
    (__pyx_v_mslice->shape[(__pyx_v_i + __pyx_v_offset)]) = (__pyx_v_mslice->shape[__pyx_v_i]);

    /* "View.MemoryView":1350
 *     for i in range(ndim - 1, -1, -1):
 *         mslice.shape[i + offset] = mslice.shape[i]
 *         mslice.strides[i + offset] = mslice.strides[i]             # <<<<<<<<<<<<<<
 *         mslice.suboffsets[i + offset] = mslice.suboffsets[i]
 * 
 */
    (__pyx_v_mslice->strides[(__pyx_v_i + __pyx_v_offset)]) = (__pyx_v_mslice->strides[__pyx_v_i]);

    /* "View.MemoryView":1351
 *         mslice.shape[i + offset] = mslice.shape[i]
 *         mslice.strides[i + offset] = mslice.strides[i]
 *         mslice.suboffsets[i + offset] = mslice.suboffsets[i]             # <<<<<<<<<<<<<<
 * 
 *     for i in range(offset):
 */
    (__pyx_v_mslice->suboffsets[(__pyx_v_i + __pyx_v_offset)]) = (__pyx_v_mslice->suboffsets[__pyx_v_i]);
  }

  /* "View.MemoryView":1353
 *         mslice.suboffsets[i + offset] = mslice.suboffsets[i]
 * 
 *     for i in range(offset):             # <<<<<<<<<<<<<<
 *         mslice.shape[i] = 1
 *         mslice.strides[i] = mslice.strides[0]
 */
  __pyx_t_1 = __pyx_v_offset;
  __pyx_t_2 = __pyx_t_1;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "View.MemoryView":1354
 * 
 *     for i in range(offset):
 *         mslice.shape[i] = 1             # <<<<<<<<<<<<<<
 *         mslice.strides[i] = mslice.strides[0]
 *         mslice.suboffsets[i] = -1
 */
    (__pyx_v_mslice->shape[__pyx_v_i]) = 1;

    /* "View.MemoryView":1355
 *     for i in range(offset):
 *         mslice.shape[i] = 1
 *         mslice.strides[i] = mslice.strides[0]             # <<<<<<<<<<<<<<
 *         mslice.suboffsets[i] = -1
 * 
 */
    (__pyx_v_mslice->strides[__pyx_v_i]) = (__pyx_v_mslice->strides[0]);

    /* "View.MemoryView":1356
 *         mslice.shape[i] = 1
 *         mslice.strides[i] = mslice.strides[0]
 *         mslice.suboffsets[i] = -1             # <<<<<<<<<<<<<<
 * 
 * 
 */
    (__pyx_v_mslice->suboffsets[__pyx_v_i]) = -1L;
  }

  /* "View.MemoryView":1342
 * 
 * @cname('__pyx_memoryview_broadcast_leading')
 * cdef void broadcast_leading(__Pyx_memviewslice *mslice,             # <<<<<<<<<<<<<<
 *                             int ndim,
 *                             int ndim_other) nogil:
 */

  /* function exit code */
}

/* "View.MemoryView":1364
 * 
 * @cname('__pyx_memoryview_refcount_copying')
 * cdef void refcount_copying(__Pyx_memviewslice *dst, bint dtype_is_object,             # <<<<<<<<<<<<<<
 *                            int ndim, bint inc) nogil:
 * 
 */

static void __pyx_memoryview_refcount_copying(__Pyx_memviewslice *__pyx_v_dst, int __pyx_v_dtype_is_object, int __pyx_v_ndim, int __pyx_v_inc) {
  int __pyx_t_1;

  /* "View.MemoryView":1368
 * 
 * 
 *     if dtype_is_object:             # <<<<<<<<<<<<<<
 *         refcount_objects_in_slice_with_gil(dst.data, dst.shape,
 *                                            dst.strides, ndim, inc)
 */
  __pyx_t_1 = (__pyx_v_dtype_is_object != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1369
 * 
 *     if dtype_is_object:
 *         refcount_objects_in_slice_with_gil(dst.data, dst.shape,             # <<<<<<<<<<<<<<
 *                                            dst.strides, ndim, inc)
 * 
 */
    __pyx_memoryview_refcount_objects_in_slice_with_gil(__pyx_v_dst->data, __pyx_v_dst->shape, __pyx_v_dst->strides, __pyx_v_ndim, __pyx_v_inc);

    /* "View.MemoryView":1368
 * 
 * 
 *     if dtype_is_object:             # <<<<<<<<<<<<<<
 *         refcount_objects_in_slice_with_gil(dst.data, dst.shape,
 *                                            dst.strides, ndim, inc)
 */
  }

  /* "View.MemoryView":1364
 * 
 * @cname('__pyx_memoryview_refcount_copying')
 * cdef void refcount_copying(__Pyx_memviewslice *dst, bint dtype_is_object,             # <<<<<<<<<<<<<<
 *                            int ndim, bint inc) nogil:
 * 
 */

  /* function exit code */
}

/* "View.MemoryView":1373
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice_with_gil')
 * cdef void refcount_objects_in_slice_with_gil(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                                              Py_ssize_t *strides, int ndim,
 *                                              bint inc) with gil:
 */

static void __pyx_memoryview_refcount_objects_in_slice_with_gil(char *__pyx_v_data, Py_ssize_t *__pyx_v_shape, Py_ssize_t *__pyx_v_strides, int __pyx_v_ndim, int __pyx_v_inc) {
  __Pyx_RefNannyDeclarations
  #ifdef WITH_THREAD
  PyGILState_STATE __pyx_gilstate_save = __Pyx_PyGILState_Ensure();
  #endif
  __Pyx_RefNannySetupContext("refcount_objects_in_slice_with_gil", 0);

  /* "View.MemoryView":1376
 *                                              Py_ssize_t *strides, int ndim,
 *                                              bint inc) with gil:
 *     refcount_objects_in_slice(data, shape, strides, ndim, inc)             # <<<<<<<<<<<<<<
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice')
 */
  __pyx_memoryview_refcount_objects_in_slice(__pyx_v_data, __pyx_v_shape, __pyx_v_strides, __pyx_v_ndim, __pyx_v_inc);

  /* "View.MemoryView":1373
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice_with_gil')
 * cdef void refcount_objects_in_slice_with_gil(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                                              Py_ssize_t *strides, int ndim,
 *                                              bint inc) with gil:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  #ifdef WITH_THREAD
  __Pyx_PyGILState_Release(__pyx_gilstate_save);
  #endif
}

/* "View.MemoryView":1379
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice')
 * cdef void refcount_objects_in_slice(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                                     Py_ssize_t *strides, int ndim, bint inc):
 *     cdef Py_ssize_t i
 */

static void __pyx_memoryview_refcount_objects_in_slice(char *__pyx_v_data, Py_ssize_t *__pyx_v_shape, Py_ssize_t *__pyx_v_strides, int __pyx_v_ndim, int __pyx_v_inc) {
  CYTHON_UNUSED Py_ssize_t __pyx_v_i;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  __Pyx_RefNannySetupContext("refcount_objects_in_slice", 0);

  /* "View.MemoryView":1383
 *     cdef Py_ssize_t i
 * 
 *     for i in range(shape[0]):             # <<<<<<<<<<<<<<
 *         if ndim == 1:
 *             if inc:
 */
  __pyx_t_1 = (__pyx_v_shape[0]);
  __pyx_t_2 = __pyx_t_1;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_i = __pyx_t_3;

    /* "View.MemoryView":1384
 * 
 *     for i in range(shape[0]):
 *         if ndim == 1:             # <<<<<<<<<<<<<<
 *             if inc:
 *                 Py_INCREF((<PyObject **> data)[0])
 */
    __pyx_t_4 = ((__pyx_v_ndim == 1) != 0);
    if (__pyx_t_4) {

      /* "View.MemoryView":1385
 *     for i in range(shape[0]):
 *         if ndim == 1:
 *             if inc:             # <<<<<<<<<<<<<<
 *                 Py_INCREF((<PyObject **> data)[0])
 *             else:
 */
      __pyx_t_4 = (__pyx_v_inc != 0);
      if (__pyx_t_4) {

        /* "View.MemoryView":1386
 *         if ndim == 1:
 *             if inc:
 *                 Py_INCREF((<PyObject **> data)[0])             # <<<<<<<<<<<<<<
 *             else:
 *                 Py_DECREF((<PyObject **> data)[0])
 */
        Py_INCREF((((PyObject **)__pyx_v_data)[0]));

        /* "View.MemoryView":1385
 *     for i in range(shape[0]):
 *         if ndim == 1:
 *             if inc:             # <<<<<<<<<<<<<<
 *                 Py_INCREF((<PyObject **> data)[0])
 *             else:
 */
        goto __pyx_L6;
      }

      /* "View.MemoryView":1388
 *                 Py_INCREF((<PyObject **> data)[0])
 *             else:
 *                 Py_DECREF((<PyObject **> data)[0])             # <<<<<<<<<<<<<<
 *         else:
 *             refcount_objects_in_slice(data, shape + 1, strides + 1,
 */
      /*else*/ {
        Py_DECREF((((PyObject **)__pyx_v_data)[0]));
      }
      __pyx_L6:;

      /* "View.MemoryView":1384
 * 
 *     for i in range(shape[0]):
 *         if ndim == 1:             # <<<<<<<<<<<<<<
 *             if inc:
 *                 Py_INCREF((<PyObject **> data)[0])
 */
      goto __pyx_L5;
    }

    /* "View.MemoryView":1390
 *                 Py_DECREF((<PyObject **> data)[0])
 *         else:
 *             refcount_objects_in_slice(data, shape + 1, strides + 1,             # <<<<<<<<<<<<<<
 *                                       ndim - 1, inc)
 * 
 */
    /*else*/ {

      /* "View.MemoryView":1391
 *         else:
 *             refcount_objects_in_slice(data, shape + 1, strides + 1,
 *                                       ndim - 1, inc)             # <<<<<<<<<<<<<<
 * 
 *         data += strides[0]
 */
      __pyx_memoryview_refcount_objects_in_slice(__pyx_v_data, (__pyx_v_shape + 1), (__pyx_v_strides + 1), (__pyx_v_ndim - 1), __pyx_v_inc);
    }
    __pyx_L5:;

    /* "View.MemoryView":1393
 *                                       ndim - 1, inc)
 * 
 *         data += strides[0]             # <<<<<<<<<<<<<<
 * 
 * 
 */
    __pyx_v_data = (__pyx_v_data + (__pyx_v_strides[0]));
  }

  /* "View.MemoryView":1379
 * 
 * @cname('__pyx_memoryview_refcount_objects_in_slice')
 * cdef void refcount_objects_in_slice(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                                     Py_ssize_t *strides, int ndim, bint inc):
 *     cdef Py_ssize_t i
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "View.MemoryView":1399
 * 
 * @cname('__pyx_memoryview_slice_assign_scalar')
 * cdef void slice_assign_scalar(__Pyx_memviewslice *dst, int ndim,             # <<<<<<<<<<<<<<
 *                               size_t itemsize, void *item,
 *                               bint dtype_is_object) nogil:
 */

static void __pyx_memoryview_slice_assign_scalar(__Pyx_memviewslice *__pyx_v_dst, int __pyx_v_ndim, size_t __pyx_v_itemsize, void *__pyx_v_item, int __pyx_v_dtype_is_object) {

  /* "View.MemoryView":1402
 *                               size_t itemsize, void *item,
 *                               bint dtype_is_object) nogil:
 *     refcount_copying(dst, dtype_is_object, ndim, False)             # <<<<<<<<<<<<<<
 *     _slice_assign_scalar(dst.data, dst.shape, dst.strides, ndim,
 *                          itemsize, item)
 */
  __pyx_memoryview_refcount_copying(__pyx_v_dst, __pyx_v_dtype_is_object, __pyx_v_ndim, 0);

  /* "View.MemoryView":1403
 *                               bint dtype_is_object) nogil:
 *     refcount_copying(dst, dtype_is_object, ndim, False)
 *     _slice_assign_scalar(dst.data, dst.shape, dst.strides, ndim,             # <<<<<<<<<<<<<<
 *                          itemsize, item)
 *     refcount_copying(dst, dtype_is_object, ndim, True)
 */
  __pyx_memoryview__slice_assign_scalar(__pyx_v_dst->data, __pyx_v_dst->shape, __pyx_v_dst->strides, __pyx_v_ndim, __pyx_v_itemsize, __pyx_v_item);

  /* "View.MemoryView":1405
 *     _slice_assign_scalar(dst.data, dst.shape, dst.strides, ndim,
 *                          itemsize, item)
 *     refcount_copying(dst, dtype_is_object, ndim, True)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_memoryview_refcount_copying(__pyx_v_dst, __pyx_v_dtype_is_object, __pyx_v_ndim, 1);

  /* "View.MemoryView":1399
 * 
 * @cname('__pyx_memoryview_slice_assign_scalar')
 * cdef void slice_assign_scalar(__Pyx_memviewslice *dst, int ndim,             # <<<<<<<<<<<<<<
 *                               size_t itemsize, void *item,
 *                               bint dtype_is_object) nogil:
 */

  /* function exit code */
}

/* "View.MemoryView":1409
 * 
 * @cname('__pyx_memoryview__slice_assign_scalar')
 * cdef void _slice_assign_scalar(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                               Py_ssize_t *strides, int ndim,
 *                               size_t itemsize, void *item) nogil:
 */

static void __pyx_memoryview__slice_assign_scalar(char *__pyx_v_data, Py_ssize_t *__pyx_v_shape, Py_ssize_t *__pyx_v_strides, int __pyx_v_ndim, size_t __pyx_v_itemsize, void *__pyx_v_item) {
  CYTHON_UNUSED Py_ssize_t __pyx_v_i;
  Py_ssize_t __pyx_v_stride;
  Py_ssize_t __pyx_v_extent;
  int __pyx_t_1;
  Py_ssize_t __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;

  /* "View.MemoryView":1413
 *                               size_t itemsize, void *item) nogil:
 *     cdef Py_ssize_t i
 *     cdef Py_ssize_t stride = strides[0]             # <<<<<<<<<<<<<<
 *     cdef Py_ssize_t extent = shape[0]
 * 
 */
  __pyx_v_stride = (__pyx_v_strides[0]);

  /* "View.MemoryView":1414
 *     cdef Py_ssize_t i
 *     cdef Py_ssize_t stride = strides[0]
 *     cdef Py_ssize_t extent = shape[0]             # <<<<<<<<<<<<<<
 * 
 *     if ndim == 1:
 */
  __pyx_v_extent = (__pyx_v_shape[0]);

  /* "View.MemoryView":1416
 *     cdef Py_ssize_t extent = shape[0]
 * 
 *     if ndim == 1:             # <<<<<<<<<<<<<<
 *         for i in range(extent):
 *             memcpy(data, item, itemsize)
 */
  __pyx_t_1 = ((__pyx_v_ndim == 1) != 0);
  if (__pyx_t_1) {

    /* "View.MemoryView":1417
 * 
 *     if ndim == 1:
 *         for i in range(extent):             # <<<<<<<<<<<<<<
 *             memcpy(data, item, itemsize)
 *             data += stride
 */
    __pyx_t_2 = __pyx_v_extent;
    __pyx_t_3 = __pyx_t_2;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_i = __pyx_t_4;

      /* "View.MemoryView":1418
 *     if ndim == 1:
 *         for i in range(extent):
 *             memcpy(data, item, itemsize)             # <<<<<<<<<<<<<<
 *             data += stride
 *     else:
 */
      (void)(memcpy(__pyx_v_data, __pyx_v_item, __pyx_v_itemsize));

      /* "View.MemoryView":1419
 *         for i in range(extent):
 *             memcpy(data, item, itemsize)
 *             data += stride             # <<<<<<<<<<<<<<
 *     else:
 *         for i in range(extent):
 */
      __pyx_v_data = (__pyx_v_data + __pyx_v_stride);
    }

    /* "View.MemoryView":1416
 *     cdef Py_ssize_t extent = shape[0]
 * 
 *     if ndim == 1:             # <<<<<<<<<<<<<<
 *         for i in range(extent):
 *             memcpy(data, item, itemsize)
 */
    goto __pyx_L3;
  }

  /* "View.MemoryView":1421
 *             data += stride
 *     else:
 *         for i in range(extent):             # <<<<<<<<<<<<<<
 *             _slice_assign_scalar(data, shape + 1, strides + 1,
 *                                 ndim - 1, itemsize, item)
 */
  /*else*/ {
    __pyx_t_2 = __pyx_v_extent;
    __pyx_t_3 = __pyx_t_2;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_i = __pyx_t_4;

      /* "View.MemoryView":1422
 *     else:
 *         for i in range(extent):
 *             _slice_assign_scalar(data, shape + 1, strides + 1,             # <<<<<<<<<<<<<<
 *                                 ndim - 1, itemsize, item)
 *             data += stride
 */
      __pyx_memoryview__slice_assign_scalar(__pyx_v_data, (__pyx_v_shape + 1), (__pyx_v_strides + 1), (__pyx_v_ndim - 1), __pyx_v_itemsize, __pyx_v_item);

      /* "View.MemoryView":1424
 *             _slice_assign_scalar(data, shape + 1, strides + 1,
 *                                 ndim - 1, itemsize, item)
 *             data += stride             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_v_data = (__pyx_v_data + __pyx_v_stride);
    }
  }
  __pyx_L3:;

  /* "View.MemoryView":1409
 * 
 * @cname('__pyx_memoryview__slice_assign_scalar')
 * cdef void _slice_assign_scalar(char *data, Py_ssize_t *shape,             # <<<<<<<<<<<<<<
 *                               Py_ssize_t *strides, int ndim,
 *                               size_t itemsize, void *item) nogil:
 */

  /* function exit code */
}

/* "(tree fragment)":1
 * def __pyx_unpickle_Enum(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_15View_dot_MemoryView_1__pyx_unpickle_Enum(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyMethodDef __pyx_mdef_15View_dot_MemoryView_1__pyx_unpickle_Enum = {"__pyx_unpickle_Enum", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_15View_dot_MemoryView_1__pyx_unpickle_Enum, METH_VARARGS|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_15View_dot_MemoryView_1__pyx_unpickle_Enum(PyObject *__pyx_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_Enum (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Enum", 1, 3, 3, 1); __PYX_ERR(2, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_PyDict_GetItemStr(__pyx_kwds, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Enum", 1, 3, 3, 2); __PYX_ERR(2, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__pyx_unpickle_Enum") < 0)) __PYX_ERR(2, 1, __pyx_L3_error)
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(2, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_Enum", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); __PYX_ERR(2, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("View.MemoryView.__pyx_unpickle_Enum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_15View_dot_MemoryView___pyx_unpickle_Enum(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_15View_dot_MemoryView___pyx_unpickle_Enum(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Enum", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xb068931, 0x82a3537, 0x6ae9995):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))" % __pyx_checksum)
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__66, Py_NE)); if (unlikely(__pyx_t_2 < 0)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = (__pyx_t_2 != 0);
  if (__pyx_t_3) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xb068931, 0x82a3537, 0x6ae9995):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))" % __pyx_checksum)
 *     __pyx_result = Enum.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_4 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_4, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0xb068931, 0x82a3537, 0x6ae9995):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))" % __pyx_checksum)             # <<<<<<<<<<<<<<
 *     __pyx_result = Enum.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_INCREF(__pyx_v___pyx_PickleError);
    __pyx_t_1 = __pyx_v___pyx_PickleError; __pyx_t_6 = NULL;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
      }
    }
    __pyx_t_4 = (__pyx_t_6) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_6, __pyx_t_5) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __PYX_ERR(2, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0xb068931, 0x82a3537, 0x6ae9995):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))" % __pyx_checksum)
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))" % __pyx_checksum)
 *     __pyx_result = Enum.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Enum__set_state(<Enum> __pyx_result, __pyx_state)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_MemviewEnum_type), __pyx_n_s_new); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = NULL;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
    }
  }
  __pyx_t_4 = (__pyx_t_5) ? __Pyx_PyObject_Call2Args(__pyx_t_1, __pyx_t_5, __pyx_v___pyx_type) : __Pyx_PyObject_CallOneArg(__pyx_t_1, __pyx_v___pyx_type);
  __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v___pyx_result = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))" % __pyx_checksum)
 *     __pyx_result = Enum.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Enum__set_state(<Enum> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_3 = (__pyx_v___pyx_state != Py_None);
  __pyx_t_2 = (__pyx_t_3 != 0);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = Enum.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Enum__set_state(<Enum> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_Enum__set_state(Enum __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected %.16s, got %.200s", "tuple", Py_TYPE(__pyx_v___pyx_state)->tp_name), 0))) __PYX_ERR(2, 9, __pyx_L1_error)
    __pyx_t_4 = __pyx_unpickle_Enum__set_state(((struct __pyx_MemviewEnum_obj *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_4)) __PYX_ERR(2, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError("Incompatible checksums (0x%x vs (0xb068931, 0x82a3537, 0x6ae9995) = (name))" % __pyx_checksum)
 *     __pyx_result = Enum.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_Enum__set_state(<Enum> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_Enum__set_state(<Enum> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_Enum__set_state(Enum __pyx_result, tuple __pyx_state):
 *     __pyx_result.name = __pyx_state[0]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_Enum(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("View.MemoryView.__pyx_unpickle_Enum", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_Enum__set_state(<Enum> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Enum__set_state(Enum __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.name = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_unpickle_Enum__set_state(struct __pyx_MemviewEnum_obj *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_Enum__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_Enum__set_state(Enum __pyx_result, tuple __pyx_state):
 *     __pyx_result.name = __pyx_state[0]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[1])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(2, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->name);
  __Pyx_DECREF(__pyx_v___pyx_result->name);
  __pyx_v___pyx_result->name = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_Enum__set_state(Enum __pyx_result, tuple __pyx_state):
 *     __pyx_result.name = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[1])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(2, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(2, 13, __pyx_L1_error)
  __pyx_t_4 = ((__pyx_t_3 > 1) != 0);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(2, 13, __pyx_L1_error)
  __pyx_t_5 = (__pyx_t_4 != 0);
  __pyx_t_2 = __pyx_t_5;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result.name = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[1])             # <<<<<<<<<<<<<<
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_update); if (unlikely(!__pyx_t_7)) __PYX_ERR(2, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(2, 14, __pyx_L1_error)
    }
    __pyx_t_6 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(2, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_7))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_7, function);
      }
    }
    __pyx_t_1 = (__pyx_t_8) ? __Pyx_PyObject_Call2Args(__pyx_t_7, __pyx_t_8, __pyx_t_6) : __Pyx_PyObject_CallOneArg(__pyx_t_7, __pyx_t_6);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_Enum__set_state(Enum __pyx_result, tuple __pyx_state):
 *     __pyx_result.name = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[1])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_Enum__set_state(<Enum> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Enum__set_state(Enum __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.name = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("View.MemoryView.__pyx_unpickle_Enum__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwDepthData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)o);
  new((void*)&(p->depthData)) DepthData();
  p->shape = Py_None; Py_INCREF(Py_None);
  p->chi.data = NULL;
  p->chi.memview = NULL;
  p->eta.data = NULL;
  p->eta.memview = NULL;
  p->I.data = NULL;
  p->I.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwDepthData(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->depthData);
  Py_CLEAR(p->shape);
  __PYX_XDEC_MEMVIEW(&p->chi, 1);
  __PYX_XDEC_MEMVIEW(&p->eta, 1);
  __PYX_XDEC_MEMVIEW(&p->I, 1);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwDepthData(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)o;
  if (p->shape) {
    e = (*v)(p->shape, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwDepthData(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)o;
  tmp = ((PyObject*)p->shape);
  p->shape = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_11LwDepthData_fill(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_4fill_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_11LwDepthData_fill(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_4fill_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_11LwDepthData_chi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3chi_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_11LwDepthData_eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3eta_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_11LwDepthData_I(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_1I_1__get__(o);
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwDepthData[] = {
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_3__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_5__setstate__, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwDepthData[] = {
  {(char *)"fill", __pyx_getprop_11lightweaver_10LwCompiled_11LwDepthData_fill, __pyx_setprop_11lightweaver_10LwCompiled_11LwDepthData_fill, (char *)"\n        Set this to True to fill the arrays, this will take care of\n        allocating the space if not previously done.\n        ", 0},
  {(char *)"chi", __pyx_getprop_11lightweaver_10LwCompiled_11LwDepthData_chi, 0, (char *)"\n        Full depth dependent opacity [Nlambda, Nmu, Up/Down, Nspace].\n        ", 0},
  {(char *)"eta", __pyx_getprop_11lightweaver_10LwCompiled_11LwDepthData_eta, 0, (char *)"\n        Full depth dependent emissivity [Nlambda, Nmu, Up/Down, Nspace].\n        ", 0},
  {(char *)"I", __pyx_getprop_11lightweaver_10LwCompiled_11LwDepthData_I, 0, (char *)"\n        Full depth dependent intensity [Nlambda, Nmu, Up/Down, Nspace].\n        ", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwDepthData = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwDepthData", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwDepthData, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Simple object to lazily hold data that isn't usually stored during the\n    Formal Solution (full angularly dependent emissivity, opacity, and\n    intensity at every point), due to the high memory cost. This is a part of\n    the Context and doesn't need to be instantiated directly.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwDepthData, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwDepthData, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwDepthData, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwDepthData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_11LwDepthData_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwDepthData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwAtmosphere(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)o);
  new((void*)&(p->atmos)) Atmosphere();
  p->pyAtmos = Py_None; Py_INCREF(Py_None);
  p->x.data = NULL;
  p->x.memview = NULL;
  p->y.data = NULL;
  p->y.memview = NULL;
  p->z.data = NULL;
  p->z.memview = NULL;
  p->temperature.data = NULL;
  p->temperature.memview = NULL;
  p->ne.data = NULL;
  p->ne.memview = NULL;
  p->vx.data = NULL;
  p->vx.memview = NULL;
  p->vy.data = NULL;
  p->vy.memview = NULL;
  p->vz.data = NULL;
  p->vz.memview = NULL;
  p->vlosMu.data = NULL;
  p->vlosMu.memview = NULL;
  p->B.data = NULL;
  p->B.memview = NULL;
  p->gammaB.data = NULL;
  p->gammaB.memview = NULL;
  p->chiB.data = NULL;
  p->chiB.memview = NULL;
  p->cosGamma.data = NULL;
  p->cosGamma.memview = NULL;
  p->cos2chi.data = NULL;
  p->cos2chi.memview = NULL;
  p->sin2chi.data = NULL;
  p->sin2chi.memview = NULL;
  p->vturb.data = NULL;
  p->vturb.memview = NULL;
  p->nHTot.data = NULL;
  p->nHTot.memview = NULL;
  p->muz.data = NULL;
  p->muz.memview = NULL;
  p->muy.data = NULL;
  p->muy.memview = NULL;
  p->mux.data = NULL;
  p->mux.memview = NULL;
  p->wmu.data = NULL;
  p->wmu.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwAtmosphere(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->atmos);
  Py_CLEAR(p->pyAtmos);
  __PYX_XDEC_MEMVIEW(&p->x, 1);
  __PYX_XDEC_MEMVIEW(&p->y, 1);
  __PYX_XDEC_MEMVIEW(&p->z, 1);
  __PYX_XDEC_MEMVIEW(&p->temperature, 1);
  __PYX_XDEC_MEMVIEW(&p->ne, 1);
  __PYX_XDEC_MEMVIEW(&p->vx, 1);
  __PYX_XDEC_MEMVIEW(&p->vy, 1);
  __PYX_XDEC_MEMVIEW(&p->vz, 1);
  __PYX_XDEC_MEMVIEW(&p->vlosMu, 1);
  __PYX_XDEC_MEMVIEW(&p->B, 1);
  __PYX_XDEC_MEMVIEW(&p->gammaB, 1);
  __PYX_XDEC_MEMVIEW(&p->chiB, 1);
  __PYX_XDEC_MEMVIEW(&p->cosGamma, 1);
  __PYX_XDEC_MEMVIEW(&p->cos2chi, 1);
  __PYX_XDEC_MEMVIEW(&p->sin2chi, 1);
  __PYX_XDEC_MEMVIEW(&p->vturb, 1);
  __PYX_XDEC_MEMVIEW(&p->nHTot, 1);
  __PYX_XDEC_MEMVIEW(&p->muz, 1);
  __PYX_XDEC_MEMVIEW(&p->muy, 1);
  __PYX_XDEC_MEMVIEW(&p->mux, 1);
  __PYX_XDEC_MEMVIEW(&p->wmu, 1);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwAtmosphere(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)o;
  if (p->pyAtmos) {
    e = (*v)(p->pyAtmos, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwAtmosphere(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)o;
  tmp = ((PyObject*)p->pyAtmos);
  p->pyAtmos = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Nspace(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6Nspace_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Nrays(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5Nrays_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Ndim(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4Ndim_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Nx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Nx_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Ny(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Ny_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Nz(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2Nz_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_x(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1x_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1y_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_z(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1z_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_height(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6height_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_temperature(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_11temperature_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_ne(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2ne_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vx(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vx_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vy_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vz(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_2vz_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vlos(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4vlos_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vlosMu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6vlosMu_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_B(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1B_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_gammaB(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_6gammaB_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_chiB(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_4chiB_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_cosGamma(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_8cosGamma_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_cos2chi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7cos2chi_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_sin2chi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7sin2chi_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vturb(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5vturb_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_nHTot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5nHTot_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_muz(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3muz_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_muy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3muy_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_mux(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3mux_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_wmu(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3wmu_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_pyAtmos(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_12LwAtmosphere_pyAtmos(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7pyAtmos_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwAtmosphere[] = {
  {"configure_bcs", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_3configure_bcs, METH_O, 0},
  {"compute_bcs", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_5compute_bcs, METH_O, 0},
  {"update_projections", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_7update_projections, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_12LwAtmosphere_6update_projections},
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_9__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_11__setstate__, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_13__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_15__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwAtmosphere[] = {
  {(char *)"Nspace", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Nspace, 0, (char *)"\n        The number of points in the atmosphere.\n        ", 0},
  {(char *)"Nrays", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Nrays, 0, (char *)"\n        The number of rays in the angular quadrature.\n        ", 0},
  {(char *)"Ndim", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Ndim, 0, (char *)"\n        The dimensionality of the atmosphere.\n        ", 0},
  {(char *)"Nx", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Nx, 0, (char *)"\n        The number of points along the x dimension.\n        ", 0},
  {(char *)"Ny", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Ny, 0, (char *)"\n        The number of points along the y dimension.\n        ", 0},
  {(char *)"Nz", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_Nz, 0, (char *)"\n        The number of points along the z dimension.\n        ", 0},
  {(char *)"x", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_x, 0, (char *)"\n        The x grid.\n        ", 0},
  {(char *)"y", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_y, 0, (char *)"\n        The y grid.\n        ", 0},
  {(char *)"z", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_z, 0, (char *)"\n        The z grid.\n        ", 0},
  {(char *)"height", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_height, 0, (char *)"\n        The z (altitude) grid.\n        ", 0},
  {(char *)"temperature", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_temperature, 0, (char *)"\n        The temperature structure of the atmospheric model (flat array).\n        ", 0},
  {(char *)"ne", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_ne, 0, (char *)"\n        The electron density structure of the atmospheric model (flat array).\n        ", 0},
  {(char *)"vx", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vx, 0, (char *)"\n        The x-velocity structure of the atmospheric model (flat array).\n        ", 0},
  {(char *)"vy", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vy, 0, (char *)"\n        The y-velocity structure of the atmospheric model (flat array).\n        ", 0},
  {(char *)"vz", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vz, 0, (char *)"\n        The z-velocity structure of the atmospheric model (flat array).\n        ", 0},
  {(char *)"vlos", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vlos, 0, (char *)"\n        The z-velocity structure of the atmospheric model for 1D atmospheres\n        (flat array).\n        ", 0},
  {(char *)"vlosMu", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vlosMu, 0, (char *)"\n        The projected line of sight veloctity for each ray in the atmosphere.\n        ", 0},
  {(char *)"B", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_B, 0, (char *)"\n        The magnetic field structure for the atmosphereic model (flat array).\n        ", 0},
  {(char *)"gammaB", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_gammaB, 0, (char *)"\n        Magnetic field co-altitude.\n        ", 0},
  {(char *)"chiB", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_chiB, 0, (char *)"\n        Magnetic field azimuth\n        ", 0},
  {(char *)"cosGamma", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_cosGamma, 0, (char *)"\n        cosine of gammaB\n        ", 0},
  {(char *)"cos2chi", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_cos2chi, 0, (char *)"\n        cosine of 2*chi\n        ", 0},
  {(char *)"sin2chi", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_sin2chi, 0, (char *)"\n        sine of 2*chi\n        ", 0},
  {(char *)"vturb", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_vturb, 0, (char *)"\n        Microturbelent velocity structure of the atmospheric model.\n        ", 0},
  {(char *)"nHTot", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_nHTot, 0, (char *)"\n        Total hydrogen number density strucutre.\n        ", 0},
  {(char *)"muz", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_muz, 0, (char *)"\n        Cosine of angle with z-axis for each ray.\n        ", 0},
  {(char *)"muy", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_muy, 0, (char *)"\n        Cosine of angle with y-axis for each ray.\n        ", 0},
  {(char *)"mux", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_mux, 0, (char *)"\n        Cosine of angle with x-axis for each ray.\n        ", 0},
  {(char *)"wmu", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_wmu, 0, (char *)"\n        Integration weights for angular quadrature.\n        ", 0},
  {(char *)"pyAtmos", __pyx_getprop_11lightweaver_10LwCompiled_12LwAtmosphere_pyAtmos, __pyx_setprop_11lightweaver_10LwCompiled_12LwAtmosphere_pyAtmos, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwAtmosphere = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwAtmosphere", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwAtmosphere, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Storage for the C++ class, ensuring all of the arrays remained pinned\n    from python. Usually constructed by the Context.\n\n    Parameters\n    ----------\n    atmos : Atmosphere\n        The python atmosphere object.\n    Nwavelengths : int\n        The number of wavelengths used in the wavelength grid.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwAtmosphere, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwAtmosphere, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwAtmosphere, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwAtmosphere, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_12LwAtmosphere_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwAtmosphere, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider __pyx_vtable_11lightweaver_10LwCompiled_BackgroundProvider;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_BackgroundProvider(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)o);
  p->__pyx_vtab = __pyx_vtabptr_11lightweaver_10LwCompiled_BackgroundProvider;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_BackgroundProvider(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_BackgroundProvider[] = {
  {"compute_background", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_3compute_background, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_18BackgroundProvider_2compute_background},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_BackgroundProvider = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.BackgroundProvider", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_BackgroundProvider, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    Base class for implementing background packages. Inherit from this to\n    implement a new background scheme.\n\n    Parameters\n    ---------\n    eqPops : SpeciesStateTable\n        The populations of all species present in the simulation.\n    radSet : RadiativeSet\n        The atomic models and configuration data.\n    wavelength : np.ndarray\n        The array of wavelengths at which to compute the background.\n\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_BackgroundProvider, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_18BackgroundProvider_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_BackgroundProvider, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BasicBackground __pyx_vtable_11lightweaver_10LwCompiled_BasicBackground;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_BasicBackground(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *p;
  PyObject *o = __pyx_tp_new_11lightweaver_10LwCompiled_BackgroundProvider(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider*)__pyx_vtabptr_11lightweaver_10LwCompiled_BasicBackground;
  new((void*)&(p->bd)) BackgroundData();
  p->eqPops = Py_None; Py_INCREF(Py_None);
  p->radSet = Py_None; Py_INCREF(Py_None);
  p->chPops.data = NULL;
  p->chPops.memview = NULL;
  p->ohPops.data = NULL;
  p->ohPops.memview = NULL;
  p->h2Pops.data = NULL;
  p->h2Pops.memview = NULL;
  p->hMinusPops.data = NULL;
  p->hMinusPops.memview = NULL;
  p->hPops.data = NULL;
  p->hPops.memview = NULL;
  p->wavelength.data = NULL;
  p->wavelength.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_BasicBackground(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->bd);
  Py_CLEAR(p->eqPops);
  Py_CLEAR(p->radSet);
  __PYX_XDEC_MEMVIEW(&p->chPops, 1);
  __PYX_XDEC_MEMVIEW(&p->ohPops, 1);
  __PYX_XDEC_MEMVIEW(&p->h2Pops, 1);
  __PYX_XDEC_MEMVIEW(&p->hMinusPops, 1);
  __PYX_XDEC_MEMVIEW(&p->hPops, 1);
  __PYX_XDEC_MEMVIEW(&p->wavelength, 1);
  #if CYTHON_USE_TYPE_SLOTS
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_BackgroundProvider(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_BasicBackground(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)o;
  e = ((likely(__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider)) ? ((__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider->tp_traverse) ? __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11lightweaver_10LwCompiled_BasicBackground)); if (e) return e;
  if (p->eqPops) {
    e = (*v)(p->eqPops, a); if (e) return e;
  }
  if (p->radSet) {
    e = (*v)(p->radSet, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_BasicBackground(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *)o;
  if (likely(__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider)) { if (__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider->tp_clear) __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11lightweaver_10LwCompiled_BasicBackground);
  tmp = ((PyObject*)p->eqPops);
  p->eqPops = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->radSet);
  p->radSet = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_BasicBackground[] = {
  {"compute_background", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_3compute_background, METH_VARARGS|METH_KEYWORDS, 0},
  {"rayleigh_scattering", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_5rayleigh_scattering, METH_VARARGS|METH_KEYWORDS, 0},
  {"bf_opacities", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_7bf_opacities, METH_VARARGS|METH_KEYWORDS, 0},
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_9__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_11__setstate__, METH_O, 0},
  {"_reconstruct", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_13_reconstruct, METH_O, 0},
  {"__reduce__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_15__reduce__, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_BasicBackground = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.BasicBackground", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_BasicBackground, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Basic background implementation used by default in Lightweaver;\n    equivalent to RH's treatment i.e. H- opacity, CH, OH, H2 continuum\n    opacities if present, continua from all passive atoms in the\n    RadiativeSet, Thomson and Rayleigh scattering (from H and He).\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_BasicBackground, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_BasicBackground, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_BasicBackground, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_15BasicBackground_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_BasicBackground, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_FastBackground __pyx_vtable_11lightweaver_10LwCompiled_FastBackground;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_FastBackground(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *p;
  PyObject *o = __pyx_tp_new_11lightweaver_10LwCompiled_BackgroundProvider(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_11lightweaver_10LwCompiled_BackgroundProvider*)__pyx_vtabptr_11lightweaver_10LwCompiled_FastBackground;
  new((void*)&(p->bd)) BackgroundData();
  new((void*)&(p->ctx)) FastBackgroundContext();
  p->eqPops = Py_None; Py_INCREF(Py_None);
  p->radSet = Py_None; Py_INCREF(Py_None);
  p->chPops.data = NULL;
  p->chPops.memview = NULL;
  p->ohPops.data = NULL;
  p->ohPops.memview = NULL;
  p->h2Pops.data = NULL;
  p->h2Pops.memview = NULL;
  p->hMinusPops.data = NULL;
  p->hMinusPops.memview = NULL;
  p->hPops.data = NULL;
  p->hPops.memview = NULL;
  p->wavelength.data = NULL;
  p->wavelength.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_FastBackground(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->bd);
  __Pyx_call_destructor(p->ctx);
  Py_CLEAR(p->eqPops);
  Py_CLEAR(p->radSet);
  __PYX_XDEC_MEMVIEW(&p->chPops, 1);
  __PYX_XDEC_MEMVIEW(&p->ohPops, 1);
  __PYX_XDEC_MEMVIEW(&p->h2Pops, 1);
  __PYX_XDEC_MEMVIEW(&p->hMinusPops, 1);
  __PYX_XDEC_MEMVIEW(&p->hPops, 1);
  __PYX_XDEC_MEMVIEW(&p->wavelength, 1);
  #if CYTHON_USE_TYPE_SLOTS
  if (PyType_IS_GC(Py_TYPE(o)->tp_base))
  #endif
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_BackgroundProvider(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_FastBackground(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)o;
  e = ((likely(__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider)) ? ((__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider->tp_traverse) ? __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_11lightweaver_10LwCompiled_FastBackground)); if (e) return e;
  if (p->eqPops) {
    e = (*v)(p->eqPops, a); if (e) return e;
  }
  if (p->radSet) {
    e = (*v)(p->radSet, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_FastBackground(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground *)o;
  if (likely(__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider)) { if (__pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider->tp_clear) __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_11lightweaver_10LwCompiled_FastBackground);
  tmp = ((PyObject*)p->eqPops);
  p->eqPops = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->radSet);
  p->radSet = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_FastBackground[] = {
  {"compute_background", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_3compute_background, METH_VARARGS|METH_KEYWORDS, 0},
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_5__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_7__setstate__, METH_O, 0},
  {"_reconstruct", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_9_reconstruct, METH_O, 0},
  {"__reduce__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_14FastBackground_11__reduce__, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_FastBackground = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.FastBackground", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_FastBackground), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_FastBackground, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    A faster implementation (due to C++ implementations) of BasicBackground\n    supporting multiple threads.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_FastBackground, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_FastBackground, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_FastBackground, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_14FastBackground_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_FastBackground, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwBackground __pyx_vtable_11lightweaver_10LwCompiled_LwBackground;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwBackground(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)o);
  p->__pyx_vtab = __pyx_vtabptr_11lightweaver_10LwCompiled_LwBackground;
  new((void*)&(p->background)) Background();
  p->eqPops = Py_None; Py_INCREF(Py_None);
  p->radSet = Py_None; Py_INCREF(Py_None);
  p->provider = ((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)Py_None); Py_INCREF(Py_None);
  p->wavelength.data = NULL;
  p->wavelength.memview = NULL;
  p->chi.data = NULL;
  p->chi.memview = NULL;
  p->eta.data = NULL;
  p->eta.memview = NULL;
  p->sca.data = NULL;
  p->sca.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwBackground(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->background);
  Py_CLEAR(p->eqPops);
  Py_CLEAR(p->radSet);
  Py_CLEAR(p->provider);
  __PYX_XDEC_MEMVIEW(&p->wavelength, 1);
  __PYX_XDEC_MEMVIEW(&p->chi, 1);
  __PYX_XDEC_MEMVIEW(&p->eta, 1);
  __PYX_XDEC_MEMVIEW(&p->sca, 1);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwBackground(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)o;
  if (p->eqPops) {
    e = (*v)(p->eqPops, a); if (e) return e;
  }
  if (p->radSet) {
    e = (*v)(p->radSet, a); if (e) return e;
  }
  if (p->provider) {
    e = (*v)(((PyObject *)p->provider), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwBackground(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)o;
  tmp = ((PyObject*)p->eqPops);
  p->eqPops = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->radSet);
  p->radSet = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->provider);
  p->provider = ((struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwBackground_chi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3chi_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwBackground_eta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3eta_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwBackground_sca(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3sca_1__get__(o);
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwBackground[] = {
  {"update_background", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_3update_background, METH_O, __pyx_doc_11lightweaver_10LwCompiled_12LwBackground_2update_background},
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_5__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_7__setstate__, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_9__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwBackground_11__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwBackground[] = {
  {(char *)"chi", __pyx_getprop_11lightweaver_10LwCompiled_12LwBackground_chi, 0, (char *)"\n        The background opacity [Nlambda, Nspace].\n        ", 0},
  {(char *)"eta", __pyx_getprop_11lightweaver_10LwCompiled_12LwBackground_eta, 0, (char *)"\n        The background eta [Nlambda, Nspace].\n        ", 0},
  {(char *)"sca", __pyx_getprop_11lightweaver_10LwCompiled_12LwBackground_sca, 0, (char *)"\n        The background scattering [Nlambda, Nspace].\n        ", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwBackground = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwBackground", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwBackground, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Storage and driver for the background computations in Lightweaver. The\n    storage is allocated and managed by this class, before being passed to\n    C++ when necessary. This class is also responsible for calling the\n    BackgroundProvider instance used (by default FastBackground with one thread).\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwBackground, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwBackground, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwBackground, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwBackground, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_12LwBackground_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwBackground, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_RayleighScatterer __pyx_vtable_11lightweaver_10LwCompiled_RayleighScatterer;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_RayleighScatterer(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)o);
  p->__pyx_vtab = __pyx_vtabptr_11lightweaver_10LwCompiled_RayleighScatterer;
  p->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)Py_None); Py_INCREF(Py_None);
  p->atom = Py_None; Py_INCREF(Py_None);
  p->lambdaRed = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->pops.data = NULL;
  p->pops.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_RayleighScatterer(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *p = (struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->atmos);
  Py_CLEAR(p->atom);
  Py_CLEAR(p->lambdaRed);
  __PYX_XDEC_MEMVIEW(&p->pops, 1);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_RayleighScatterer(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *p = (struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)o;
  if (p->atmos) {
    e = (*v)(((PyObject *)p->atmos), a); if (e) return e;
  }
  if (p->atom) {
    e = (*v)(p->atom, a); if (e) return e;
  }
  if (p->lambdaRed) {
    e = (*v)(p->lambdaRed, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_RayleighScatterer(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *p = (struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *)o;
  tmp = ((PyObject*)p->atmos);
  p->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->atom);
  p->atom = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->lambdaRed);
  p->lambdaRed = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_RayleighScatterer[] = {
  {"scatter", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_3scatter, METH_VARARGS|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_5__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_7__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_RayleighScatterer = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.RayleighScatterer", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_RayleighScatterer, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    For computing Rayleigh scattering, used by BasicBackground.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_RayleighScatterer, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_RayleighScatterer, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_RayleighScatterer, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_17RayleighScatterer_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_RayleighScatterer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwTransition __pyx_vtable_11lightweaver_10LwCompiled_LwTransition;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwTransition(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)o);
  p->__pyx_vtab = __pyx_vtabptr_11lightweaver_10LwCompiled_LwTransition;
  new((void*)&(p->trans)) Transition();
  p->transModel = Py_None; Py_INCREF(Py_None);
  p->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)Py_None); Py_INCREF(Py_None);
  p->spect = Py_None; Py_INCREF(Py_None);
  p->atom = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)Py_None); Py_INCREF(Py_None);
  p->phi.data = NULL;
  p->phi.memview = NULL;
  p->phiQ.data = NULL;
  p->phiQ.memview = NULL;
  p->phiU.data = NULL;
  p->phiU.memview = NULL;
  p->phiV.data = NULL;
  p->phiV.memview = NULL;
  p->psiQ.data = NULL;
  p->psiQ.memview = NULL;
  p->psiU.data = NULL;
  p->psiU.memview = NULL;
  p->psiV.data = NULL;
  p->psiV.memview = NULL;
  p->wphi.data = NULL;
  p->wphi.memview = NULL;
  p->alpha.data = NULL;
  p->alpha.memview = NULL;
  p->wavelength.data = NULL;
  p->wavelength.memview = NULL;
  p->active.data = NULL;
  p->active.memview = NULL;
  p->Qelast.data = NULL;
  p->Qelast.memview = NULL;
  p->aDamp.data = NULL;
  p->aDamp.memview = NULL;
  p->rhoPrd.data = NULL;
  p->rhoPrd.memview = NULL;
  p->Rij.data = NULL;
  p->Rij.memview = NULL;
  p->Rji.data = NULL;
  p->Rji.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwTransition(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->trans);
  Py_CLEAR(p->transModel);
  Py_CLEAR(p->atmos);
  Py_CLEAR(p->spect);
  Py_CLEAR(p->atom);
  __PYX_XDEC_MEMVIEW(&p->phi, 1);
  __PYX_XDEC_MEMVIEW(&p->phiQ, 1);
  __PYX_XDEC_MEMVIEW(&p->phiU, 1);
  __PYX_XDEC_MEMVIEW(&p->phiV, 1);
  __PYX_XDEC_MEMVIEW(&p->psiQ, 1);
  __PYX_XDEC_MEMVIEW(&p->psiU, 1);
  __PYX_XDEC_MEMVIEW(&p->psiV, 1);
  __PYX_XDEC_MEMVIEW(&p->wphi, 1);
  __PYX_XDEC_MEMVIEW(&p->alpha, 1);
  __PYX_XDEC_MEMVIEW(&p->wavelength, 1);
  __PYX_XDEC_MEMVIEW(&p->active, 1);
  __PYX_XDEC_MEMVIEW(&p->Qelast, 1);
  __PYX_XDEC_MEMVIEW(&p->aDamp, 1);
  __PYX_XDEC_MEMVIEW(&p->rhoPrd, 1);
  __PYX_XDEC_MEMVIEW(&p->Rij, 1);
  __PYX_XDEC_MEMVIEW(&p->Rji, 1);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwTransition(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)o;
  if (p->transModel) {
    e = (*v)(p->transModel, a); if (e) return e;
  }
  if (p->atmos) {
    e = (*v)(((PyObject *)p->atmos), a); if (e) return e;
  }
  if (p->spect) {
    e = (*v)(p->spect, a); if (e) return e;
  }
  if (p->atom) {
    e = (*v)(((PyObject *)p->atom), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwTransition(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)o;
  tmp = ((PyObject*)p->transModel);
  p->transModel = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->atmos);
  p->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->spect);
  p->spect = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->atom);
  p->atom = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_jLevel(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6jLevel_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_iLevel(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6iLevel_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_j(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1j_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_i(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1i_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Aji(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Aji_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Bji(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Bji_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Bij(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Bij_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Nblue(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5Nblue_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_lambda0(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_7lambda0_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_wphi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4wphi_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_phi(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3phi_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_phiQ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiQ_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_phiU(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiU_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_phiV(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4phiV_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_psiQ(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiQ_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_psiU(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiU_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_psiV(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4psiV_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Rij(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Rij_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Rji(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3Rji_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_rhoPrd(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6rhoPrd_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_alpha(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5alpha_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_wavelength(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10wavelength_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_active(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6active_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Qelast(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_6Qelast_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_aDamp(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5aDamp_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_polarisable(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11polarisable_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4type_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_transModel(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_12LwTransition_transModel(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_10transModel_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_atom(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_12LwTransition_atom(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_4atom_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwTransition[] = {
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_3__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_5__setstate__, METH_O, 0},
  {"load_rates_prd_from_state", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_7load_rates_prd_from_state, METH_VARARGS|METH_KEYWORDS, 0},
  {"compute_phi", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_9compute_phi, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_12LwTransition_8compute_phi},
  {"compute_polarised_profiles", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_11compute_polarised_profiles, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_12LwTransition_10compute_polarised_profiles},
  {"recompute_gII", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_13recompute_gII, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_12LwTransition_12recompute_gII},
  {"uv", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_15uv, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_12LwTransition_14uv},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_17__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_12LwTransition_19__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwTransition[] = {
  {(char *)"jLevel", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_jLevel, 0, (char *)"\n        Access the upper level on the model object.\n        ", 0},
  {(char *)"iLevel", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_iLevel, 0, (char *)"\n        Access the lower level on the model object.\n        ", 0},
  {(char *)"j", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_j, 0, (char *)"\n        Index of upper level.\n        ", 0},
  {(char *)"i", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_i, 0, (char *)"\n        Index of lower level.\n        ", 0},
  {(char *)"Aji", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Aji, 0, (char *)"\n        Einstein A for transition.\n        ", 0},
  {(char *)"Bji", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Bji, 0, (char *)"\n        Einstein Bji for transition.\n        ", 0},
  {(char *)"Bij", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Bij, 0, (char *)"\n        Einstein Bij for transition.\n        ", 0},
  {(char *)"Nblue", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Nblue, 0, (char *)"\n        Index into global wavelength grid where this transition's local grid\n        starts.\n        ", 0},
  {(char *)"lambda0", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_lambda0, 0, (char *)"\n        Line rest wavelength or continuum edge wavelength.\n        ", 0},
  {(char *)"wphi", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_wphi, 0, (char *)"\n        Multiplicative inverse of integrated line profile at each location in\n        the atmosphere, used to ensure terms based on integration across the\n        entire line profile (e.g. in the Gamma matrix) are correctly\n        normalised.\n        ", 0},
  {(char *)"phi", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_phi, 0, (char *)"\n        Numerical line profile. AttributeError for continua.\n        ", 0},
  {(char *)"phiQ", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_phiQ, 0, (char *)0, 0},
  {(char *)"phiU", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_phiU, 0, (char *)0, 0},
  {(char *)"phiV", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_phiV, 0, (char *)0, 0},
  {(char *)"psiQ", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_psiQ, 0, (char *)0, 0},
  {(char *)"psiU", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_psiU, 0, (char *)0, 0},
  {(char *)"psiV", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_psiV, 0, (char *)0, 0},
  {(char *)"Rij", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Rij, 0, (char *)"\n        Upwards radiative rates for the transition throughout the atmosphere.\n        ", 0},
  {(char *)"Rji", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Rji, 0, (char *)"\n        Downward radiative rates for the transition throughout the atmosphere.\n        ", 0},
  {(char *)"rhoPrd", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_rhoPrd, 0, (char *)"\n        Ratio of emission to absorption profiles throughout the atmosphere,\n        in the case of PRD lines.\n        ", 0},
  {(char *)"alpha", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_alpha, 0, (char *)"\n        The wavelength-dependent cross-section for a continuum.\n        AttributeError for lines.\n        ", 0},
  {(char *)"wavelength", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_wavelength, 0, (char *)"\n        The transition's local wavelength grid.\n        ", 0},
  {(char *)"active", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_active, 0, (char *)"\n        The active wavelength mask for this transition.\n        ", 0},
  {(char *)"Qelast", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_Qelast, 0, (char *)"\n        The elastic collision rate for this transition in the atmosphere,\n        needed for PRD.\n        ", 0},
  {(char *)"aDamp", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_aDamp, 0, (char *)"\n        The Voigt damping parameter for this transition in the atmosphere.\n        ", 0},
  {(char *)"polarisable", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_polarisable, 0, (char *)"\n        The polarisability of the transition, based on model data.\n        ", 0},
  {(char *)"type", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_type, 0, (char *)"\n        The type of transition (Line or Continuum) as a str.\n        ", 0},
  {(char *)"transModel", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_transModel, __pyx_setprop_11lightweaver_10LwCompiled_12LwTransition_transModel, (char *)0, 0},
  {(char *)"atom", __pyx_getprop_11lightweaver_10LwCompiled_12LwTransition_atom, __pyx_setprop_11lightweaver_10LwCompiled_12LwTransition_atom, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwTransition = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwTransition", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwTransition, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Storage and access to transition data used by backend. Instantiated by\n    Context.\n\n    Parameters\n    ----------\n    trans : AtomicTransition\n        The transition model object.\n    compAtom : LwAtom\n        The computational atom to which this computational transition\n        belongs.\n    atmos : LwAtmosphere\n        The computational atmosphere in which this transition is to be used.\n    spect : SpectrumConfiguration\n        The spectral configuration of the simulation.\n\n    Attributes\n    ----------\n    transModel : AtomicTransition\n        The transition model object.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwTransition, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwTransition, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwTransition, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwTransition, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_12LwTransition_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwTransition, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwZeemanComponents(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *)o);
  new((void*)&(p->zc)) ZeemanComponents();
  p->alpha.data = NULL;
  p->alpha.memview = NULL;
  p->shift.data = NULL;
  p->shift.memview = NULL;
  p->strength.data = NULL;
  p->strength.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwZeemanComponents(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->zc);
  __PYX_XDEC_MEMVIEW(&p->alpha, 1);
  __PYX_XDEC_MEMVIEW(&p->shift, 1);
  __PYX_XDEC_MEMVIEW(&p->strength, 1);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwZeemanComponents[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_3__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_5__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwZeemanComponents", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwZeemanComponents), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwZeemanComponents, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    Stores the Zeeman components to be passed to the backend, only exists\n    transiently.\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwZeemanComponents, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_18LwZeemanComponents_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwZeemanComponents, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwAtom __pyx_vtable_11lightweaver_10LwCompiled_LwAtom;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwAtom(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)o);
  p->__pyx_vtab = __pyx_vtabptr_11lightweaver_10LwCompiled_LwAtom;
  new((void*)&(p->atom)) Atom();
  p->atomicModel = Py_None; Py_INCREF(Py_None);
  p->modelPops = Py_None; Py_INCREF(Py_None);
  p->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)Py_None); Py_INCREF(Py_None);
  p->eqPops = Py_None; Py_INCREF(Py_None);
  p->trans = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->fsIterSchemeProperties = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->vBroad.data = NULL;
  p->vBroad.memview = NULL;
  p->Gamma.data = NULL;
  p->Gamma.memview = NULL;
  p->C.data = NULL;
  p->C.memview = NULL;
  p->nTotal.data = NULL;
  p->nTotal.memview = NULL;
  p->nStar.data = NULL;
  p->nStar.memview = NULL;
  p->n.data = NULL;
  p->n.memview = NULL;
  p->stages.data = NULL;
  p->stages.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwAtom(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->atom);
  Py_CLEAR(p->atomicModel);
  Py_CLEAR(p->modelPops);
  Py_CLEAR(p->atmos);
  Py_CLEAR(p->eqPops);
  Py_CLEAR(p->trans);
  Py_CLEAR(p->fsIterSchemeProperties);
  __PYX_XDEC_MEMVIEW(&p->vBroad, 1);
  __PYX_XDEC_MEMVIEW(&p->Gamma, 1);
  __PYX_XDEC_MEMVIEW(&p->C, 1);
  __PYX_XDEC_MEMVIEW(&p->nTotal, 1);
  __PYX_XDEC_MEMVIEW(&p->nStar, 1);
  __PYX_XDEC_MEMVIEW(&p->n, 1);
  __PYX_XDEC_MEMVIEW(&p->stages, 1);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwAtom(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)o;
  if (p->atomicModel) {
    e = (*v)(p->atomicModel, a); if (e) return e;
  }
  if (p->modelPops) {
    e = (*v)(p->modelPops, a); if (e) return e;
  }
  if (p->atmos) {
    e = (*v)(((PyObject *)p->atmos), a); if (e) return e;
  }
  if (p->eqPops) {
    e = (*v)(p->eqPops, a); if (e) return e;
  }
  if (p->trans) {
    e = (*v)(p->trans, a); if (e) return e;
  }
  if (p->fsIterSchemeProperties) {
    e = (*v)(p->fsIterSchemeProperties, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwAtom(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *)o;
  tmp = ((PyObject*)p->atomicModel);
  p->atomicModel = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->modelPops);
  p->modelPops = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->atmos);
  p->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->eqPops);
  p->eqPops = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->trans);
  p->trans = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->fsIterSchemeProperties);
  p->fsIterSchemeProperties = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_Nlevel(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6Nlevel_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_Ntrans(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6Ntrans_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_vBroad(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6vBroad_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_Gamma(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5Gamma_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_C(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1C_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_nTotal(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6nTotal_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_n(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1n_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_nStar(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5nStar_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_stages(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_6stages_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_trans(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5trans_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_element(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_7element_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_atomicModel(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_6LwAtom_atomicModel(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11atomicModel_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_modelPops(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_6LwAtom_modelPops(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9modelPops_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwAtom[] = {
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_3__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_5__setstate__, METH_O, 0},
  {"load_pops_rates_prd_from_state", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_7load_pops_rates_prd_from_state, METH_VARARGS|METH_KEYWORDS, 0},
  {"compute_collisions", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_9compute_collisions, METH_VARARGS|METH_KEYWORDS, 0},
  {"set_pops_escape_probability", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_11set_pops_escape_probability, METH_VARARGS|METH_KEYWORDS, 0},
  {"setup_wavelength", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_13setup_wavelength, METH_O, __pyx_doc_11lightweaver_10LwCompiled_6LwAtom_12setup_wavelength},
  {"compute_profiles", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_15compute_profiles, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_6LwAtom_14compute_profiles},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_17__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_6LwAtom_19__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwAtom[] = {
  {(char *)"Nlevel", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_Nlevel, 0, (char *)"\n        The number of levels in the atomic model.\n        ", 0},
  {(char *)"Ntrans", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_Ntrans, 0, (char *)"\n        The number of transitions in the atomic model.\n        ", 0},
  {(char *)"vBroad", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_vBroad, 0, (char *)"\n        The broadening velocity associated with this atomic model in this\n        atmosphere.\n        ", 0},
  {(char *)"Gamma", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_Gamma, 0, (char *)"\n        The Gamma iteration matrix [Nlevel, Nlevel, Nspace].\n        ", 0},
  {(char *)"C", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_C, 0, (char *)"\n        The collisional rates matrix [Nlevel, Nlevel, Nspace]. This is filled\n        s.t. C_{ji} is C[i, j] to facilitate addition to Gamma.\n        ", 0},
  {(char *)"nTotal", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_nTotal, 0, (char *)"\n        The total number density of the model throughout the atmosphere.\n        ", 0},
  {(char *)"n", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_n, 0, (char *)"\n        The atomic populations (NLTE if in use) [Nlevel, Nspace].\n        ", 0},
  {(char *)"nStar", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_nStar, 0, (char *)"\n        The LTE populations for this species in this atmosphere [Nlevel, Nspace].\n        ", 0},
  {(char *)"stages", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_stages, 0, (char *)"\n        The ionisation stage of each level of this model.\n        ", 0},
  {(char *)"trans", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_trans, 0, (char *)"\n        List of computational transitions (LwTransition).\n        ", 0},
  {(char *)"element", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_element, 0, (char *)"\n        The element identifier for this atomic model.\n        ", 0},
  {(char *)"atomicModel", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_atomicModel, __pyx_setprop_11lightweaver_10LwCompiled_6LwAtom_atomicModel, (char *)0, 0},
  {(char *)"modelPops", __pyx_getprop_11lightweaver_10LwCompiled_6LwAtom_modelPops, __pyx_setprop_11lightweaver_10LwCompiled_6LwAtom_modelPops, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwAtom = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwAtom", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwAtom, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Storage and access to computational atomic data used by backend. Sets up\n    the computations transitions (LwTransition) present on the model.\n    Instantiated by Context.\n\n    Attributes\n    ----------\n    atomicModel : AtomicModel\n        The atomic model object associated with this computational atom.\n    modelPops : AtomicState\n        The population data for this species, in a python accessible form.\n\n    Parameters\n    ----------\n    atom : AtomicModel\n        The atomic model object associated with this computational atom.\n    atmos : LwAtmosphere\n        The computational atmosphere to be used in the simulation.\n    eqPops : SpeciesStateTable\n        The population of species present in the simulation.\n    spect : SpectrumConfiguration\n        The configuration of the spectral grids.\n    background : LwBackground\n        The background opacity terms, currently only used in the case of\n        escape probability initial solution.\n    detailed : bool, optional\n        Whether the atom is in detailed static or fully active mode (default:\n        False).\n    initSol : InitialSolution, optional\n        The initial solution to use for the atomic populations (default: LTE).\n    ngOptions : NgOptions, optional\n        The Ng acceleration options (default: None)\n    conserveCharge : bool, optional\n        Whether to conserve charge whilst setting populations from escape\n        probability (ignored otherwise) (default: False).\n    fsIterSchemeProperties : dict, optional\n        The properties of the FsIterScheme used as a dict, can be obtained from\n        the `FsIterSchemeManager`. Only necessary keys are boolean\n        `defaultWlaGijStorage` and `defaultPerAtomStorage` to determine\n        allocation of `wla`, `gij`, `eta`, `U`, and `chi` on the underlying\n        object. If not supplied, both of these default to True.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwAtom, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwAtom, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwAtom, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwAtom, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_6LwAtom_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwAtom, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwSpectrum(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)o);
  new((void*)&(p->spect)) Spectrum();
  p->wavelength.data = NULL;
  p->wavelength.memview = NULL;
  p->I.data = NULL;
  p->I.memview = NULL;
  p->J.data = NULL;
  p->J.memview = NULL;
  p->Quv.data = NULL;
  p->Quv.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwSpectrum(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  __Pyx_call_destructor(p->spect);
  __PYX_XDEC_MEMVIEW(&p->wavelength, 1);
  __PYX_XDEC_MEMVIEW(&p->I, 1);
  __PYX_XDEC_MEMVIEW(&p->J, 1);
  __PYX_XDEC_MEMVIEW(&p->Quv, 1);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_10LwSpectrum_wavelength(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_10wavelength_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_10LwSpectrum_I(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1I_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_10LwSpectrum_J(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1J_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_10LwSpectrum_Quv(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_3Quv_1__get__(o);
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwSpectrum[] = {
  {"setup_stokes", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_3setup_stokes, METH_NOARGS, 0},
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_5__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_7__setstate__, METH_O, 0},
  {"interp_J_from_state", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_9interp_J_from_state, METH_O, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwSpectrum[] = {
  {(char *)"wavelength", __pyx_getprop_11lightweaver_10LwCompiled_10LwSpectrum_wavelength, 0, (char *)"\n        Wavelength grid used [nm].\n        ", 0},
  {(char *)"I", __pyx_getprop_11lightweaver_10LwCompiled_10LwSpectrum_I, 0, (char *)"\n        Intensity [J/s/m2/sr/Hz], shape is squeeze([Nlambda, Nmu, Noutgoing]).\n        ", 0},
  {(char *)"J", __pyx_getprop_11lightweaver_10LwCompiled_10LwSpectrum_J, 0, (char *)"\n        Angle-averaged intensity [J/s/m2/sr/Hz], shape is squeeze([Nlambda, Nspace]).\n        ", 0},
  {(char *)"Quv", __pyx_getprop_11lightweaver_10LwCompiled_10LwSpectrum_Quv, 0, (char *)"\n        Q, U and V Stokes parameters [J/s/m2/sr/Hz], shape is squeeze([3,\n        Nlambda, Nmu, Noutgoing]).\n        ", 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwSpectrum = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwSpectrum", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwSpectrum, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  "\n    Storage and access to spectrum data used by backend. Instantiated by\n    Context.\n\n    Parameters\n    ----------\n    wavelength : np.ndarray\n        The wavelength grid used in the simulation [nm].\n    Nrays : int\n        The number of rays in the angular quadrature.\n    Nspace : int\n        The number of points in the atmospheric model.\n    Noutgoing : int\n        The number of outgoing point in the atmosphere, essentially\n        max(Ny*Nx, Nx, 1), (when used in an array these elements will be\n        ordered as a flattened array of [Ny, Nx]).\n    ", /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwSpectrum, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwSpectrum, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_10LwSpectrum_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwSpectrum, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_11lightweaver_10LwCompiled_LwContext __pyx_vtable_11lightweaver_10LwCompiled_LwContext;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwContext(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)o);
  p->__pyx_vtab = __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext;
  new((void*)&(p->ctx)) Context();
  p->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)Py_None); Py_INCREF(Py_None);
  p->spect = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)Py_None); Py_INCREF(Py_None);
  p->background = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)Py_None); Py_INCREF(Py_None);
  p->depthData = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)Py_None); Py_INCREF(Py_None);
  p->kwargs = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->eqPops = Py_None; Py_INCREF(Py_None);
  p->activeAtoms = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->detailedAtoms = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->crswCallback = Py_None; Py_INCREF(Py_None);
  p->crswDone = Py_None; Py_INCREF(Py_None);
  p->__dict__ = PyDict_New(); if (unlikely(!p->__dict__)) goto bad;return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwContext(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  if (p->__dict__) PyDict_Clear(p->__dict__);
  __Pyx_call_destructor(p->ctx);
  Py_CLEAR(p->atmos);
  Py_CLEAR(p->spect);
  Py_CLEAR(p->background);
  Py_CLEAR(p->depthData);
  Py_CLEAR(p->kwargs);
  Py_CLEAR(p->eqPops);
  Py_CLEAR(p->activeAtoms);
  Py_CLEAR(p->detailedAtoms);
  Py_CLEAR(p->crswCallback);
  Py_CLEAR(p->crswDone);
  Py_CLEAR(p->__dict__);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwContext(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)o;
  if (p->atmos) {
    e = (*v)(((PyObject *)p->atmos), a); if (e) return e;
  }
  if (p->spect) {
    e = (*v)(((PyObject *)p->spect), a); if (e) return e;
  }
  if (p->background) {
    e = (*v)(((PyObject *)p->background), a); if (e) return e;
  }
  if (p->depthData) {
    e = (*v)(((PyObject *)p->depthData), a); if (e) return e;
  }
  if (p->kwargs) {
    e = (*v)(p->kwargs, a); if (e) return e;
  }
  if (p->eqPops) {
    e = (*v)(p->eqPops, a); if (e) return e;
  }
  if (p->activeAtoms) {
    e = (*v)(p->activeAtoms, a); if (e) return e;
  }
  if (p->detailedAtoms) {
    e = (*v)(p->detailedAtoms, a); if (e) return e;
  }
  if (p->crswCallback) {
    e = (*v)(p->crswCallback, a); if (e) return e;
  }
  if (p->crswDone) {
    e = (*v)(p->crswDone, a); if (e) return e;
  }
  if (p->__dict__) {
    e = (*v)(p->__dict__, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwContext(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)o;
  tmp = ((PyObject*)p->atmos);
  p->atmos = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->spect);
  p->spect = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwSpectrum *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->background);
  p->background = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->depthData);
  p->depthData = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwDepthData *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->kwargs);
  p->kwargs = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->eqPops);
  p->eqPops = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->activeAtoms);
  p->activeAtoms = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->detailedAtoms);
  p->detailedAtoms = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->crswCallback);
  p->crswCallback = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->crswDone);
  p->crswDone = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__dict__);
  p->__dict__ = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx___dict__getter_11lightweaver_10LwCompiled_LwContext(PyObject *o, CYTHON_UNUSED void *x) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *)o;
  if (unlikely(!p->__dict__)){
    p->__dict__ = PyDict_New();
  }
  Py_XINCREF(p->__dict__);
  return p->__dict__;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_Nthreads(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8Nthreads_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_Nthreads(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8Nthreads_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_hprd(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_4hprd_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_activeAtoms(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_11activeAtoms_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_detailedAtoms(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_13detailedAtoms_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_spect(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_5spect_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_atmos(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_5atmos_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_background(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_10background_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_depthData(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_9depthData_1__get__(o);
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_kwargs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_kwargs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6kwargs_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_eqPops(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_eqPops(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_6eqPops_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_conserveCharge(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_conserveCharge(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_14conserveCharge_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_nrHOnly(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_nrHOnly(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_7nrHOnly_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_crswCallback(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_crswCallback(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_12crswCallback_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_9LwContext_crswDone(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_crswDone(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_9LwContext_8crswDone_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwContext[] = {
  {"__getstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_3__getstate__, METH_NOARGS, 0},
  {"__setstate__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_5__setstate__, METH_O, 0},
  {"set_formal_solver", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_7set_formal_solver, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_6set_formal_solver},
  {"set_interp_fn", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_9set_interp_fn, METH_O, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_8set_interp_fn},
  {"set_fs_iter_scheme", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_11set_fs_iter_scheme, METH_O, 0},
  {"get_fs_iter_scheme_properties", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_13get_fs_iter_scheme_properties, METH_O, 0},
  {"update_threads", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_15update_threads, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_14update_threads},
  {"compute_profiles", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_17compute_profiles, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_16compute_profiles},
  {"formal_sol_gamma_matrices", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_19formal_sol_gamma_matrices, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_18formal_sol_gamma_matrices},
  {"formal_sol", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_21formal_sol, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_20formal_sol},
  {"update_deps", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_23update_deps, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_22update_deps},
  {"rel_diff_pops", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_25rel_diff_pops, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_24rel_diff_pops},
  {"rel_diff_ng_accelerate", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_27rel_diff_ng_accelerate, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_26rel_diff_ng_accelerate},
  {"time_dep_update", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_29time_dep_update, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_28time_dep_update},
  {"time_dep_restore_prev_pops", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_31time_dep_restore_prev_pops, METH_O, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_30time_dep_restore_prev_pops},
  {"clear_ng", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_33clear_ng, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_32clear_ng},
  {"stat_equil", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_35stat_equil, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_34stat_equil},
  {"_nr_post_update_impl", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_37_nr_post_update_impl, METH_VARARGS|METH_KEYWORDS, 0},
  {"update_projections", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_39update_projections, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_38update_projections},
  {"setup_stokes", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_41setup_stokes, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_40setup_stokes},
  {"single_stokes_fs", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_43single_stokes_fs, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_42single_stokes_fs},
  {"prd_redistribute", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_45prd_redistribute, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_44prd_redistribute},
  {"update_hprd_coeffs", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_47update_hprd_coeffs, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_46update_hprd_coeffs},
  {"state_dict", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_49state_dict, METH_NOARGS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_48state_dict},
  {"construct_from_state_dict_with", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_51construct_from_state_dict_with, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_50construct_from_state_dict_with},
  {"compute_rays", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_53compute_rays, METH_VARARGS|METH_KEYWORDS, __pyx_doc_11lightweaver_10LwCompiled_9LwContext_52compute_rays},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_55__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_9LwContext_57__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwContext[] = {
  {(char *)"Nthreads", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_Nthreads, __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_Nthreads, (char *)"\n        The number of threads used by the formal solver. A new value can be\n        assigned to this, and the necessary support structures will be\n        automatically allocated.\n        ", 0},
  {(char *)"hprd", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_hprd, 0, (char *)"\n        Whether PRD calculations are using the Hybrid PRD mode.\n        ", 0},
  {(char *)"activeAtoms", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_activeAtoms, 0, (char *)"\n        All active computational atomic models (LwAtom).\n        ", 0},
  {(char *)"detailedAtoms", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_detailedAtoms, 0, (char *)"\n        All detailed static computational atomic models (LwAtom).\n        ", 0},
  {(char *)"spect", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_spect, 0, (char *)"\n        The spectrum storage object (LwSpectrum).\n        ", 0},
  {(char *)"atmos", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_atmos, 0, (char *)"\n        The atmospheric model storage object (LwAtmosphere).\n        ", 0},
  {(char *)"background", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_background, 0, (char *)"\n        The background storage object (LwBackground).\n        ", 0},
  {(char *)"depthData", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_depthData, 0, (char *)"\n        Configuration and storage for full depth-dependent data of large\n        parameters (LwDepthData).\n        ", 0},
  {(char *)"__dict__", __pyx___dict__getter_11lightweaver_10LwCompiled_LwContext, 0, (char *)0, 0},
  {(char *)"kwargs", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_kwargs, __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_kwargs, (char *)0, 0},
  {(char *)"eqPops", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_eqPops, __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_eqPops, (char *)0, 0},
  {(char *)"conserveCharge", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_conserveCharge, __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_conserveCharge, (char *)0, 0},
  {(char *)"nrHOnly", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_nrHOnly, __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_nrHOnly, (char *)0, 0},
  {(char *)"crswCallback", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_crswCallback, __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_crswCallback, (char *)0, 0},
  {(char *)"crswDone", __pyx_getprop_11lightweaver_10LwCompiled_9LwContext_crswDone, __pyx_setprop_11lightweaver_10LwCompiled_9LwContext_crswDone, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwContext = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwContext", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwContext, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Context that configures and drives the backend. Whilst the class is named\n    LwContext (to avoid cython collisions) it is exposed from the lightweaver\n    package as Context.\n\n    Attributes\n    ----------\n    kwargs : dict\n        A dictionary of all inputs provided to the context, stored as the\n        under the argument names to `__init__`.\n    eqPops : SpeciesStateTable\n        The populations of each species in the simulation.\n    conserveCharge : bool\n        Whether charge is being conserved in the calculations.\n    crswCallback : CrswIterator\n        The object controlling the value of the Collisional Radiative\n        Switching term.\n    crswDone : bool\n        Indicates whether CRSW is done (i.e. the parameter has reached 1).\n\n    Parameters\n    ----------\n    atmos : Atmosphere\n        The atmospheric structure object.\n    spect : SpectrumConfiguration\n        The configuration of wavelength grids and active atoms/transitions.\n    eqPops : SpeciesStateTable\n        The initial populations and storage for these populations during the\n        simulation.\n    ngOptions : NgOptions, optional\n        The parameters for Ng acceleration in the simulation (default: No\n        acceleration).\n    initSol : InitialSolution, optional\n        The starting solution for the population of all active species\n        (default: LTE).\n    conserveCharge : bool, optional\n        Whether to conserve charge in the simulation (default: False).\n    nrHOnly : bool, optional\n        Only include hydrogen in charge conservation calculations (default: False).\n    hprd : bool, optional\n        Whether to use the Hybrid PRD method to account for velocity shifts in\n        the atmosphere (if PRD is used otherwise, then it is angle-averaged).\n    crswCallback : CrswIterator, optional\n        An instance of CrswIterator (or derived thereof) to control\n        collisional radiative swtiching (default: None for UnityCrswIterator\n        i.e"". no CRSW).\n    Nthreads : int, optional\n        Number of threads to use in the computation of the formal solution,\n        default 1.\n    backgroundProvider : BackgroundProvider, optional\n        Implementation for the background, if non-standard. Must follow the\n        BackgroundProvider interface.\n    formalSolver : str, optional\n        Name of formalSolver registered with the FormalSolvers object.\n    interpFn : str, optional\n        Name of interpolation function to use in the multi-dimensional formal\n        solver. Must be registered with InterpFns.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwContext, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwContext, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwContext, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwContext, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  offsetof(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext, __dict__), /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_9LwContext_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwContext, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwFormalSolverManager(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)o);
  new((void*)&(p->manager)) FormalSolverManager();
  p->paths = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->names = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwFormalSolverManager(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->manager);
  Py_CLEAR(p->paths);
  Py_CLEAR(p->names);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwFormalSolverManager(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)o;
  if (p->paths) {
    e = (*v)(p->paths, a); if (e) return e;
  }
  if (p->names) {
    e = (*v)(p->names, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwFormalSolverManager(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager *)o;
  tmp = ((PyObject*)p->paths);
  p->paths = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->names);
  p->names = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_21LwFormalSolverManager_paths(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_21LwFormalSolverManager_paths(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5paths_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_21LwFormalSolverManager_names(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_21LwFormalSolverManager_names(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5names_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwFormalSolverManager[] = {
  {"load_fs_from_path", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_3load_fs_from_path, METH_O, __pyx_doc_11lightweaver_10LwCompiled_21LwFormalSolverManager_2load_fs_from_path},
  {"default_formal_solver", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_5default_formal_solver, METH_O, __pyx_doc_11lightweaver_10LwCompiled_21LwFormalSolverManager_4default_formal_solver},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwFormalSolverManager[] = {
  {(char *)"paths", __pyx_getprop_11lightweaver_10LwCompiled_21LwFormalSolverManager_paths, __pyx_setprop_11lightweaver_10LwCompiled_21LwFormalSolverManager_paths, (char *)0, 0},
  {(char *)"names", __pyx_getprop_11lightweaver_10LwCompiled_21LwFormalSolverManager_names, __pyx_setprop_11lightweaver_10LwCompiled_21LwFormalSolverManager_names, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwFormalSolverManager", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwFormalSolverManager), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwFormalSolverManager, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Storage and enumeration of the different formal solvers loaded for use in\n    Lightweaver. There is no need to instantiate this class directly, instead\n    there is a single instance of it instantiated as `FormalSolvers`, which\n    should be used.\n\n    Attributes\n    ----------\n    paths : list of str\n        The currently loaded paths.\n    names : list of str\n        The names of all available formal solvers, each of which can be\n        passed to the Context constructor.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwFormalSolverManager, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwFormalSolverManager, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwFormalSolverManager, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwFormalSolverManager, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_21LwFormalSolverManager_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwFormalSolverManager, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwInterpFnManager(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)o);
  new((void*)&(p->manager)) InterpFnManager();
  p->paths = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->names = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwInterpFnManager(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->manager);
  Py_CLEAR(p->paths);
  Py_CLEAR(p->names);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwInterpFnManager(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)o;
  if (p->paths) {
    e = (*v)(p->paths, a); if (e) return e;
  }
  if (p->names) {
    e = (*v)(p->names, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwInterpFnManager(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager *)o;
  tmp = ((PyObject*)p->paths);
  p->paths = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->names);
  p->names = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_17LwInterpFnManager_paths(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_17LwInterpFnManager_paths(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5paths_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_17LwInterpFnManager_names(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_17LwInterpFnManager_names(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5names_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwInterpFnManager[] = {
  {"load_interp_fn_from_path", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_3load_interp_fn_from_path, METH_O, __pyx_doc_11lightweaver_10LwCompiled_17LwInterpFnManager_2load_interp_fn_from_path},
  {"default_interp", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_5default_interp, METH_O, __pyx_doc_11lightweaver_10LwCompiled_17LwInterpFnManager_4default_interp},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_7__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_9__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwInterpFnManager[] = {
  {(char *)"paths", __pyx_getprop_11lightweaver_10LwCompiled_17LwInterpFnManager_paths, __pyx_setprop_11lightweaver_10LwCompiled_17LwInterpFnManager_paths, (char *)0, 0},
  {(char *)"names", __pyx_getprop_11lightweaver_10LwCompiled_17LwInterpFnManager_names, __pyx_setprop_11lightweaver_10LwCompiled_17LwInterpFnManager_names, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwInterpFnManager", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwInterpFnManager), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwInterpFnManager, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "\n    Storage and enumeration of the different interpolation functions for\n    multi-dimensional formal solvers loaded for use in Lightweaver. There is\n    no need to instantiate this class directly, instead there is a single\n    instance of it instantiated as `InterpFns`, which should be used.\n\n    Attributes\n    ----------\n    paths : list of str\n        The currently loaded paths.\n    names : list of str\n        The names of all available interpolation functions, each of which can\n        be passed to the Context constructor.\n    ", /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwInterpFnManager, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwInterpFnManager, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwInterpFnManager, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwInterpFnManager, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_17LwInterpFnManager_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwInterpFnManager, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled_LwFsIterationManager(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)o);
  new((void*)&(p->manager)) FsIterationFnsManager();
  p->paths = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->names = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwFsIterationManager(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->manager);
  Py_CLEAR(p->paths);
  Py_CLEAR(p->names);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled_LwFsIterationManager(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)o;
  if (p->paths) {
    e = (*v)(p->paths, a); if (e) return e;
  }
  if (p->names) {
    e = (*v)(p->names, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled_LwFsIterationManager(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *p = (struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager *)o;
  tmp = ((PyObject*)p->paths);
  p->paths = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->names);
  p->names = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_20LwFsIterationManager_paths(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_20LwFsIterationManager_paths(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5paths_5__del__(o);
  }
}

static PyObject *__pyx_getprop_11lightweaver_10LwCompiled_20LwFsIterationManager_names(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_1__get__(o);
}

static int __pyx_setprop_11lightweaver_10LwCompiled_20LwFsIterationManager_names(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_3__set__(o, v);
  }
  else {
    return __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5names_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_11lightweaver_10LwCompiled_LwFsIterationManager[] = {
  {"load_fns_from_path", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_3load_fns_from_path, METH_O, 0},
  {"scheme_properties", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_5scheme_properties, METH_O, 0},
  {"default_scheme", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_7default_scheme, METH_NOARGS, 0},
  {"default_scheme_name", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_9default_scheme_name, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_11__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_13__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_11lightweaver_10LwCompiled_LwFsIterationManager[] = {
  {(char *)"paths", __pyx_getprop_11lightweaver_10LwCompiled_20LwFsIterationManager_paths, __pyx_setprop_11lightweaver_10LwCompiled_20LwFsIterationManager_paths, (char *)0, 0},
  {(char *)"names", __pyx_getprop_11lightweaver_10LwCompiled_20LwFsIterationManager_names, __pyx_setprop_11lightweaver_10LwCompiled_20LwFsIterationManager_names, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.LwFsIterationManager", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled_LwFsIterationManager), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled_LwFsIterationManager, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled_LwFsIterationManager, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled_LwFsIterationManager, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_11lightweaver_10LwCompiled_LwFsIterationManager, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_11lightweaver_10LwCompiled_LwFsIterationManager, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_pw_11lightweaver_10LwCompiled_20LwFsIterationManager_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled_LwFsIterationManager, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *__pyx_freelist_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi[8];
static int __pyx_freecount_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi = 0;

static PyObject *__pyx_tp_new_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  if (CYTHON_COMPILING_IN_CPYTHON && likely((__pyx_freecount_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi > 0) & (t->tp_basicsize == sizeof(struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi)))) {
    o = (PyObject*)__pyx_freelist_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi[--__pyx_freecount_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi];
    memset(o, 0, sizeof(struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  return o;
}

static void __pyx_tp_dealloc_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi(PyObject *o) {
  struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *p = (struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *)o;
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_self);
  if (CYTHON_COMPILING_IN_CPYTHON && ((__pyx_freecount_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi < 8) & (Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi)))) {
    __pyx_freelist_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi[__pyx_freecount_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi++] = ((struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *p = (struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *)o;
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *p = (struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi *)o;
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyTypeObject __pyx_type_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.__pyx_scope_struct__compute_phi", /*tp_name*/
  sizeof(struct __pyx_obj_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi, /*tp_traverse*/
  __pyx_tp_clear_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_array __pyx_vtable_array;

static PyObject *__pyx_tp_new_array(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_array_obj *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_array_obj *)o);
  p->__pyx_vtab = __pyx_vtabptr_array;
  p->mode = ((PyObject*)Py_None); Py_INCREF(Py_None);
  p->_format = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_array___cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_array(PyObject *o) {
  struct __pyx_array_obj *p = (struct __pyx_array_obj *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && (!PyType_IS_GC(Py_TYPE(o)) || !_PyGC_FINALIZED(o))) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_array___dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->mode);
  Py_CLEAR(p->_format);
  (*Py_TYPE(o)->tp_free)(o);
}
static PyObject *__pyx_sq_item_array(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_array(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_array___setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyObject *__pyx_tp_getattro_array(PyObject *o, PyObject *n) {
  PyObject *v = __Pyx_PyObject_GenericGetAttr(o, n);
  if (!v && PyErr_ExceptionMatches(PyExc_AttributeError)) {
    PyErr_Clear();
    v = __pyx_array___getattr__(o, n);
  }
  return v;
}

static PyObject *__pyx_getprop___pyx_array_memview(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_5array_7memview_1__get__(o);
}

static PyMethodDef __pyx_methods_array[] = {
  {"__getattr__", (PyCFunction)__pyx_array___getattr__, METH_O|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw___pyx_array_1__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw___pyx_array_3__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_array[] = {
  {(char *)"memview", __pyx_getprop___pyx_array_memview, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_array = {
  __pyx_array___len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_array, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_array = {
  __pyx_array___len__, /*mp_length*/
  __pyx_array___getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_array, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_array = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  __pyx_array_getbuffer, /*bf_getbuffer*/
  0, /*bf_releasebuffer*/
};

static PyTypeObject __pyx_type___pyx_array = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.array", /*tp_name*/
  sizeof(struct __pyx_array_obj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_array, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_array, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_array, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  __pyx_tp_getattro_array, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_array, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_array, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_array, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_array, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static PyObject *__pyx_tp_new_Enum(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_MemviewEnum_obj *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_MemviewEnum_obj *)o);
  p->name = Py_None; Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_Enum(PyObject *o) {
  struct __pyx_MemviewEnum_obj *p = (struct __pyx_MemviewEnum_obj *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->name);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_Enum(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_MemviewEnum_obj *p = (struct __pyx_MemviewEnum_obj *)o;
  if (p->name) {
    e = (*v)(p->name, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_Enum(PyObject *o) {
  PyObject* tmp;
  struct __pyx_MemviewEnum_obj *p = (struct __pyx_MemviewEnum_obj *)o;
  tmp = ((PyObject*)p->name);
  p->name = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_Enum[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw___pyx_MemviewEnum_1__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw___pyx_MemviewEnum_3__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static PyTypeObject __pyx_type___pyx_MemviewEnum = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.Enum", /*tp_name*/
  sizeof(struct __pyx_MemviewEnum_obj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_Enum, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_MemviewEnum___repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_Enum, /*tp_traverse*/
  __pyx_tp_clear_Enum, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_Enum, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  __pyx_MemviewEnum___init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_Enum, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct_memoryview __pyx_vtable_memoryview;

static PyObject *__pyx_tp_new_memoryview(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_memoryview_obj *p;
  PyObject *o;
  if (likely((t->tp_flags & Py_TPFLAGS_IS_ABSTRACT) == 0)) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_memoryview_obj *)o);
  p->__pyx_vtab = __pyx_vtabptr_memoryview;
  p->obj = Py_None; Py_INCREF(Py_None);
  p->_size = Py_None; Py_INCREF(Py_None);
  p->_array_interface = Py_None; Py_INCREF(Py_None);
  p->view.obj = NULL;
  if (unlikely(__pyx_memoryview___cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_memoryview(PyObject *o) {
  struct __pyx_memoryview_obj *p = (struct __pyx_memoryview_obj *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_memoryview___dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->obj);
  Py_CLEAR(p->_size);
  Py_CLEAR(p->_array_interface);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_memoryview(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_memoryview_obj *p = (struct __pyx_memoryview_obj *)o;
  if (p->obj) {
    e = (*v)(p->obj, a); if (e) return e;
  }
  if (p->_size) {
    e = (*v)(p->_size, a); if (e) return e;
  }
  if (p->_array_interface) {
    e = (*v)(p->_array_interface, a); if (e) return e;
  }
  if (p->view.obj) {
    e = (*v)(p->view.obj, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_memoryview(PyObject *o) {
  PyObject* tmp;
  struct __pyx_memoryview_obj *p = (struct __pyx_memoryview_obj *)o;
  tmp = ((PyObject*)p->obj);
  p->obj = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_size);
  p->_size = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_array_interface);
  p->_array_interface = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  Py_CLEAR(p->view.obj);
  return 0;
}
static PyObject *__pyx_sq_item_memoryview(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = Py_TYPE(o)->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_memoryview(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_memoryview___setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %.200s", Py_TYPE(o)->tp_name);
    return -1;
  }
}

static PyObject *__pyx_getprop___pyx_memoryview_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_1T_1__get__(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_base(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_4base_1__get__(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_shape(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_5shape_1__get__(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_strides(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_7strides_1__get__(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_suboffsets(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_10suboffsets_1__get__(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_ndim(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_4ndim_1__get__(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_itemsize(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_8itemsize_1__get__(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_nbytes(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_6nbytes_1__get__(o);
}

static PyObject *__pyx_getprop___pyx_memoryview_size(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_10memoryview_4size_1__get__(o);
}

static PyMethodDef __pyx_methods_memoryview[] = {
  {"is_c_contig", (PyCFunction)__pyx_memoryview_is_c_contig, METH_NOARGS, 0},
  {"is_f_contig", (PyCFunction)__pyx_memoryview_is_f_contig, METH_NOARGS, 0},
  {"copy", (PyCFunction)__pyx_memoryview_copy, METH_NOARGS, 0},
  {"copy_fortran", (PyCFunction)__pyx_memoryview_copy_fortran, METH_NOARGS, 0},
  {"__reduce_cython__", (PyCFunction)__pyx_pw___pyx_memoryview_1__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw___pyx_memoryview_3__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_memoryview[] = {
  {(char *)"T", __pyx_getprop___pyx_memoryview_T, 0, (char *)0, 0},
  {(char *)"base", __pyx_getprop___pyx_memoryview_base, 0, (char *)0, 0},
  {(char *)"shape", __pyx_getprop___pyx_memoryview_shape, 0, (char *)0, 0},
  {(char *)"strides", __pyx_getprop___pyx_memoryview_strides, 0, (char *)0, 0},
  {(char *)"suboffsets", __pyx_getprop___pyx_memoryview_suboffsets, 0, (char *)0, 0},
  {(char *)"ndim", __pyx_getprop___pyx_memoryview_ndim, 0, (char *)0, 0},
  {(char *)"itemsize", __pyx_getprop___pyx_memoryview_itemsize, 0, (char *)0, 0},
  {(char *)"nbytes", __pyx_getprop___pyx_memoryview_nbytes, 0, (char *)0, 0},
  {(char *)"size", __pyx_getprop___pyx_memoryview_size, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PySequenceMethods __pyx_tp_as_sequence_memoryview = {
  __pyx_memoryview___len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_memoryview, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_memoryview = {
  __pyx_memoryview___len__, /*mp_length*/
  __pyx_memoryview___getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_memoryview, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_memoryview = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  __pyx_memoryview_getbuffer, /*bf_getbuffer*/
  0, /*bf_releasebuffer*/
};

static PyTypeObject __pyx_type___pyx_memoryview = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled.memoryview", /*tp_name*/
  sizeof(struct __pyx_memoryview_obj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_memoryview, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_memoryview___repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_memoryview, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_memoryview, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_memoryview___str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_memoryview, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_memoryview, /*tp_traverse*/
  __pyx_tp_clear_memoryview, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_memoryview, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_memoryview, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_memoryview, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};
static struct __pyx_vtabstruct__memoryviewslice __pyx_vtable__memoryviewslice;

static PyObject *__pyx_tp_new__memoryviewslice(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_memoryviewslice_obj *p;
  PyObject *o = __pyx_tp_new_memoryview(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_memoryviewslice_obj *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_memoryview*)__pyx_vtabptr__memoryviewslice;
  p->from_object = Py_None; Py_INCREF(Py_None);
  p->from_slice.memview = NULL;
  return o;
}

static void __pyx_tp_dealloc__memoryviewslice(PyObject *o) {
  struct __pyx_memoryviewslice_obj *p = (struct __pyx_memoryviewslice_obj *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely(PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE) && Py_TYPE(o)->tp_finalize) && !_PyGC_FINALIZED(o)) {
    if (PyObject_CallFinalizerFromDealloc(o)) return;
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_memoryviewslice___dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->from_object);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_memoryview(o);
}

static int __pyx_tp_traverse__memoryviewslice(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_memoryviewslice_obj *p = (struct __pyx_memoryviewslice_obj *)o;
  e = __pyx_tp_traverse_memoryview(o, v, a); if (e) return e;
  if (p->from_object) {
    e = (*v)(p->from_object, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear__memoryviewslice(PyObject *o) {
  PyObject* tmp;
  struct __pyx_memoryviewslice_obj *p = (struct __pyx_memoryviewslice_obj *)o;
  __pyx_tp_clear_memoryview(o);
  tmp = ((PyObject*)p->from_object);
  p->from_object = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  __PYX_XDEC_MEMVIEW(&p->from_slice, 1);
  return 0;
}

static PyObject *__pyx_getprop___pyx_memoryviewslice_base(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_15View_dot_MemoryView_16_memoryviewslice_4base_1__get__(o);
}

static PyMethodDef __pyx_methods__memoryviewslice[] = {
  {"__reduce_cython__", (PyCFunction)__pyx_pw___pyx_memoryviewslice_1__reduce_cython__, METH_NOARGS, 0},
  {"__setstate_cython__", (PyCFunction)__pyx_pw___pyx_memoryviewslice_3__setstate_cython__, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets__memoryviewslice[] = {
  {(char *)"base", __pyx_getprop___pyx_memoryviewslice_base, 0, (char *)0, 0},
  {0, 0, 0, 0, 0}
};

static PyTypeObject __pyx_type___pyx_memoryviewslice = {
  PyVarObject_HEAD_INIT(0, 0)
  "lightweaver.LwCompiled._memoryviewslice", /*tp_name*/
  sizeof(struct __pyx_memoryviewslice_obj), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc__memoryviewslice, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_memoryview___repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY
  __pyx_memoryview___str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  "Internal class for passing memoryview slices to Python", /*tp_doc*/
  __pyx_tp_traverse__memoryviewslice, /*tp_traverse*/
  __pyx_tp_clear__memoryviewslice, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods__memoryviewslice, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets__memoryviewslice, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new__memoryviewslice, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  0, /*tp_finalize*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
  0, /*tp_print*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
  0, /*tp_pypy_flags*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_LwCompiled(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_LwCompiled},
  {0, NULL}
};
#endif

static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    "LwCompiled",
    0, /* m_doc */
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    0, /* m_size */
  #else
    -1, /* m_size */
  #endif
    __pyx_methods /* m_methods */,
  #if CYTHON_PEP489_MULTI_PHASE_INIT
    __pyx_moduledef_slots, /* m_slots */
  #else
    NULL, /* m_reload */
  #endif
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_u_, __pyx_k_, sizeof(__pyx_k_), 0, 1, 0, 0},
  {&__pyx_n_s_ASCII, __pyx_k_ASCII, sizeof(__pyx_k_ASCII), 0, 0, 1, 1},
  {&__pyx_n_s_Aji, __pyx_k_Aji, sizeof(__pyx_k_Aji), 0, 0, 1, 1},
  {&__pyx_kp_u_Argument_is_not_a_BoundaryCondit, __pyx_k_Argument_is_not_a_BoundaryCondit, sizeof(__pyx_k_Argument_is_not_a_BoundaryCondit), 0, 1, 0, 0},
  {&__pyx_n_s_AtomicLine, __pyx_k_AtomicLine, sizeof(__pyx_k_AtomicLine), 0, 0, 1, 1},
  {&__pyx_n_s_AttributeError, __pyx_k_AttributeError, sizeof(__pyx_k_AttributeError), 0, 0, 1, 1},
  {&__pyx_n_s_B, __pyx_k_B, sizeof(__pyx_k_B), 0, 0, 1, 1},
  {&__pyx_n_u_B, __pyx_k_B, sizeof(__pyx_k_B), 0, 1, 0, 1},
  {&__pyx_kp_u_BC_returned_from_python_does_not, __pyx_k_BC_returned_from_python_does_not, sizeof(__pyx_k_BC_returned_from_python_does_not), 0, 1, 0, 0},
  {&__pyx_n_s_BC_to_enum, __pyx_k_BC_to_enum, sizeof(__pyx_k_BC_to_enum), 0, 0, 1, 1},
  {&__pyx_n_s_BackgroundProvider, __pyx_k_BackgroundProvider, sizeof(__pyx_k_BackgroundProvider), 0, 0, 1, 1},
  {&__pyx_n_s_BasicBackground, __pyx_k_BasicBackground, sizeof(__pyx_k_BasicBackground), 0, 0, 1, 1},
  {&__pyx_n_s_Bij, __pyx_k_Bij, sizeof(__pyx_k_Bij), 0, 0, 1, 1},
  {&__pyx_n_s_Bji, __pyx_k_Bji, sizeof(__pyx_k_Bji), 0, 0, 1, 1},
  {&__pyx_n_s_BoundaryCondition, __pyx_k_BoundaryCondition, sizeof(__pyx_k_BoundaryCondition), 0, 0, 1, 1},
  {&__pyx_kp_s_Buffer_view_does_not_expose_stri, __pyx_k_Buffer_view_does_not_expose_stri, sizeof(__pyx_k_Buffer_view_does_not_expose_stri), 0, 0, 1, 0},
  {&__pyx_n_u_C, __pyx_k_C, sizeof(__pyx_k_C), 0, 1, 0, 1},
  {&__pyx_n_u_CH, __pyx_k_CH, sizeof(__pyx_k_CH), 0, 1, 0, 1},
  {&__pyx_n_s_CLight, __pyx_k_CLight, sizeof(__pyx_k_CLight), 0, 0, 1, 1},
  {&__pyx_kp_s_Can_only_create_a_buffer_that_is, __pyx_k_Can_only_create_a_buffer_that_is, sizeof(__pyx_k_Can_only_create_a_buffer_that_is), 0, 0, 1, 0},
  {&__pyx_kp_s_Cannot_assign_to_read_only_memor, __pyx_k_Cannot_assign_to_read_only_memor, sizeof(__pyx_k_Cannot_assign_to_read_only_memor), 0, 0, 1, 0},
  {&__pyx_kp_s_Cannot_create_writable_memory_vi, __pyx_k_Cannot_create_writable_memory_vi, sizeof(__pyx_k_Cannot_create_writable_memory_vi), 0, 0, 1, 0},
  {&__pyx_kp_s_Cannot_index_with_type_s, __pyx_k_Cannot_index_with_type_s, sizeof(__pyx_k_Cannot_index_with_type_s), 0, 0, 1, 0},
  {&__pyx_n_s_Const, __pyx_k_Const, sizeof(__pyx_k_Const), 0, 0, 1, 1},
  {&__pyx_n_u_Continuum, __pyx_k_Continuum, sizeof(__pyx_k_Continuum), 0, 1, 0, 1},
  {&__pyx_n_s_DeprecationWarning, __pyx_k_DeprecationWarning, sizeof(__pyx_k_DeprecationWarning), 0, 0, 1, 1},
  {&__pyx_kp_u_Dictionary_keys_for_ExtraParams, __pyx_k_Dictionary_keys_for_ExtraParams, sizeof(__pyx_k_Dictionary_keys_for_ExtraParams), 0, 1, 0, 0},
  {&__pyx_n_s_ERydberg, __pyx_k_ERydberg, sizeof(__pyx_k_ERydberg), 0, 0, 1, 1},
  {&__pyx_n_s_Ellipsis, __pyx_k_Ellipsis, sizeof(__pyx_k_Ellipsis), 0, 0, 1, 1},
  {&__pyx_kp_s_Empty_shape_tuple_for_cython_arr, __pyx_k_Empty_shape_tuple_for_cython_arr, sizeof(__pyx_k_Empty_shape_tuple_for_cython_arr), 0, 0, 1, 0},
  {&__pyx_n_s_Enum, __pyx_k_Enum, sizeof(__pyx_k_Enum), 0, 0, 1, 1},
  {&__pyx_n_s_Epsilon0, __pyx_k_Epsilon0, sizeof(__pyx_k_Epsilon0), 0, 0, 1, 1},
  {&__pyx_n_s_EscapeProbability, __pyx_k_EscapeProbability, sizeof(__pyx_k_EscapeProbability), 0, 0, 1, 1},
  {&__pyx_kp_u_Escape_probability_didn_t_conver, __pyx_k_Escape_probability_didn_t_conver, sizeof(__pyx_k_Escape_probability_didn_t_conver), 0, 1, 0, 0},
  {&__pyx_n_s_ExplodingMatrixError, __pyx_k_ExplodingMatrixError, sizeof(__pyx_k_ExplodingMatrixError), 0, 0, 1, 1},
  {&__pyx_kp_u_Failed_to_load_Formal_Solver_fro, __pyx_k_Failed_to_load_Formal_Solver_fro, sizeof(__pyx_k_Failed_to_load_Formal_Solver_fro), 0, 1, 0, 0},
  {&__pyx_kp_u_Failed_to_load_interpolation_fun, __pyx_k_Failed_to_load_interpolation_fun, sizeof(__pyx_k_Failed_to_load_interpolation_fun), 0, 1, 0, 0},
  {&__pyx_kp_u_Failed_to_load_iteration_scheme, __pyx_k_Failed_to_load_iteration_scheme, sizeof(__pyx_k_Failed_to_load_iteration_scheme), 0, 1, 0, 0},
  {&__pyx_n_s_FastBackground, __pyx_k_FastBackground, sizeof(__pyx_k_FastBackground), 0, 0, 1, 1},
  {&__pyx_n_u_FormalSolver1d, __pyx_k_FormalSolver1d, sizeof(__pyx_k_FormalSolver1d), 0, 1, 0, 1},
  {&__pyx_n_u_FormalSolver2d, __pyx_k_FormalSolver2d, sizeof(__pyx_k_FormalSolver2d), 0, 1, 0, 1},
  {&__pyx_n_s_FormalSolvers, __pyx_k_FormalSolvers, sizeof(__pyx_k_FormalSolvers), 0, 0, 1, 1},
  {&__pyx_n_s_FsIterationSchemes, __pyx_k_FsIterationSchemes, sizeof(__pyx_k_FsIterationSchemes), 0, 0, 1, 1},
  {&__pyx_n_u_Gamma, __pyx_k_Gamma, sizeof(__pyx_k_Gamma), 0, 1, 0, 1},
  {&__pyx_kp_u_Got_array_with_type, __pyx_k_Got_array_with_type, sizeof(__pyx_k_Got_array_with_type), 0, 1, 0, 0},
  {&__pyx_kp_u_H, __pyx_k_H, sizeof(__pyx_k_H), 0, 1, 0, 0},
  {&__pyx_n_u_H2, __pyx_k_H2, sizeof(__pyx_k_H2), 0, 1, 0, 1},
  {&__pyx_n_s_HC, __pyx_k_HC, sizeof(__pyx_k_HC), 0, 0, 1, 1},
  {&__pyx_n_s_HPlanck, __pyx_k_HPlanck, sizeof(__pyx_k_HPlanck), 0, 0, 1, 1},
  {&__pyx_n_u_H_2, __pyx_k_H_2, sizeof(__pyx_k_H_2), 0, 1, 0, 1},
  {&__pyx_n_u_He, __pyx_k_He, sizeof(__pyx_k_He), 0, 1, 0, 1},
  {&__pyx_n_u_I, __pyx_k_I, sizeof(__pyx_k_I), 0, 1, 0, 1},
  {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_k_Incompatible_checksums_0x_x_vs_0, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_2, __pyx_k_Incompatible_checksums_0x_x_vs_0_2, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_2), 0, 0, 1, 0},
  {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0_3, __pyx_k_Incompatible_checksums_0x_x_vs_0_3, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0_3), 0, 0, 1, 0},
  {&__pyx_n_s_IndexError, __pyx_k_IndexError, sizeof(__pyx_k_IndexError), 0, 0, 1, 1},
  {&__pyx_kp_s_Indirect_dimensions_not_supporte, __pyx_k_Indirect_dimensions_not_supporte, sizeof(__pyx_k_Indirect_dimensions_not_supporte), 0, 0, 1, 0},
  {&__pyx_n_s_InitialSolution, __pyx_k_InitialSolution, sizeof(__pyx_k_InitialSolution), 0, 0, 1, 1},
  {&__pyx_n_s_InterpFns, __pyx_k_InterpFns, sizeof(__pyx_k_InterpFns), 0, 0, 1, 1},
  {&__pyx_kp_s_Invalid_mode_expected_c_or_fortr, __pyx_k_Invalid_mode_expected_c_or_fortr, sizeof(__pyx_k_Invalid_mode_expected_c_or_fortr), 0, 0, 1, 0},
  {&__pyx_kp_s_Invalid_shape_in_axis_d_d, __pyx_k_Invalid_shape_in_axis_d_d, sizeof(__pyx_k_Invalid_shape_in_axis_d_d), 0, 0, 1, 0},
  {&__pyx_kp_u_IterationScheme, __pyx_k_IterationScheme, sizeof(__pyx_k_IterationScheme), 0, 1, 0, 0},
  {&__pyx_kp_u_IterationScheme___SimdImpl, __pyx_k_IterationScheme___SimdImpl, sizeof(__pyx_k_IterationScheme___SimdImpl), 0, 1, 0, 0},
  {&__pyx_n_s_IterationUpdate, __pyx_k_IterationUpdate, sizeof(__pyx_k_IterationUpdate), 0, 0, 1, 1},
  {&__pyx_n_s_J, __pyx_k_J, sizeof(__pyx_k_J), 0, 0, 1, 1},
  {&__pyx_n_u_J, __pyx_k_J, sizeof(__pyx_k_J), 0, 1, 0, 1},
  {&__pyx_n_u_JRest, __pyx_k_JRest, sizeof(__pyx_k_JRest), 0, 1, 0, 1},
  {&__pyx_n_s_KBoltzmann, __pyx_k_KBoltzmann, sizeof(__pyx_k_KBoltzmann), 0, 0, 1, 1},
  {&__pyx_n_u_Line, __pyx_k_Line, sizeof(__pyx_k_Line), 0, 1, 0, 1},
  {&__pyx_n_s_LineProfileState, __pyx_k_LineProfileState, sizeof(__pyx_k_LineProfileState), 0, 0, 1, 1},
  {&__pyx_n_s_LineType, __pyx_k_LineType, sizeof(__pyx_k_LineType), 0, 0, 1, 1},
  {&__pyx_n_s_Lte, __pyx_k_Lte, sizeof(__pyx_k_Lte), 0, 0, 1, 1},
  {&__pyx_n_s_LwAtmosphere, __pyx_k_LwAtmosphere, sizeof(__pyx_k_LwAtmosphere), 0, 0, 1, 1},
  {&__pyx_n_s_LwAtom, __pyx_k_LwAtom, sizeof(__pyx_k_LwAtom), 0, 0, 1, 1},
  {&__pyx_n_s_LwBackground, __pyx_k_LwBackground, sizeof(__pyx_k_LwBackground), 0, 0, 1, 1},
  {&__pyx_n_s_LwContext, __pyx_k_LwContext, sizeof(__pyx_k_LwContext), 0, 0, 1, 1},
  {&__pyx_n_s_LwDepthData, __pyx_k_LwDepthData, sizeof(__pyx_k_LwDepthData), 0, 0, 1, 1},
  {&__pyx_n_s_LwFormalSolverManager, __pyx_k_LwFormalSolverManager, sizeof(__pyx_k_LwFormalSolverManager), 0, 0, 1, 1},
  {&__pyx_n_s_LwFsIterationManager, __pyx_k_LwFsIterationManager, sizeof(__pyx_k_LwFsIterationManager), 0, 0, 1, 1},
  {&__pyx_n_s_LwInterpFnManager, __pyx_k_LwInterpFnManager, sizeof(__pyx_k_LwInterpFnManager), 0, 0, 1, 1},
  {&__pyx_n_s_LwSpectrum, __pyx_k_LwSpectrum, sizeof(__pyx_k_LwSpectrum), 0, 0, 1, 1},
  {&__pyx_n_s_LwTransition, __pyx_k_LwTransition, sizeof(__pyx_k_LwTransition), 0, 0, 1, 1},
  {&__pyx_n_s_LwZeemanComponents, __pyx_k_LwZeemanComponents, sizeof(__pyx_k_LwZeemanComponents), 0, 0, 1, 1},
  {&__pyx_n_s_MElectron, __pyx_k_MElectron, sizeof(__pyx_k_MElectron), 0, 0, 1, 1},
  {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
  {&__pyx_kp_s_MemoryView_of_r_at_0x_x, __pyx_k_MemoryView_of_r_at_0x_x, sizeof(__pyx_k_MemoryView_of_r_at_0x_x), 0, 0, 1, 0},
  {&__pyx_kp_s_MemoryView_of_r_object, __pyx_k_MemoryView_of_r_object, sizeof(__pyx_k_MemoryView_of_r_object), 0, 0, 1, 0},
  {&__pyx_n_s_NM_TO_M, __pyx_k_NM_TO_M, sizeof(__pyx_k_NM_TO_M), 0, 0, 1, 1},
  {&__pyx_n_u_Nblue, __pyx_k_Nblue, sizeof(__pyx_k_Nblue), 0, 1, 0, 1},
  {&__pyx_n_s_Ndelay, __pyx_k_Ndelay, sizeof(__pyx_k_Ndelay), 0, 0, 1, 1},
  {&__pyx_n_s_Ndim, __pyx_k_Ndim, sizeof(__pyx_k_Ndim), 0, 0, 1, 1},
  {&__pyx_n_u_Ndim, __pyx_k_Ndim, sizeof(__pyx_k_Ndim), 0, 1, 0, 1},
  {&__pyx_n_u_Ng, __pyx_k_Ng, sizeof(__pyx_k_Ng), 0, 1, 0, 1},
  {&__pyx_n_s_Niter, __pyx_k_Niter, sizeof(__pyx_k_Niter), 0, 0, 1, 1},
  {&__pyx_n_s_Nlambda, __pyx_k_Nlambda, sizeof(__pyx_k_Nlambda), 0, 0, 1, 1},
  {&__pyx_n_s_Nmu, __pyx_k_Nmu, sizeof(__pyx_k_Nmu), 0, 0, 1, 1},
  {&__pyx_n_s_NoBc, __pyx_k_NoBc, sizeof(__pyx_k_NoBc), 0, 0, 1, 1},
  {&__pyx_kp_u_None, __pyx_k_None, sizeof(__pyx_k_None), 0, 1, 0, 0},
  {&__pyx_n_s_Norder, __pyx_k_Norder, sizeof(__pyx_k_Norder), 0, 0, 1, 1},
  {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
  {&__pyx_n_s_Noutgoing, __pyx_k_Noutgoing, sizeof(__pyx_k_Noutgoing), 0, 0, 1, 1},
  {&__pyx_n_s_Nperiod, __pyx_k_Nperiod, sizeof(__pyx_k_Nperiod), 0, 0, 1, 1},
  {&__pyx_n_s_NprdSubIter, __pyx_k_NprdSubIter, sizeof(__pyx_k_NprdSubIter), 0, 0, 1, 1},
  {&__pyx_n_s_Nrays, __pyx_k_Nrays, sizeof(__pyx_k_Nrays), 0, 0, 1, 1},
  {&__pyx_n_u_Nred, __pyx_k_Nred, sizeof(__pyx_k_Nred), 0, 1, 0, 1},
  {&__pyx_n_s_Nspace, __pyx_k_Nspace, sizeof(__pyx_k_Nspace), 0, 0, 1, 1},
  {&__pyx_n_s_Nthreads, __pyx_k_Nthreads, sizeof(__pyx_k_Nthreads), 0, 0, 1, 1},
  {&__pyx_n_u_Nthreads, __pyx_k_Nthreads, sizeof(__pyx_k_Nthreads), 0, 1, 0, 1},
  {&__pyx_n_u_Nwave, __pyx_k_Nwave, sizeof(__pyx_k_Nwave), 0, 1, 0, 1},
  {&__pyx_n_s_Nwavelengths, __pyx_k_Nwavelengths, sizeof(__pyx_k_Nwavelengths), 0, 0, 1, 1},
  {&__pyx_n_s_Nx, __pyx_k_Nx, sizeof(__pyx_k_Nx), 0, 0, 1, 1},
  {&__pyx_n_u_Nx, __pyx_k_Nx, sizeof(__pyx_k_Nx), 0, 1, 0, 1},
  {&__pyx_n_s_Ny, __pyx_k_Ny, sizeof(__pyx_k_Ny), 0, 0, 1, 1},
  {&__pyx_n_u_Ny, __pyx_k_Ny, sizeof(__pyx_k_Ny), 0, 1, 0, 1},
  {&__pyx_n_s_Nz, __pyx_k_Nz, sizeof(__pyx_k_Nz), 0, 0, 1, 1},
  {&__pyx_n_u_Nz, __pyx_k_Nz, sizeof(__pyx_k_Nz), 0, 1, 0, 1},
  {&__pyx_n_b_O, __pyx_k_O, sizeof(__pyx_k_O), 0, 0, 0, 1},
  {&__pyx_n_u_OH, __pyx_k_OH, sizeof(__pyx_k_OH), 0, 1, 0, 1},
  {&__pyx_kp_u_One_of_the_quadrature_values_not, __pyx_k_One_of_the_quadrature_values_not, sizeof(__pyx_k_One_of_the_quadrature_values_not), 0, 1, 0, 0},
  {&__pyx_kp_s_Out_of_bounds_on_buffer_access_a, __pyx_k_Out_of_bounds_on_buffer_access_a, sizeof(__pyx_k_Out_of_bounds_on_buffer_access_a), 0, 0, 1, 0},
  {&__pyx_n_s_PRD, __pyx_k_PRD, sizeof(__pyx_k_PRD), 0, 0, 1, 1},
  {&__pyx_n_s_PeriodicRadiation, __pyx_k_PeriodicRadiation, sizeof(__pyx_k_PeriodicRadiation), 0, 0, 1, 1},
  {&__pyx_n_s_PeriodicTable, __pyx_k_PeriodicTable, sizeof(__pyx_k_PeriodicTable), 0, 0, 1, 1},
  {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
  {&__pyx_kp_u_Please_specify_B_field, __pyx_k_Please_specify_B_field, sizeof(__pyx_k_Please_specify_B_field), 0, 1, 0, 0},
  {&__pyx_n_s_QElectron, __pyx_k_QElectron, sizeof(__pyx_k_QElectron), 0, 0, 1, 1},
  {&__pyx_n_s_Qelast, __pyx_k_Qelast, sizeof(__pyx_k_Qelast), 0, 0, 1, 1},
  {&__pyx_n_u_Qelast, __pyx_k_Qelast, sizeof(__pyx_k_Qelast), 0, 1, 0, 1},
  {&__pyx_n_u_Quv, __pyx_k_Quv, sizeof(__pyx_k_Quv), 0, 1, 0, 1},
  {&__pyx_n_s_RayleighScatterer, __pyx_k_RayleighScatterer, sizeof(__pyx_k_RayleighScatterer), 0, 0, 1, 1},
  {&__pyx_n_u_Rij, __pyx_k_Rij, sizeof(__pyx_k_Rij), 0, 1, 0, 1},
  {&__pyx_n_u_Rji, __pyx_k_Rji, sizeof(__pyx_k_Rji), 0, 1, 0, 1},
  {&__pyx_kp_u_Shapes_of_B_gammaB_and_chiB_don, __pyx_k_Shapes_of_B_gammaB_and_chiB_don, sizeof(__pyx_k_Shapes_of_B_gammaB_and_chiB_don), 0, 1, 0, 0},
  {&__pyx_kp_u_Singular_Matrix, __pyx_k_Singular_Matrix, sizeof(__pyx_k_Singular_Matrix), 0, 1, 0, 0},
  {&__pyx_kp_s_Source_LwMiddleLayer_pyx, __pyx_k_Source_LwMiddleLayer_pyx, sizeof(__pyx_k_Source_LwMiddleLayer_pyx), 0, 0, 1, 0},
  {&__pyx_kp_u_The_use_of_printUpdate_is_now_de, __pyx_k_The_use_of_printUpdate_is_now_de, sizeof(__pyx_k_The_use_of_printUpdate_is_now_de), 0, 1, 0, 0},
  {&__pyx_n_s_ThermalisedRadiation, __pyx_k_ThermalisedRadiation, sizeof(__pyx_k_ThermalisedRadiation), 0, 0, 1, 1},
  {&__pyx_kp_u_Tried_to_load_a_pre_existing_pat, __pyx_k_Tried_to_load_a_pre_existing_pat, sizeof(__pyx_k_Tried_to_load_a_pre_existing_pat), 0, 1, 0, 0},
  {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
  {&__pyx_kp_u_UTF_8, __pyx_k_UTF_8, sizeof(__pyx_k_UTF_8), 0, 1, 0, 0},
  {&__pyx_n_s_Uji, __pyx_k_Uji, sizeof(__pyx_k_Uji), 0, 0, 1, 1},
  {&__pyx_kp_s_Unable_to_convert_item_to_object, __pyx_k_Unable_to_convert_item_to_object, sizeof(__pyx_k_Unable_to_convert_item_to_object), 0, 0, 1, 0},
  {&__pyx_kp_u_Unexpected_Ndim, __pyx_k_Unexpected_Ndim, sizeof(__pyx_k_Unexpected_Ndim), 0, 1, 0, 0},
  {&__pyx_n_s_UnityCrswIterator, __pyx_k_UnityCrswIterator, sizeof(__pyx_k_UnityCrswIterator), 0, 0, 1, 1},
  {&__pyx_kp_u_Unsupported_number_of_dimensions, __pyx_k_Unsupported_number_of_dimensions, sizeof(__pyx_k_Unsupported_number_of_dimensions), 0, 1, 0, 0},
  {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
  {&__pyx_kp_u_Value_for_key, __pyx_k_Value_for_key, sizeof(__pyx_k_Value_for_key), 0, 1, 0, 0},
  {&__pyx_n_s_View_MemoryView, __pyx_k_View_MemoryView, sizeof(__pyx_k_View_MemoryView), 0, 0, 1, 1},
  {&__pyx_n_s_Vij, __pyx_k_Vij, sizeof(__pyx_k_Vij), 0, 0, 1, 1},
  {&__pyx_n_s_Vji, __pyx_k_Vji, sizeof(__pyx_k_Vji), 0, 0, 1, 1},
  {&__pyx_n_s_Zero, __pyx_k_Zero, sizeof(__pyx_k_Zero), 0, 0, 1, 1},
  {&__pyx_n_s_ZeroRadiation, __pyx_k_ZeroRadiation, sizeof(__pyx_k_ZeroRadiation), 0, 0, 1, 1},
  {&__pyx_kp_u_Zero_radiation_InitialSolution_n, __pyx_k_Zero_radiation_InitialSolution_n, sizeof(__pyx_k_Zero_radiation_InitialSolution_n), 0, 1, 0, 0},
  {&__pyx_kp_u__5, __pyx_k__5, sizeof(__pyx_k__5), 0, 1, 0, 0},
  {&__pyx_kp_u__6, __pyx_k__6, sizeof(__pyx_k__6), 0, 1, 0, 0},
  {&__pyx_n_s__67, __pyx_k__67, sizeof(__pyx_k__67), 0, 0, 1, 1},
  {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
  {&__pyx_n_s_aDamp, __pyx_k_aDamp, sizeof(__pyx_k_aDamp), 0, 0, 1, 1},
  {&__pyx_n_u_aDamp, __pyx_k_aDamp, sizeof(__pyx_k_aDamp), 0, 1, 0, 1},
  {&__pyx_n_s_aDampView, __pyx_k_aDampView, sizeof(__pyx_k_aDampView), 0, 0, 1, 1},
  {&__pyx_n_u_active, __pyx_k_active, sizeof(__pyx_k_active), 0, 1, 0, 1},
  {&__pyx_n_s_activeAtoms, __pyx_k_activeAtoms, sizeof(__pyx_k_activeAtoms), 0, 0, 1, 1},
  {&__pyx_n_u_activeAtoms, __pyx_k_activeAtoms, sizeof(__pyx_k_activeAtoms), 0, 1, 0, 1},
  {&__pyx_n_s_activeTrans, __pyx_k_activeTrans, sizeof(__pyx_k_activeTrans), 0, 0, 1, 1},
  {&__pyx_n_s_activeWavelengths, __pyx_k_activeWavelengths, sizeof(__pyx_k_activeWavelengths), 0, 0, 1, 1},
  {&__pyx_n_s_all, __pyx_k_all, sizeof(__pyx_k_all), 0, 0, 1, 1},
  {&__pyx_n_s_allocate_buffer, __pyx_k_allocate_buffer, sizeof(__pyx_k_allocate_buffer), 0, 0, 1, 1},
  {&__pyx_n_s_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 0, 1, 1},
  {&__pyx_n_u_alpha, __pyx_k_alpha, sizeof(__pyx_k_alpha), 0, 1, 0, 1},
  {&__pyx_n_s_any, __pyx_k_any, sizeof(__pyx_k_any), 0, 0, 1, 1},
  {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
  {&__pyx_n_s_argmax, __pyx_k_argmax, sizeof(__pyx_k_argmax), 0, 0, 1, 1},
  {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
  {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
  {&__pyx_n_s_asarray, __pyx_k_asarray, sizeof(__pyx_k_asarray), 0, 0, 1, 1},
  {&__pyx_n_s_astype, __pyx_k_astype, sizeof(__pyx_k_astype), 0, 0, 1, 1},
  {&__pyx_n_s_atmos, __pyx_k_atmos, sizeof(__pyx_k_atmos), 0, 0, 1, 1},
  {&__pyx_n_u_atmos, __pyx_k_atmos, sizeof(__pyx_k_atmos), 0, 1, 0, 1},
  {&__pyx_n_s_atmosphere, __pyx_k_atmosphere, sizeof(__pyx_k_atmosphere), 0, 0, 1, 1},
  {&__pyx_n_s_atom, __pyx_k_atom, sizeof(__pyx_k_atom), 0, 0, 1, 1},
  {&__pyx_n_u_atom, __pyx_k_atom, sizeof(__pyx_k_atom), 0, 1, 0, 1},
  {&__pyx_n_s_atomicModel, __pyx_k_atomicModel, sizeof(__pyx_k_atomicModel), 0, 0, 1, 1},
  {&__pyx_n_u_atomicModel, __pyx_k_atomicModel, sizeof(__pyx_k_atomicModel), 0, 1, 0, 1},
  {&__pyx_n_s_atomicPops, __pyx_k_atomicPops, sizeof(__pyx_k_atomicPops), 0, 0, 1, 1},
  {&__pyx_n_s_atomic_model, __pyx_k_atomic_model, sizeof(__pyx_k_atomic_model), 0, 0, 1, 1},
  {&__pyx_n_s_atomic_set, __pyx_k_atomic_set, sizeof(__pyx_k_atomic_set), 0, 0, 1, 1},
  {&__pyx_n_s_atomic_table, __pyx_k_atomic_table, sizeof(__pyx_k_atomic_table), 0, 0, 1, 1},
  {&__pyx_n_s_atoms, __pyx_k_atoms, sizeof(__pyx_k_atoms), 0, 0, 1, 1},
  {&__pyx_n_s_auto, __pyx_k_auto, sizeof(__pyx_k_auto), 0, 0, 1, 1},
  {&__pyx_n_s_axis, __pyx_k_axis, sizeof(__pyx_k_axis), 0, 0, 1, 1},
  {&__pyx_n_s_background, __pyx_k_background, sizeof(__pyx_k_background), 0, 0, 1, 1},
  {&__pyx_n_u_background, __pyx_k_background, sizeof(__pyx_k_background), 0, 1, 0, 1},
  {&__pyx_n_s_backgroundNe, __pyx_k_backgroundNe, sizeof(__pyx_k_backgroundNe), 0, 0, 1, 1},
  {&__pyx_n_s_backgroundProvider, __pyx_k_backgroundProvider, sizeof(__pyx_k_backgroundProvider), 0, 0, 1, 1},
  {&__pyx_n_u_backgroundProvider, __pyx_k_backgroundProvider, sizeof(__pyx_k_backgroundProvider), 0, 1, 0, 1},
  {&__pyx_n_s_base, __pyx_k_base, sizeof(__pyx_k_base), 0, 0, 1, 1},
  {&__pyx_n_s_bc, __pyx_k_bc, sizeof(__pyx_k_bc), 0, 0, 1, 1},
  {&__pyx_n_s_bf_opacities, __pyx_k_bf_opacities, sizeof(__pyx_k_bf_opacities), 0, 0, 1, 1},
  {&__pyx_n_s_bg, __pyx_k_bg, sizeof(__pyx_k_bg), 0, 0, 1, 1},
  {&__pyx_n_s_blueIdx, __pyx_k_blueIdx, sizeof(__pyx_k_blueIdx), 0, 0, 1, 1},
  {&__pyx_n_s_bool, __pyx_k_bool, sizeof(__pyx_k_bool), 0, 0, 1, 1},
  {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
  {&__pyx_n_u_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 1, 0, 1},
  {&__pyx_n_u_chPops, __pyx_k_chPops, sizeof(__pyx_k_chPops), 0, 1, 0, 1},
  {&__pyx_n_s_check_shape_exception, __pyx_k_check_shape_exception, sizeof(__pyx_k_check_shape_exception), 0, 0, 1, 1},
  {&__pyx_n_s_chi, __pyx_k_chi, sizeof(__pyx_k_chi), 0, 0, 1, 1},
  {&__pyx_n_u_chi, __pyx_k_chi, sizeof(__pyx_k_chi), 0, 1, 0, 1},
  {&__pyx_n_s_chiB, __pyx_k_chiB, sizeof(__pyx_k_chiB), 0, 0, 1, 1},
  {&__pyx_n_u_chiB, __pyx_k_chiB, sizeof(__pyx_k_chiB), 0, 1, 0, 1},
  {&__pyx_kp_u_chiB_2, __pyx_k_chiB_2, sizeof(__pyx_k_chiB_2), 0, 1, 0, 0},
  {&__pyx_n_s_chiIn, __pyx_k_chiIn, sizeof(__pyx_k_chiIn), 0, 0, 1, 1},
  {&__pyx_n_s_chunkSize, __pyx_k_chunkSize, sizeof(__pyx_k_chunkSize), 0, 0, 1, 1},
  {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
  {&__pyx_n_s_clear_ng, __pyx_k_clear_ng, sizeof(__pyx_k_clear_ng), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_collisions, __pyx_k_collisions, sizeof(__pyx_k_collisions), 0, 0, 1, 1},
  {&__pyx_n_s_compAtom, __pyx_k_compAtom, sizeof(__pyx_k_compAtom), 0, 0, 1, 1},
  {&__pyx_n_s_compute_background, __pyx_k_compute_background, sizeof(__pyx_k_compute_background), 0, 0, 1, 1},
  {&__pyx_n_s_compute_bc, __pyx_k_compute_bc, sizeof(__pyx_k_compute_bc), 0, 0, 1, 1},
  {&__pyx_n_s_compute_bcs, __pyx_k_compute_bcs, sizeof(__pyx_k_compute_bcs), 0, 0, 1, 1},
  {&__pyx_n_s_compute_collisions, __pyx_k_compute_collisions, sizeof(__pyx_k_compute_collisions), 0, 0, 1, 1},
  {&__pyx_n_s_compute_phi, __pyx_k_compute_phi, sizeof(__pyx_k_compute_phi), 0, 0, 1, 1},
  {&__pyx_n_s_compute_phi_locals_default_voigt, __pyx_k_compute_phi_locals_default_voigt, sizeof(__pyx_k_compute_phi_locals_default_voigt), 0, 0, 1, 1},
  {&__pyx_n_s_compute_polarised_profiles, __pyx_k_compute_polarised_profiles, sizeof(__pyx_k_compute_polarised_profiles), 0, 0, 1, 1},
  {&__pyx_n_s_compute_profiles, __pyx_k_compute_profiles, sizeof(__pyx_k_compute_profiles), 0, 0, 1, 1},
  {&__pyx_n_s_compute_rates, __pyx_k_compute_rates, sizeof(__pyx_k_compute_rates), 0, 0, 1, 1},
  {&__pyx_n_s_configure_bcs, __pyx_k_configure_bcs, sizeof(__pyx_k_configure_bcs), 0, 0, 1, 1},
  {&__pyx_n_s_conserveCharge, __pyx_k_conserveCharge, sizeof(__pyx_k_conserveCharge), 0, 0, 1, 1},
  {&__pyx_n_u_conserveCharge, __pyx_k_conserveCharge, sizeof(__pyx_k_conserveCharge), 0, 1, 0, 1},
  {&__pyx_n_s_construct_from_state_dict_with, __pyx_k_construct_from_state_dict_with, sizeof(__pyx_k_construct_from_state_dict_with), 0, 0, 1, 1},
  {&__pyx_kp_s_contiguous_and_direct, __pyx_k_contiguous_and_direct, sizeof(__pyx_k_contiguous_and_direct), 0, 0, 1, 0},
  {&__pyx_kp_s_contiguous_and_indirect, __pyx_k_contiguous_and_indirect, sizeof(__pyx_k_contiguous_and_indirect), 0, 0, 1, 0},
  {&__pyx_n_s_continua, __pyx_k_continua, sizeof(__pyx_k_continua), 0, 0, 1, 1},
  {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
  {&__pyx_n_u_cos2chi, __pyx_k_cos2chi, sizeof(__pyx_k_cos2chi), 0, 1, 0, 1},
  {&__pyx_n_u_cosGamma, __pyx_k_cosGamma, sizeof(__pyx_k_cosGamma), 0, 1, 0, 1},
  {&__pyx_n_s_crsw, __pyx_k_crsw, sizeof(__pyx_k_crsw), 0, 0, 1, 1},
  {&__pyx_n_s_crswCallback, __pyx_k_crswCallback, sizeof(__pyx_k_crswCallback), 0, 0, 1, 1},
  {&__pyx_n_u_crswCallback, __pyx_k_crswCallback, sizeof(__pyx_k_crswCallback), 0, 1, 0, 1},
  {&__pyx_n_u_crswDone, __pyx_k_crswDone, sizeof(__pyx_k_crswDone), 0, 1, 0, 1},
  {&__pyx_n_s_ctx, __pyx_k_ctx, sizeof(__pyx_k_ctx), 0, 0, 1, 1},
  {&__pyx_n_u_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 1, 0, 1},
  {&__pyx_n_s_dC, __pyx_k_dC, sizeof(__pyx_k_dC), 0, 0, 1, 1},
  {&__pyx_n_s_dJMax, __pyx_k_dJMax, sizeof(__pyx_k_dJMax), 0, 0, 1, 1},
  {&__pyx_n_s_dJMaxIdx, __pyx_k_dJMaxIdx, sizeof(__pyx_k_dJMaxIdx), 0, 0, 1, 1},
  {&__pyx_n_s_dJPrdMax, __pyx_k_dJPrdMax, sizeof(__pyx_k_dJPrdMax), 0, 0, 1, 1},
  {&__pyx_n_s_dJPrdMaxIdx, __pyx_k_dJPrdMaxIdx, sizeof(__pyx_k_dJPrdMaxIdx), 0, 0, 1, 1},
  {&__pyx_n_s_dNeMax, __pyx_k_dNeMax, sizeof(__pyx_k_dNeMax), 0, 0, 1, 1},
  {&__pyx_n_s_dNeMaxIdx, __pyx_k_dNeMaxIdx, sizeof(__pyx_k_dNeMaxIdx), 0, 0, 1, 1},
  {&__pyx_n_s_dPops, __pyx_k_dPops, sizeof(__pyx_k_dPops), 0, 0, 1, 1},
  {&__pyx_n_s_dPopsMaxIdx, __pyx_k_dPopsMaxIdx, sizeof(__pyx_k_dPopsMaxIdx), 0, 0, 1, 1},
  {&__pyx_n_s_dRho, __pyx_k_dRho, sizeof(__pyx_k_dRho), 0, 0, 1, 1},
  {&__pyx_n_s_dRhoMaxIdx, __pyx_k_dRhoMaxIdx, sizeof(__pyx_k_dRhoMaxIdx), 0, 0, 1, 1},
  {&__pyx_n_s_damping, __pyx_k_damping, sizeof(__pyx_k_damping), 0, 0, 1, 1},
  {&__pyx_n_s_deepcopy, __pyx_k_deepcopy, sizeof(__pyx_k_deepcopy), 0, 0, 1, 1},
  {&__pyx_n_u_defaultPerAtomStorage, __pyx_k_defaultPerAtomStorage, sizeof(__pyx_k_defaultPerAtomStorage), 0, 1, 0, 1},
  {&__pyx_n_u_defaultWlaGijStorage, __pyx_k_defaultWlaGijStorage, sizeof(__pyx_k_defaultWlaGijStorage), 0, 1, 0, 1},
  {&__pyx_n_s_default_formal_solver, __pyx_k_default_formal_solver, sizeof(__pyx_k_default_formal_solver), 0, 0, 1, 1},
  {&__pyx_n_s_default_interp, __pyx_k_default_interp, sizeof(__pyx_k_default_interp), 0, 0, 1, 1},
  {&__pyx_n_s_default_scheme, __pyx_k_default_scheme, sizeof(__pyx_k_default_scheme), 0, 0, 1, 1},
  {&__pyx_n_s_default_scheme_name, __pyx_k_default_scheme_name, sizeof(__pyx_k_default_scheme_name), 0, 0, 1, 1},
  {&__pyx_n_s_default_voigt_callback, __pyx_k_default_voigt_callback, sizeof(__pyx_k_default_voigt_callback), 0, 0, 1, 1},
  {&__pyx_n_u_depthData, __pyx_k_depthData, sizeof(__pyx_k_depthData), 0, 1, 0, 1},
  {&__pyx_n_s_detailed, __pyx_k_detailed, sizeof(__pyx_k_detailed), 0, 0, 1, 1},
  {&__pyx_n_u_detailed, __pyx_k_detailed, sizeof(__pyx_k_detailed), 0, 1, 0, 1},
  {&__pyx_n_s_detailedAtoms, __pyx_k_detailedAtoms, sizeof(__pyx_k_detailedAtoms), 0, 0, 1, 1},
  {&__pyx_n_u_detailedAtoms, __pyx_k_detailedAtoms, sizeof(__pyx_k_detailedAtoms), 0, 1, 0, 1},
  {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
  {&__pyx_n_u_dimensionSpecific, __pyx_k_dimensionSpecific, sizeof(__pyx_k_dimensionSpecific), 0, 1, 0, 1},
  {&__pyx_n_s_dt, __pyx_k_dt, sizeof(__pyx_k_dt), 0, 0, 1, 1},
  {&__pyx_n_u_dt, __pyx_k_dt, sizeof(__pyx_k_dt), 0, 1, 0, 1},
  {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
  {&__pyx_n_s_dtype_is_object, __pyx_k_dtype_is_object, sizeof(__pyx_k_dtype_is_object), 0, 0, 1, 1},
  {&__pyx_n_s_element, __pyx_k_element, sizeof(__pyx_k_element), 0, 0, 1, 1},
  {&__pyx_n_s_encode, __pyx_k_encode, sizeof(__pyx_k_encode), 0, 0, 1, 1},
  {&__pyx_n_s_enum, __pyx_k_enum, sizeof(__pyx_k_enum), 0, 0, 1, 1},
  {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
  {&__pyx_n_s_eqPops, __pyx_k_eqPops, sizeof(__pyx_k_eqPops), 0, 0, 1, 1},
  {&__pyx_n_u_eqPops, __pyx_k_eqPops, sizeof(__pyx_k_eqPops), 0, 1, 0, 1},
  {&__pyx_n_s_error, __pyx_k_error, sizeof(__pyx_k_error), 0, 0, 1, 1},
  {&__pyx_n_s_eta, __pyx_k_eta, sizeof(__pyx_k_eta), 0, 0, 1, 1},
  {&__pyx_n_u_eta, __pyx_k_eta, sizeof(__pyx_k_eta), 0, 1, 0, 1},
  {&__pyx_n_s_etaIn, __pyx_k_etaIn, sizeof(__pyx_k_etaIn), 0, 0, 1, 1},
  {&__pyx_kp_u_expected_one_of, __pyx_k_expected_one_of, sizeof(__pyx_k_expected_one_of), 0, 1, 0, 0},
  {&__pyx_n_s_extraParams, __pyx_k_extraParams, sizeof(__pyx_k_extraParams), 0, 0, 1, 1},
  {&__pyx_n_s_fill, __pyx_k_fill, sizeof(__pyx_k_fill), 0, 0, 1, 1},
  {&__pyx_n_u_fill, __pyx_k_fill, sizeof(__pyx_k_fill), 0, 1, 0, 1},
  {&__pyx_n_s_fillDiagonal, __pyx_k_fillDiagonal, sizeof(__pyx_k_fillDiagonal), 0, 0, 1, 1},
  {&__pyx_n_s_fixCollisionalRates, __pyx_k_fixCollisionalRates, sizeof(__pyx_k_fixCollisionalRates), 0, 0, 1, 1},
  {&__pyx_n_s_flags, __pyx_k_flags, sizeof(__pyx_k_flags), 0, 0, 1, 1},
  {&__pyx_n_s_float64, __pyx_k_float64, sizeof(__pyx_k_float64), 0, 0, 1, 1},
  {&__pyx_kp_u_for_key, __pyx_k_for_key, sizeof(__pyx_k_for_key), 0, 1, 0, 0},
  {&__pyx_kp_u_for_key_2, __pyx_k_for_key_2, sizeof(__pyx_k_for_key_2), 0, 1, 0, 0},
  {&__pyx_n_s_formalSolver, __pyx_k_formalSolver, sizeof(__pyx_k_formalSolver), 0, 0, 1, 1},
  {&__pyx_n_u_formalSolver, __pyx_k_formalSolver, sizeof(__pyx_k_formalSolver), 0, 1, 0, 1},
  {&__pyx_n_s_formal_sol, __pyx_k_formal_sol, sizeof(__pyx_k_formal_sol), 0, 0, 1, 1},
  {&__pyx_n_s_formal_sol_gamma_matrices, __pyx_k_formal_sol_gamma_matrices, sizeof(__pyx_k_formal_sol_gamma_matrices), 0, 0, 1, 1},
  {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
  {&__pyx_n_s_fortran, __pyx_k_fortran, sizeof(__pyx_k_fortran), 0, 0, 1, 1},
  {&__pyx_n_u_fortran, __pyx_k_fortran, sizeof(__pyx_k_fortran), 0, 1, 0, 1},
  {&__pyx_n_s_fromScratch, __pyx_k_fromScratch, sizeof(__pyx_k_fromScratch), 0, 0, 1, 1},
  {&__pyx_n_s_fsIterScheme, __pyx_k_fsIterScheme, sizeof(__pyx_k_fsIterScheme), 0, 0, 1, 1},
  {&__pyx_n_u_fsIterScheme, __pyx_k_fsIterScheme, sizeof(__pyx_k_fsIterScheme), 0, 1, 0, 1},
  {&__pyx_n_s_fsIterSchemeProperties, __pyx_k_fsIterSchemeProperties, sizeof(__pyx_k_fsIterSchemeProperties), 0, 0, 1, 1},
  {&__pyx_n_u_fsIterSchemeProperties, __pyx_k_fsIterSchemeProperties, sizeof(__pyx_k_fsIterSchemeProperties), 0, 1, 0, 1},
  {&__pyx_n_s_g, __pyx_k_g, sizeof(__pyx_k_g), 0, 0, 1, 1},
  {&__pyx_n_s_gammaB, __pyx_k_gammaB, sizeof(__pyx_k_gammaB), 0, 0, 1, 1},
  {&__pyx_n_u_gammaB, __pyx_k_gammaB, sizeof(__pyx_k_gammaB), 0, 1, 0, 1},
  {&__pyx_kp_u_gammaB_2, __pyx_k_gammaB_2, sizeof(__pyx_k_gammaB_2), 0, 1, 0, 0},
  {&__pyx_n_s_get_fs_iter_libs, __pyx_k_get_fs_iter_libs, sizeof(__pyx_k_get_fs_iter_libs), 0, 0, 1, 1},
  {&__pyx_n_s_get_fs_iter_scheme_properties, __pyx_k_get_fs_iter_scheme_properties, sizeof(__pyx_k_get_fs_iter_scheme_properties), 0, 0, 1, 1},
  {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
  {&__pyx_kp_u_got, __pyx_k_got, sizeof(__pyx_k_got), 0, 1, 0, 0},
  {&__pyx_kp_s_got_differing_extents_in_dimensi, __pyx_k_got_differing_extents_in_dimensi, sizeof(__pyx_k_got_differing_extents_in_dimensi), 0, 0, 1, 0},
  {&__pyx_n_u_h2Pops, __pyx_k_h2Pops, sizeof(__pyx_k_h2Pops), 0, 1, 0, 1},
  {&__pyx_n_u_hMinusPops, __pyx_k_hMinusPops, sizeof(__pyx_k_hMinusPops), 0, 1, 0, 1},
  {&__pyx_n_s_hOnly, __pyx_k_hOnly, sizeof(__pyx_k_hOnly), 0, 0, 1, 1},
  {&__pyx_n_u_hPops, __pyx_k_hPops, sizeof(__pyx_k_hPops), 0, 1, 0, 1},
  {&__pyx_n_s_hprd, __pyx_k_hprd, sizeof(__pyx_k_hprd), 0, 0, 1, 1},
  {&__pyx_n_u_hprd, __pyx_k_hprd, sizeof(__pyx_k_hprd), 0, 1, 0, 1},
  {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
  {&__pyx_n_s_iLevel, __pyx_k_iLevel, sizeof(__pyx_k_iLevel), 0, 0, 1, 1},
  {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
  {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
  {&__pyx_n_s_inConstructor, __pyx_k_inConstructor, sizeof(__pyx_k_inConstructor), 0, 0, 1, 1},
  {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
  {&__pyx_n_s_indexVector, __pyx_k_indexVector, sizeof(__pyx_k_indexVector), 0, 0, 1, 1},
  {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
  {&__pyx_n_s_initSol, __pyx_k_initSol, sizeof(__pyx_k_initSol), 0, 0, 1, 1},
  {&__pyx_n_u_initSol, __pyx_k_initSol, sizeof(__pyx_k_initSol), 0, 1, 0, 1},
  {&__pyx_n_s_int64, __pyx_k_int64, sizeof(__pyx_k_int64), 0, 0, 1, 1},
  {&__pyx_n_s_int8, __pyx_k_int8, sizeof(__pyx_k_int8), 0, 0, 1, 1},
  {&__pyx_n_s_interp, __pyx_k_interp, sizeof(__pyx_k_interp), 0, 0, 1, 1},
  {&__pyx_n_s_interpFn, __pyx_k_interpFn, sizeof(__pyx_k_interpFn), 0, 0, 1, 1},
  {&__pyx_n_u_interpFn, __pyx_k_interpFn, sizeof(__pyx_k_interpFn), 0, 1, 0, 1},
  {&__pyx_n_s_interp_J_from_state, __pyx_k_interp_J_from_state, sizeof(__pyx_k_interp_J_from_state), 0, 0, 1, 1},
  {&__pyx_n_u_interp_linear_2d, __pyx_k_interp_linear_2d, sizeof(__pyx_k_interp_linear_2d), 0, 1, 0, 1},
  {&__pyx_kp_u_is_not_of_a_supported_type_got, __pyx_k_is_not_of_a_supported_type_got, sizeof(__pyx_k_is_not_of_a_supported_type_got), 0, 1, 0, 0},
  {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
  {&__pyx_n_s_itemsize, __pyx_k_itemsize, sizeof(__pyx_k_itemsize), 0, 0, 1, 1},
  {&__pyx_kp_s_itemsize_0_for_cython_array, __pyx_k_itemsize_0_for_cython_array, sizeof(__pyx_k_itemsize_0_for_cython_array), 0, 0, 1, 0},
  {&__pyx_n_s_iteration_update, __pyx_k_iteration_update, sizeof(__pyx_k_iteration_update), 0, 0, 1, 1},
  {&__pyx_n_s_j, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
  {&__pyx_n_s_jLevel, __pyx_k_jLevel, sizeof(__pyx_k_jLevel), 0, 0, 1, 1},
  {&__pyx_n_u_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 1, 0, 1},
  {&__pyx_n_s_la, __pyx_k_la, sizeof(__pyx_k_la), 0, 0, 1, 1},
  {&__pyx_n_s_lambda0, __pyx_k_lambda0, sizeof(__pyx_k_lambda0), 0, 0, 1, 1},
  {&__pyx_n_s_lambdaEdge, __pyx_k_lambdaEdge, sizeof(__pyx_k_lambdaEdge), 0, 0, 1, 1},
  {&__pyx_n_s_lambdaIterate, __pyx_k_lambdaIterate, sizeof(__pyx_k_lambdaIterate), 0, 0, 1, 1},
  {&__pyx_n_s_levels, __pyx_k_levels, sizeof(__pyx_k_levels), 0, 0, 1, 1},
  {&__pyx_n_s_lightweaver_LwCompiled, __pyx_k_lightweaver_LwCompiled, sizeof(__pyx_k_lightweaver_LwCompiled), 0, 0, 1, 1},
  {&__pyx_n_s_lightweaver_config, __pyx_k_lightweaver_config, sizeof(__pyx_k_lightweaver_config), 0, 0, 1, 1},
  {&__pyx_n_s_lightweaver_constants, __pyx_k_lightweaver_constants, sizeof(__pyx_k_lightweaver_constants), 0, 0, 1, 1},
  {&__pyx_n_s_lines, __pyx_k_lines, sizeof(__pyx_k_lines), 0, 0, 1, 1},
  {&__pyx_n_s_load_fns_from_path, __pyx_k_load_fns_from_path, sizeof(__pyx_k_load_fns_from_path), 0, 0, 1, 1},
  {&__pyx_n_s_load_pops_rates_prd_from_state, __pyx_k_load_pops_rates_prd_from_state, sizeof(__pyx_k_load_pops_rates_prd_from_state), 0, 0, 1, 1},
  {&__pyx_n_s_load_rates_prd_from_state, __pyx_k_load_rates_prd_from_state, sizeof(__pyx_k_load_rates_prd_from_state), 0, 0, 1, 1},
  {&__pyx_n_s_lte_pops, __pyx_k_lte_pops, sizeof(__pyx_k_lte_pops), 0, 0, 1, 1},
  {&__pyx_n_s_lwConfig, __pyx_k_lwConfig, sizeof(__pyx_k_lwConfig), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_maxIter, __pyx_k_maxIter, sizeof(__pyx_k_maxIter), 0, 0, 1, 1},
  {&__pyx_kp_u_max_supported_is_4_got, __pyx_k_max_supported_is_4_got, sizeof(__pyx_k_max_supported_is_4_got), 0, 1, 0, 0},
  {&__pyx_n_s_memview, __pyx_k_memview, sizeof(__pyx_k_memview), 0, 0, 1, 1},
  {&__pyx_n_s_minLambda, __pyx_k_minLambda, sizeof(__pyx_k_minLambda), 0, 0, 1, 1},
  {&__pyx_n_s_mode, __pyx_k_mode, sizeof(__pyx_k_mode), 0, 0, 1, 1},
  {&__pyx_n_u_modelPops, __pyx_k_modelPops, sizeof(__pyx_k_modelPops), 0, 1, 0, 1},
  {&__pyx_n_s_mu, __pyx_k_mu, sizeof(__pyx_k_mu), 0, 0, 1, 1},
  {&__pyx_n_s_mus, __pyx_k_mus, sizeof(__pyx_k_mus), 0, 0, 1, 1},
  {&__pyx_n_s_mux, __pyx_k_mux, sizeof(__pyx_k_mux), 0, 0, 1, 1},
  {&__pyx_n_u_mux, __pyx_k_mux, sizeof(__pyx_k_mux), 0, 1, 0, 1},
  {&__pyx_n_s_muy, __pyx_k_muy, sizeof(__pyx_k_muy), 0, 0, 1, 1},
  {&__pyx_n_u_muy, __pyx_k_muy, sizeof(__pyx_k_muy), 0, 1, 0, 1},
  {&__pyx_n_s_muz, __pyx_k_muz, sizeof(__pyx_k_muz), 0, 0, 1, 1},
  {&__pyx_n_u_muz, __pyx_k_muz, sizeof(__pyx_k_muz), 0, 1, 0, 1},
  {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
  {&__pyx_n_u_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 1, 0, 1},
  {&__pyx_n_s_nHTot, __pyx_k_nHTot, sizeof(__pyx_k_nHTot), 0, 0, 1, 1},
  {&__pyx_n_u_nHTot, __pyx_k_nHTot, sizeof(__pyx_k_nHTot), 0, 1, 0, 1},
  {&__pyx_n_u_nPrev, __pyx_k_nPrev, sizeof(__pyx_k_nPrev), 0, 1, 0, 1},
  {&__pyx_n_s_nStar, __pyx_k_nStar, sizeof(__pyx_k_nStar), 0, 0, 1, 1},
  {&__pyx_n_u_nStar, __pyx_k_nStar, sizeof(__pyx_k_nStar), 0, 1, 0, 1},
  {&__pyx_n_s_nTotal, __pyx_k_nTotal, sizeof(__pyx_k_nTotal), 0, 0, 1, 1},
  {&__pyx_n_u_nTotal, __pyx_k_nTotal, sizeof(__pyx_k_nTotal), 0, 1, 0, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_u_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 1, 0, 1},
  {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
  {&__pyx_n_s_ndim, __pyx_k_ndim, sizeof(__pyx_k_ndim), 0, 0, 1, 1},
  {&__pyx_n_s_ne, __pyx_k_ne, sizeof(__pyx_k_ne), 0, 0, 1, 1},
  {&__pyx_n_u_ne, __pyx_k_ne, sizeof(__pyx_k_ne), 0, 1, 0, 1},
  {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
  {&__pyx_n_s_ngAccelerated, __pyx_k_ngAccelerated, sizeof(__pyx_k_ngAccelerated), 0, 0, 1, 1},
  {&__pyx_n_s_ngOptions, __pyx_k_ngOptions, sizeof(__pyx_k_ngOptions), 0, 0, 1, 1},
  {&__pyx_n_u_ngOptions, __pyx_k_ngOptions, sizeof(__pyx_k_ngOptions), 0, 1, 0, 1},
  {&__pyx_n_s_ngUpdate, __pyx_k_ngUpdate, sizeof(__pyx_k_ngUpdate), 0, 0, 1, 1},
  {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
  {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
  {&__pyx_n_s_nrHOnly, __pyx_k_nrHOnly, sizeof(__pyx_k_nrHOnly), 0, 0, 1, 1},
  {&__pyx_n_u_nrHOnly, __pyx_k_nrHOnly, sizeof(__pyx_k_nrHOnly), 0, 1, 0, 1},
  {&__pyx_n_s_nr_post_update, __pyx_k_nr_post_update, sizeof(__pyx_k_nr_post_update), 0, 0, 1, 1},
  {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
  {&__pyx_kp_u_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 1, 0, 0},
  {&__pyx_kp_u_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 1, 0, 0},
  {&__pyx_n_s_obj, __pyx_k_obj, sizeof(__pyx_k_obj), 0, 0, 1, 1},
  {&__pyx_n_u_ohPops, __pyx_k_ohPops, sizeof(__pyx_k_ohPops), 0, 1, 0, 1},
  {&__pyx_n_s_ones, __pyx_k_ones, sizeof(__pyx_k_ones), 0, 0, 1, 1},
  {&__pyx_kp_u_only_contiguous_float64_and_int6, __pyx_k_only_contiguous_float64_and_int6, sizeof(__pyx_k_only_contiguous_float64_and_int6), 0, 1, 0, 0},
  {&__pyx_n_s_os, __pyx_k_os, sizeof(__pyx_k_os), 0, 0, 1, 1},
  {&__pyx_n_s_pack, __pyx_k_pack, sizeof(__pyx_k_pack), 0, 0, 1, 1},
  {&__pyx_n_s_params, __pyx_k_params, sizeof(__pyx_k_params), 0, 0, 1, 1},
  {&__pyx_n_s_passiveAtoms, __pyx_k_passiveAtoms, sizeof(__pyx_k_passiveAtoms), 0, 0, 1, 1},
  {&__pyx_n_s_phi, __pyx_k_phi, sizeof(__pyx_k_phi), 0, 0, 1, 1},
  {&__pyx_n_u_phi, __pyx_k_phi, sizeof(__pyx_k_phi), 0, 1, 0, 1},
  {&__pyx_n_s_phiQ, __pyx_k_phiQ, sizeof(__pyx_k_phiQ), 0, 0, 1, 1},
  {&__pyx_n_u_phiQ, __pyx_k_phiQ, sizeof(__pyx_k_phiQ), 0, 1, 0, 1},
  {&__pyx_n_u_phiU, __pyx_k_phiU, sizeof(__pyx_k_phiU), 0, 1, 0, 1},
  {&__pyx_n_u_phiV, __pyx_k_phiV, sizeof(__pyx_k_phiV), 0, 1, 0, 1},
  {&__pyx_n_s_pi, __pyx_k_pi, sizeof(__pyx_k_pi), 0, 0, 1, 1},
  {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
  {&__pyx_n_s_polarisable, __pyx_k_polarisable, sizeof(__pyx_k_polarisable), 0, 0, 1, 1},
  {&__pyx_n_s_polarised, __pyx_k_polarised, sizeof(__pyx_k_polarised), 0, 0, 1, 1},
  {&__pyx_n_u_polarised, __pyx_k_polarised, sizeof(__pyx_k_polarised), 0, 1, 0, 1},
  {&__pyx_n_s_pops, __pyx_k_pops, sizeof(__pyx_k_pops), 0, 0, 1, 1},
  {&__pyx_n_s_popsOnly, __pyx_k_popsOnly, sizeof(__pyx_k_popsOnly), 0, 0, 1, 1},
  {&__pyx_n_s_prd_redistribute, __pyx_k_prd_redistribute, sizeof(__pyx_k_prd_redistribute), 0, 0, 1, 1},
  {&__pyx_n_s_preserveProfiles, __pyx_k_preserveProfiles, sizeof(__pyx_k_preserveProfiles), 0, 0, 1, 1},
  {&__pyx_n_s_prevInitSol, __pyx_k_prevInitSol, sizeof(__pyx_k_prevInitSol), 0, 0, 1, 1},
  {&__pyx_n_s_prevSpect, __pyx_k_prevSpect, sizeof(__pyx_k_prevSpect), 0, 0, 1, 1},
  {&__pyx_n_s_prevState, __pyx_k_prevState, sizeof(__pyx_k_prevState), 0, 0, 1, 1},
  {&__pyx_n_s_prevTimePops, __pyx_k_prevTimePops, sizeof(__pyx_k_prevTimePops), 0, 0, 1, 1},
  {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
  {&__pyx_n_s_printUpdate, __pyx_k_printUpdate, sizeof(__pyx_k_printUpdate), 0, 0, 1, 1},
  {&__pyx_n_s_provider, __pyx_k_provider, sizeof(__pyx_k_provider), 0, 0, 1, 1},
  {&__pyx_n_u_provider, __pyx_k_provider, sizeof(__pyx_k_provider), 0, 1, 0, 1},
  {&__pyx_n_u_psiQ, __pyx_k_psiQ, sizeof(__pyx_k_psiQ), 0, 1, 0, 1},
  {&__pyx_n_u_psiU, __pyx_k_psiU, sizeof(__pyx_k_psiU), 0, 1, 0, 1},
  {&__pyx_n_u_psiV, __pyx_k_psiV, sizeof(__pyx_k_psiV), 0, 1, 0, 1},
  {&__pyx_n_u_pyAtmos, __pyx_k_pyAtmos, sizeof(__pyx_k_pyAtmos), 0, 1, 0, 1},
  {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_getbuffer, __pyx_k_pyx_getbuffer, sizeof(__pyx_k_pyx_getbuffer), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_BackgroundProvide, __pyx_k_pyx_unpickle_BackgroundProvide, sizeof(__pyx_k_pyx_unpickle_BackgroundProvide), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_Enum, __pyx_k_pyx_unpickle_Enum, sizeof(__pyx_k_pyx_unpickle_Enum), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_unpickle_RayleighScatterer, __pyx_k_pyx_unpickle_RayleighScatterer, sizeof(__pyx_k_pyx_unpickle_RayleighScatterer), 0, 0, 1, 1},
  {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
  {&__pyx_n_s_quadSymm, __pyx_k_quadSymm, sizeof(__pyx_k_quadSymm), 0, 0, 1, 1},
  {&__pyx_n_u_quadSymm, __pyx_k_quadSymm, sizeof(__pyx_k_quadSymm), 0, 1, 0, 1},
  {&__pyx_n_s_quiet, __pyx_k_quiet, sizeof(__pyx_k_quiet), 0, 0, 1, 1},
  {&__pyx_n_s_radSet, __pyx_k_radSet, sizeof(__pyx_k_radSet), 0, 0, 1, 1},
  {&__pyx_n_u_radSet, __pyx_k_radSet, sizeof(__pyx_k_radSet), 0, 1, 0, 1},
  {&__pyx_n_s_radiativeRates, __pyx_k_radiativeRates, sizeof(__pyx_k_radiativeRates), 0, 0, 1, 1},
  {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
  {&__pyx_n_s_rayleigh_scattering, __pyx_k_rayleigh_scattering, sizeof(__pyx_k_rayleigh_scattering), 0, 0, 1, 1},
  {&__pyx_n_s_rays, __pyx_k_rays, sizeof(__pyx_k_rays), 0, 0, 1, 1},
  {&__pyx_n_s_recompute, __pyx_k_recompute, sizeof(__pyx_k_recompute), 0, 0, 1, 1},
  {&__pyx_n_s_recompute_gII, __pyx_k_recompute_gII, sizeof(__pyx_k_recompute_gII), 0, 0, 1, 1},
  {&__pyx_n_s_reconstruct, __pyx_k_reconstruct, sizeof(__pyx_k_reconstruct), 0, 0, 1, 1},
  {&__pyx_n_s_redIdx, __pyx_k_redIdx, sizeof(__pyx_k_redIdx), 0, 0, 1, 1},
  {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
  {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
  {&__pyx_n_s_refinePrd, __pyx_k_refinePrd, sizeof(__pyx_k_refinePrd), 0, 0, 1, 1},
  {&__pyx_n_s_rel_diff_ng_accelerate, __pyx_k_rel_diff_ng_accelerate, sizeof(__pyx_k_rel_diff_ng_accelerate), 0, 0, 1, 1},
  {&__pyx_n_s_rel_diff_pops, __pyx_k_rel_diff_pops, sizeof(__pyx_k_rel_diff_pops), 0, 0, 1, 1},
  {&__pyx_n_u_respectsFormalSolver, __pyx_k_respectsFormalSolver, sizeof(__pyx_k_respectsFormalSolver), 0, 1, 0, 1},
  {&__pyx_n_s_returnCtx, __pyx_k_returnCtx, sizeof(__pyx_k_returnCtx), 0, 0, 1, 1},
  {&__pyx_n_u_rhoPrd, __pyx_k_rhoPrd, sizeof(__pyx_k_rhoPrd), 0, 1, 0, 1},
  {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
  {&__pyx_n_s_sca, __pyx_k_sca, sizeof(__pyx_k_sca), 0, 0, 1, 1},
  {&__pyx_n_u_sca, __pyx_k_sca, sizeof(__pyx_k_sca), 0, 1, 0, 1},
  {&__pyx_n_s_scaIn, __pyx_k_scaIn, sizeof(__pyx_k_scaIn), 0, 0, 1, 1},
  {&__pyx_n_s_scatter, __pyx_k_scatter, sizeof(__pyx_k_scatter), 0, 0, 1, 1},
  {&__pyx_n_s_scheme_properties, __pyx_k_scheme_properties, sizeof(__pyx_k_scheme_properties), 0, 0, 1, 1},
  {&__pyx_n_s_sd, __pyx_k_sd, sizeof(__pyx_k_sd), 0, 0, 1, 1},
  {&__pyx_kp_s_self_atmos_cannot_be_converted_t, __pyx_k_self_atmos_cannot_be_converted_t, sizeof(__pyx_k_self_atmos_cannot_be_converted_t), 0, 0, 1, 0},
  {&__pyx_kp_s_self_atom_cannot_be_converted_to, __pyx_k_self_atom_cannot_be_converted_to, sizeof(__pyx_k_self_atom_cannot_be_converted_to), 0, 0, 1, 0},
  {&__pyx_kp_s_self_background_cannot_be_conver, __pyx_k_self_background_cannot_be_conver, sizeof(__pyx_k_self_background_cannot_be_conver), 0, 0, 1, 0},
  {&__pyx_kp_s_self_ctx_cannot_be_converted_to, __pyx_k_self_ctx_cannot_be_converted_to, sizeof(__pyx_k_self_ctx_cannot_be_converted_to), 0, 0, 1, 0},
  {&__pyx_kp_s_self_depthData_cannot_be_convert, __pyx_k_self_depthData_cannot_be_convert, sizeof(__pyx_k_self_depthData_cannot_be_convert), 0, 0, 1, 0},
  {&__pyx_kp_s_self_manager_cannot_be_converted, __pyx_k_self_manager_cannot_be_converted, sizeof(__pyx_k_self_manager_cannot_be_converted), 0, 0, 1, 0},
  {&__pyx_kp_s_self_spect_cannot_be_converted_t, __pyx_k_self_spect_cannot_be_converted_t, sizeof(__pyx_k_self_spect_cannot_be_converted_t), 0, 0, 1, 0},
  {&__pyx_kp_s_self_trans_cannot_be_converted_t, __pyx_k_self_trans_cannot_be_converted_t, sizeof(__pyx_k_self_trans_cannot_be_converted_t), 0, 0, 1, 0},
  {&__pyx_kp_s_self_zc_cannot_be_converted_to_a, __pyx_k_self_zc_cannot_be_converted_to_a, sizeof(__pyx_k_self_zc_cannot_be_converted_to_a), 0, 0, 1, 0},
  {&__pyx_n_s_set_formal_solver, __pyx_k_set_formal_solver, sizeof(__pyx_k_set_formal_solver), 0, 0, 1, 1},
  {&__pyx_n_s_set_fs_iter_scheme, __pyx_k_set_fs_iter_scheme, sizeof(__pyx_k_set_fs_iter_scheme), 0, 0, 1, 1},
  {&__pyx_n_s_set_interp_fn, __pyx_k_set_interp_fn, sizeof(__pyx_k_set_interp_fn), 0, 0, 1, 1},
  {&__pyx_n_s_set_pops_escape_probability, __pyx_k_set_pops_escape_probability, sizeof(__pyx_k_set_pops_escape_probability), 0, 0, 1, 1},
  {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
  {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
  {&__pyx_n_s_setup_stokes, __pyx_k_setup_stokes, sizeof(__pyx_k_setup_stokes), 0, 0, 1, 1},
  {&__pyx_n_s_setup_wavelength, __pyx_k_setup_wavelength, sizeof(__pyx_k_setup_wavelength), 0, 0, 1, 1},
  {&__pyx_n_s_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 0, 1, 1},
  {&__pyx_n_u_shape, __pyx_k_shape, sizeof(__pyx_k_shape), 0, 1, 0, 1},
  {&__pyx_n_s_shift, __pyx_k_shift, sizeof(__pyx_k_shift), 0, 0, 1, 1},
  {&__pyx_n_u_sin2chi, __pyx_k_sin2chi, sizeof(__pyx_k_sin2chi), 0, 1, 0, 1},
  {&__pyx_n_s_single_stokes_fs, __pyx_k_single_stokes_fs, sizeof(__pyx_k_single_stokes_fs), 0, 0, 1, 1},
  {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
  {&__pyx_n_s_spect, __pyx_k_spect, sizeof(__pyx_k_spect), 0, 0, 1, 1},
  {&__pyx_n_u_spect, __pyx_k_spect, sizeof(__pyx_k_spect), 0, 1, 0, 1},
  {&__pyx_n_s_sqrt, __pyx_k_sqrt, sizeof(__pyx_k_sqrt), 0, 0, 1, 1},
  {&__pyx_n_s_squeeze, __pyx_k_squeeze, sizeof(__pyx_k_squeeze), 0, 0, 1, 1},
  {&__pyx_n_s_stage, __pyx_k_stage, sizeof(__pyx_k_stage), 0, 0, 1, 1},
  {&__pyx_n_u_stages, __pyx_k_stages, sizeof(__pyx_k_stages), 0, 1, 0, 1},
  {&__pyx_n_s_start, __pyx_k_start, sizeof(__pyx_k_start), 0, 0, 1, 1},
  {&__pyx_n_s_stat_equil, __pyx_k_stat_equil, sizeof(__pyx_k_stat_equil), 0, 0, 1, 1},
  {&__pyx_n_s_state_dict, __pyx_k_state_dict, sizeof(__pyx_k_state_dict), 0, 0, 1, 1},
  {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
  {&__pyx_n_s_step, __pyx_k_step, sizeof(__pyx_k_step), 0, 0, 1, 1},
  {&__pyx_n_s_stokes, __pyx_k_stokes, sizeof(__pyx_k_stokes), 0, 0, 1, 1},
  {&__pyx_n_s_stop, __pyx_k_stop, sizeof(__pyx_k_stop), 0, 0, 1, 1},
  {&__pyx_n_s_strength, __pyx_k_strength, sizeof(__pyx_k_strength), 0, 0, 1, 1},
  {&__pyx_kp_s_strided_and_direct, __pyx_k_strided_and_direct, sizeof(__pyx_k_strided_and_direct), 0, 0, 1, 0},
  {&__pyx_kp_s_strided_and_direct_or_indirect, __pyx_k_strided_and_direct_or_indirect, sizeof(__pyx_k_strided_and_direct_or_indirect), 0, 0, 1, 0},
  {&__pyx_kp_s_strided_and_indirect, __pyx_k_strided_and_indirect, sizeof(__pyx_k_strided_and_indirect), 0, 0, 1, 0},
  {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
  {&__pyx_n_s_struct, __pyx_k_struct, sizeof(__pyx_k_struct), 0, 0, 1, 1},
  {&__pyx_n_s_structure, __pyx_k_structure, sizeof(__pyx_k_structure), 0, 0, 1, 1},
  {&__pyx_n_s_subset_configuration, __pyx_k_subset_configuration, sizeof(__pyx_k_subset_configuration), 0, 0, 1, 1},
  {&__pyx_n_s_sum, __pyx_k_sum, sizeof(__pyx_k_sum), 0, 0, 1, 1},
  {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
  {&__pyx_n_s_temperature, __pyx_k_temperature, sizeof(__pyx_k_temperature), 0, 0, 1, 1},
  {&__pyx_n_u_temperature, __pyx_k_temperature, sizeof(__pyx_k_temperature), 0, 1, 0, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
  {&__pyx_n_s_timeDependentData, __pyx_k_timeDependentData, sizeof(__pyx_k_timeDependentData), 0, 0, 1, 1},
  {&__pyx_n_s_time_dep_restore_prev_pops, __pyx_k_time_dep_restore_prev_pops, sizeof(__pyx_k_time_dep_restore_prev_pops), 0, 0, 1, 1},
  {&__pyx_n_s_time_dep_update, __pyx_k_time_dep_update, sizeof(__pyx_k_time_dep_update), 0, 0, 1, 1},
  {&__pyx_n_s_toObs, __pyx_k_toObs, sizeof(__pyx_k_toObs), 0, 0, 1, 1},
  {&__pyx_n_s_tol, __pyx_k_tol, sizeof(__pyx_k_tol), 0, 0, 1, 1},
  {&__pyx_n_s_trans, __pyx_k_trans, sizeof(__pyx_k_trans), 0, 0, 1, 1},
  {&__pyx_n_u_trans, __pyx_k_trans, sizeof(__pyx_k_trans), 0, 1, 0, 1},
  {&__pyx_n_s_transId, __pyx_k_transId, sizeof(__pyx_k_transId), 0, 0, 1, 1},
  {&__pyx_n_s_transModel, __pyx_k_transModel, sizeof(__pyx_k_transModel), 0, 0, 1, 1},
  {&__pyx_n_u_transModel, __pyx_k_transModel, sizeof(__pyx_k_transModel), 0, 1, 0, 1},
  {&__pyx_n_s_transWavelengths, __pyx_k_transWavelengths, sizeof(__pyx_k_transWavelengths), 0, 0, 1, 1},
  {&__pyx_n_s_transitions, __pyx_k_transitions, sizeof(__pyx_k_transitions), 0, 0, 1, 1},
  {&__pyx_n_s_type, __pyx_k_type, sizeof(__pyx_k_type), 0, 0, 1, 1},
  {&__pyx_n_u_type, __pyx_k_type, sizeof(__pyx_k_type), 0, 1, 0, 1},
  {&__pyx_kp_s_unable_to_allocate_array_data, __pyx_k_unable_to_allocate_array_data, sizeof(__pyx_k_unable_to_allocate_array_data), 0, 0, 1, 0},
  {&__pyx_kp_s_unable_to_allocate_shape_and_str, __pyx_k_unable_to_allocate_shape_and_str, sizeof(__pyx_k_unable_to_allocate_shape_and_str), 0, 0, 1, 0},
  {&__pyx_n_s_unpack, __pyx_k_unpack, sizeof(__pyx_k_unpack), 0, 0, 1, 1},
  {&__pyx_n_s_upOnly, __pyx_k_upOnly, sizeof(__pyx_k_upOnly), 0, 0, 1, 1},
  {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
  {&__pyx_n_s_updateBcs, __pyx_k_updateBcs, sizeof(__pyx_k_updateBcs), 0, 0, 1, 1},
  {&__pyx_n_s_updateJ, __pyx_k_updateJ, sizeof(__pyx_k_updateJ), 0, 0, 1, 1},
  {&__pyx_n_s_updateTotals, __pyx_k_updateTotals, sizeof(__pyx_k_updateTotals), 0, 0, 1, 1},
  {&__pyx_n_s_update_background, __pyx_k_update_background, sizeof(__pyx_k_update_background), 0, 0, 1, 1},
  {&__pyx_n_s_update_deps, __pyx_k_update_deps, sizeof(__pyx_k_update_deps), 0, 0, 1, 1},
  {&__pyx_n_s_update_hprd_coeffs, __pyx_k_update_hprd_coeffs, sizeof(__pyx_k_update_hprd_coeffs), 0, 0, 1, 1},
  {&__pyx_n_s_update_lte_atoms_Hmin_pops, __pyx_k_update_lte_atoms_Hmin_pops, sizeof(__pyx_k_update_lte_atoms_Hmin_pops), 0, 0, 1, 1},
  {&__pyx_n_s_update_projections, __pyx_k_update_projections, sizeof(__pyx_k_update_projections), 0, 0, 1, 1},
  {&__pyx_n_s_update_threads, __pyx_k_update_threads, sizeof(__pyx_k_update_threads), 0, 0, 1, 1},
  {&__pyx_n_s_updatedJ, __pyx_k_updatedJ, sizeof(__pyx_k_updatedJ), 0, 0, 1, 1},
  {&__pyx_n_s_updatedJPrd, __pyx_k_updatedJPrd, sizeof(__pyx_k_updatedJPrd), 0, 0, 1, 1},
  {&__pyx_n_s_updatedNe, __pyx_k_updatedNe, sizeof(__pyx_k_updatedNe), 0, 0, 1, 1},
  {&__pyx_n_s_updatedPops, __pyx_k_updatedPops, sizeof(__pyx_k_updatedPops), 0, 0, 1, 1},
  {&__pyx_n_s_updatedRho, __pyx_k_updatedRho, sizeof(__pyx_k_updatedRho), 0, 0, 1, 1},
  {&__pyx_n_s_utils, __pyx_k_utils, sizeof(__pyx_k_utils), 0, 0, 1, 1},
  {&__pyx_n_s_vBroad, __pyx_k_vBroad, sizeof(__pyx_k_vBroad), 0, 0, 1, 1},
  {&__pyx_n_u_vBroad, __pyx_k_vBroad, sizeof(__pyx_k_vBroad), 0, 1, 0, 1},
  {&__pyx_n_s_vBroadView, __pyx_k_vBroadView, sizeof(__pyx_k_vBroadView), 0, 0, 1, 1},
  {&__pyx_n_s_val, __pyx_k_val, sizeof(__pyx_k_val), 0, 0, 1, 1},
  {&__pyx_n_s_vlos, __pyx_k_vlos, sizeof(__pyx_k_vlos), 0, 0, 1, 1},
  {&__pyx_n_s_vlosMu, __pyx_k_vlosMu, sizeof(__pyx_k_vlosMu), 0, 0, 1, 1},
  {&__pyx_n_u_vlosMu, __pyx_k_vlosMu, sizeof(__pyx_k_vlosMu), 0, 1, 0, 1},
  {&__pyx_kp_u_vlos_is_ambiguous_when_Ndim_1_us, __pyx_k_vlos_is_ambiguous_when_Ndim_1_us, sizeof(__pyx_k_vlos_is_ambiguous_when_Ndim_1_us), 0, 1, 0, 0},
  {&__pyx_n_s_vturb, __pyx_k_vturb, sizeof(__pyx_k_vturb), 0, 0, 1, 1},
  {&__pyx_n_u_vturb, __pyx_k_vturb, sizeof(__pyx_k_vturb), 0, 1, 0, 1},
  {&__pyx_n_s_vx, __pyx_k_vx, sizeof(__pyx_k_vx), 0, 0, 1, 1},
  {&__pyx_n_u_vx, __pyx_k_vx, sizeof(__pyx_k_vx), 0, 1, 0, 1},
  {&__pyx_n_s_vy, __pyx_k_vy, sizeof(__pyx_k_vy), 0, 0, 1, 1},
  {&__pyx_n_u_vy, __pyx_k_vy, sizeof(__pyx_k_vy), 0, 1, 0, 1},
  {&__pyx_n_s_vz, __pyx_k_vz, sizeof(__pyx_k_vz), 0, 0, 1, 1},
  {&__pyx_n_u_vz, __pyx_k_vz, sizeof(__pyx_k_vz), 0, 1, 0, 1},
  {&__pyx_n_s_warn, __pyx_k_warn, sizeof(__pyx_k_warn), 0, 0, 1, 1},
  {&__pyx_n_s_warnings, __pyx_k_warnings, sizeof(__pyx_k_warnings), 0, 0, 1, 1},
  {&__pyx_n_s_wavelength, __pyx_k_wavelength, sizeof(__pyx_k_wavelength), 0, 0, 1, 1},
  {&__pyx_n_u_wavelength, __pyx_k_wavelength, sizeof(__pyx_k_wavelength), 0, 1, 0, 1},
  {&__pyx_n_s_wavelengthSubset, __pyx_k_wavelengthSubset, sizeof(__pyx_k_wavelengthSubset), 0, 0, 1, 1},
  {&__pyx_n_s_wavelengths, __pyx_k_wavelengths, sizeof(__pyx_k_wavelengths), 0, 0, 1, 1},
  {&__pyx_n_s_weno4, __pyx_k_weno4, sizeof(__pyx_k_weno4), 0, 0, 1, 1},
  {&__pyx_n_s_wmu, __pyx_k_wmu, sizeof(__pyx_k_wmu), 0, 0, 1, 1},
  {&__pyx_n_u_wmu, __pyx_k_wmu, sizeof(__pyx_k_wmu), 0, 1, 0, 1},
  {&__pyx_n_u_wphi, __pyx_k_wphi, sizeof(__pyx_k_wphi), 0, 1, 0, 1},
  {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
  {&__pyx_n_u_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 1, 0, 1},
  {&__pyx_n_s_xLowerBc, __pyx_k_xLowerBc, sizeof(__pyx_k_xLowerBc), 0, 0, 1, 1},
  {&__pyx_n_u_xLowerBc, __pyx_k_xLowerBc, sizeof(__pyx_k_xLowerBc), 0, 1, 0, 1},
  {&__pyx_n_s_xUpperBc, __pyx_k_xUpperBc, sizeof(__pyx_k_xUpperBc), 0, 0, 1, 1},
  {&__pyx_n_u_xUpperBc, __pyx_k_xUpperBc, sizeof(__pyx_k_xUpperBc), 0, 1, 0, 1},
  {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
  {&__pyx_n_u_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 1, 0, 1},
  {&__pyx_n_s_yLowerBc, __pyx_k_yLowerBc, sizeof(__pyx_k_yLowerBc), 0, 0, 1, 1},
  {&__pyx_n_u_yLowerBc, __pyx_k_yLowerBc, sizeof(__pyx_k_yLowerBc), 0, 1, 0, 1},
  {&__pyx_n_s_yUpperBc, __pyx_k_yUpperBc, sizeof(__pyx_k_yUpperBc), 0, 0, 1, 1},
  {&__pyx_n_u_yUpperBc, __pyx_k_yUpperBc, sizeof(__pyx_k_yUpperBc), 0, 1, 0, 1},
  {&__pyx_n_s_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 0, 1, 1},
  {&__pyx_n_u_z, __pyx_k_z, sizeof(__pyx_k_z), 0, 1, 0, 1},
  {&__pyx_n_s_zLowerBc, __pyx_k_zLowerBc, sizeof(__pyx_k_zLowerBc), 0, 0, 1, 1},
  {&__pyx_n_u_zLowerBc, __pyx_k_zLowerBc, sizeof(__pyx_k_zLowerBc), 0, 1, 0, 1},
  {&__pyx_n_s_zUpperBc, __pyx_k_zUpperBc, sizeof(__pyx_k_zUpperBc), 0, 0, 1, 1},
  {&__pyx_n_u_zUpperBc, __pyx_k_zUpperBc, sizeof(__pyx_k_zUpperBc), 0, 1, 0, 1},
  {&__pyx_n_s_zeeman_components, __pyx_k_zeeman_components, sizeof(__pyx_k_zeeman_components), 0, 0, 1, 1},
  {&__pyx_n_s_zeros, __pyx_k_zeros, sizeof(__pyx_k_zeros), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 3748, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(0, 393, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 422, __pyx_L1_error)
  __pyx_builtin_AttributeError = __Pyx_GetBuiltinName(__pyx_n_s_AttributeError); if (!__pyx_builtin_AttributeError) __PYX_ERR(0, 494, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 1190, __pyx_L1_error)
  __pyx_builtin_super = __Pyx_GetBuiltinName(__pyx_n_s_super); if (!__pyx_builtin_super) __PYX_ERR(0, 1212, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 1254, __pyx_L1_error)
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(0, 1293, __pyx_L1_error)
  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(0, 2574, __pyx_L1_error)
  __pyx_builtin_DeprecationWarning = __Pyx_GetBuiltinName(__pyx_n_s_DeprecationWarning); if (!__pyx_builtin_DeprecationWarning) __PYX_ERR(0, 3177, __pyx_L1_error)
  __pyx_builtin_any = __Pyx_GetBuiltinName(__pyx_n_s_any); if (!__pyx_builtin_any) __PYX_ERR(0, 3275, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(3, 944, __pyx_L1_error)
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) __PYX_ERR(2, 149, __pyx_L1_error)
  __pyx_builtin_Ellipsis = __Pyx_GetBuiltinName(__pyx_n_s_Ellipsis); if (!__pyx_builtin_Ellipsis) __PYX_ERR(2, 406, __pyx_L1_error)
  __pyx_builtin_id = __Pyx_GetBuiltinName(__pyx_n_s_id); if (!__pyx_builtin_id) __PYX_ERR(2, 615, __pyx_L1_error)
  __pyx_builtin_IndexError = __Pyx_GetBuiltinName(__pyx_n_s_IndexError); if (!__pyx_builtin_IndexError) __PYX_ERR(2, 834, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_s_self_depthData_cannot_be_convert); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "(tree fragment)":4
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.depthData cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_s_self_depthData_cannot_be_convert); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "Source/LwMiddleLayer.pyx":571
 *         return CALLABLE
 *     else:
 *         raise ValueError('Argument is not a BoundaryCondition.')             # <<<<<<<<<<<<<<
 * 
 * cdef verify_bc_array_sizes(AtmosphericBoundaryCondition* abc, f64[:,:,::1] pyArr, str location):
 */
  __pyx_tuple__4 = PyTuple_Pack(1, __pyx_kp_u_Argument_is_not_a_BoundaryCondit); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "Source/LwMiddleLayer.pyx":1059
 *         '''
 *         if self.pyAtmos.Ndim > 1:
 *             raise ValueError('vlos is ambiguous when Ndim > 1, use vx, vy, or vz instead.')             # <<<<<<<<<<<<<<
 *         return np.asarray(self.vz)
 * 
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_u_vlos_is_ambiguous_when_Ndim_1_us); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 1059, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_s_self_atmos_cannot_be_converted_t); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "(tree fragment)":4
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.atmos cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_s_self_atmos_cannot_be_converted_t); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__10 = PyTuple_Pack(1, __pyx_kp_s_self_background_cannot_be_conver); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "(tree fragment)":4
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.background cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_s_self_background_cannot_be_conver); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "Source/LwMiddleLayer.pyx":1943
 *     def load_rates_prd_from_state(self, prevState, preserveProfiles=True):
 * 
 *         np.asarray(self.Rij)[:] = prevState['Rij']             # <<<<<<<<<<<<<<
 *         np.asarray(self.Rji)[:] = prevState['Rji']
 * 
 */
  __pyx_slice__12 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__12)) __PYX_ERR(0, 1943, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__12);
  __Pyx_GIVEREF(__pyx_slice__12);

  /* "Source/LwMiddleLayer.pyx":1983
 *         cdef Atmosphere* atmos = &self.atmos.atmos
 *         callbackUsed = False
 *         def default_voigt_callback(f64[::1] aDamp, f64[::1] vBroad):             # <<<<<<<<<<<<<<
 *             cdef F64View aDampView = f64_view(aDamp)
 *             cdef F64View vBroadView = f64_view(vBroad)
 */
  __pyx_tuple__13 = PyTuple_Pack(4, __pyx_n_s_aDamp, __pyx_n_s_vBroad, __pyx_n_s_aDampView, __pyx_n_s_vBroadView); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 1983, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);
  __pyx_codeobj__14 = (PyObject*)__Pyx_PyCode_New(2, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__13, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Source_LwMiddleLayer_pyx, __pyx_n_s_default_voigt_callback, 1983, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__14)) __PYX_ERR(0, 1983, __pyx_L1_error)

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_s_self_trans_cannot_be_converted_t); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "(tree fragment)":4
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.trans cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_self_trans_cannot_be_converted_t); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_self_zc_cannot_be_converted_to_a); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "(tree fragment)":4
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.zc cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_self_zc_cannot_be_converted_to_a); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "Source/LwMiddleLayer.pyx":2421
 * 
 *         if doInitSol and initSol == InitialSolution.Zero:
 *             raise ValueError('Zero radiation InitialSolution not currently supported')             # <<<<<<<<<<<<<<
 * 
 *         if doInitSol and initSol == InitialSolution.EscapeProbability and Ntrans > 0:
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_u_Zero_radiation_InitialSolution_n); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 2421, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "Source/LwMiddleLayer.pyx":2579
 * 
 *         if conserveCharge:
 *             deltaNe = np.sum((np.asarray(self.n) - prevN) * np.asarray(self.stages)[:, None], axis=0)             # <<<<<<<<<<<<<<
 * 
 *             for k in range(self.atmos.Nspace):
 */
  __pyx_tuple__20 = PyTuple_Pack(2, __pyx_slice__12, Py_None); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 2579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_s_self_atom_cannot_be_converted_to); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "(tree fragment)":4
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.atom cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_s_self_atom_cannot_be_converted_to); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__23 = PyTuple_Pack(1, __pyx_kp_s_self_spect_cannot_be_converted_t); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "(tree fragment)":4
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.spect cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__24 = PyTuple_Pack(1, __pyx_kp_s_self_spect_cannot_be_converted_t); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "Source/LwMiddleLayer.pyx":3177
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         if extraParams is None:
 */
  __pyx_tuple__25 = PyTuple_Pack(2, __pyx_kp_u_The_use_of_printUpdate_is_now_de, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 3177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "Source/LwMiddleLayer.pyx":3295
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         update = IterationUpdate(self, updatedPops=True)
 */
  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_kp_u_The_use_of_printUpdate_is_now_de, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 3295, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "Source/LwMiddleLayer.pyx":3323
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         update = IterationUpdate(self, updatedPops=True)
 */
  __pyx_tuple__27 = PyTuple_Pack(2, __pyx_kp_u_The_use_of_printUpdate_is_now_de, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 3323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "Source/LwMiddleLayer.pyx":3390
 * 
 *         if printUpdate is not None:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         if extraParams is None:
 */
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_kp_u_The_use_of_printUpdate_is_now_de, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 3390, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "Source/LwMiddleLayer.pyx":3489
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         if extraParams is None:
 */
  __pyx_tuple__29 = PyTuple_Pack(2, __pyx_kp_u_The_use_of_printUpdate_is_now_de, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 3489, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "Source/LwMiddleLayer.pyx":3575
 *         try:
 *             if self.atmos.B.shape[0] == 0:
 *                 raise ValueError('Please specify B-field')             # <<<<<<<<<<<<<<
 *         except:
 *             raise ValueError('Please specify B-field')
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_kp_u_Please_specify_B_field); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 3575, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "Source/LwMiddleLayer.pyx":3668
 *             printUpdate = True
 *         else:
 *             warnings.warn('The use of `printUpdate` is now deprecated, as this function no longer prints.', DeprecationWarning)             # <<<<<<<<<<<<<<
 *         if extraParams is None:
 *             extraParams = {}
 */
  __pyx_tuple__31 = PyTuple_Pack(2, __pyx_kp_u_The_use_of_printUpdate_is_now_de, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(0, 3668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "Source/LwMiddleLayer.pyx":3963
 *                 quv = np.squeeze(quv)
 *             Iquv = np.zeros((4, *Iwav.shape))
 *             Iquv[0, :] = Iwav             # <<<<<<<<<<<<<<
 *             Iquv[1:, :] = quv
 *             if returnCtx:
 */
  __pyx_tuple__32 = PyTuple_Pack(2, __pyx_int_0, __pyx_slice__12); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 3963, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);

  /* "Source/LwMiddleLayer.pyx":3964
 *             Iquv = np.zeros((4, *Iwav.shape))
 *             Iquv[0, :] = Iwav
 *             Iquv[1:, :] = quv             # <<<<<<<<<<<<<<
 *             if returnCtx:
 *                 return Iquv, rayCtx
 */
  __pyx_slice__33 = PySlice_New(__pyx_int_1, Py_None, Py_None); if (unlikely(!__pyx_slice__33)) __PYX_ERR(0, 3964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__33);
  __Pyx_GIVEREF(__pyx_slice__33);
  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_slice__33, __pyx_slice__12); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 3964, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_kp_s_self_ctx_cannot_be_converted_to); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "(tree fragment)":4
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.ctx cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_s_self_ctx_cannot_be_converted_to); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "Source/LwMiddleLayer.pyx":4021
 *         '''
 *         if path in self.paths:
 *             raise ValueError('Tried to load a pre-existing path')             # <<<<<<<<<<<<<<
 * 
 *         self.paths.append(path)
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_u_Tried_to_load_a_pre_existing_pat); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 4021, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_kp_s_self_manager_cannot_be_converted); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "(tree fragment)":4
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_kp_s_self_manager_cannot_be_converted); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "Source/LwMiddleLayer.pyx":4125
 *             return self.names.index('interp_linear_2d')
 *         else:
 *             raise ValueError("Unexpected Ndim")             # <<<<<<<<<<<<<<
 * 
 * cdef class LwFsIterationManager:
 */
  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_kp_u_Unexpected_Ndim); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 4125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__41 = PyTuple_Pack(1, __pyx_kp_s_self_manager_cannot_be_converted); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "(tree fragment)":4
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__42 = PyTuple_Pack(1, __pyx_kp_s_self_manager_cannot_be_converted); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 */
  __pyx_tuple__43 = PyTuple_Pack(1, __pyx_kp_s_self_manager_cannot_be_converted); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);

  /* "(tree fragment)":4
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("self.manager cannot be converted to a Python object for pickling")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__44 = PyTuple_Pack(1, __pyx_kp_s_self_manager_cannot_be_converted); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);
  __pyx_tuple__45 = PyTuple_Pack(3, __pyx_int_222419149, __pyx_int_238750788, __pyx_int_228825662); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);
  __pyx_tuple__46 = PyTuple_Pack(3, __pyx_int_120250498, __pyx_int_134145825, __pyx_int_12259659); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":944
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple__47 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(3, 944, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "../../../../private/var/folders/64/lj867_5d7g14x35j8httn4rm0000gn/T/pip-build-env-qb39ag14/overlay/lib/python3.8/site-packages/numpy/__init__.pxd":950
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__48 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__48)) __PYX_ERR(3, 950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__48);
  __Pyx_GIVEREF(__pyx_tuple__48);

  /* "View.MemoryView":134
 * 
 *         if not self.ndim:
 *             raise ValueError("Empty shape tuple for cython.array")             # <<<<<<<<<<<<<<
 * 
 *         if itemsize <= 0:
 */
  __pyx_tuple__49 = PyTuple_Pack(1, __pyx_kp_s_Empty_shape_tuple_for_cython_arr); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(2, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "View.MemoryView":137
 * 
 *         if itemsize <= 0:
 *             raise ValueError("itemsize <= 0 for cython.array")             # <<<<<<<<<<<<<<
 * 
 *         if not isinstance(format, bytes):
 */
  __pyx_tuple__50 = PyTuple_Pack(1, __pyx_kp_s_itemsize_0_for_cython_array); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(2, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "View.MemoryView":149
 * 
 *         if not self._shape:
 *             raise MemoryError("unable to allocate shape and strides.")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__51 = PyTuple_Pack(1, __pyx_kp_s_unable_to_allocate_shape_and_str); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(2, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);

  /* "View.MemoryView":177
 *             self.data = <char *>malloc(self.len)
 *             if not self.data:
 *                 raise MemoryError("unable to allocate array data.")             # <<<<<<<<<<<<<<
 * 
 *             if self.dtype_is_object:
 */
  __pyx_tuple__52 = PyTuple_Pack(1, __pyx_kp_s_unable_to_allocate_array_data); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(2, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);

  /* "View.MemoryView":193
 *             bufmode = PyBUF_F_CONTIGUOUS | PyBUF_ANY_CONTIGUOUS
 *         if not (flags & bufmode):
 *             raise ValueError("Can only create a buffer that is contiguous in memory.")             # <<<<<<<<<<<<<<
 *         info.buf = self.data
 *         info.len = self.len
 */
  __pyx_tuple__53 = PyTuple_Pack(1, __pyx_kp_s_Can_only_create_a_buffer_that_is); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(2, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__54 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__55 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);

  /* "View.MemoryView":420
 *     def __setitem__(memoryview self, object index, object value):
 *         if self.view.readonly:
 *             raise TypeError("Cannot assign to read-only memoryview")             # <<<<<<<<<<<<<<
 * 
 *         have_slices, index = _unellipsify(index, self.view.ndim)
 */
  __pyx_tuple__56 = PyTuple_Pack(1, __pyx_kp_s_Cannot_assign_to_read_only_memor); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(2, 420, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);

  /* "View.MemoryView":497
 *             result = struct.unpack(self.view.format, bytesitem)
 *         except struct.error:
 *             raise ValueError("Unable to convert item to object")             # <<<<<<<<<<<<<<
 *         else:
 *             if len(self.view.format) == 1:
 */
  __pyx_tuple__57 = PyTuple_Pack(1, __pyx_kp_s_Unable_to_convert_item_to_object); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(2, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);

  /* "View.MemoryView":522
 *     def __getbuffer__(self, Py_buffer *info, int flags):
 *         if flags & PyBUF_WRITABLE and self.view.readonly:
 *             raise ValueError("Cannot create writable memory view from read-only memoryview")             # <<<<<<<<<<<<<<
 * 
 *         if flags & PyBUF_ND:
 */
  __pyx_tuple__58 = PyTuple_Pack(1, __pyx_kp_s_Cannot_create_writable_memory_vi); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(2, 522, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);

  /* "View.MemoryView":572
 *         if self.view.strides == NULL:
 * 
 *             raise ValueError("Buffer view does not expose strides")             # <<<<<<<<<<<<<<
 * 
 *         return tuple([stride for stride in self.view.strides[:self.view.ndim]])
 */
  __pyx_tuple__59 = PyTuple_Pack(1, __pyx_kp_s_Buffer_view_does_not_expose_stri); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(2, 572, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);

  /* "View.MemoryView":579
 *     def suboffsets(self):
 *         if self.view.suboffsets == NULL:
 *             return (-1,) * self.view.ndim             # <<<<<<<<<<<<<<
 * 
 *         return tuple([suboffset for suboffset in self.view.suboffsets[:self.view.ndim]])
 */
  __pyx_tuple__60 = PyTuple_New(1); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(2, 579, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_INCREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_tuple__60, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_tuple__60);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__61 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__62 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "View.MemoryView":705
 *     for suboffset in suboffsets[:ndim]:
 *         if suboffset >= 0:
 *             raise ValueError("Indirect dimensions not supported")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__63 = PyTuple_Pack(1, __pyx_kp_s_Indirect_dimensions_not_supporte); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(2, 705, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 */
  __pyx_tuple__64 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(2, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);

  /* "(tree fragment)":4
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError("no default __reduce__ due to non-trivial __cinit__")             # <<<<<<<<<<<<<<
 */
  __pyx_tuple__65 = PyTuple_Pack(1, __pyx_kp_s_no_default___reduce___due_to_non); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);
  __pyx_tuple__66 = PyTuple_Pack(3, __pyx_int_184977713, __pyx_int_136983863, __pyx_int_112105877); if (unlikely(!__pyx_tuple__66)) __PYX_ERR(2, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__66);
  __Pyx_GIVEREF(__pyx_tuple__66);

  /* "Source/LwMiddleLayer.pyx":555
 *         return np.asarray(self.I)
 * 
 * def BC_to_enum(bc):             # <<<<<<<<<<<<<<
 *     '''
 *     Returns the C++ enum associated with the type of python BoundaryCondition
 */
  __pyx_tuple__68 = PyTuple_Pack(1, __pyx_n_s_bc); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(1, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__68, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Source_LwMiddleLayer_pyx, __pyx_n_s_BC_to_enum, 555, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(0, 555, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":3749
 * 
 *     @staticmethod
 *     def construct_from_state_dict_with(sd, atmos=None, spect=None, eqPops=None,             # <<<<<<<<<<<<<<
 *                                        ngOptions=None, initSol=None, conserveCharge=None,
 *                                        nrHOnly=None, hprd=None, preserveProfiles=False,
 */
  __pyx_tuple__70 = PyTuple_Pack(22, __pyx_n_s_sd, __pyx_n_s_atmos, __pyx_n_s_spect, __pyx_n_s_eqPops, __pyx_n_s_ngOptions, __pyx_n_s_initSol, __pyx_n_s_conserveCharge, __pyx_n_s_nrHOnly, __pyx_n_s_hprd, __pyx_n_s_preserveProfiles, __pyx_n_s_fromScratch, __pyx_n_s_backgroundProvider, __pyx_n_s_args, __pyx_n_s_wavelengthSubset, __pyx_n_s_prevSpect, __pyx_n_s_prevInitSol, __pyx_n_s_ctx, __pyx_n_s_a, __pyx_n_s_s, __pyx_n_s_levels, __pyx_n_s_trans, __pyx_n_s_popsOnly); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 3749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(12, 0, 22, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__70, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_Source_LwMiddleLayer_pyx, __pyx_n_s_construct_from_state_dict_with, 3749, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(0, 3749, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __pyx_unpickle_BackgroundProvider(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__72 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__72)) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__72);
  __Pyx_GIVEREF(__pyx_tuple__72);
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__72, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_BackgroundProvide, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(2, 1, __pyx_L1_error)
  __pyx_tuple__74 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__74)) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__74);
  __Pyx_GIVEREF(__pyx_tuple__74);
  __pyx_codeobj__75 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__74, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_RayleighScatterer, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__75)) __PYX_ERR(2, 1, __pyx_L1_error)

  /* "View.MemoryView":287
 *         return self.name
 * 
 * cdef generic = Enum("<strided and direct or indirect>")             # <<<<<<<<<<<<<<
 * cdef strided = Enum("<strided and direct>") # default
 * cdef indirect = Enum("<strided and indirect>")
 */
  __pyx_tuple__76 = PyTuple_Pack(1, __pyx_kp_s_strided_and_direct_or_indirect); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(2, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);

  /* "View.MemoryView":288
 * 
 * cdef generic = Enum("<strided and direct or indirect>")
 * cdef strided = Enum("<strided and direct>") # default             # <<<<<<<<<<<<<<
 * cdef indirect = Enum("<strided and indirect>")
 * 
 */
  __pyx_tuple__77 = PyTuple_Pack(1, __pyx_kp_s_strided_and_direct); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(2, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);

  /* "View.MemoryView":289
 * cdef generic = Enum("<strided and direct or indirect>")
 * cdef strided = Enum("<strided and direct>") # default
 * cdef indirect = Enum("<strided and indirect>")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__78 = PyTuple_Pack(1, __pyx_kp_s_strided_and_indirect); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(2, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);

  /* "View.MemoryView":292
 * 
 * 
 * cdef contiguous = Enum("<contiguous and direct>")             # <<<<<<<<<<<<<<
 * cdef indirect_contiguous = Enum("<contiguous and indirect>")
 * 
 */
  __pyx_tuple__79 = PyTuple_Pack(1, __pyx_kp_s_contiguous_and_direct); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(2, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);

  /* "View.MemoryView":293
 * 
 * cdef contiguous = Enum("<contiguous and direct>")
 * cdef indirect_contiguous = Enum("<contiguous and indirect>")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_tuple__80 = PyTuple_Pack(1, __pyx_kp_s_contiguous_and_indirect); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(2, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);

  /* "(tree fragment)":1
 * def __pyx_unpickle_Enum(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__81 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);
  __pyx_codeobj__82 = (PyObject*)__Pyx_PyCode_New(3, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__81, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_Enum, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__82)) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_2_0 = PyFloat_FromDouble(2.0); if (unlikely(!__pyx_float_2_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3_0 = PyFloat_FromDouble(3.0); if (unlikely(!__pyx_float_3_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_4_0 = PyFloat_FromDouble(4.0); if (unlikely(!__pyx_float_4_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_8_0 = PyFloat_FromDouble(8.0); if (unlikely(!__pyx_float_8_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_12259659 = PyInt_FromLong(12259659L); if (unlikely(!__pyx_int_12259659)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_112105877 = PyInt_FromLong(112105877L); if (unlikely(!__pyx_int_112105877)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_120250498 = PyInt_FromLong(120250498L); if (unlikely(!__pyx_int_120250498)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_134145825 = PyInt_FromLong(134145825L); if (unlikely(!__pyx_int_134145825)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_136983863 = PyInt_FromLong(136983863L); if (unlikely(!__pyx_int_136983863)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_184977713 = PyInt_FromLong(184977713L); if (unlikely(!__pyx_int_184977713)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_222419149 = PyInt_FromLong(222419149L); if (unlikely(!__pyx_int_222419149)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_228825662 = PyInt_FromLong(228825662L); if (unlikely(!__pyx_int_228825662)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_238750788 = PyInt_FromLong(238750788L); if (unlikely(!__pyx_int_238750788)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  generic = Py_None; Py_INCREF(Py_None);
  strided = Py_None; Py_INCREF(Py_None);
  indirect = Py_None; Py_INCREF(Py_None);
  contiguous = Py_None; Py_INCREF(Py_None);
  indirect_contiguous = Py_None; Py_INCREF(Py_None);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwDepthData) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwDepthData.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwDepthData.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwDepthData.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwDepthData.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwDepthData, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwDepthData) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwDepthData) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwDepthData = &__pyx_type_11lightweaver_10LwCompiled_LwDepthData;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwAtmosphere) < 0) __PYX_ERR(0, 580, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwAtmosphere.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwAtmosphere.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwAtmosphere.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwAtmosphere.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwAtmosphere, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwAtmosphere) < 0) __PYX_ERR(0, 580, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwAtmosphere) < 0) __PYX_ERR(0, 580, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwAtmosphere = &__pyx_type_11lightweaver_10LwCompiled_LwAtmosphere;
  __pyx_vtabptr_11lightweaver_10LwCompiled_BackgroundProvider = &__pyx_vtable_11lightweaver_10LwCompiled_BackgroundProvider;
  __pyx_vtable_11lightweaver_10LwCompiled_BackgroundProvider.compute_background = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_18BackgroundProvider_compute_background;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_BackgroundProvider) < 0) __PYX_ERR(0, 1154, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_BackgroundProvider.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_BackgroundProvider.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_BackgroundProvider.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_BackgroundProvider.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_11lightweaver_10LwCompiled_BackgroundProvider.tp_dict, __pyx_vtabptr_11lightweaver_10LwCompiled_BackgroundProvider) < 0) __PYX_ERR(0, 1154, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_BackgroundProvider, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_BackgroundProvider) < 0) __PYX_ERR(0, 1154, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_BackgroundProvider) < 0) __PYX_ERR(0, 1154, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider = &__pyx_type_11lightweaver_10LwCompiled_BackgroundProvider;
  __pyx_vtabptr_11lightweaver_10LwCompiled_BasicBackground = &__pyx_vtable_11lightweaver_10LwCompiled_BasicBackground;
  __pyx_vtable_11lightweaver_10LwCompiled_BasicBackground.__pyx_base = *__pyx_vtabptr_11lightweaver_10LwCompiled_BackgroundProvider;
  __pyx_vtable_11lightweaver_10LwCompiled_BasicBackground.__pyx_base.compute_background = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_compute_background;
  __pyx_vtable_11lightweaver_10LwCompiled_BasicBackground.rayleigh_scattering = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, __Pyx_memviewslice, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_rayleigh_scattering;
  __pyx_vtable_11lightweaver_10LwCompiled_BasicBackground.bf_opacities = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_BasicBackground *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, __Pyx_memviewslice, __Pyx_memviewslice, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_15BasicBackground_bf_opacities;
  __pyx_type_11lightweaver_10LwCompiled_BasicBackground.tp_base = __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_BasicBackground) < 0) __PYX_ERR(0, 1192, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_BasicBackground.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_BasicBackground.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_BasicBackground.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_BasicBackground.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_11lightweaver_10LwCompiled_BasicBackground.tp_dict, __pyx_vtabptr_11lightweaver_10LwCompiled_BasicBackground) < 0) __PYX_ERR(0, 1192, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_BasicBackground, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_BasicBackground) < 0) __PYX_ERR(0, 1192, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_BasicBackground = &__pyx_type_11lightweaver_10LwCompiled_BasicBackground;
  __pyx_vtabptr_11lightweaver_10LwCompiled_FastBackground = &__pyx_vtable_11lightweaver_10LwCompiled_FastBackground;
  __pyx_vtable_11lightweaver_10LwCompiled_FastBackground.__pyx_base = *__pyx_vtabptr_11lightweaver_10LwCompiled_BackgroundProvider;
  __pyx_vtable_11lightweaver_10LwCompiled_FastBackground.__pyx_base.compute_background = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_BackgroundProvider *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_14FastBackground_compute_background;
  __pyx_type_11lightweaver_10LwCompiled_FastBackground.tp_base = __pyx_ptype_11lightweaver_10LwCompiled_BackgroundProvider;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_FastBackground) < 0) __PYX_ERR(0, 1382, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_FastBackground.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_FastBackground.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_FastBackground.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_FastBackground.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_11lightweaver_10LwCompiled_FastBackground.tp_dict, __pyx_vtabptr_11lightweaver_10LwCompiled_FastBackground) < 0) __PYX_ERR(0, 1382, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_FastBackground, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_FastBackground) < 0) __PYX_ERR(0, 1382, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_FastBackground = &__pyx_type_11lightweaver_10LwCompiled_FastBackground;
  __pyx_vtabptr_11lightweaver_10LwCompiled_LwBackground = &__pyx_vtable_11lightweaver_10LwCompiled_LwBackground;
  __pyx_vtable_11lightweaver_10LwCompiled_LwBackground.update_background = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_12LwBackground_update_background;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwBackground) < 0) __PYX_ERR(0, 1558, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwBackground.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwBackground.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwBackground.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwBackground.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_11lightweaver_10LwCompiled_LwBackground.tp_dict, __pyx_vtabptr_11lightweaver_10LwCompiled_LwBackground) < 0) __PYX_ERR(0, 1558, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwBackground, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwBackground) < 0) __PYX_ERR(0, 1558, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwBackground) < 0) __PYX_ERR(0, 1558, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwBackground = &__pyx_type_11lightweaver_10LwCompiled_LwBackground;
  __pyx_vtabptr_11lightweaver_10LwCompiled_RayleighScatterer = &__pyx_vtable_11lightweaver_10LwCompiled_RayleighScatterer;
  __pyx_vtable_11lightweaver_10LwCompiled_RayleighScatterer.scatter = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_RayleighScatterer *, __pyx_t_8CmoArray_f64, __Pyx_memviewslice, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_17RayleighScatterer_scatter;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_RayleighScatterer) < 0) __PYX_ERR(0, 1667, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_RayleighScatterer.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_RayleighScatterer.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_RayleighScatterer.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_RayleighScatterer.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_11lightweaver_10LwCompiled_RayleighScatterer.tp_dict, __pyx_vtabptr_11lightweaver_10LwCompiled_RayleighScatterer) < 0) __PYX_ERR(0, 1667, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_RayleighScatterer, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_RayleighScatterer) < 0) __PYX_ERR(0, 1667, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_RayleighScatterer) < 0) __PYX_ERR(0, 1667, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_RayleighScatterer = &__pyx_type_11lightweaver_10LwCompiled_RayleighScatterer;
  __pyx_vtabptr_11lightweaver_10LwCompiled_LwTransition = &__pyx_vtable_11lightweaver_10LwCompiled_LwTransition;
  __pyx_vtable_11lightweaver_10LwCompiled_LwTransition.compute_polarised_profiles = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_12LwTransition_compute_polarised_profiles;
  __pyx_vtable_11lightweaver_10LwCompiled_LwTransition.recompute_gII = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwTransition *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_12LwTransition_recompute_gII;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwTransition) < 0) __PYX_ERR(0, 1733, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwTransition.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwTransition.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwTransition.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwTransition.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_11lightweaver_10LwCompiled_LwTransition.tp_dict, __pyx_vtabptr_11lightweaver_10LwCompiled_LwTransition) < 0) __PYX_ERR(0, 1733, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwTransition, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwTransition) < 0) __PYX_ERR(0, 1733, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwTransition) < 0) __PYX_ERR(0, 1733, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwTransition = &__pyx_type_11lightweaver_10LwCompiled_LwTransition;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents) < 0) __PYX_ERR(0, 2272, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwZeemanComponents, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents) < 0) __PYX_ERR(0, 2272, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents) < 0) __PYX_ERR(0, 2272, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwZeemanComponents = &__pyx_type_11lightweaver_10LwCompiled_LwZeemanComponents;
  __pyx_vtabptr_11lightweaver_10LwCompiled_LwAtom = &__pyx_vtable_11lightweaver_10LwCompiled_LwAtom;
  __pyx_vtable_11lightweaver_10LwCompiled_LwAtom.set_pops_escape_probability = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *, struct __pyx_obj_11lightweaver_10LwCompiled_LwAtmosphere *, struct __pyx_obj_11lightweaver_10LwCompiled_LwBackground *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_6LwAtom_set_pops_escape_probability;
  __pyx_vtable_11lightweaver_10LwCompiled_LwAtom.setup_wavelength = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwAtom *, int, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_6LwAtom_setup_wavelength;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwAtom) < 0) __PYX_ERR(0, 2291, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwAtom.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwAtom.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwAtom.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwAtom.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type_11lightweaver_10LwCompiled_LwAtom.tp_dict, __pyx_vtabptr_11lightweaver_10LwCompiled_LwAtom) < 0) __PYX_ERR(0, 2291, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwAtom, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwAtom) < 0) __PYX_ERR(0, 2291, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwAtom) < 0) __PYX_ERR(0, 2291, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwAtom = &__pyx_type_11lightweaver_10LwCompiled_LwAtom;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwSpectrum) < 0) __PYX_ERR(0, 2705, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwSpectrum.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwSpectrum.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwSpectrum.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwSpectrum.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwSpectrum, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwSpectrum) < 0) __PYX_ERR(0, 2705, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwSpectrum) < 0) __PYX_ERR(0, 2705, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwSpectrum = &__pyx_type_11lightweaver_10LwCompiled_LwSpectrum;
  __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext = &__pyx_vtable_11lightweaver_10LwCompiled_LwContext;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.setup_threads = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int))__pyx_f_11lightweaver_10LwCompiled_9LwContext_setup_threads;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.update_threads = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_threads;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.compute_profiles = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_compute_profiles *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_compute_profiles;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.formal_sol_gamma_matrices = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_formal_sol_gamma_matrices;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.formal_sol = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_formal_sol *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_formal_sol;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.update_deps = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_update_deps *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_deps;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.rel_diff_pops = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_rel_diff_pops;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.rel_diff_ng_accelerate = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_rel_diff_ng_accelerate;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.time_dep_update = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, __pyx_t_8CmoArray_f64, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_time_dep_update *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_time_dep_update;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.time_dep_restore_prev_pops = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, PyObject *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_9LwContext_time_dep_restore_prev_pops;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.clear_ng = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_9LwContext_clear_ng;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.stat_equil = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_stat_equil *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_stat_equil;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.update_projections = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_projections;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.setup_stokes = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_setup_stokes *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_setup_stokes;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.single_stokes_fs = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_single_stokes_fs;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.prd_redistribute = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch, struct __pyx_opt_args_11lightweaver_10LwCompiled_9LwContext_prd_redistribute *__pyx_optional_args))__pyx_f_11lightweaver_10LwCompiled_9LwContext_prd_redistribute;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.configure_hprd_coeffs = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *))__pyx_f_11lightweaver_10LwCompiled_9LwContext_configure_hprd_coeffs;
  __pyx_vtable_11lightweaver_10LwCompiled_LwContext.update_hprd_coeffs = (PyObject *(*)(struct __pyx_obj_11lightweaver_10LwCompiled_LwContext *, int __pyx_skip_dispatch))__pyx_f_11lightweaver_10LwCompiled_9LwContext_update_hprd_coeffs;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwContext) < 0) __PYX_ERR(0, 2811, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwContext.tp_print = 0;
  #endif
  if (__Pyx_SetVtable(__pyx_type_11lightweaver_10LwCompiled_LwContext.tp_dict, __pyx_vtabptr_11lightweaver_10LwCompiled_LwContext) < 0) __PYX_ERR(0, 2811, __pyx_L1_error)
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwContext, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwContext) < 0) __PYX_ERR(0, 2811, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwContext) < 0) __PYX_ERR(0, 2811, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwContext = &__pyx_type_11lightweaver_10LwCompiled_LwContext;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager) < 0) __PYX_ERR(0, 3980, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwFormalSolverManager, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager) < 0) __PYX_ERR(0, 3980, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager) < 0) __PYX_ERR(0, 3980, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwFormalSolverManager = &__pyx_type_11lightweaver_10LwCompiled_LwFormalSolverManager;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager) < 0) __PYX_ERR(0, 4054, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwInterpFnManager, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager) < 0) __PYX_ERR(0, 4054, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager) < 0) __PYX_ERR(0, 4054, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwInterpFnManager = &__pyx_type_11lightweaver_10LwCompiled_LwInterpFnManager;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager) < 0) __PYX_ERR(0, 4127, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LwFsIterationManager, (PyObject *)&__pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager) < 0) __PYX_ERR(0, 4127, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager) < 0) __PYX_ERR(0, 4127, __pyx_L1_error)
  __pyx_ptype_11lightweaver_10LwCompiled_LwFsIterationManager = &__pyx_type_11lightweaver_10LwCompiled_LwFsIterationManager;
  if (PyType_Ready(&__pyx_type_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi) < 0) __PYX_ERR(0, 1971, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi.tp_dictoffset && __pyx_type_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  __pyx_ptype_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi = &__pyx_type_11lightweaver_10LwCompiled___pyx_scope_struct__compute_phi;
  __pyx_vtabptr_array = &__pyx_vtable_array;
  __pyx_vtable_array.get_memview = (PyObject *(*)(struct __pyx_array_obj *))__pyx_array_get_memview;
  if (PyType_Ready(&__pyx_type___pyx_array) < 0) __PYX_ERR(2, 106, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type___pyx_array.tp_print = 0;
  #endif
  if (__Pyx_SetVtable(__pyx_type___pyx_array.tp_dict, __pyx_vtabptr_array) < 0) __PYX_ERR(2, 106, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type___pyx_array) < 0) __PYX_ERR(2, 106, __pyx_L1_error)
  __pyx_array_type = &__pyx_type___pyx_array;
  if (PyType_Ready(&__pyx_type___pyx_MemviewEnum) < 0) __PYX_ERR(2, 280, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type___pyx_MemviewEnum.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type___pyx_MemviewEnum.tp_dictoffset && __pyx_type___pyx_MemviewEnum.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type___pyx_MemviewEnum.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type___pyx_MemviewEnum) < 0) __PYX_ERR(2, 280, __pyx_L1_error)
  __pyx_MemviewEnum_type = &__pyx_type___pyx_MemviewEnum;
  __pyx_vtabptr_memoryview = &__pyx_vtable_memoryview;
  __pyx_vtable_memoryview.get_item_pointer = (char *(*)(struct __pyx_memoryview_obj *, PyObject *))__pyx_memoryview_get_item_pointer;
  __pyx_vtable_memoryview.is_slice = (PyObject *(*)(struct __pyx_memoryview_obj *, PyObject *))__pyx_memoryview_is_slice;
  __pyx_vtable_memoryview.setitem_slice_assignment = (PyObject *(*)(struct __pyx_memoryview_obj *, PyObject *, PyObject *))__pyx_memoryview_setitem_slice_assignment;
  __pyx_vtable_memoryview.setitem_slice_assign_scalar = (PyObject *(*)(struct __pyx_memoryview_obj *, struct __pyx_memoryview_obj *, PyObject *))__pyx_memoryview_setitem_slice_assign_scalar;
  __pyx_vtable_memoryview.setitem_indexed = (PyObject *(*)(struct __pyx_memoryview_obj *, PyObject *, PyObject *))__pyx_memoryview_setitem_indexed;
  __pyx_vtable_memoryview.convert_item_to_object = (PyObject *(*)(struct __pyx_memoryview_obj *, char *))__pyx_memoryview_convert_item_to_object;
  __pyx_vtable_memoryview.assign_item_from_object = (PyObject *(*)(struct __pyx_memoryview_obj *, char *, PyObject *))__pyx_memoryview_assign_item_from_object;
  if (PyType_Ready(&__pyx_type___pyx_memoryview) < 0) __PYX_ERR(2, 331, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type___pyx_memoryview.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type___pyx_memoryview.tp_dictoffset && __pyx_type___pyx_memoryview.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type___pyx_memoryview.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type___pyx_memoryview.tp_dict, __pyx_vtabptr_memoryview) < 0) __PYX_ERR(2, 331, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type___pyx_memoryview) < 0) __PYX_ERR(2, 331, __pyx_L1_error)
  __pyx_memoryview_type = &__pyx_type___pyx_memoryview;
  __pyx_vtabptr__memoryviewslice = &__pyx_vtable__memoryviewslice;
  __pyx_vtable__memoryviewslice.__pyx_base = *__pyx_vtabptr_memoryview;
  __pyx_vtable__memoryviewslice.__pyx_base.convert_item_to_object = (PyObject *(*)(struct __pyx_memoryview_obj *, char *))__pyx_memoryviewslice_convert_item_to_object;
  __pyx_vtable__memoryviewslice.__pyx_base.assign_item_from_object = (PyObject *(*)(struct __pyx_memoryview_obj *, char *, PyObject *))__pyx_memoryviewslice_assign_item_from_object;
  __pyx_type___pyx_memoryviewslice.tp_base = __pyx_memoryview_type;
  if (PyType_Ready(&__pyx_type___pyx_memoryviewslice) < 0) __PYX_ERR(2, 967, __pyx_L1_error)
  #if PY_VERSION_HEX < 0x030800B1
  __pyx_type___pyx_memoryviewslice.tp_print = 0;
  #endif
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_type___pyx_memoryviewslice.tp_dictoffset && __pyx_type___pyx_memoryviewslice.tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_type___pyx_memoryviewslice.tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  if (__Pyx_SetVtable(__pyx_type___pyx_memoryviewslice.tp_dict, __pyx_vtabptr__memoryviewslice) < 0) __PYX_ERR(2, 967, __pyx_L1_error)
  if (__Pyx_setup_reduce((PyObject*)&__pyx_type___pyx_memoryviewslice) < 0) __PYX_ERR(2, 967, __pyx_L1_error)
  __pyx_memoryviewslice_type = &__pyx_type___pyx_memoryviewslice;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(4, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(4, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(3, 199, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(3, 222, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(3, 226, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(3, 238, __pyx_L1_error)
  __pyx_ptype_5numpy_generic = __Pyx_ImportType(__pyx_t_1, "numpy", "generic", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_generic) __PYX_ERR(3, 770, __pyx_L1_error)
  __pyx_ptype_5numpy_number = __Pyx_ImportType(__pyx_t_1, "numpy", "number", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_number) __PYX_ERR(3, 772, __pyx_L1_error)
  __pyx_ptype_5numpy_integer = __Pyx_ImportType(__pyx_t_1, "numpy", "integer", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_integer) __PYX_ERR(3, 774, __pyx_L1_error)
  __pyx_ptype_5numpy_signedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "signedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_signedinteger) __PYX_ERR(3, 776, __pyx_L1_error)
  __pyx_ptype_5numpy_unsignedinteger = __Pyx_ImportType(__pyx_t_1, "numpy", "unsignedinteger", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_unsignedinteger) __PYX_ERR(3, 778, __pyx_L1_error)
  __pyx_ptype_5numpy_inexact = __Pyx_ImportType(__pyx_t_1, "numpy", "inexact", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_inexact) __PYX_ERR(3, 780, __pyx_L1_error)
  __pyx_ptype_5numpy_floating = __Pyx_ImportType(__pyx_t_1, "numpy", "floating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_floating) __PYX_ERR(3, 782, __pyx_L1_error)
  __pyx_ptype_5numpy_complexfloating = __Pyx_ImportType(__pyx_t_1, "numpy", "complexfloating", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_complexfloating) __PYX_ERR(3, 784, __pyx_L1_error)
  __pyx_ptype_5numpy_flexible = __Pyx_ImportType(__pyx_t_1, "numpy", "flexible", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_flexible) __PYX_ERR(3, 786, __pyx_L1_error)
  __pyx_ptype_5numpy_character = __Pyx_ImportType(__pyx_t_1, "numpy", "character", sizeof(PyObject), __Pyx_ImportType_CheckSize_Warn);
   if (!__pyx_ptype_5numpy_character) __PYX_ERR(3, 788, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __Pyx_ImportType_CheckSize_Ignore);
   if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(3, 826, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initLwCompiled(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initLwCompiled(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_LwCompiled(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_LwCompiled(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none) {
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
            result = PyDict_SetItemString(moddict, to_name, value);
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, CYTHON_UNUSED PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_LwCompiled(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  static PyThread_type_lock __pyx_t_4[8];
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'LwCompiled' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_LwCompiled(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("LwCompiled", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_lightweaver__LwCompiled) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "lightweaver.LwCompiled")) {
      if (unlikely(PyDict_SetItemString(modules, "lightweaver.LwCompiled", __pyx_m) < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely(__Pyx_modinit_type_init_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely(__Pyx_modinit_type_import_code() < 0)) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "Source/LwMiddleLayer.pyx":1
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * from CmoArray cimport *
 */
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_numpy, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":9
 * from libc.math cimport sqrt, exp, copysign
 * from libc.stdint cimport int64_t
 * from .atmosphere import BoundaryCondition, ZeroRadiation, ThermalisedRadiation, PeriodicRadiation, NoBc             # <<<<<<<<<<<<<<
 * from .atomic_model import AtomicLine, LineType, LineProfileState
 * from .utils import InitialSolution, ExplodingMatrixError, UnityCrswIterator, check_shape_exception, get_fs_iter_libs
 */
  __pyx_t_1 = PyList_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_BoundaryCondition);
  __Pyx_GIVEREF(__pyx_n_s_BoundaryCondition);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_BoundaryCondition);
  __Pyx_INCREF(__pyx_n_s_ZeroRadiation);
  __Pyx_GIVEREF(__pyx_n_s_ZeroRadiation);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_ZeroRadiation);
  __Pyx_INCREF(__pyx_n_s_ThermalisedRadiation);
  __Pyx_GIVEREF(__pyx_n_s_ThermalisedRadiation);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_ThermalisedRadiation);
  __Pyx_INCREF(__pyx_n_s_PeriodicRadiation);
  __Pyx_GIVEREF(__pyx_n_s_PeriodicRadiation);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_PeriodicRadiation);
  __Pyx_INCREF(__pyx_n_s_NoBc);
  __Pyx_GIVEREF(__pyx_n_s_NoBc);
  PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_s_NoBc);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_atmosphere, __pyx_t_1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_BoundaryCondition); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BoundaryCondition, __pyx_t_1) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ZeroRadiation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ZeroRadiation, __pyx_t_1) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ThermalisedRadiation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ThermalisedRadiation, __pyx_t_1) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_PeriodicRadiation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PeriodicRadiation, __pyx_t_1) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_NoBc); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NoBc, __pyx_t_1) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":10
 * from libc.stdint cimport int64_t
 * from .atmosphere import BoundaryCondition, ZeroRadiation, ThermalisedRadiation, PeriodicRadiation, NoBc
 * from .atomic_model import AtomicLine, LineType, LineProfileState             # <<<<<<<<<<<<<<
 * from .utils import InitialSolution, ExplodingMatrixError, UnityCrswIterator, check_shape_exception, get_fs_iter_libs
 * from .atomic_table import PeriodicTable
 */
  __pyx_t_2 = PyList_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_AtomicLine);
  __Pyx_GIVEREF(__pyx_n_s_AtomicLine);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_AtomicLine);
  __Pyx_INCREF(__pyx_n_s_LineType);
  __Pyx_GIVEREF(__pyx_n_s_LineType);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_LineType);
  __Pyx_INCREF(__pyx_n_s_LineProfileState);
  __Pyx_GIVEREF(__pyx_n_s_LineProfileState);
  PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_LineProfileState);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_atomic_model, __pyx_t_2, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_AtomicLine); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AtomicLine, __pyx_t_2) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_LineType); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LineType, __pyx_t_2) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_LineProfileState); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LineProfileState, __pyx_t_2) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":11
 * from .atmosphere import BoundaryCondition, ZeroRadiation, ThermalisedRadiation, PeriodicRadiation, NoBc
 * from .atomic_model import AtomicLine, LineType, LineProfileState
 * from .utils import InitialSolution, ExplodingMatrixError, UnityCrswIterator, check_shape_exception, get_fs_iter_libs             # <<<<<<<<<<<<<<
 * from .atomic_table import PeriodicTable
 * from .atomic_set import lte_pops
 */
  __pyx_t_1 = PyList_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_InitialSolution);
  __Pyx_GIVEREF(__pyx_n_s_InitialSolution);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_InitialSolution);
  __Pyx_INCREF(__pyx_n_s_ExplodingMatrixError);
  __Pyx_GIVEREF(__pyx_n_s_ExplodingMatrixError);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_ExplodingMatrixError);
  __Pyx_INCREF(__pyx_n_s_UnityCrswIterator);
  __Pyx_GIVEREF(__pyx_n_s_UnityCrswIterator);
  PyList_SET_ITEM(__pyx_t_1, 2, __pyx_n_s_UnityCrswIterator);
  __Pyx_INCREF(__pyx_n_s_check_shape_exception);
  __Pyx_GIVEREF(__pyx_n_s_check_shape_exception);
  PyList_SET_ITEM(__pyx_t_1, 3, __pyx_n_s_check_shape_exception);
  __Pyx_INCREF(__pyx_n_s_get_fs_iter_libs);
  __Pyx_GIVEREF(__pyx_n_s_get_fs_iter_libs);
  PyList_SET_ITEM(__pyx_t_1, 4, __pyx_n_s_get_fs_iter_libs);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_utils, __pyx_t_1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_InitialSolution); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_InitialSolution, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_ExplodingMatrixError); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ExplodingMatrixError, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_UnityCrswIterator); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_UnityCrswIterator, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_check_shape_exception); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_check_shape_exception, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_get_fs_iter_libs); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_get_fs_iter_libs, __pyx_t_1) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":12
 * from .atomic_model import AtomicLine, LineType, LineProfileState
 * from .utils import InitialSolution, ExplodingMatrixError, UnityCrswIterator, check_shape_exception, get_fs_iter_libs
 * from .atomic_table import PeriodicTable             # <<<<<<<<<<<<<<
 * from .atomic_set import lte_pops
 * from .iteration_update import IterationUpdate
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_PeriodicTable);
  __Pyx_GIVEREF(__pyx_n_s_PeriodicTable);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_PeriodicTable);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_atomic_table, __pyx_t_2, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_PeriodicTable); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PeriodicTable, __pyx_t_2) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":13
 * from .utils import InitialSolution, ExplodingMatrixError, UnityCrswIterator, check_shape_exception, get_fs_iter_libs
 * from .atomic_table import PeriodicTable
 * from .atomic_set import lte_pops             # <<<<<<<<<<<<<<
 * from .iteration_update import IterationUpdate
 * from weno4 import weno4
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_lte_pops);
  __Pyx_GIVEREF(__pyx_n_s_lte_pops);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_lte_pops);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_atomic_set, __pyx_t_1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_lte_pops); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_lte_pops, __pyx_t_1) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":14
 * from .atomic_table import PeriodicTable
 * from .atomic_set import lte_pops
 * from .iteration_update import IterationUpdate             # <<<<<<<<<<<<<<
 * from weno4 import weno4
 * import lightweaver.constants as Const
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_IterationUpdate);
  __Pyx_GIVEREF(__pyx_n_s_IterationUpdate);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_IterationUpdate);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_iteration_update, __pyx_t_2, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_IterationUpdate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IterationUpdate, __pyx_t_2) < 0) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":15
 * from .atomic_set import lte_pops
 * from .iteration_update import IterationUpdate
 * from weno4 import weno4             # <<<<<<<<<<<<<<
 * import lightweaver.constants as Const
 * import lightweaver.config as lwConfig
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_weno4);
  __Pyx_GIVEREF(__pyx_n_s_weno4);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_weno4);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_weno4, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_weno4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_weno4, __pyx_t_1) < 0) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":16
 * from .iteration_update import IterationUpdate
 * from weno4 import weno4
 * import lightweaver.constants as Const             # <<<<<<<<<<<<<<
 * import lightweaver.config as lwConfig
 * import time
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s__67);
  __Pyx_GIVEREF(__pyx_n_s__67);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s__67);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_lightweaver_constants, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Const, __pyx_t_1) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":17
 * from weno4 import weno4
 * import lightweaver.constants as Const
 * import lightweaver.config as lwConfig             # <<<<<<<<<<<<<<
 * import time
 * import os
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s__67);
  __Pyx_GIVEREF(__pyx_n_s__67);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s__67);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_lightweaver_config, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_lwConfig, __pyx_t_2) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":18
 * import lightweaver.constants as Const
 * import lightweaver.config as lwConfig
 * import time             # <<<<<<<<<<<<<<
 * import os
 * from enum import Enum, auto
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_time, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_2) < 0) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":19
 * import lightweaver.config as lwConfig
 * import time
 * import os             # <<<<<<<<<<<<<<
 * from enum import Enum, auto
 * from copy import copy, deepcopy
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_os, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_2) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":20
 * import time
 * import os
 * from enum import Enum, auto             # <<<<<<<<<<<<<<
 * from copy import copy, deepcopy
 * import warnings
 */
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Enum);
  __Pyx_GIVEREF(__pyx_n_s_Enum);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Enum);
  __Pyx_INCREF(__pyx_n_s_auto);
  __Pyx_GIVEREF(__pyx_n_s_auto);
  PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_auto);
  __pyx_t_1 = __Pyx_Import(__pyx_n_s_enum, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_Enum); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Enum, __pyx_t_2) < 0) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_1, __pyx_n_s_auto); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_auto, __pyx_t_2) < 0) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":21
 * import os
 * from enum import Enum, auto
 * from copy import copy, deepcopy             # <<<<<<<<<<<<<<
 * import warnings
 * 
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_n_s_copy);
  __Pyx_GIVEREF(__pyx_n_s_copy);
  PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_copy);
  __Pyx_INCREF(__pyx_n_s_deepcopy);
  __Pyx_GIVEREF(__pyx_n_s_deepcopy);
  PyList_SET_ITEM(__pyx_t_1, 1, __pyx_n_s_deepcopy);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_copy, __pyx_t_1, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_copy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_copy, __pyx_t_1) < 0) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_deepcopy); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_deepcopy, __pyx_t_1) < 0) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":22
 * from enum import Enum, auto
 * from copy import copy, deepcopy
 * import warnings             # <<<<<<<<<<<<<<
 * 
 * include 'CmoArrayHelper.pyx'
 */
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_warnings, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_warnings, __pyx_t_2) < 0) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":27
 * 
 * # NOTE(cmo): Some late binding stuff to be able to use numpy C API
 * np.import_array()             # <<<<<<<<<<<<<<
 * 
 * ctypedef np.int8_t i8
 */
  __pyx_t_3 = __pyx_f_5numpy_import_array(); if (unlikely(__pyx_t_3 == ((int)-1))) __PYX_ERR(0, 27, __pyx_L1_error)

  /* "Source/LwMiddleLayer.pyx":555
 *         return np.asarray(self.I)
 * 
 * def BC_to_enum(bc):             # <<<<<<<<<<<<<<
 *     '''
 *     Returns the C++ enum associated with the type of python BoundaryCondition
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11lightweaver_10LwCompiled_1BC_to_enum, NULL, __pyx_n_s_lightweaver_LwCompiled); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BC_to_enum, __pyx_t_2) < 0) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "Source/LwMiddleLayer.pyx":1374
 * 
 *     @classmethod
 *     def _reconstruct(cls, state):             # <<<<<<<<<<<<<<
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)
 */
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_BasicBackground, __pyx_n_s_reconstruct); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "Source/LwMiddleLayer.pyx":1373
 *         self.bd.wavelength = f64_view(self.wavelength)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def _reconstruct(cls, state):
 *         o = cls.__new__(cls)
 */
  __pyx_t_1 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_BasicBackground->tp_dict, __pyx_n_s_reconstruct, __pyx_t_1) < 0) __PYX_ERR(0, 1374, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_11lightweaver_10LwCompiled_BasicBackground);

  /* "Source/LwMiddleLayer.pyx":1549
 * 
 *     @classmethod
 *     def _reconstruct(cls, state):             # <<<<<<<<<<<<<<
 *         o = cls.__new__(cls)
 *         o.__setstate__(state)
 */
  __Pyx_GetNameInClass(__pyx_t_1, (PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_FastBackground, __pyx_n_s_reconstruct); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1549, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);

  /* "Source/LwMiddleLayer.pyx":1548
 *         self.ctx.initialise(self.Nthreads)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def _reconstruct(cls, state):
 *         o = cls.__new__(cls)
 */
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1548, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_FastBackground->tp_dict, __pyx_n_s_reconstruct, __pyx_t_2) < 0) __PYX_ERR(0, 1549, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11lightweaver_10LwCompiled_FastBackground);

  /* "Source/LwMiddleLayer.pyx":3749
 * 
 *     @staticmethod
 *     def construct_from_state_dict_with(sd, atmos=None, spect=None, eqPops=None,             # <<<<<<<<<<<<<<
 *                                        ngOptions=None, initSol=None, conserveCharge=None,
 *                                        nrHOnly=None, hprd=None, preserveProfiles=False,
 */
  __pyx_t_2 = PyCFunction_NewEx(&__pyx_mdef_11lightweaver_10LwCompiled_9LwContext_51construct_from_state_dict_with, NULL, __pyx_n_s_lightweaver_LwCompiled); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwContext->tp_dict, __pyx_n_s_construct_from_state_dict_with, __pyx_t_2) < 0) __PYX_ERR(0, 3749, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_11lightweaver_10LwCompiled_LwContext);

  /* "Source/LwMiddleLayer.pyx":3748
 *         return self.__getstate__()
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def construct_from_state_dict_with(sd, atmos=None, spect=None, eqPops=None,
 *                                        ngOptions=None, initSol=None, conserveCharge=None,
 */
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwContext, __pyx_n_s_construct_from_state_dict_with); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 3748, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwContext->tp_dict, __pyx_n_s_construct_from_state_dict_with, __pyx_t_1) < 0) __PYX_ERR(0, 3749, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_ptype_11lightweaver_10LwCompiled_LwContext);

  /* "Source/LwMiddleLayer.pyx":4214
 *     return update
 * 
 * FormalSolvers = LwFormalSolverManager()             # <<<<<<<<<<<<<<
 * InterpFns = LwInterpFnManager()
 * FsIterationSchemes = LwFsIterationManager()
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwFormalSolverManager)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FormalSolvers, __pyx_t_1) < 0) __PYX_ERR(0, 4214, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4215
 * 
 * FormalSolvers = LwFormalSolverManager()
 * InterpFns = LwInterpFnManager()             # <<<<<<<<<<<<<<
 * FsIterationSchemes = LwFsIterationManager()
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwInterpFnManager)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_InterpFns, __pyx_t_1) < 0) __PYX_ERR(0, 4215, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":4216
 * FormalSolvers = LwFormalSolverManager()
 * InterpFns = LwInterpFnManager()
 * FsIterationSchemes = LwFsIterationManager()             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_11lightweaver_10LwCompiled_LwFsIterationManager)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 4216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FsIterationSchemes, __pyx_t_1) < 0) __PYX_ERR(0, 4216, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_BackgroundProvider(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_11lightweaver_10LwCompiled_3__pyx_unpickle_BackgroundProvider, NULL, __pyx_n_s_lightweaver_LwCompiled); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_BackgroundProvide, __pyx_t_1) < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_BackgroundProvider__set_state(<BackgroundProvider> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_BackgroundProvider__set_state(BackgroundProvider __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 0 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[0])
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_11lightweaver_10LwCompiled_5__pyx_unpickle_RayleighScatterer, NULL, __pyx_n_s_lightweaver_LwCompiled); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_RayleighScatterer, __pyx_t_1) < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "Source/LwMiddleLayer.pyx":1
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * from CmoArray cimport *
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "View.MemoryView":210
 *         info.obj = self
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_array_getbuffer, "getbuffer(obj, view, flags)")             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(array self):
 */
  __pyx_t_1 = __pyx_capsule_create(((void *)(&__pyx_array_getbuffer)), ((char *)"getbuffer(obj, view, flags)")); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_array_type->tp_dict, __pyx_n_s_pyx_getbuffer, __pyx_t_1) < 0) __PYX_ERR(2, 210, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_array_type);

  /* "View.MemoryView":287
 *         return self.name
 * 
 * cdef generic = Enum("<strided and direct or indirect>")             # <<<<<<<<<<<<<<
 * cdef strided = Enum("<strided and direct>") # default
 * cdef indirect = Enum("<strided and indirect>")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__76, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(generic);
  __Pyx_DECREF_SET(generic, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":288
 * 
 * cdef generic = Enum("<strided and direct or indirect>")
 * cdef strided = Enum("<strided and direct>") # default             # <<<<<<<<<<<<<<
 * cdef indirect = Enum("<strided and indirect>")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__77, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(strided);
  __Pyx_DECREF_SET(strided, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":289
 * cdef generic = Enum("<strided and direct or indirect>")
 * cdef strided = Enum("<strided and direct>") # default
 * cdef indirect = Enum("<strided and indirect>")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__78, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(indirect);
  __Pyx_DECREF_SET(indirect, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":292
 * 
 * 
 * cdef contiguous = Enum("<contiguous and direct>")             # <<<<<<<<<<<<<<
 * cdef indirect_contiguous = Enum("<contiguous and indirect>")
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(contiguous);
  __Pyx_DECREF_SET(contiguous, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":293
 * 
 * cdef contiguous = Enum("<contiguous and direct>")
 * cdef indirect_contiguous = Enum("<contiguous and indirect>")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(((PyObject *)__pyx_MemviewEnum_type), __pyx_tuple__80, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_XGOTREF(indirect_contiguous);
  __Pyx_DECREF_SET(indirect_contiguous, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;

  /* "View.MemoryView":317
 * 
 * DEF THREAD_LOCKS_PREALLOCATED = 8
 * cdef int __pyx_memoryview_thread_locks_used = 0             # <<<<<<<<<<<<<<
 * cdef PyThread_type_lock[THREAD_LOCKS_PREALLOCATED] __pyx_memoryview_thread_locks = [
 *     PyThread_allocate_lock(),
 */
  __pyx_memoryview_thread_locks_used = 0;

  /* "View.MemoryView":318
 * DEF THREAD_LOCKS_PREALLOCATED = 8
 * cdef int __pyx_memoryview_thread_locks_used = 0
 * cdef PyThread_type_lock[THREAD_LOCKS_PREALLOCATED] __pyx_memoryview_thread_locks = [             # <<<<<<<<<<<<<<
 *     PyThread_allocate_lock(),
 *     PyThread_allocate_lock(),
 */
  __pyx_t_4[0] = PyThread_allocate_lock();
  __pyx_t_4[1] = PyThread_allocate_lock();
  __pyx_t_4[2] = PyThread_allocate_lock();
  __pyx_t_4[3] = PyThread_allocate_lock();
  __pyx_t_4[4] = PyThread_allocate_lock();
  __pyx_t_4[5] = PyThread_allocate_lock();
  __pyx_t_4[6] = PyThread_allocate_lock();
  __pyx_t_4[7] = PyThread_allocate_lock();
  memcpy(&(__pyx_memoryview_thread_locks[0]), __pyx_t_4, sizeof(__pyx_memoryview_thread_locks[0]) * (8));

  /* "View.MemoryView":551
 *         info.obj = self
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, "getbuffer(obj, view, flags)")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_capsule_create(((void *)(&__pyx_memoryview_getbuffer)), ((char *)"getbuffer(obj, view, flags)")); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_memoryview_type->tp_dict, __pyx_n_s_pyx_getbuffer, __pyx_t_1) < 0) __PYX_ERR(2, 551, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_memoryview_type);

  /* "View.MemoryView":997
 *         return self.from_object
 * 
 *     __pyx_getbuffer = capsule(<void *> &__pyx_memoryview_getbuffer, "getbuffer(obj, view, flags)")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_capsule_create(((void *)(&__pyx_memoryview_getbuffer)), ((char *)"getbuffer(obj, view, flags)")); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 997, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem((PyObject *)__pyx_memoryviewslice_type->tp_dict, __pyx_n_s_pyx_getbuffer, __pyx_t_1) < 0) __PYX_ERR(2, 997, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  PyType_Modified(__pyx_memoryviewslice_type);

  /* "(tree fragment)":1
 * def __pyx_unpickle_Enum(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_1 = PyCFunction_NewEx(&__pyx_mdef_15View_dot_MemoryView_1__pyx_unpickle_Enum, NULL, __pyx_n_s_View_MemoryView); if (unlikely(!__pyx_t_1)) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_Enum, __pyx_t_1) < 0) __PYX_ERR(2, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":11
 *         __pyx_unpickle_Enum__set_state(<Enum> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_Enum__set_state(Enum __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result.name = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 */

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d) {
      __Pyx_AddTraceback("init lightweaver.LwCompiled", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    Py_CLEAR(__pyx_m);
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init lightweaver.LwCompiled");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStr(__pyx_b, name);
    if (unlikely(!result)) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* BufferIndexError */
static void __Pyx_RaiseBufferIndexError(int axis) {
  PyErr_Format(PyExc_IndexError,
     "Out of bounds on buffer access (axis %d)", axis);
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_FAST_THREAD_STATE
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
#if 1 || PY_VERSION_HEX < 0x030600B1
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (Py_EnterRecursiveCall((char*)" while calling a Python object")) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallNoArg */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, NULL, 0);
    }
#endif
#ifdef __Pyx_CyFunction_USED
    if (likely(PyCFunction_Check(func) || __Pyx_CyFunction_Check(func)))
#else
    if (likely(PyCFunction_Check(func)))
#endif
    {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
            return __Pyx_PyObject_CallMethO(func, NULL);
        }
    }
    return __Pyx_PyObject_Call(func, __pyx_empty_tuple, NULL);
}
#endif

/* PyCFunctionFastCall */
#if CYTHON_FAST_PYCCALL
static CYTHON_INLINE PyObject * __Pyx_PyCFunction_FastCall(PyObject *func_obj, PyObject **args, Py_ssize_t nargs) {
    PyCFunctionObject *func = (PyCFunctionObject*)func_obj;
    PyCFunction meth = PyCFunction_GET_FUNCTION(func);
    PyObject *self = PyCFunction_GET_SELF(func);
    int flags = PyCFunction_GET_FLAGS(func);
    assert(PyCFunction_Check(func));
    assert(METH_FASTCALL == (flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_KEYWORDS | METH_STACKLESS)));
    assert(nargs >= 0);
    assert(nargs == 0 || args != NULL);
    /* _PyCFunction_FastCallDict() must not be called with an exception set,
       because it may clear it (directly or indirectly) and so the
       caller loses its exception */
    assert(!PyErr_Occurred());
    if ((PY_VERSION_HEX < 0x030700A0) || unlikely(flags & METH_KEYWORDS)) {
        return (*((__Pyx_PyCFunctionFastWithKeywords)(void*)meth)) (self, args, nargs, NULL);
    } else {
        return (*((__Pyx_PyCFunctionFast)(void*)meth)) (self, args, nargs);
    }
}
#endif

/* PyObjectCallOneArg */
#if CYTHON_COMPILING_IN_CPYTHON
static PyObject* __Pyx__PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_New(1);
    if (unlikely(!args)) return NULL;
    Py_INCREF(arg);
    PyTuple_SET_ITEM(args, 0, arg);
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
#if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCall(func, &arg, 1);
    }
#endif
    if (likely(PyCFunction_Check(func))) {
        if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
            return __Pyx_PyObject_CallMethO(func, arg);
#if CYTHON_FAST_PYCCALL
        } else if (__Pyx_PyFastCFunction_Check(func)) {
            return __Pyx_PyCFunction_FastCall(func, &arg, 1);
#endif
        }
    }
    return __Pyx__PyObject_CallOneArg(func, arg);
}
#else
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *result;
    PyObject *args = PyTuple_Pack(1, arg);
    if (unlikely(!args)) return NULL;
    result = __Pyx_PyObject_Call(func, args, NULL);
    Py_DECREF(args);
    return result;
}
#endif

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || (Py_TYPE(descr) == &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (descr != NULL) {
        *method = descr;
        return 0;
    }
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(name));
#endif
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = Py_TYPE(iter)->tp_iternext;
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      CYTHON_UNUSED Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind;
    Py_ssize_t i, char_pos;
    void *result_udata;
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely(char_pos + ulength < 0))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + char_pos * result_ukind, udata, (size_t) (ulength * result_ukind));
        } else {
            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    result_ulength++;
    value_count++;
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    __Pyx_PyThreadState_declare
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
#if CYTHON_COMPILING_IN_PYPY
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#else
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* PyObjectCall2Args */
static CYTHON_UNUSED PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args, *result = NULL;
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyFunction_FastCall(function, args, 2);
    }
    #endif
    #if CYTHON_FAST_PYCCALL
    if (__Pyx_PyFastCFunction_Check(function)) {
        PyObject *args[2] = {arg1, arg2};
        return __Pyx_PyCFunction_FastCall(function, args, 2);
    }
    #endif
    args = PyTuple_New(2);
    if (unlikely(!args)) goto done;
    Py_INCREF(arg1);
    PyTuple_SET_ITEM(args, 0, arg1);
    Py_INCREF(arg2);
    PyTuple_SET_ITEM(args, 1, arg2);
    Py_INCREF(function);
    result = __Pyx_PyObject_Call(function, args, NULL);
    Py_DECREF(args);
    Py_DECREF(function);
done:
    return result;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyIntCompare */
static CYTHON_INLINE PyObject* __Pyx_PyInt_EqObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_TRUE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a == b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_FALSE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_FALSE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal == 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a == (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_EQ));
}

/* MemviewSliceInit */
static int
__Pyx_init_memviewslice(struct __pyx_memoryview_obj *memview,
                        int ndim,
                        __Pyx_memviewslice *memviewslice,
                        int memview_is_new_reference)
{
    __Pyx_RefNannyDeclarations
    int i, retval=-1;
    Py_buffer *buf = &memview->view;
    __Pyx_RefNannySetupContext("init_memviewslice", 0);
    if (unlikely(memviewslice->memview || memviewslice->data)) {
        PyErr_SetString(PyExc_ValueError,
            "memviewslice is already initialized!");
        goto fail;
    }
    if (buf->strides) {
        for (i = 0; i < ndim; i++) {
            memviewslice->strides[i] = buf->strides[i];
        }
    } else {
        Py_ssize_t stride = buf->itemsize;
        for (i = ndim - 1; i >= 0; i--) {
            memviewslice->strides[i] = stride;
            stride *= buf->shape[i];
        }
    }
    for (i = 0; i < ndim; i++) {
        memviewslice->shape[i]   = buf->shape[i];
        if (buf->suboffsets) {
            memviewslice->suboffsets[i] = buf->suboffsets[i];
        } else {
            memviewslice->suboffsets[i] = -1;
        }
    }
    memviewslice->memview = memview;
    memviewslice->data = (char *)buf->buf;
    if (__pyx_add_acquisition_count(memview) == 0 && !memview_is_new_reference) {
        Py_INCREF(memview);
    }
    retval = 0;
    goto no_fail;
fail:
    memviewslice->memview = 0;
    memviewslice->data = 0;
    retval = -1;
no_fail:
    __Pyx_RefNannyFinishContext();
    return retval;
}
#ifndef Py_NO_RETURN
#define Py_NO_RETURN
#endif
static void __pyx_fatalerror(const char *fmt, ...) Py_NO_RETURN {
    va_list vargs;
    char msg[200];
#if PY_VERSION_HEX >= 0x030A0000 || defined(HAVE_STDARG_PROTOTYPES)
    va_start(vargs, fmt);
#else
    va_start(vargs);
#endif
    vsnprintf(msg, 200, fmt, vargs);
    va_end(vargs);
    Py_FatalError(msg);
}
static CYTHON_INLINE int
__pyx_add_acquisition_count_locked(__pyx_atomic_int *acquisition_count,
                                   PyThread_type_lock lock)
{
    int result;
    PyThread_acquire_lock(lock, 1);
    result = (*acquisition_count)++;
    PyThread_release_lock(lock);
    return result;
}
static CYTHON_INLINE int
__pyx_sub_acquisition_count_locked(__pyx_atomic_int *acquisition_count,
                                   PyThread_type_lock lock)
{
    int result;
    PyThread_acquire_lock(lock, 1);
    result = (*acquisition_count)--;
    PyThread_release_lock(lock);
    return result;
}
static CYTHON_INLINE void
__Pyx_INC_MEMVIEW(__Pyx_memviewslice *memslice, int have_gil, int lineno)
{
    int first_time;
    struct __pyx_memoryview_obj *memview = memslice->memview;
    if (unlikely(!memview || (PyObject *) memview == Py_None))
        return;
    if (unlikely(__pyx_get_slice_count(memview) < 0))
        __pyx_fatalerror("Acquisition count is %d (line %d)",
                         __pyx_get_slice_count(memview), lineno);
    first_time = __pyx_add_acquisition_count(memview) == 0;
    if (unlikely(first_time)) {
        if (have_gil) {
            Py_INCREF((PyObject *) memview);
        } else {
            PyGILState_STATE _gilstate = PyGILState_Ensure();
            Py_INCREF((PyObject *) memview);
            PyGILState_Release(_gilstate);
        }
    }
}
static CYTHON_INLINE void __Pyx_XDEC_MEMVIEW(__Pyx_memviewslice *memslice,
                                             int have_gil, int lineno) {
    int last_time;
    struct __pyx_memoryview_obj *memview = memslice->memview;
    if (unlikely(!memview || (PyObject *) memview == Py_None)) {
        memslice->memview = NULL;
        return;
    }
    if (unlikely(__pyx_get_slice_count(memview) <= 0))
        __pyx_fatalerror("Acquisition count is %d (line %d)",
                         __pyx_get_slice_count(memview), lineno);
    last_time = __pyx_sub_acquisition_count(memview) == 1;
    memslice->data = NULL;
    if (unlikely(last_time)) {
        if (have_gil) {
            Py_CLEAR(memslice->memview);
        } else {
            PyGILState_STATE _gilstate = PyGILState_Ensure();
            Py_CLEAR(memslice->memview);
            PyGILState_Release(_gilstate);
        }
    } else {
        memslice->memview = NULL;
    }
}

/* WriteUnraisableException */
static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename,
                                  int full_traceback, CYTHON_UNUSED int nogil) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_PyThreadState_declare
#ifdef WITH_THREAD
    PyGILState_STATE state;
    if (nogil)
        state = PyGILState_Ensure();
#ifdef _MSC_VER
    else state = (PyGILState_STATE)-1;
#endif
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    if (full_traceback) {
        Py_XINCREF(old_exc);
        Py_XINCREF(old_val);
        Py_XINCREF(old_tb);
        __Pyx_ErrRestore(old_exc, old_val, old_tb);
        PyErr_PrintEx(1);
    }
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
#ifdef WITH_THREAD
    if (nogil)
        PyGILState_Release(state);
#endif
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_type == NULL || exc_info->exc_type == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    #endif
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* PyUnicode_Unicode */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_Unicode(PyObject *obj) {
    if (unlikely(obj == Py_None))
        obj = __pyx_kp_u_None;
    return __Pyx_NewRef(obj);
}

/* CIntToDigits */
static const char DIGIT_PAIRS_10[2*10*10+1] = {
    "00010203040506070809"
    "10111213141516171819"
    "20212223242526272829"
    "30313233343536373839"
    "40414243444546474849"
    "50515253545556575859"
    "60616263646566676869"
    "70717273747576777879"
    "80818283848586878889"
    "90919293949596979899"
};
static const char DIGIT_PAIRS_8[2*8*8+1] = {
    "0001020304050607"
    "1011121314151617"
    "2021222324252627"
    "3031323334353637"
    "4041424344454647"
    "5051525354555657"
    "6061626364656667"
    "7071727374757677"
};
static const char DIGITS_HEX[2*16+1] = {
    "0123456789abcdef"
    "0123456789ABCDEF"
};

/* BuildPyUnicode */
static PyObject* __Pyx_PyUnicode_BuildFromAscii(Py_ssize_t ulength, char* chars, int clength,
                                                int prepend_sign, char padding_char) {
    PyObject *uval;
    Py_ssize_t uoffset = ulength - clength;
#if CYTHON_USE_UNICODE_INTERNALS
    Py_ssize_t i;
#if CYTHON_PEP393_ENABLED
    void *udata;
    uval = PyUnicode_New(ulength, 127);
    if (unlikely(!uval)) return NULL;
    udata = PyUnicode_DATA(uval);
#else
    Py_UNICODE *udata;
    uval = PyUnicode_FromUnicode(NULL, ulength);
    if (unlikely(!uval)) return NULL;
    udata = PyUnicode_AS_UNICODE(uval);
#endif
    if (uoffset > 0) {
        i = 0;
        if (prepend_sign) {
            __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, 0, '-');
            i++;
        }
        for (; i < uoffset; i++) {
            __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, i, padding_char);
        }
    }
    for (i=0; i < clength; i++) {
        __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, uoffset+i, chars[i]);
    }
#else
    {
        PyObject *sign = NULL, *padding = NULL;
        uval = NULL;
        if (uoffset > 0) {
            prepend_sign = !!prepend_sign;
            if (uoffset > prepend_sign) {
                padding = PyUnicode_FromOrdinal(padding_char);
                if (likely(padding) && uoffset > prepend_sign + 1) {
                    PyObject *tmp;
                    PyObject *repeat = PyInt_FromSsize_t(uoffset - prepend_sign);
                    if (unlikely(!repeat)) goto done_or_error;
                    tmp = PyNumber_Multiply(padding, repeat);
                    Py_DECREF(repeat);
                    Py_DECREF(padding);
                    padding = tmp;
                }
                if (unlikely(!padding)) goto done_or_error;
            }
            if (prepend_sign) {
                sign = PyUnicode_FromOrdinal('-');
                if (unlikely(!sign)) goto done_or_error;
            }
        }
        uval = PyUnicode_DecodeASCII(chars, clength, NULL);
        if (likely(uval) && padding) {
            PyObject *tmp = PyNumber_Add(padding, uval);
            Py_DECREF(uval);
            uval = tmp;
        }
        if (likely(uval) && sign) {
            PyObject *tmp = PyNumber_Add(sign, uval);
            Py_DECREF(uval);
            uval = tmp;
        }
done_or_error:
        Py_XDECREF(padding);
        Py_XDECREF(sign);
    }
#endif
    return uval;
}

/* CIntToPyUnicode */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_From_int(int value, Py_ssize_t width, char padding_char, char format_char) {
    char digits[sizeof(int)*3+2];
    char *dpos, *end = digits + sizeof(int)*3+2;
    const char *hex_digits = DIGITS_HEX;
    Py_ssize_t length, ulength;
    int prepend_sign, last_one_off;
    int remaining;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (format_char == 'X') {
        hex_digits += 16;
        format_char = 'x';
    }
    remaining = value;
    last_one_off = 0;
    dpos = end;
    do {
        int digit_pos;
        switch (format_char) {
        case 'o':
            digit_pos = abs((int)(remaining % (8*8)));
            remaining = (int) (remaining / (8*8));
            dpos -= 2;
            memcpy(dpos, DIGIT_PAIRS_8 + digit_pos * 2, 2);
            last_one_off = (digit_pos < 8);
            break;
        case 'd':
            digit_pos = abs((int)(remaining % (10*10)));
            remaining = (int) (remaining / (10*10));
            dpos -= 2;
            memcpy(dpos, DIGIT_PAIRS_10 + digit_pos * 2, 2);
            last_one_off = (digit_pos < 10);
            break;
        case 'x':
            *(--dpos) = hex_digits[abs((int)(remaining % 16))];
            remaining = (int) (remaining / 16);
            break;
        default:
            assert(0);
            break;
        }
    } while (unlikely(remaining != 0));
    if (last_one_off) {
        assert(*dpos == '0');
        dpos++;
    }
    length = end - dpos;
    ulength = length;
    prepend_sign = 0;
    if (!is_unsigned && value <= neg_one) {
        if (padding_char == ' ' || width <= length + 1) {
            *(--dpos) = '-';
            ++length;
        } else {
            prepend_sign = 1;
        }
        ++ulength;
    }
    if (width > ulength) {
        ulength = width;
    }
    if (ulength == 1) {
        return PyUnicode_FromOrdinal(*dpos);
    }
    return __Pyx_PyUnicode_BuildFromAscii(ulength, dpos, (int) length, prepend_sign, padding_char);
}

/* PyObjectFormatAndDecref */
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatSimpleAndDecref(PyObject* s, PyObject* f) {
    if (unlikely(!s)) return NULL;
    if (likely(PyUnicode_CheckExact(s))) return s;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyString_CheckExact(s))) {
        PyObject *result = PyUnicode_FromEncodedObject(s, NULL, "strict");
        Py_DECREF(s);
        return result;
    }
    #endif
    return __Pyx_PyObject_FormatAndDecref(s, f);
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_FormatAndDecref(PyObject* s, PyObject* f) {
    PyObject *result = PyObject_Format(s, f);
    Py_DECREF(s);
    return result;
}

/* SwapException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
    #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected %.200s, got %.200s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* GetAttr3 */
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r = __Pyx_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* None */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject* index) {
    PyObject *runerr;
    Py_ssize_t key_value;
    PySequenceMethods *m = Py_TYPE(obj)->tp_as_sequence;
    if (unlikely(!(m && m->sq_item))) {
        PyErr_Format(PyExc_TypeError, "'%.200s' object is not subscriptable", Py_TYPE(obj)->tp_name);
        return NULL;
    }
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError, "cannot fit '%.200s' into an index-sized integer", Py_TYPE(index)->tp_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject* key) {
    PyMappingMethods *m = Py_TYPE(obj)->tp_as_mapping;
    if (likely(m && m->mp_subscript)) {
        return m->mp_subscript(obj, key);
    }
    return __Pyx_PyObject_GetIndex(obj, key);
}
#endif

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

/* PyFloatBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_TrueDivideObjC(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check) {
    const double b = floatval;
    double a, result;
    (void)inplace;
    (void)zerodivision_check;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
        
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
        
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
            
        }
    } else {
        return (inplace ? PyNumber_InPlaceTrueDivide : PyNumber_TrueDivide)(op1, op2);
    }
        
        PyFPE_START_PROTECT("divide", return NULL)
        result = a / b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyIntCompare */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_NeObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, CYTHON_UNUSED long inplace) {
    if (op1 == op2) {
        Py_RETURN_FALSE;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        if (a != b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = Py_SIZE(op1);
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        if (intval == 0) {
            if (size != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
        } else if (intval < 0) {
            if (size >= 0)
                Py_RETURN_TRUE;
            intval = -intval;
            size = -size;
        } else {
            if (size <= 0)
                Py_RETURN_TRUE;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        if (unequal != 0) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
        if ((double)a != (double)b) Py_RETURN_TRUE; else Py_RETURN_FALSE;
    }
    return (
        PyObject_RichCompare(op1, op2, Py_NE));
}

/* PyFloatBinop */
  #if !CYTHON_COMPILING_IN_PYPY
#define __Pyx_PyFloat_TrueDivideCObj_ZeroDivisionError(operand) if (unlikely(zerodivision_check && ((operand) == 0))) {\
    PyErr_SetString(PyExc_ZeroDivisionError, "float division by zero");\
    return NULL;\
}
static PyObject* __Pyx_PyFloat_TrueDivideCObj(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check) {
    const double a = floatval;
    double b, result;
    (void)inplace;
    (void)zerodivision_check;
    if (likely(PyFloat_CheckExact(op2))) {
        b = PyFloat_AS_DOUBLE(op2);
        __Pyx_PyFloat_TrueDivideCObj_ZeroDivisionError(b)
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        b = (double) PyInt_AS_LONG(op2);
        __Pyx_PyFloat_TrueDivideCObj_ZeroDivisionError(b)
    } else
    #endif
    if (likely(PyLong_CheckExact(op2))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op2)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op2);
        switch (size) {
            case  0: __Pyx_PyFloat_TrueDivideCObj_ZeroDivisionError(0) break;
            case -1: b = -(double) digits[0]; break;
            case  1: b = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    b = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    b = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (b < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            b = -b;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            b = PyLong_AsDouble(op2);
            if (unlikely(b == -1.0 && PyErr_Occurred())) return NULL;
            __Pyx_PyFloat_TrueDivideCObj_ZeroDivisionError(b)
        }
    } else {
        return (inplace ? PyNumber_InPlaceTrueDivide : PyNumber_TrueDivide)(op1, op2);
    }
        __Pyx_PyFloat_TrueDivideCObj_ZeroDivisionError(b)
        PyFPE_START_PROTECT("divide", return NULL)
        result = a / b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* PyFloatBinop */
    #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyFloat_SubtractObjC(PyObject *op1, PyObject *op2, double floatval, int inplace, int zerodivision_check) {
    const double b = floatval;
    double a, result;
    (void)inplace;
    (void)zerodivision_check;
    if (likely(PyFloat_CheckExact(op1))) {
        a = PyFloat_AS_DOUBLE(op1);
        
    } else
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        a = (double) PyInt_AS_LONG(op1);
        
    } else
    #endif
    if (likely(PyLong_CheckExact(op1))) {
        #if CYTHON_USE_PYLONG_INTERNALS
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        switch (size) {
            case  0: a = 0.0; break;
            case -1: a = -(double) digits[0]; break;
            case  1: a = (double) digits[0]; break;
            case -2:
            case 2:
                if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (1 * PyLong_SHIFT < 53))) {
                    a = (double) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -2)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -3:
            case 3:
                if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (2 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -3)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            case -4:
            case 4:
                if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT && ((8 * sizeof(unsigned long) < 53) || (3 * PyLong_SHIFT < 53))) {
                    a = (double) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                    if ((8 * sizeof(unsigned long) < 53) || (4 * PyLong_SHIFT < 53) || (a < (double) ((PY_LONG_LONG)1 << 53))) {
                        if (size == -4)
                            a = -a;
                        break;
                    }
                }
                CYTHON_FALLTHROUGH;
            default:
        #else
        {
        #endif
            a = PyLong_AsDouble(op1);
            if (unlikely(a == -1.0 && PyErr_Occurred())) return NULL;
            
        }
    } else {
        return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
    }
        
        PyFPE_START_PROTECT("subtract", return NULL)
        result = a - b;
        PyFPE_END_PROTECT(result)
        return PyFloat_FromDouble(result);
}
#endif

/* BytesEquals */
      static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
      static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* SliceObject */
      static CYTHON_INLINE int __Pyx_PyObject_SetSlice(PyObject* obj, PyObject* value,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, CYTHON_UNUSED int wraparound) {
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_ass_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_ass_slice(obj, cstart, cstop, value);
    }
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_ass_subscript))
#endif
    {
        int result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_ass_subscript(obj, py_slice, value);
#else
        result = value ? PyObject_SetItem(obj, py_slice, value) : PyObject_DelItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    PyErr_Format(PyExc_TypeError,
        "'%.200s' object does not support slice %.10s",
        Py_TYPE(obj)->tp_name, value ? "assignment" : "deletion");
bad:
    return -1;
}

/* None */
      static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* FetchCommonType */
      static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* fake_module;
    PyTypeObject* cached_type = NULL;
    fake_module = PyImport_AddModule((char*) "_cython_" CYTHON_ABI);
    if (!fake_module) return NULL;
    Py_INCREF(fake_module);
    cached_type = (PyTypeObject*) PyObject_GetAttrString(fake_module, type->tp_name);
    if (cached_type) {
        if (!PyType_Check((PyObject*)cached_type)) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s is not a type object",
                type->tp_name);
            goto bad;
        }
        if (cached_type->tp_basicsize != type->tp_basicsize) {
            PyErr_Format(PyExc_TypeError,
                "Shared Cython type %.200s has the wrong size, try recompiling",
                type->tp_name);
            goto bad;
        }
    } else {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
        PyErr_Clear();
        if (PyType_Ready(type) < 0) goto bad;
        if (PyObject_SetAttrString(fake_module, type->tp_name, (PyObject*) type) < 0)
            goto bad;
        Py_INCREF(type);
        cached_type = type;
    }
done:
    Py_DECREF(fake_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}

/* CythonFunctionShared */
      #include <structmember.h>
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *closure)
{
    if (unlikely(op->func_doc == NULL)) {
        if (op->func.m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(op->func.m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(op->func.m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp = op->func_doc;
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    op->func_doc = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(op->func.m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(op->func.m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    tmp = op->func_name;
    Py_INCREF(value);
    op->func_name = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    tmp = op->func_qualname;
    Py_INCREF(value);
    op->func_qualname = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_self(__pyx_CyFunctionObject *m, CYTHON_UNUSED void *closure)
{
    PyObject *self;
    self = m->func_closure;
    if (self == NULL)
        self = Py_None;
    Py_INCREF(self);
    return self;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, CYTHON_UNUSED void *context)
{
    PyObject *tmp;
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    tmp = op->func_dict;
    Py_INCREF(value);
    op->func_dict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(CYTHON_UNUSED __pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyTuple_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_tuple;
    op->defaults_tuple = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_tuple;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value) {
        value = Py_None;
    } else if (value != Py_None && !PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    Py_INCREF(value);
    tmp = op->defaults_kwdict;
    op->defaults_kwdict = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->defaults_kwdict;
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (__Pyx_CyFunction_init_defaults(op) < 0) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, CYTHON_UNUSED void *context) {
    PyObject* tmp;
    if (!value || value == Py_None) {
        value = NULL;
    } else if (!PyDict_Check(value)) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    tmp = op->func_annotations;
    op->func_annotations = value;
    Py_XDECREF(tmp);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, CYTHON_UNUSED void *context) {
    PyObject* result = op->func_annotations;
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "__self__", (getter)__Pyx_CyFunction_get_self, 0, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), PY_WRITE_RESTRICTED, 0},
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, CYTHON_UNUSED PyObject *args)
{
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(m->func.m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func.m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    if (unlikely(op == NULL))
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    op->func.m_ml = ml;
    op->func.m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    op->func.m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
    op->func_classobj = NULL;
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(m->func.m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
    Py_CLEAR(m->func_classobj);
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    PyObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(m->func.m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(m->func_classobj);
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject *__Pyx_CyFunction_descr_get(PyObject *func, PyObject *obj, PyObject *type)
{
#if PY_MAJOR_VERSION < 3
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    if (m->flags & __Pyx_CYFUNCTION_STATICMETHOD) {
        Py_INCREF(func);
        return func;
    }
    if (m->flags & __Pyx_CYFUNCTION_CLASSMETHOD) {
        if (type == NULL)
            type = (PyObject *)(Py_TYPE(obj));
        return __Pyx_PyMethod_New(func, type, (PyObject *)(Py_TYPE(type)));
    }
    if (obj == Py_None)
        obj = NULL;
#endif
    return __Pyx_PyMethod_New(func, obj, type);
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags in "
                        "__Pyx_CyFunction_Call. METH_OLDARGS is no "
                        "longer supported!");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
    0,
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_CyFunction_descr_get,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000
    0,
#endif
};
static int __pyx_CyFunction_init(void) {
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
      static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* IsLittleEndian */
      static CYTHON_INLINE int __Pyx_Is_Little_Endian(void)
{
  union {
    uint32_t u32;
    uint8_t u8[4];
  } S;
  S.u32 = 0x01020304;
  return S.u8[0] == 4;
}

/* BufferFormatCheck */
      static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t <= '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case '?': return "'bool'";
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparseable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, CYTHON_UNUSED int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case '?': case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number, ndim;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    ndim = ctx->head->field->type->ndim;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
        CYTHON_FALLTHROUGH;
      case '?': case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if ((ctx->enc_type == *ts) && (got_Z == ctx->is_complex) &&
            (ctx->enc_packmode == ctx->new_packmode) && (!ctx->is_valid_array)) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
        CYTHON_FALLTHROUGH;
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}

/* BufferGetAndValidate */
        static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (unlikely(info->buf == NULL)) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}
static void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static int __Pyx__GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  buf->buf = NULL;
  if (unlikely(__Pyx_GetBuffer(obj, buf, flags) == -1)) {
    __Pyx_ZeroBuffer(buf);
    return -1;
  }
  if (unlikely(buf->ndim != nd)) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if (unlikely((size_t)buf->itemsize != dtype->size)) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_SafeReleaseBuffer(buf);
  return -1;
}

/* BufferFallbackError */
        static void __Pyx_RaiseBufferFallbackError(void) {
  PyErr_SetString(PyExc_ValueError,
     "Buffer acquisition failed on assignment; and then reacquiring the old buffer failed too!");
}

/* PyObjectSetAttrStr */
        #if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* PyObjectCallMethod1 */
        static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* append */
        static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* PyIntBinop */
        #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, CYTHON_UNUSED long intval, int inplace, int zerodivision_check) {
    (void)inplace;
    (void)zerodivision_check;
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
            x = (long)((unsigned long)a + b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        const digit* digits = ((PyLongObject*)op1)->ob_digit;
        const Py_ssize_t size = Py_SIZE(op1);
        if (likely(__Pyx_sst_abs(size) <= 1)) {
            a = likely(size) ? digits[0] : 0;
            if (size == -1) a = -a;
        } else {
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
#ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
#endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
        double a = PyFloat_AS_DOUBLE(op1);
            double result;
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* KeywordStringCheck */
        static int __Pyx_CheckKeywordStrings(
    PyObject *kwdict,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kwdict, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    while (PyDict_Next(kwdict, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if ((!kw_allowed) && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* decode_c_string */
        static CYTHON_INLINE PyObject* __Pyx_decode_c_string(
         const char* cstring, Py_ssize_t start, Py_ssize_t stop,
         const char* encoding, const char* errors,
         PyObject* (*decode_func)(const char *s, Py_ssize_t size, const char *errors)) {
    Py_ssize_t length;
    if (unlikely((start < 0) | (stop < 0))) {
        size_t slen = strlen(cstring);
        if (unlikely(slen > (size_t) PY_SSIZE_T_MAX)) {
            PyErr_SetString(PyExc_OverflowError,
                            "c-string too long to convert to Python");
            return NULL;
        }
        length = (Py_ssize_t) slen;
        if (start < 0) {
            start += length;
            if (start < 0)
                start = 0;
        }
        if (stop < 0)
            stop += length;
    }
    if (unlikely(stop <= start))
        return __Pyx_NewRef(__pyx_empty_unicode);
    length = stop - start;
    cstring += start;
    if (decode_func) {
        return decode_func(cstring, length, errors);
    } else {
        return PyUnicode_Decode(cstring, length, encoding, errors);
    }
}

/* Import */
        static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (!py_import)
        goto bad;
    #endif
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                module = PyImport_ImportModuleLevelObject(
                    name, global_dict, empty_dict, list, 1);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, global_dict, empty_dict, list, level);
            #endif
        }
    }
bad:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    Py_XDECREF(empty_list);
    Py_XDECREF(empty_dict);
    return module;
}

/* ImportFrom */
        static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* HasAttr */
        static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (unlikely(!r)) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* DivInt[Py_ssize_t] */
        static CYTHON_INLINE Py_ssize_t __Pyx_div_Py_ssize_t(Py_ssize_t a, Py_ssize_t b) {
    Py_ssize_t q = a / b;
    Py_ssize_t r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

/* FastTypeChecks */
        #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = a->tp_base;
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    int res = exc_type1 ? __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type1) : 0;
    if (!res) {
        res = __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
    return res;
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* DivInt[long] */
        static CYTHON_INLINE long __Pyx_div_long(long a, long b) {
    long q = a / b;
    long r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

/* CallNextTpTraverse */
        static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_traverse != current_tp_traverse)
        type = type->tp_base;
    while (type && type->tp_traverse == current_tp_traverse)
        type = type->tp_base;
    if (type && type->tp_traverse)
        return type->tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
        static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    while (type && type->tp_clear != current_tp_clear)
        type = type->tp_base;
    while (type && type->tp_clear == current_tp_clear)
        type = type->tp_base;
    if (type && type->tp_clear)
        type->tp_clear(obj);
}

/* PyObject_GenericGetAttrNoDict */
        #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'%.50s' object has no attribute '%U'",
                 tp->tp_name, attr_name);
#else
                 "'%.50s' object has no attribute '%.400s'",
                 tp->tp_name, PyString_AS_STRING(attr_name));
#endif
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
        #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
        static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* SetupReduce */
        static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStr(meth, __pyx_n_s_name_2);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_n_s_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred())
        PyErr_Format(PyExc_RuntimeError, "Unable to initialize pickling for %s", ((PyTypeObject*)type_obj)->tp_name);
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}

/* SetVTable */
        static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItem(dict, __pyx_n_s_pyx_vtable, ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* TypeImport */
        #ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(PyObject *module, const char *module_name, const char *class_name,
    size_t size, enum __Pyx_ImportType_CheckSize check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
#ifdef Py_LIMITED_API
    PyObject *py_basicsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#ifndef Py_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if ((size_t)basicsize < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error && (size_t)basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* ClassMethod */
        static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM <= 0x05080000
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
#if CYTHON_COMPILING_IN_PYSTON || CYTHON_COMPILING_IN_PYPY
    if (PyMethodDescr_Check(method))
#else
    #if PY_MAJOR_VERSION == 2
    static PyTypeObject *methoddescr_type = NULL;
    if (methoddescr_type == NULL) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (!meth) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    #else
    PyTypeObject *methoddescr_type = &PyMethodDescr_Type;
    #endif
    if (__Pyx_TypeCheck(method, methoddescr_type))
#endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else {
        return PyClassMethod_New(method);
    }
}

/* GetNameInClass */
        static PyObject *__Pyx_GetGlobalNameAfterAttributeLookup(PyObject *name) {
    PyObject *result;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    result = __Pyx_PyObject_GetAttrStr(nmspace, name);
    if (!result) {
        result = __Pyx_GetGlobalNameAfterAttributeLookup(name);
    }
    return result;
}

/* CLineInTraceback */
        #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
        static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

/* AddTraceback */
        #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
        if (__Pyx_TypeCheck(obj, __pyx_array_type)) return __pyx_array_getbuffer(obj, view, flags);
        if (__Pyx_TypeCheck(obj, __pyx_memoryview_type)) return __pyx_memoryview_getbuffer(obj, view, flags);
    PyErr_Format(PyExc_TypeError, "'%.200s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
    if ((0)) {}
    view->obj = NULL;
    Py_DECREF(obj);
}
#endif


        /* MemviewSliceIsContig */
        static int
__pyx_memviewslice_is_contig(const __Pyx_memviewslice mvs, char order, int ndim)
{
    int i, index, step, start;
    Py_ssize_t itemsize = mvs.memview->view.itemsize;
    if (order == 'F') {
        step = 1;
        start = 0;
    } else {
        step = -1;
        start = ndim - 1;
    }
    for (i = 0; i < ndim; i++) {
        index = start + step * i;
        if (mvs.suboffsets[index] >= 0 || mvs.strides[index] != itemsize)
            return 0;
        itemsize *= mvs.shape[index];
    }
    return 1;
}

/* OverlappingSlices */
        static void
__pyx_get_array_memory_extents(__Pyx_memviewslice *slice,
                               void **out_start, void **out_end,
                               int ndim, size_t itemsize)
{
    char *start, *end;
    int i;
    start = end = slice->data;
    for (i = 0; i < ndim; i++) {
        Py_ssize_t stride = slice->strides[i];
        Py_ssize_t extent = slice->shape[i];
        if (extent == 0) {
            *out_start = *out_end = start;
            return;
        } else {
            if (stride > 0)
                end += stride * (extent - 1);
            else
                start += stride * (extent - 1);
        }
    }
    *out_start = start;
    *out_end = end + itemsize;
}
static int
__pyx_slices_overlap(__Pyx_memviewslice *slice1,
                     __Pyx_memviewslice *slice2,
                     int ndim, size_t itemsize)
{
    void *start1, *end1, *start2, *end2;
    __pyx_get_array_memory_extents(slice1, &start1, &end1, ndim, itemsize);
    __pyx_get_array_memory_extents(slice2, &start2, &end2, ndim, itemsize);
    return (start1 < end2) && (start2 < end1);
}

/* Capsule */
        static CYTHON_INLINE PyObject *
__pyx_capsule_create(void *p, CYTHON_UNUSED const char *sig)
{
    PyObject *cobj;
#if PY_VERSION_HEX >= 0x02070000
    cobj = PyCapsule_New(p, sig, NULL);
#else
    cobj = PyCObject_FromVoidPtr(p, NULL);
#endif
    return cobj;
}

/* MemviewDtypeToObject */
        static CYTHON_INLINE PyObject *__pyx_memview_get_nn___pyx_t_8CmoArray_f64(const char *itemp) {
    return (PyObject *) PyFloat_FromDouble(*(__pyx_t_8CmoArray_f64 *) itemp);
}
static CYTHON_INLINE int __pyx_memview_set_nn___pyx_t_8CmoArray_f64(const char *itemp, PyObject *obj) {
    __pyx_t_8CmoArray_f64 value = __pyx_PyFloat_AsDouble(obj);
    if ((value == (double)-1) && PyErr_Occurred())
        return 0;
    *(__pyx_t_8CmoArray_f64 *) itemp = value;
    return 1;
}

/* TypeInfoCompare */
        static int
__pyx_typeinfo_cmp(__Pyx_TypeInfo *a, __Pyx_TypeInfo *b)
{
    int i;
    if (!a || !b)
        return 0;
    if (a == b)
        return 1;
    if (a->size != b->size || a->typegroup != b->typegroup ||
            a->is_unsigned != b->is_unsigned || a->ndim != b->ndim) {
        if (a->typegroup == 'H' || b->typegroup == 'H') {
            return a->size == b->size;
        } else {
            return 0;
        }
    }
    if (a->ndim) {
        for (i = 0; i < a->ndim; i++)
            if (a->arraysize[i] != b->arraysize[i])
                return 0;
    }
    if (a->typegroup == 'S') {
        if (a->flags != b->flags)
            return 0;
        if (a->fields || b->fields) {
            if (!(a->fields && b->fields))
                return 0;
            for (i = 0; a->fields[i].type && b->fields[i].type; i++) {
                __Pyx_StructField *field_a = a->fields + i;
                __Pyx_StructField *field_b = b->fields + i;
                if (field_a->offset != field_b->offset ||
                    !__pyx_typeinfo_cmp(field_a->type, field_b->type))
                    return 0;
            }
            return !a->fields[i].type && !b->fields[i].type;
        }
    }
    return 1;
}

/* MemviewSliceValidateAndInit */
        static int
__pyx_check_strides(Py_buffer *buf, int dim, int ndim, int spec)
{
    if (buf->shape[dim] <= 1)
        return 1;
    if (buf->strides) {
        if (spec & __Pyx_MEMVIEW_CONTIG) {
            if (spec & (__Pyx_MEMVIEW_PTR|__Pyx_MEMVIEW_FULL)) {
                if (unlikely(buf->strides[dim] != sizeof(void *))) {
                    PyErr_Format(PyExc_ValueError,
                                 "Buffer is not indirectly contiguous "
                                 "in dimension %d.", dim);
                    goto fail;
                }
            } else if (unlikely(buf->strides[dim] != buf->itemsize)) {
                PyErr_SetString(PyExc_ValueError,
                                "Buffer and memoryview are not contiguous "
                                "in the same dimension.");
                goto fail;
            }
        }
        if (spec & __Pyx_MEMVIEW_FOLLOW) {
            Py_ssize_t stride = buf->strides[dim];
            if (stride < 0)
                stride = -stride;
            if (unlikely(stride < buf->itemsize)) {
                PyErr_SetString(PyExc_ValueError,
                                "Buffer and memoryview are not contiguous "
                                "in the same dimension.");
                goto fail;
            }
        }
    } else {
        if (unlikely(spec & __Pyx_MEMVIEW_CONTIG && dim != ndim - 1)) {
            PyErr_Format(PyExc_ValueError,
                         "C-contiguous buffer is not contiguous in "
                         "dimension %d", dim);
            goto fail;
        } else if (unlikely(spec & (__Pyx_MEMVIEW_PTR))) {
            PyErr_Format(PyExc_ValueError,
                         "C-contiguous buffer is not indirect in "
                         "dimension %d", dim);
            goto fail;
        } else if (unlikely(buf->suboffsets)) {
            PyErr_SetString(PyExc_ValueError,
                            "Buffer exposes suboffsets but no strides");
            goto fail;
        }
    }
    return 1;
fail:
    return 0;
}
static int
__pyx_check_suboffsets(Py_buffer *buf, int dim, CYTHON_UNUSED int ndim, int spec)
{
    if (spec & __Pyx_MEMVIEW_DIRECT) {
        if (unlikely(buf->suboffsets && buf->suboffsets[dim] >= 0)) {
            PyErr_Format(PyExc_ValueError,
                         "Buffer not compatible with direct access "
                         "in dimension %d.", dim);
            goto fail;
        }
    }
    if (spec & __Pyx_MEMVIEW_PTR) {
        if (unlikely(!buf->suboffsets || (buf->suboffsets[dim] < 0))) {
            PyErr_Format(PyExc_ValueError,
                         "Buffer is not indirectly accessible "
                         "in dimension %d.", dim);
            goto fail;
        }
    }
    return 1;
fail:
    return 0;
}
static int
__pyx_verify_contig(Py_buffer *buf, int ndim, int c_or_f_flag)
{
    int i;
    if (c_or_f_flag & __Pyx_IS_F_CONTIG) {
        Py_ssize_t stride = 1;
        for (i = 0; i < ndim; i++) {
            if (unlikely(stride * buf->itemsize != buf->strides[i]  &&  buf->shape[i] > 1)) {
                PyErr_SetString(PyExc_ValueError,
                    "Buffer not fortran contiguous.");
                goto fail;
            }
            stride = stride * buf->shape[i];
        }
    } else if (c_or_f_flag & __Pyx_IS_C_CONTIG) {
        Py_ssize_t stride = 1;
        for (i = ndim - 1; i >- 1; i--) {
            if (unlikely(stride * buf->itemsize != buf->strides[i]  &&  buf->shape[i] > 1)) {
                PyErr_SetString(PyExc_ValueError,
                    "Buffer not C contiguous.");
                goto fail;
            }
            stride = stride * buf->shape[i];
        }
    }
    return 1;
fail:
    return 0;
}
static int __Pyx_ValidateAndInit_memviewslice(
                int *axes_specs,
                int c_or_f_flag,
                int buf_flags,
                int ndim,
                __Pyx_TypeInfo *dtype,
                __Pyx_BufFmt_StackElem stack[],
                __Pyx_memviewslice *memviewslice,
                PyObject *original_obj)
{
    struct __pyx_memoryview_obj *memview, *new_memview;
    __Pyx_RefNannyDeclarations
    Py_buffer *buf;
    int i, spec = 0, retval = -1;
    __Pyx_BufFmt_Context ctx;
    int from_memoryview = __pyx_memoryview_check(original_obj);
    __Pyx_RefNannySetupContext("ValidateAndInit_memviewslice", 0);
    if (from_memoryview && __pyx_typeinfo_cmp(dtype, ((struct __pyx_memoryview_obj *)
                                                            original_obj)->typeinfo)) {
        memview = (struct __pyx_memoryview_obj *) original_obj;
        new_memview = NULL;
    } else {
        memview = (struct __pyx_memoryview_obj *) __pyx_memoryview_new(
                                            original_obj, buf_flags, 0, dtype);
        new_memview = memview;
        if (unlikely(!memview))
            goto fail;
    }
    buf = &memview->view;
    if (unlikely(buf->ndim != ndim)) {
        PyErr_Format(PyExc_ValueError,
                "Buffer has wrong number of dimensions (expected %d, got %d)",
                ndim, buf->ndim);
        goto fail;
    }
    if (new_memview) {
        __Pyx_BufFmt_Init(&ctx, stack, dtype);
        if (unlikely(!__Pyx_BufFmt_CheckString(&ctx, buf->format))) goto fail;
    }
    if (unlikely((unsigned) buf->itemsize != dtype->size)) {
        PyErr_Format(PyExc_ValueError,
                     "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "u byte%s) "
                     "does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "u byte%s)",
                     buf->itemsize,
                     (buf->itemsize > 1) ? "s" : "",
                     dtype->name,
                     dtype->size,
                     (dtype->size > 1) ? "s" : "");
        goto fail;
    }
    if (buf->len > 0) {
        for (i = 0; i < ndim; i++) {
            spec = axes_specs[i];
            if (unlikely(!__pyx_check_strides(buf, i, ndim, spec)))
                goto fail;
            if (unlikely(!__pyx_check_suboffsets(buf, i, ndim, spec)))
                goto fail;
        }
        if (unlikely(buf->strides && !__pyx_verify_contig(buf, ndim, c_or_f_flag)))
            goto fail;
    }
    if (unlikely(__Pyx_init_memviewslice(memview, ndim, memviewslice,
                                         new_memview != NULL) == -1)) {
        goto fail;
    }
    retval = 0;
    goto no_fail;
fail:
    Py_XDECREF(new_memview);
    retval = -1;
no_fail:
    __Pyx_RefNannyFinishContext();
    return retval;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_8CmoArray_f64(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 2,
                                                 &__Pyx_TypeInfo_nn___pyx_t_8CmoArray_f64, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_8CmoArray_f64(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 1,
                                                 &__Pyx_TypeInfo_nn___pyx_t_8CmoArray_f64, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* CIntFromPyVerify */
        #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_8CmoArray_f64(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 3,
                                                 &__Pyx_TypeInfo_nn___pyx_t_8CmoArray_f64, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_8CmoArray_f64(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 4,
                                                 &__Pyx_TypeInfo_nn___pyx_t_8CmoArray_f64, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 1,
                                                 &__Pyx_TypeInfo_nn___pyx_t_11lightweaver_10LwCompiled_i64, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 2,
                                                 &__Pyx_TypeInfo_nn___pyx_t_11lightweaver_10LwCompiled_i64, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 3,
                                                 &__Pyx_TypeInfo_nn___pyx_t_11lightweaver_10LwCompiled_i64, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_d_d_dc_nn___pyx_t_11lightweaver_10LwCompiled_i64(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 4,
                                                 &__Pyx_TypeInfo_nn___pyx_t_11lightweaver_10LwCompiled_i64, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_d_dc_nn___pyx_t_5numpy_int32_t(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_FOLLOW), (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 2,
                                                 &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_11lightweaver_10LwCompiled_i8(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 1,
                                                 &__Pyx_TypeInfo_nn___pyx_t_11lightweaver_10LwCompiled_i8, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* MemviewDtypeToObject */
        static CYTHON_INLINE PyObject *__pyx_memview_get_nn___pyx_t_11lightweaver_10LwCompiled_i8(const char *itemp) {
    return (PyObject *) __Pyx_PyInt_From_npy_int8(*(__pyx_t_11lightweaver_10LwCompiled_i8 *) itemp);
}
static CYTHON_INLINE int __pyx_memview_set_nn___pyx_t_11lightweaver_10LwCompiled_i8(const char *itemp, PyObject *obj) {
    __pyx_t_11lightweaver_10LwCompiled_i8 value = __Pyx_PyInt_As_npy_int8(obj);
    if ((value == ((npy_int8)-1)) && PyErr_Occurred())
        return 0;
    *(__pyx_t_11lightweaver_10LwCompiled_i8 *) itemp = value;
    return 1;
}

/* ObjectToMemviewSlice */
        static CYTHON_INLINE __Pyx_memviewslice __Pyx_PyObject_to_MemoryviewSlice_dc_nn___pyx_t_5numpy_int32_t(PyObject *obj, int writable_flag) {
    __Pyx_memviewslice result = { 0, 0, { 0 }, { 0 }, { 0 } };
    __Pyx_BufFmt_StackElem stack[1];
    int axes_specs[] = { (__Pyx_MEMVIEW_DIRECT | __Pyx_MEMVIEW_CONTIG) };
    int retcode;
    if (obj == Py_None) {
        result.memview = (struct __pyx_memoryview_obj *) Py_None;
        return result;
    }
    retcode = __Pyx_ValidateAndInit_memviewslice(axes_specs, __Pyx_IS_C_CONTIG,
                                                 (PyBUF_C_CONTIGUOUS | PyBUF_FORMAT) | writable_flag, 1,
                                                 &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, stack,
                                                 &result, obj);
    if (unlikely(retcode == -1))
        goto __pyx_fail;
    return result;
__pyx_fail:
    result.memview = NULL;
    result.data = NULL;
    return result;
}

/* Declarations */
        #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
        #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = (float)(1.0) / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = (float)(1.0) / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
        #if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
        #if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if (b.imag == 0) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* MemviewSliceCopyTemplate */
        static __Pyx_memviewslice
__pyx_memoryview_copy_new_contig(const __Pyx_memviewslice *from_mvs,
                                 const char *mode, int ndim,
                                 size_t sizeof_dtype, int contig_flag,
                                 int dtype_is_object)
{
    __Pyx_RefNannyDeclarations
    int i;
    __Pyx_memviewslice new_mvs = { 0, 0, { 0 }, { 0 }, { 0 } };
    struct __pyx_memoryview_obj *from_memview = from_mvs->memview;
    Py_buffer *buf = &from_memview->view;
    PyObject *shape_tuple = NULL;
    PyObject *temp_int = NULL;
    struct __pyx_array_obj *array_obj = NULL;
    struct __pyx_memoryview_obj *memview_obj = NULL;
    __Pyx_RefNannySetupContext("__pyx_memoryview_copy_new_contig", 0);
    for (i = 0; i < ndim; i++) {
        if (unlikely(from_mvs->suboffsets[i] >= 0)) {
            PyErr_Format(PyExc_ValueError, "Cannot copy memoryview slice with "
                                           "indirect dimensions (axis %d)", i);
            goto fail;
        }
    }
    shape_tuple = PyTuple_New(ndim);
    if (unlikely(!shape_tuple)) {
        goto fail;
    }
    __Pyx_GOTREF(shape_tuple);
    for(i = 0; i < ndim; i++) {
        temp_int = PyInt_FromSsize_t(from_mvs->shape[i]);
        if(unlikely(!temp_int)) {
            goto fail;
        } else {
            PyTuple_SET_ITEM(shape_tuple, i, temp_int);
            temp_int = NULL;
        }
    }
    array_obj = __pyx_array_new(shape_tuple, sizeof_dtype, buf->format, (char *) mode, NULL);
    if (unlikely(!array_obj)) {
        goto fail;
    }
    __Pyx_GOTREF(array_obj);
    memview_obj = (struct __pyx_memoryview_obj *) __pyx_memoryview_new(
                                    (PyObject *) array_obj, contig_flag,
                                    dtype_is_object,
                                    from_mvs->memview->typeinfo);
    if (unlikely(!memview_obj))
        goto fail;
    if (unlikely(__Pyx_init_memviewslice(memview_obj, ndim, &new_mvs, 1) < 0))
        goto fail;
    if (unlikely(__pyx_memoryview_copy_contents(*from_mvs, new_mvs, ndim, ndim,
                                                dtype_is_object) < 0))
        goto fail;
    goto no_fail;
fail:
    __Pyx_XDECREF(new_mvs.memview);
    new_mvs.memview = NULL;
    new_mvs.data = NULL;
no_fail:
    __Pyx_XDECREF(shape_tuple);
    __Pyx_XDECREF(temp_int);
    __Pyx_XDECREF(array_obj);
    __Pyx_RefNannyFinishContext();
    return new_mvs;
}

/* CIntFromPy */
        static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 2 * PyLong_SHIFT) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 3 * PyLong_SHIFT) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) >= 4 * PyLong_SHIFT) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int) - 1 > 4 * PyLong_SHIFT) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(long) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 2 * PyLong_SHIFT) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 3 * PyLong_SHIFT) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) >= 4 * PyLong_SHIFT) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(long) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(long) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(long) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(long) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(long) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(long) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE int64_t __Pyx_PyInt_As_int64_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int64_t neg_one = (int64_t) -1, const_zero = (int64_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(int64_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(int64_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int64_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int64_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int64_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(int64_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) >= 2 * PyLong_SHIFT) {
                            return (int64_t) (((((int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int64_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) >= 3 * PyLong_SHIFT) {
                            return (int64_t) (((((((int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int64_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) >= 4 * PyLong_SHIFT) {
                            return (int64_t) (((((((((int64_t)digits[3]) << PyLong_SHIFT) | (int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int64_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(int64_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int64_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int64_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int64_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int64_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int64_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int64_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(int64_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 2 * PyLong_SHIFT) {
                            return (int64_t) (((int64_t)-1)*(((((int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(int64_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 2 * PyLong_SHIFT) {
                            return (int64_t) ((((((int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(int64_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 3 * PyLong_SHIFT) {
                            return (int64_t) (((int64_t)-1)*(((((((int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(int64_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 3 * PyLong_SHIFT) {
                            return (int64_t) ((((((((int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(int64_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 4 * PyLong_SHIFT) {
                            return (int64_t) (((int64_t)-1)*(((((((((int64_t)digits[3]) << PyLong_SHIFT) | (int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(int64_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(int64_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(int64_t) - 1 > 4 * PyLong_SHIFT) {
                            return (int64_t) ((((((((((int64_t)digits[3]) << PyLong_SHIFT) | (int64_t)digits[2]) << PyLong_SHIFT) | (int64_t)digits[1]) << PyLong_SHIFT) | (int64_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(int64_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(int64_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(int64_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(int64_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            int64_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int64_t) -1;
        }
    } else {
        int64_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int64_t) -1;
        val = __Pyx_PyInt_As_int64_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int64_t");
    return (int64_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int64_t");
    return (int64_t) -1;
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_enum__RadiationBc(enum RadiationBc value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const enum RadiationBc neg_one = (enum RadiationBc) -1, const_zero = (enum RadiationBc) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(enum RadiationBc) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(enum RadiationBc) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum RadiationBc) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(enum RadiationBc) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(enum RadiationBc) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(enum RadiationBc),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE enum RadiationBc __Pyx_PyInt_As_enum__RadiationBc(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const enum RadiationBc neg_one = (enum RadiationBc) -1, const_zero = (enum RadiationBc) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(enum RadiationBc) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(enum RadiationBc, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (enum RadiationBc) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (enum RadiationBc) 0;
                case  1: __PYX_VERIFY_RETURN_INT(enum RadiationBc, digit, digits[0])
                case 2:
                    if (8 * sizeof(enum RadiationBc) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) >= 2 * PyLong_SHIFT) {
                            return (enum RadiationBc) (((((enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(enum RadiationBc) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) >= 3 * PyLong_SHIFT) {
                            return (enum RadiationBc) (((((((enum RadiationBc)digits[2]) << PyLong_SHIFT) | (enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(enum RadiationBc) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) >= 4 * PyLong_SHIFT) {
                            return (enum RadiationBc) (((((((((enum RadiationBc)digits[3]) << PyLong_SHIFT) | (enum RadiationBc)digits[2]) << PyLong_SHIFT) | (enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (enum RadiationBc) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(enum RadiationBc) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum RadiationBc, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(enum RadiationBc) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum RadiationBc, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (enum RadiationBc) 0;
                case -1: __PYX_VERIFY_RETURN_INT(enum RadiationBc, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(enum RadiationBc,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(enum RadiationBc) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) - 1 > 2 * PyLong_SHIFT) {
                            return (enum RadiationBc) (((enum RadiationBc)-1)*(((((enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(enum RadiationBc) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) - 1 > 2 * PyLong_SHIFT) {
                            return (enum RadiationBc) ((((((enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(enum RadiationBc) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) - 1 > 3 * PyLong_SHIFT) {
                            return (enum RadiationBc) (((enum RadiationBc)-1)*(((((((enum RadiationBc)digits[2]) << PyLong_SHIFT) | (enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(enum RadiationBc) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) - 1 > 3 * PyLong_SHIFT) {
                            return (enum RadiationBc) ((((((((enum RadiationBc)digits[2]) << PyLong_SHIFT) | (enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(enum RadiationBc) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) - 1 > 4 * PyLong_SHIFT) {
                            return (enum RadiationBc) (((enum RadiationBc)-1)*(((((((((enum RadiationBc)digits[3]) << PyLong_SHIFT) | (enum RadiationBc)digits[2]) << PyLong_SHIFT) | (enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(enum RadiationBc) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(enum RadiationBc, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(enum RadiationBc) - 1 > 4 * PyLong_SHIFT) {
                            return (enum RadiationBc) ((((((((((enum RadiationBc)digits[3]) << PyLong_SHIFT) | (enum RadiationBc)digits[2]) << PyLong_SHIFT) | (enum RadiationBc)digits[1]) << PyLong_SHIFT) | (enum RadiationBc)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(enum RadiationBc) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum RadiationBc, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(enum RadiationBc) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(enum RadiationBc, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            enum RadiationBc val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (enum RadiationBc) -1;
        }
    } else {
        enum RadiationBc val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (enum RadiationBc) -1;
        val = __Pyx_PyInt_As_enum__RadiationBc(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to enum RadiationBc");
    return (enum RadiationBc) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to enum RadiationBc");
    return (enum RadiationBc) -1;
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_npy_int8(npy_int8 value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const npy_int8 neg_one = (npy_int8) -1, const_zero = (npy_int8) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(npy_int8) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(npy_int8) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(npy_int8) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(npy_int8) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(npy_int8) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(npy_int8),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE npy_int8 __Pyx_PyInt_As_npy_int8(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const npy_int8 neg_one = (npy_int8) -1, const_zero = (npy_int8) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(npy_int8) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(npy_int8, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (npy_int8) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (npy_int8) 0;
                case  1: __PYX_VERIFY_RETURN_INT(npy_int8, digit, digits[0])
                case 2:
                    if (8 * sizeof(npy_int8) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) >= 2 * PyLong_SHIFT) {
                            return (npy_int8) (((((npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(npy_int8) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) >= 3 * PyLong_SHIFT) {
                            return (npy_int8) (((((((npy_int8)digits[2]) << PyLong_SHIFT) | (npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(npy_int8) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) >= 4 * PyLong_SHIFT) {
                            return (npy_int8) (((((((((npy_int8)digits[3]) << PyLong_SHIFT) | (npy_int8)digits[2]) << PyLong_SHIFT) | (npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (npy_int8) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(npy_int8) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(npy_int8, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(npy_int8) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(npy_int8, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (npy_int8) 0;
                case -1: __PYX_VERIFY_RETURN_INT(npy_int8, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(npy_int8,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(npy_int8) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) - 1 > 2 * PyLong_SHIFT) {
                            return (npy_int8) (((npy_int8)-1)*(((((npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(npy_int8) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) - 1 > 2 * PyLong_SHIFT) {
                            return (npy_int8) ((((((npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(npy_int8) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) - 1 > 3 * PyLong_SHIFT) {
                            return (npy_int8) (((npy_int8)-1)*(((((((npy_int8)digits[2]) << PyLong_SHIFT) | (npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(npy_int8) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) - 1 > 3 * PyLong_SHIFT) {
                            return (npy_int8) ((((((((npy_int8)digits[2]) << PyLong_SHIFT) | (npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(npy_int8) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) - 1 > 4 * PyLong_SHIFT) {
                            return (npy_int8) (((npy_int8)-1)*(((((((((npy_int8)digits[3]) << PyLong_SHIFT) | (npy_int8)digits[2]) << PyLong_SHIFT) | (npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(npy_int8) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(npy_int8, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(npy_int8) - 1 > 4 * PyLong_SHIFT) {
                            return (npy_int8) ((((((((((npy_int8)digits[3]) << PyLong_SHIFT) | (npy_int8)digits[2]) << PyLong_SHIFT) | (npy_int8)digits[1]) << PyLong_SHIFT) | (npy_int8)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(npy_int8) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(npy_int8, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(npy_int8) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(npy_int8, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            npy_int8 val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (npy_int8) -1;
        }
    } else {
        npy_int8 val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (npy_int8) -1;
        val = __Pyx_PyInt_As_npy_int8(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to npy_int8");
    return (npy_int8) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to npy_int8");
    return (npy_int8) -1;
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_Py_intptr_t(Py_intptr_t value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const Py_intptr_t neg_one = (Py_intptr_t) -1, const_zero = (Py_intptr_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(Py_intptr_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(Py_intptr_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(Py_intptr_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(Py_intptr_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(Py_intptr_t),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
        static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int64_t(int64_t value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int64_t neg_one = (int64_t) -1, const_zero = (int64_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int64_t) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int64_t) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int64_t) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int64_t) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int64_t) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int64_t),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
        static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(size_t) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case  1: __PYX_VERIFY_RETURN_INT(size_t, digit, digits[0])
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 2 * PyLong_SHIFT) {
                            return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 3 * PyLong_SHIFT) {
                            return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) >= 4 * PyLong_SHIFT) {
                            return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(size_t) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (size_t) 0;
                case -1: __PYX_VERIFY_RETURN_INT(size_t, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(size_t,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(size_t) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                            return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(size_t) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                            return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(size_t) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT) {
                            return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(size_t) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(size_t) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntFromPy */
        static CYTHON_INLINE char __Pyx_PyInt_As_char(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const char neg_one = (char) -1, const_zero = (char) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if (sizeof(char) < sizeof(long)) {
            __PYX_VERIFY_RETURN_INT(char, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (char) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (char) 0;
                case  1: __PYX_VERIFY_RETURN_INT(char, digit, digits[0])
                case 2:
                    if (8 * sizeof(char) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) >= 2 * PyLong_SHIFT) {
                            return (char) (((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(char) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) >= 3 * PyLong_SHIFT) {
                            return (char) (((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(char) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) >= 4 * PyLong_SHIFT) {
                            return (char) (((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (char) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if (sizeof(char) <= sizeof(unsigned long)) {
                __PYX_VERIFY_RETURN_INT_EXC(char, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(char) <= sizeof(unsigned PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(char, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (char) 0;
                case -1: __PYX_VERIFY_RETURN_INT(char, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(char,  digit, +digits[0])
                case -2:
                    if (8 * sizeof(char) - 1 > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 2 * PyLong_SHIFT) {
                            return (char) (((char)-1)*(((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if (8 * sizeof(char) > 1 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 2 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 2 * PyLong_SHIFT) {
                            return (char) ((((((char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if (8 * sizeof(char) - 1 > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 3 * PyLong_SHIFT) {
                            return (char) (((char)-1)*(((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if (8 * sizeof(char) > 2 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 3 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 3 * PyLong_SHIFT) {
                            return (char) ((((((((char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if (8 * sizeof(char) - 1 > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 4 * PyLong_SHIFT) {
                            return (char) (((char)-1)*(((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if (8 * sizeof(char) > 3 * PyLong_SHIFT) {
                        if (8 * sizeof(unsigned long) > 4 * PyLong_SHIFT) {
                            __PYX_VERIFY_RETURN_INT(char, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if (8 * sizeof(char) - 1 > 4 * PyLong_SHIFT) {
                            return (char) ((((((((((char)digits[3]) << PyLong_SHIFT) | (char)digits[2]) << PyLong_SHIFT) | (char)digits[1]) << PyLong_SHIFT) | (char)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if (sizeof(char) <= sizeof(long)) {
                __PYX_VERIFY_RETURN_INT_EXC(char, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if (sizeof(char) <= sizeof(PY_LONG_LONG)) {
                __PYX_VERIFY_RETURN_INT_EXC(char, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if CYTHON_COMPILING_IN_PYPY && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available in PyPy, cannot convert large numbers");
#else
            char val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (char) -1;
        }
    } else {
        char val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (char) -1;
        val = __Pyx_PyInt_As_char(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to char");
    return (char) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to char");
    return (char) -1;
}

/* CheckBinaryVersion */
        static int __Pyx_check_binary_version(void) {
    char ctversion[5];
    int same=1, i, found_dot;
    const char* rt_from_call = Py_GetVersion();
    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    found_dot = 0;
    for (i = 0; i < 4; i++) {
        if (!ctversion[i]) {
            same = (rt_from_call[i] < '0' || rt_from_call[i] > '9');
            break;
        }
        if (rt_from_call[i] != ctversion[i]) {
            same = 0;
            break;
        }
    }
    if (!same) {
        char rtversion[5] = {'\0'};
        char message[200];
        for (i=0; i<4; ++i) {
            if (rt_from_call[i] == '.') {
                if (found_dot) break;
                found_dot = 1;
            } else if (rt_from_call[i] < '0' || rt_from_call[i] > '9') {
                break;
            }
            rtversion[i] = rt_from_call[i];
        }
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
        static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type %.200s).  "
                "The ability to return an instance of a strict subclass of int "
                "is deprecated, and may be removed in a future version of Python.",
                Py_TYPE(result)->tp_name)) {
            Py_DECREF(result);
            return NULL;
        }
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type %.200s)",
                 type_name, type_name, Py_TYPE(result)->tp_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


#endif /* Py_PYTHON_H */
